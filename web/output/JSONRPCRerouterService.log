07-31 19:55 root         INFO     Handling CGI request.
07-31 19:55 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 19:55 SocketClient INFO     Sending to service: "["downloadedcontent_count", [], {}]"
07-31 19:55 SocketClient INFO     Received from service: "881"
07-31 19:55 SocketClient INFO     Returning: 881
07-31 19:56 root         INFO     Handling CGI request.
07-31 19:56 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 19:56 SocketClient INFO     Sending to service: "["request_content_slice", [0, 15], {}]"
07-31 19:56 SocketClient INFO     Received from service: "[{"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/30/protocol-to-build-a-reusable-deformation-template-i-model-presentation/", "title": "Protocol to build a reusable deformation template I: model presentation", "datetime": "2011-07-30T09:41:32", "html": "<p>Character and creature rigging is a broad discipline that encompass many fields :</p>\n<ul>\n<li>Structure setup for animation .</li>\n<li>Skin / envelope configuration.</li>\n<li>Surface, hair , cloth and rigid body simulation.</li>\n<li>Scripts / tools writing.</li>\n</ul>\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.</p>\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.</p>\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\u00a0 I just think that to handle creature /character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.</p>\n<p>The ability to assign an attribute\u00a0per element is a powerful\u00a0 concept that has yet to find a limitation,\u00a0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.</p>\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png\"><img alt=\"\" height=\"499\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png?w=450&#038;h=499\" title=\"packageMan: a free animation rig by  Javier Solsona\" width=\"450\" /></a></p>\n<p>This fully rigged character can be found on <a href=\"http://www.rigging101.com/freestuff.htm\"><em><span style=\"color: #ff6600;\">Javier Solsona </span></em></a>&#8216;s website and was modeled\u00a0by Bob White.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png\"><img alt=\"\" height=\"248\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png?w=450&#038;h=248\" title=\"original topology of this character \" width=\"450\" /></a></p>\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.</p>\n<p>This means:</p>\n<ul>\n<li>less computing power,</li>\n<li>less memory</li>\n<li>less functionality by default in maya</li>\n<li>non existing support program like topoGun or Zbrush .</li>\n</ul>\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\u00a0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.</p>\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .</p>\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .</p>\n<p>Some triangles on the contrary are well used and help reinforce\u00a0 the shape of this sculpture <em>( on the the belly and crotch for example ) .</em></p>\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png\"><img alt=\"\" height=\"574\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png?w=450&#038;h=574\" title=\"\" width=\"450\" /></a><br />\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\u00a0 I will the focus on shoulder deformation.</p>\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )</em> and the socks were left unchanged.<br />\n<a href=\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png\"><img alt=\"\" height=\"383\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png?w=450&#038;h=383\" title=\"\" width=\"450\" /></a></p>\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br />\n<a href=\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png\"><img alt=\"\" class=\"alignleft size-full wp-image-713\" height=\"545\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png?w=450&#038;h=545\" title=\"\" width=\"450\" /></a></p>\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/692/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin / envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts / tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f", "id": "http://circecharacterworks.wordpress.com/?p=692", "categories": [], "metadata": {"guid": "b187aab2-bf23-4bba-8cd2-36fca514ccba", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=724", "title": "The Importance of Vision, 3 of 3", "datetime": "2011-07-30T04:31:25", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0<a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a>\u00a0in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these problems are simply lucky. I suspect that such people are in a fragile situation, and taking away a key player or two would destroy the precarious dynamic that doesn&#8217;t birth these problems. If you are at a studio without these problems, ask yourself this: is your setup one that you can describe, export, advocate for, reproduce? How would you do it, without saying &#8220;just hire better people?&#8221; It is this &#8220;coincidence as a solution&#8221; that propogates the problems at less lucky studios.</p>\n<p>Let&#8217;s create real solutions.</p>\n<p>We need to create roles and departments that can provide studios with a cohesive tools vision. We need to fill these director-level roles with uniquely qualified individuals who are experienced in art and design, and are excellent programmers. We need to mature our views on tools as an industry, and start looking for concrete solutions for our endemic tools issues rather than relying on chance.<br />\nWe&#8217;re not going to find these people or do these things overnight. We need to, first, decide on this path as our goal. Not just you, but your studio&#8217;s management, and there&#8217;s no formula helpful formula I can give to convince them. Just nonstop advocacy, education, and reflection.</p>\n<p>Then, start discussing what the application of these ideas would mean at your studio. And who is going to fill these key roles? There are people you already have at your studio who just need a little bit of training. Put your tech artists on your programming teams for a bit, or your programmers working on game design or art. See how quickly you&#8217;ll find someone with the unique set of skills for a Tools Director position.</p>\n<p>We need people who understand how people work and content flows across a project. \u00a0We need people who are able to guide its formulation/improvement/reconsideration. \u00a0This is vision. \u00a0And the lack of vision in tools development is a deadly disease we must remedy if we are to improve the state of our tools across the industry.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0recent post at AltDevBlogADay\u00a0in three parts. \u00a0View it there in its entirety. Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these", "id": "http://www.robg3d.com/?p=724", "categories": [], "metadata": {"guid": "e3ca9c4a-a6ad-4ade-aaaa-55c1e0d17b8f", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=722", "title": "The Importance of Vision, 2 of 3", "datetime": "2011-07-29T04:29:13", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0<a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a>\u00a0in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>\n<p>No longer can this vital role be left to a hodepodge of other people. Your Art/Technical/Creative Directors, your Lead Programmers/Artists/Designers, can no longer be the people expected to provide the vision for studio&#8217;s Tools and Pipeline.</p>\n<p>The person who fills this role needs to be someone with enough experience creating art that they can embed with Artists. Someone who can program well enough to have the title of Programmer. Someone flexible enough that they can deal with the needs of Designers. Someone charismatic enough that they can fight and win the battle against the inevitable skepticism, fear, and opposition a change like this would bring.</p>\n<p>These people are few and far between, and every one of them I know is happily employed. We&#8217;re asking for a unique set of passions and skills, a set that isn&#8217;t common in the games industry especially (who gets into games to write tools?!). We need to start training our tools developers (tech artists, tools programmers) to aspire to have these passions and skills.</p>\n<p>This won&#8217;t happen magically. Unless our studios can promise that these aspirations will be fulfilled, few people will bother, and I cannot blame them. Many studios have made the commitment to having killer tools. Almost as many have failed. And almost as many as that have failed to realize lack of a cohesive vision as a primary factor.</p>\n<p>It isn&#8217;t surprising that resources get moved from tools dev, that schedules cannot be stuck to, that they cannot attract senior developers. Without a cohesive tools vision, how are resources supposed to be properly allocated? Resources become a fragile compromise between competing departments, rather than brokered by a separate party without allegiances. How is a schedule supposed to be followed, when the people doing the work are not the ones who feel the repercussions? And it is no surprise that it is difficult to attract senior talent with strong programming skills necessary to develop great tools to these positions. If there is no career path- and, let&#8217;s face it, most studios have no career path for tools developers- they&#8217;re going to go into game programming, or the general software industry (which is, for the most part, some form of tools development in a different environment).</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0recent post at AltDevBlogADay\u00a0in three parts. \u00a0View it there in its entirety. So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows ", "id": "http://www.robg3d.com/?p=722", "categories": [], "metadata": {"guid": "ec73746a-1101-46af-8d12-6a3c94b7f875", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=720", "title": "The Importance of Vision, 1 of 3", "datetime": "2011-07-28T04:29:04", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a> in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.</p>\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.</p>\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.</p>\n<p>Where does this lack of vision come from? What can we do to resolve it?</p>\n<hr />\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.</p>\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.</p>\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?</p>\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \u00a0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we", "id": "http://www.robg3d.com/?p=720", "categories": [], "metadata": {"guid": "5bd65447-2fe8-44f8-a6f1-046c2b4563e0", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=712", "title": "WTFunctional: Be Declarative", "datetime": "2011-07-25T14:29:27", "html": "<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.</p>\n<p>First up is demonstrating that <strong>functional programming is declarative</strong>: it makes your code more expressive and optimized.</p>\n<p>Most programmers are used to seeing this:</p>\n<pre>list = []\nfor i = 0 to 10 do\n  if i % 2 == 0:\n    list.append(i)\n//list is now [0,2,4,6,8,10]</pre>\n<p>Less familiar would be:</p>\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)</pre>\n<p>The first focuses on the <em>how</em>: increment <em>i</em> from 0 to 10, and append every even item and 0 to a list. \u00a0This is an <strong>imperative style</strong>. \u00a0The second focuses on the <em>what</em>: \u00a0for each item from 0 to 10, select all even items. \u00a0This is a <strong>declarative style</strong>, which is an aspect of functional programming. \u00a0In this trivial case, the difference is, well, trivial. \u00a0But the key differences are:</p>\n<ol>\n<li>\u00a0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).</li>\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.</li>\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated/iterated over, not a concrete type like a list/array/etc.</li>\n</ol>\n<p>These differences create three key benefits:</p>\n<ol>\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.</li>\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative</em>\u00a0part of it. \u00a0We&#8217;ll see how to read a more complex statement next.</li>\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators</em>- it really depends on what is expedient for the statement.</li>\n</ol>\n<p>Let&#8217;s try out a more concrete example. \u00a0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \u00a0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.</p>\n<pre>dateAndItemsMap = dict()\nfor row in myTable.rows:\n\u00a0 \u00a0 if row.isActive:\n\u00a0 \u00a0 \u00a0 \u00a0 if row.date not in dateAndItemsMap:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date] = list()\n\u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date].append(new MyObject(row))\nsortedDates = dateAndItemsMap.values()\nsortedDates.sort()\nitemsSortedByDateThenId = list()\nfor date in sortedDates:\n\u00a0 \u00a0 items = dateAndItemsMap[date]\n\u00a0 \u00a0 items.sort(lamba obj: obj.id)\n\u00a0 \u00a0 itemsSortedByDateThenId.extend(items)</pre>\n<p>Wow, that&#8217;s a lot of code! \u00a0And not at all clear when reading it. \u00a0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \u00a0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.</em>\u00a0 That&#8217;s a mouthful, and I think that was pretty brief.</p>\n<p>Let&#8217;s compare this to the declarative style:</p>\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)</pre>\n<p>One line? \u00a0One stinking line? \u00a0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.</em>\u00a0 Notice a) how the explanation expresses <em>what you want</em>, <strong>not</strong>\u00a0how you want to get it, and b) the explanation reads very similar to the code.</p>\n<p>This is why declarative programming rocks, <strong>right now.</strong>\u00a0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \u00a0Your code will become infinitely clearer.</p>\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure</strong>), and the compiler or runtime can automatically parallelize it and optimize it. \u00a0This is one reason languages like SQL have been so effective- the software/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.</p>\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \u00a0Next up will probably be closures.</p>", "summary": "Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ", "id": "http://www.robg3d.com/?p=712", "categories": [], "metadata": {"guid": "7cf25c60-08d2-4be6-8544-0869547c3245", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/25/exportlayer-v1-3-for-modo-501/", "title": "ExportLayer v1.3 for modo 501", "datetime": "2011-07-25T09:29:54", "html": "<p>It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light.</p>\n<p>Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;<em>UCX_$ParentMeshName</em>&#8221; style names it&#8217;s enough to just name the collision hulls as &#8220;<em>UCX</em>&#8220;, the script will fix it during export. Just make sure that the collisions are children of the main mesh.</p>\n<p>FBX files can be saved with fake Revit signature which makes it possible to link the produced FBX file in 3ds Max 2011 (File Link Manager).</p>\n<p><strong>IMPORTANT</strong>: Modo 501 SP3 (and possibly earlier 501 versions) have a nasty bug where displaced SDS geometry is frozen without any deformations. The workaround is similarly ugly: I initiate an incorrect file save which makes an error window pop up which forces some kind of an internal update after which the freeze command works properly. So when you see an error popup saying</p>\n<blockquote><p>Scene save was unsuccessful &#8212; Not Found File &#8220;C:&#8221; not written.</p></blockquote>\n<p>well, it&#8217;s &#8220;normal&#8221;&#8230; just click OK and wait for the script to finish.<br />\nAlso, freezing a PSDS surface messes up morphmaps. The workaround for that slows down the export process considerably.<br />\nTo avoid freezing altogether use the <em>NOFREEZE</em> parameter.</p>\n<p><strong>Arguments:</strong><br />\n<em>FBX; LWO; OBJ; COLLADA</em>: They define the output format. Default is FBX.<br />\n<em>SILENTSAVE</em>: The file will be saved next to the original file. No dialog will be displayed.<br />\n<em>NOQUADS</em>: Triangulates the object the exported object.</p>\n<p><em>FBXREVIT</em>: Saves an FBX file and makes it look like it came from Autodesk Revit.<br />\n- In this mode NOQUADS and SILENTSAVE are automatically enabled.<br />\n- 3ds Max will only recognize an UV if it&#8217;s used by at least one image in the shader tree.</p>\n<p>NOFREEZE: The geometry will not be frozen.<!-- PHP 5.x --></p>", "summary": "It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light. Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;UCX_$ParentMeshName&#8221; style nam", "id": "http://www.zspline.net/blog/?p=1340", "categories": [], "metadata": {"guid": "9ae35466-c6cf-4cb8-a070-c147ede632af", "likes": 0, "is_published": false}}, {"author": "Rick", "url": "http://www.rsart.co.uk/2011/07/23/toggle-debug-print-in-maxscript/", "title": "Toggle debug print in Maxscript", "datetime": "2011-07-23T23:44:45", "html": "<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.</p>\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:</p>\n<p><code>if debugprint == true then print \"My debug stuff\"</code></p>\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:</p>\n<p><code>fn debugPrint printStr =<br />\n(<br />\n    if debugPrintVal == true do<br />\n        (<br />\n            Print printStr<br />\n        )<br />\n)<br />\n</code></p>\n<p>So, instead of using  :</p>\n<p><code>if debugprint == true then print \"My debug stuff\"</code></p>\n<p>We can now used the much cleaner version:</p>\n<p><code>debugprint \"My debug stuff\"</code></p>", "summary": "Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O", "id": "http://www.rsart.co.uk/?p=407", "categories": [], "metadata": {"guid": "eae874f4-a637-4d6e-bd62-c057f2045c60", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=708", "title": "Learning a programming language by reading a manual is like learning a language by reading a dictionary", "datetime": "2011-07-23T03:58:13", "html": "<p>A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords.</p>\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with people, or libraries.</p>\n<p>Be wary of anyone who says they know more than a dozen languages. \u00a0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.</p>\n<p>You can learn to speak a language without learning how to communicate in that language. \u00a0In the same way, you can create a program in a language without communicating effectively.</p>\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \u00a0Sophisticated use of a programming language allows and requires the same. \u00a0We should understand when to be sophisticated and when to be crude, and always seek to educate.</p>\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \u00a0Consider what Ebonix is to English, or a scripting language is to C++. \u00a0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.</p>\n<p>You cannot learn how to speak a language by reading a dictionary. \u00a0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \u00a0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.</p>\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.</p>", "summary": "A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with", "id": "http://www.robg3d.com/?p=708", "categories": [], "metadata": {"guid": "8663e9bd-e78d-4c2d-816e-4f33d05827a9", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/7930189393", "title": "Highlight an Excel Cell Using Python", "datetime": "2011-07-22T11:55:00", "html": "<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style = xlwt.easyxf(\u2018pattern: pattern solid, fore-colour red\u2019)</li>\n<li>\n</li><li>for x in range(inputSheet.nrows):</li>\n<li>\u00a0 \u00a0 for y in range(inputSheet.ncols):</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 if(inputSheet.cell(x,y).value):</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0cellValue = inputSheet.cell(x,y).value</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0outputSheet.write(x,y, cellValue)</li>\n<li>\n</li><li>outputSheet.write(5,5, \u201crewritten cell\u201d, style)</li>\n<li>\n</li><li>\n</li><li>outputBook.save(\u201ctest.xls\u201d)</li>\n\n</ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \u00a0Good for validation purposes.</p>\n<ol></ol>", "summary": "<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style ", "id": "http://shawnkirsch.tumblr.com/post/7930189393", "categories": [], "metadata": {"guid": "9a86dd70-2b83-49dc-a151-fac566245d11", "likes": 0, "is_published": false}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/07/power-animator.html", "title": "Power Animator", "datetime": "2011-07-22T10:34:31.240000", "html": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http://altdevblogaday.com/\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exerting one's strength: one is pushing down, the other is pulling up.\u201d</span> \u2013 Booker T. Washington</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">For today\u2019s post, I\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold's Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.</div><div class=\"MsoNormal\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s1600/csi.png\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"640\" src=\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s640/csi.png\" width=\"233\" /></a></div><div class=\"MsoNormal\">On that day at Gold's Gym, I was benching and curling, because THAT'S WHAT MEN DO (that's how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">She continued on with her squats while I performed my \"superior\" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since \"clearly squats are supposed to be bad for your knees!\" I reply \"I\u2019m gonna do some curls!\" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">She ignored me. She was deadlifting, and that was serious business for her.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Later on that night Jessica turned to me and asked \"So, what are your fitness goals?\" I replied \"To get bigger and stronger, of course.\" She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Then she said it:</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><br /></div><table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: right; margin-left: 1em; text-align: right;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s1600/LooneyTunes_Gossamer_Model_Sheet.jpg\" style=\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"256\" src=\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s320/LooneyTunes_Gossamer_Model_Sheet.jpg\" width=\"320\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">This is apparently what I looked like, hair and all.</td></tr></tbody></table><div class=\"MsoNormal\">\"You know you have chicken legs, right? You're shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that.\"</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">I was disheartened, totally bummed out, but more importantly, I was <i>confused</i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men's Health! They HAD to be right!<br /><br />More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Jessica and I didn't go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That's when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Training in a vacuum that way had stunted my growth in a literal sense- I wasn't getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I've gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">So I guess getting strength training advice from a girl isn\u2019t so bad after all. <span style=\"font-family: Wingdings;\">J</span></div><div class=\"MsoNormal\"><br />I invite you to read my parallel story about animation on AltDevBlogADay (<a href=\"http://altdevblogaday.com/2011/07/22/power-animator/\">http://altdevblogaday.com/2011/07/22/power-animator/</a>)</div><div style=\"line-height: 14.25pt;\"><br /></div><div class=\"MsoNormal\"><br /></div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com\" width=\"1\" /></div>", "summary": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http://altdevblogaday.com/\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exer", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526", "categories": [], "metadata": {"guid": "17f41b91-dcb0-4a6b-aae1-6f12c4364bc6", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=784", "title": "more on OO rigging and animator tools", "datetime": "2011-07-21T22:47:08", "html": "<p>Following on from the <a href=\"http://www.macaronikazoo.com/?p=752\" title=\"object oriented rigging in Skeleton Builder\">previous post</a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.</p>\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.</p>\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \u00a0The next step is to create an <a href=\"http://www.macaronikazoo.com/?p=726\" title=\"A more thorough Interface class\">interface class</a> which defines two methods &#8211; switchToFk and switchToIk. \u00a0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \u00a0Our code ends up looking something like this:</p>\n<pre class=\"brush:py\">import typeFactories\nimport baseRigPrimitive\nclass IkFkSwitchable(object):\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\n  def switchToFk( self ):\n    '''this method should implement the logic to switch to FK mode'''\n    pass\n  def switchToIk( self ):\n    '''this method should implement the logic to switch to IK mode'''\n    pass\n\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\n  #the code to implement this rig part goes here\n  ...\n  def switchToFk( self ):\n    #implementation of this method goes below...\n    ...\n  def switchToIk( self ):\n    #implementation of this method goes below...\n    ...</pre>\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:</p>\n<pre class=\"brush:py\">import rigPrimitives\nimport maya.cmds as cmd\nfrom baseMelUI import *\n\ndef getSelectedSwitchableParts():\n  '''\n  returns a list of all RigPart instances that have at least one of their members\n  selected\n  '''\n  selectedSwitchableParts = []\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\n  for rigPart in selectedRigParts:\n    if isinstance( rigPart, IkFkSwitchable ):\n      selectedSwitchableParts.append( rigPart )\n\n  return selectedSwitchableParts\n\nclass UserToolLayout(MelHLayout):\n  def __init__( self, parent ):\n    MelHLayout.__init__( self, parent )\n    self.UI_fkButton = MelButton( self, l=\"switch to FK\", c=self.on_pressFk )\n    self.UI_ikButton = MelButton( self, l=\"switch to IK\", c=self.on_pressIk )\n\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\n    #method when the scene selection changes.  So this will update the UI when the user\n    #changes the selection\n    self.setSelectionChangeCB( self.on_selectionChange )\n    self.on_selectionChange()  #call this to init the UI\n\n    #make sure to call this so the form layout gets setup properly\n    self.layout()\n\n  ### EVENT HANDLERS ###\n  def on_selectionChange( self, *a ):\n    #need to explicitly cast here because of a bug in setEnabled\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\n  def on_pressFk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToFk()\n  def on_pressIk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToIk()\n\nclass UserToolWindow(BaseMelWindow):\n  WINDOW_NAME = \"ikFkSwitcherTool\"\n  WINDOW_TITLE = \"Ik Fk switcher tool\"\n  DEFAULT_SIZE = 300, 45\n  DEFAULT_MENU = None\n\n  def __init__( self ):\n    UserToolLayout( self )\n    self.show()\n\nUserToolWindow()</pre>\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.</p>\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.</p>\n<p>Anyway hopefully you get the idea.</p>", "summary": "Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.", "id": "http://www.macaronikazoo.com/?p=784", "categories": [], "metadata": {"guid": "78b71ec9-df92-4860-b8df-1eb4fc668c04", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/20/toward-a-quasi-time-independant-twist-node/", "title": "Toward a quasi time independant  twist node", "datetime": "2011-07-20T08:32:05", "html": "<p>This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.</p>\n<p><img alt=\"\" height=\"483\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/orient_constraint_torsion1.gif?w=408&#038;h=483\" title=\"orient_constraint_torsion\" width=\"408\" /></p>\n<p><em>(Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 )</em></p>\n<p>After writing a <em><span style=\"color: #ff6600;\"><a href=\"http://circecharacterworks.wordpress.com/2011/07/06/a-journey-in-the-realm-of-corrective-shapes-ii/\">quaternion based aim constraint</a>\u00a0</span></em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.</p>\n<p></p>\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.</p>\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.</p>\n<p>1)<em> From <span style=\"color: #ff6600;\">pi</span>e to <span style=\"color: #ff6600;\">pi</span>e ( with a thick French accent )</em> :</p>\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.</p>\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.</p>\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):</p>\n<pre class=\"brush: python; wrap-lines: false;\">\nimport maya.cmds as cmds\n\nrefLoc = cmds.spaceLocator( n='referenceLoc1')[0]\nstartLoc = cmds.spaceLocator( n='StartLoc1')[0]\nEndLoc = cmds.spaceLocator( n='EndLoc1')[0]\n\ncmds.parent( [startLoc ,EndLoc] , refLoc )\ncmds.setAttr( startLoc + '.t', 10.0, 0, 0, type='double3' )\ncmds.setAttr( EndLoc + '.t', 10.0, 2.0, 0, type='double3' )\n\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( refLoc + '.angle',e=True,keyable=True  )\n\n#Use locator position  as vector\nangleReader = cmds.createNode( 'angleBetween' )\ncmds.connectAttr( startLoc + '.translate', angleReader + '.vector1' )\ncmds.connectAttr( EndLoc + '.translate', angleReader + '.vector2' )\n\nnullPos = [(0,0,0),(0,0,0)]\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='starCurve1')\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), 'starCurveShape1' )\n\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='endCurve1')\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), 'endCurveShape1' )\n\ncmds.parent( [startCurve ,endCurve] , refLoc )\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\ncmds.setAttr( cvShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( startLoc + '.translate' , cvShape1 + '.controlPoints[1]', f=True )\ncmds.setAttr(  endShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( EndLoc + '.translate' , endShape1 + '.controlPoints[0]', f=True )\n\ncmds.connectAttr( angleReader + '.angle',  refLoc + '.angle', f=True  )\n\n#Don't let depency node lives in the wild polluting the outliner: group them in container\nasset = cmds.container( type='dagContainer',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\n\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( asset + '.angle',e=True,keyable=True  )\n\ncmds.connectAttr(  refLoc + '.angle',  asset + '.angle' , f=True  )\n#dont forget to rename The hyperLayout node associate with this container\nlayout = cmds.listConnections(  asset , t='hyperLayout' )[0]\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\n\n#kindly prefix the element in the container\nNodeList =  cmds.container(asset, q=True, nl=True)\nfor node in NodeList :\n    cmds.rename( node,asset + '_' + node, ignoreShape=True)\n</pre>\n<p><img alt=\"\" class=\"aligncenter\" height=\"451\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/vector_angle.gif?w=393&#038;h=451\" title=\"angle range beetween 2 vectors\" width=\"393\" /></p>\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.</p>\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )</em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\u00a0 in a clock wise manner.</p>\n<p>2) History and time as a 4th dimension:</p>\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\u00a0 host a wealth of research papers:</p>\n<ul>\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href=\"http://www.chrisevans3d.com/reference.htm\"><span style=\"color: #ff6600;\"><em>http://www.chrisevans3d.com/reference.htm</em></span></a></li>\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href=\"http://kesen.realtimerendering.com/\"><span style=\"color: #ff6600;\"><em>http://kesen.realtimerendering.com/</em></span></a></li>\n</ul>\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.</p>\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.</p>\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .</p>\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),</em> and not interactive.</p>\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href=\"http://www.strarup.net/maya/plugins/lagNode/\"><span style=\"color: #ff6600;\"><em>Alex V. U. Strarup</em></span></a> was talking about a lag node inspired by maya framecache node.</p>\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).</p>\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\u00a0 an MPlug and MDGContext.</p>\n<p>This is what make it possible to <span style=\"color: #ff6600;\"><em>&#8216;ghost&#8217;</em></span> an animated object in maya among many other things.</p>\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br />\n<em>(a little excerpt from Antitrust movie )</em></p>\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style=\"color: #ff6600;\">setDependentsDirty</span>()\u00a0 method\u00a0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):</em></p>\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.</p>\n<p>I took advantage of this property to determine a twist direction:</p>\n<ul>\n<li>Inside a compute method ,the value of separate output buffer is first readen</li>\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.</li>\n<li>Finally\u00a0 if the input and buffer values are not identical we store the twist input value into the output attribute.</li>\n</ul>\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.</p>\n<p><img alt=\"\" height=\"471\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/vector_direction.gif?w=435&#038;h=471\" title=\"\" width=\"435\" /></p>\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) </em>we can use their\u00a0 cross product to create a perpendicular vector that will act as a twist axis.</p>\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\u00a0 the reference vector <em>about</em> the twist axis <em>by</em> 90.0 degrees.</p>\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.</p>\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .</p>\n<p>In his article <span style=\"color: #ff6600;\"><em>(<a href=\"http://www.3dfiggins.com/writeups/forearmTwist/\">\u00a0http://www.3dfiggins.com/writeups/forearmTwist/</a> )</em></span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:</p>\n<ul>\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.</li>\n<li>As a manual process, the result can be less accurate or lacks consistency.</li>\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.</li>\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.</li>\n</ul>\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.</p>\n<p>Part of the remaining works was\u00a0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.</p>\n<p>3)<em> Angle <span style=\"color: #ff6600;\">accumulation</span> versus number of <span style=\"color: #ff6600;\">revolution</span>:</em></p>\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\u00a0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.</p>\n<p><img alt=\"\" height=\"395\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/clock_circle.gif?w=395&#038;h=395\" title=\"\" width=\"395\" /></p>\n<p>First it was important to translate the past and current rotation vector into a more consistent\u00a0 value : a normalized value <em>U</em> that represent a percentage of a circle perimeter.</p>\n<p>One way to figure this circle purpose is to think of it\u00a0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.</p>\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\u00a0the separation line increases and its band can start to turn and wrap\u00a0 several times around this cylinder.</p>\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution</em> and a parametric value U.</p>\n<pre class=\"brush: python; wrap-lines: false;\">\n# Procedure to compute the number of revolution along on unit circle\n\n#Case A: positive rotation direction:\n### current rotation is in most case greater than past rotation\n### when this is false we can increment the number of revolution\n\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\nif past_rotation &gt; current_rotation :\n   currentRevolution += 1.0\n\n#Case B: negative rotation direction:\n### current rotation is in most case lower than past rotation\n### when this is false we can decrement the number of revolution\n\nif past_rotation &lt; current_rotation :\n   currentRevolution -= 1.0\n\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\ncurrentRevolution_outputHandle.setClean()\n</pre>\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\u00a0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].</p>\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .</p>\n<p>4)<em> Counter measure for a <span style=\"color: #ff6600;\">previous value dependent</span> node</em>:</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/575/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\u00a0 I was often confronted with twist popping out of control w", "id": "http://circecharacterworks.wordpress.com/?p=575", "categories": [], "metadata": {"guid": "6cc70911-ba01-4409-b2bb-128dee5d7817", "likes": 0, "is_published": false}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=81", "title": "instantiate an asset by name", "datetime": "2011-07-20T01:17:18", "html": "<p>More Unity learning&#8230;</p>\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):</p>\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.</p>\n<p>Then use the following code (Boo):</p>\n<pre class=\"brush:py\">obj as GameObject\nins as GameObject\n\n# let's grab the asset\nobj=Resources.Load(\"tile_flat01\", GameObject)\n# add a texture to the asset\nobj.renderer.material.mainTexture=Resources.Load(\"cobbleTex\", Texture2D)\n# instantiate it\nins=Instantiate(obj)</pre>\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.</p>\n<p>edit: seems I have to find a Unity icon for my blog</p>", "summary": "More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82", "id": "http://blarg.robertkist.com/?p=81", "categories": [], "metadata": {"guid": "3ed9e97a-8998-4ff4-80dd-57108af42b7d", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=701", "title": "Compliments to the chef!", "datetime": "2011-07-20T00:44:10", "html": "<p>My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \u00a0One time, a food critic dined there, and enjoyed his <em>paella</em>\u00a0so much that he went into the back to compliment the chef. \u00a0He saw the two and congratulated the dishwasher-who didn&#8217;t speak a lick of English- on a dish well made.</p>", "summary": "My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \u00a0One time, a food critic dined there, and enjoyed his paella\u00a0so much that he went into the back to compliment the chef. \u00a0He saw", "id": "http://www.robg3d.com/?p=701", "categories": [], "metadata": {"guid": "5e9b13e5-d329-4e9f-a441-c7a19ee854fd", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=350", "title": "Rigging for the masses!", "datetime": "2011-07-19T22:14:43", "html": "<p>Last weekend I&#8217;ve been giving a conference about rigging in <a href=\"http://www.campus-party.es/2011/index.html\" target=\"_blank\" title=\"Campus Party\">Campus Party</a>. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In spanish.<br />\n<em><br />\nEl pasado fin de semana estuve en <a href=\"http://www.campus-party.es/2011/index.html\" target=\"_blank\" title=\"Campus Party\">Campus Party</a>, en Valencia, dando una charla. Mi objetivo era hacer que la gente ajena al 3D entendiese en qu\u00e9 consiste la figura del &#8216;rigger&#8217; y c\u00f3mo se encaja dentro de una producci\u00f3n. La organizaci\u00f3n ha subido esta conferencia (as\u00ed como todas las dem\u00e1s) a Youtube, as\u00ed que se puede ver completa. En espa\u00f1ol.</em></p>\n<p></p>\n<p>&#8212;&#8212;&#8212; <strong>\u00a1AUTOBOMBO EXTRA!</strong> &#8212;&#8212;&#8212;</p>\n<p><em>Hace unos meses, Abel, del <em>podcast</em> &#8216;Houston, tenemos un programa&#8217;, me hizo una entrevista para su programa. Se puede escuchar y descargar desde <a href=\"http://www.houstontenemosunprograma.com/2011/05/setup-de-personajes-con-iker-j-de-los.html\" target=\"_blank\" title=\"aqu\u00ed\">aqu\u00ed</a>.</p>\n<p></em></p>", "summary": "Last weekend I&#8217;ve been giving a conference about rigging in Campus Party. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In span", "id": "http://somosposmodernos.com/blog/?p=350", "categories": [], "metadata": {"guid": "d2a10086-f592-4166-b969-68cc2beb0b4b", "likes": 0, "is_published": false}}]"
07-31 19:56 SocketClient INFO     Returning: [{u'title': u'Protocol to build a reusable deformation template I: model presentation', u'url': u'http://circecharacterworks.wordpress.com/2011/07/30/protocol-to-build-a-reusable-deformation-template-i-model-presentation/', u'author': u'circerigging', u'summary': u'Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin / envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts / tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f', u'html': u'<p>Character and creature rigging is a broad discipline that encompass many fields :</p>\n<ul>\n<li>Structure setup for animation .</li>\n<li>Skin / envelope configuration.</li>\n<li>Surface, hair , cloth and rigid body simulation.</li>\n<li>Scripts / tools writing.</li>\n</ul>\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.</p>\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.</p>\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\xa0 I just think that to handle creature /character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.</p>\n<p>The ability to assign an attribute\xa0per element is a powerful\xa0 concept that has yet to find a limitation,\xa0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.</p>\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.</p>\n<p><a href="http://circecharacterworks.files.wordpress.com/2011/07/packageman.png"><img alt="" height="499" src="http://circecharacterworks.files.wordpress.com/2011/07/packageman.png?w=450&#038;h=499" title="packageMan: a free animation rig by  Javier Solsona" width="450" /></a></p>\n<p>This fully rigged character can be found on <a href="http://www.rigging101.com/freestuff.htm"><em><span style="color: #ff6600;">Javier Solsona </span></em></a>&#8216;s website and was modeled\xa0by Bob White.</p>\n<p><a href="http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png"><img alt="" height="248" src="http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png?w=450&#038;h=248" title="original topology of this character " width="450" /></a></p>\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.</p>\n<p>This means:</p>\n<ul>\n<li>less computing power,</li>\n<li>less memory</li>\n<li>less functionality by default in maya</li>\n<li>non existing support program like topoGun or Zbrush .</li>\n</ul>\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\xa0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.</p>\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .</p>\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .</p>\n<p>Some triangles on the contrary are well used and help reinforce\xa0 the shape of this sculpture <em>( on the the belly and crotch for example ) .</em></p>\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.</p>\n<p><a href="http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png"><img alt="" height="574" src="http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png?w=450&#038;h=574" title="" width="450" /></a><br />\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\xa0 I will the focus on shoulder deformation.</p>\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )</em> and the socks were left unchanged.<br />\n<a href="http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png"><img alt="" height="383" src="http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png?w=450&#038;h=383" title="" width="450" /></a></p>\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br />\n<a href="http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png"><img alt="" class="alignleft size-full wp-image-713" height="545" src="http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png?w=450&#038;h=545" title="" width="450" /></a></p>\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.</p>\n<br />  <a href="http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/692/" /></a> <img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1" width="1" />', u'datetime': u'2011-07-30T09:41:32', u'id': u'http://circecharacterworks.wordpress.com/?p=692', u'categories': [], u'metadata': {u'guid': u'b187aab2-bf23-4bba-8cd2-36fca514ccba', u'likes': 0, u'is_published': False}}, {u'title': u'The Importance of Vision, 3 of 3', u'url': u'http://www.robg3d.com/?p=724', u'author': u'Rob Galanakis', u'summary': u'As a small break while I finish my vacation, I&#8217;m going to publish my\xa0recent post at AltDevBlogADay\xa0in three parts. \xa0View it there in its entirety. Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these', u'html': u'<p>As a small break while I finish my vacation, I&#8217;m going to publish my\xa0<a href="http://altdevblogaday.com/2011/07/28/the-importance-of-vision/">recent post at AltDevBlogADay</a>\xa0in three parts. \xa0View it there in its entirety.</p>\n<hr />\n<p>Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these problems are simply lucky. I suspect that such people are in a fragile situation, and taking away a key player or two would destroy the precarious dynamic that doesn&#8217;t birth these problems. If you are at a studio without these problems, ask yourself this: is your setup one that you can describe, export, advocate for, reproduce? How would you do it, without saying &#8220;just hire better people?&#8221; It is this &#8220;coincidence as a solution&#8221; that propogates the problems at less lucky studios.</p>\n<p>Let&#8217;s create real solutions.</p>\n<p>We need to create roles and departments that can provide studios with a cohesive tools vision. We need to fill these director-level roles with uniquely qualified individuals who are experienced in art and design, and are excellent programmers. We need to mature our views on tools as an industry, and start looking for concrete solutions for our endemic tools issues rather than relying on chance.<br />\nWe&#8217;re not going to find these people or do these things overnight. We need to, first, decide on this path as our goal. Not just you, but your studio&#8217;s management, and there&#8217;s no formula helpful formula I can give to convince them. Just nonstop advocacy, education, and reflection.</p>\n<p>Then, start discussing what the application of these ideas would mean at your studio. And who is going to fill these key roles? There are people you already have at your studio who just need a little bit of training. Put your tech artists on your programming teams for a bit, or your programmers working on game design or art. See how quickly you&#8217;ll find someone with the unique set of skills for a Tools Director position.</p>\n<p>We need people who understand how people work and content flows across a project. \xa0We need people who are able to guide its formulation/improvement/reconsideration. \xa0This is vision. \xa0And the lack of vision in tools development is a deadly disease we must remedy if we are to improve the state of our tools across the industry.</p>', u'datetime': u'2011-07-30T04:31:25', u'id': u'http://www.robg3d.com/?p=724', u'categories': [], u'metadata': {u'guid': u'e3ca9c4a-a6ad-4ade-aaaa-55c1e0d17b8f', u'likes': 0, u'is_published': False}}, {u'title': u'The Importance of Vision, 2 of 3', u'url': u'http://www.robg3d.com/?p=722', u'author': u'Rob Galanakis', u'summary': u'As a small break while I finish my vacation, I&#8217;m going to publish my\xa0recent post at AltDevBlogADay\xa0in three parts. \xa0View it there in its entirety. So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows ', u'html': u'<p>As a small break while I finish my vacation, I&#8217;m going to publish my\xa0<a href="http://altdevblogaday.com/2011/07/28/the-importance-of-vision/">recent post at AltDevBlogADay</a>\xa0in three parts. \xa0View it there in its entirety.</p>\n<hr />\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \xa0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>\n<p>No longer can this vital role be left to a hodepodge of other people. Your Art/Technical/Creative Directors, your Lead Programmers/Artists/Designers, can no longer be the people expected to provide the vision for studio&#8217;s Tools and Pipeline.</p>\n<p>The person who fills this role needs to be someone with enough experience creating art that they can embed with Artists. Someone who can program well enough to have the title of Programmer. Someone flexible enough that they can deal with the needs of Designers. Someone charismatic enough that they can fight and win the battle against the inevitable skepticism, fear, and opposition a change like this would bring.</p>\n<p>These people are few and far between, and every one of them I know is happily employed. We&#8217;re asking for a unique set of passions and skills, a set that isn&#8217;t common in the games industry especially (who gets into games to write tools?!). We need to start training our tools developers (tech artists, tools programmers) to aspire to have these passions and skills.</p>\n<p>This won&#8217;t happen magically. Unless our studios can promise that these aspirations will be fulfilled, few people will bother, and I cannot blame them. Many studios have made the commitment to having killer tools. Almost as many have failed. And almost as many as that have failed to realize lack of a cohesive vision as a primary factor.</p>\n<p>It isn&#8217;t surprising that resources get moved from tools dev, that schedules cannot be stuck to, that they cannot attract senior developers. Without a cohesive tools vision, how are resources supposed to be properly allocated? Resources become a fragile compromise between competing departments, rather than brokered by a separate party without allegiances. How is a schedule supposed to be followed, when the people doing the work are not the ones who feel the repercussions? And it is no surprise that it is difficult to attract senior talent with strong programming skills necessary to develop great tools to these positions. If there is no career path- and, let&#8217;s face it, most studios have no career path for tools developers- they&#8217;re going to go into game programming, or the general software industry (which is, for the most part, some form of tools development in a different environment).</p>', u'datetime': u'2011-07-29T04:29:13', u'id': u'http://www.robg3d.com/?p=722', u'categories': [], u'metadata': {u'guid': u'ec73746a-1101-46af-8d12-6a3c94b7f875', u'likes': 0, u'is_published': False}}, {u'title': u'The Importance of Vision, 1 of 3', u'url': u'http://www.robg3d.com/?p=720', u'author': u'Rob Galanakis', u'summary': u'As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \xa0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we', u'html': u'<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href="http://altdevblogaday.com/2011/07/28/the-importance-of-vision/">recent post at AltDevBlogADay</a> in three parts. \xa0View it there in its entirety.</p>\n<hr />\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.</p>\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.</p>\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.</p>\n<p>Where does this lack of vision come from? What can we do to resolve it?</p>\n<hr />\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.</p>\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.</p>\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?</p>\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \xa0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>', u'datetime': u'2011-07-28T04:29:04', u'id': u'http://www.robg3d.com/?p=720', u'categories': [], u'metadata': {u'guid': u'5bd65447-2fe8-44f8-a6f1-046c2b4563e0', u'likes': 0, u'is_published': False}}, {u'title': u'WTFunctional: Be Declarative', u'url': u'http://www.robg3d.com/?p=712', u'author': u'Rob Galanakis', u'summary': u'Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \xa0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ', u'html': u'<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \xa0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.</p>\n<p>First up is demonstrating that <strong>functional programming is declarative</strong>: it makes your code more expressive and optimized.</p>\n<p>Most programmers are used to seeing this:</p>\n<pre>list = []\nfor i = 0 to 10 do\n  if i % 2 == 0:\n    list.append(i)\n//list is now [0,2,4,6,8,10]</pre>\n<p>Less familiar would be:</p>\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)</pre>\n<p>The first focuses on the <em>how</em>: increment <em>i</em> from 0 to 10, and append every even item and 0 to a list. \xa0This is an <strong>imperative style</strong>. \xa0The second focuses on the <em>what</em>: \xa0for each item from 0 to 10, select all even items. \xa0This is a <strong>declarative style</strong>, which is an aspect of functional programming. \xa0In this trivial case, the difference is, well, trivial. \xa0But the key differences are:</p>\n<ol>\n<li>\xa0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).</li>\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.</li>\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated/iterated over, not a concrete type like a list/array/etc.</li>\n</ol>\n<p>These differences create three key benefits:</p>\n<ol>\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.</li>\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative</em>\xa0part of it. \xa0We&#8217;ll see how to read a more complex statement next.</li>\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators</em>- it really depends on what is expedient for the statement.</li>\n</ol>\n<p>Let&#8217;s try out a more concrete example. \xa0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \xa0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.</p>\n<pre>dateAndItemsMap = dict()\nfor row in myTable.rows:\n\xa0 \xa0 if row.isActive:\n\xa0 \xa0 \xa0 \xa0 if row.date not in dateAndItemsMap:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 dateAndItemsMap[row.date] = list()\n\xa0 \xa0 \xa0 \xa0 dateAndItemsMap[row.date].append(new MyObject(row))\nsortedDates = dateAndItemsMap.values()\nsortedDates.sort()\nitemsSortedByDateThenId = list()\nfor date in sortedDates:\n\xa0 \xa0 items = dateAndItemsMap[date]\n\xa0 \xa0 items.sort(lamba obj: obj.id)\n\xa0 \xa0 itemsSortedByDateThenId.extend(items)</pre>\n<p>Wow, that&#8217;s a lot of code! \xa0And not at all clear when reading it. \xa0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \xa0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.</em>\xa0 That&#8217;s a mouthful, and I think that was pretty brief.</p>\n<p>Let&#8217;s compare this to the declarative style:</p>\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)</pre>\n<p>One line? \xa0One stinking line? \xa0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.</em>\xa0 Notice a) how the explanation expresses <em>what you want</em>, <strong>not</strong>\xa0how you want to get it, and b) the explanation reads very similar to the code.</p>\n<p>This is why declarative programming rocks, <strong>right now.</strong>\xa0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \xa0Your code will become infinitely clearer.</p>\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure</strong>), and the compiler or runtime can automatically parallelize it and optimize it. \xa0This is one reason languages like SQL have been so effective- the software/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.</p>\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \xa0Next up will probably be closures.</p>', u'datetime': u'2011-07-25T14:29:27', u'id': u'http://www.robg3d.com/?p=712', u'categories': [], u'metadata': {u'guid': u'7cf25c60-08d2-4be6-8544-0869547c3245', u'likes': 0, u'is_published': False}}, {u'title': u'ExportLayer v1.3 for modo 501', u'url': u'http://www.zspline.net/blog/2011/07/25/exportlayer-v1-3-for-modo-501/', u'author': u'Zoltan', u'summary': u'It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light. Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;UCX_$ParentMeshName&#8221; style nam', u'html': u'<p>It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light.</p>\n<p>Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;<em>UCX_$ParentMeshName</em>&#8221; style names it&#8217;s enough to just name the collision hulls as &#8220;<em>UCX</em>&#8220;, the script will fix it during export. Just make sure that the collisions are children of the main mesh.</p>\n<p>FBX files can be saved with fake Revit signature which makes it possible to link the produced FBX file in 3ds Max 2011 (File Link Manager).</p>\n<p><strong>IMPORTANT</strong>: Modo 501 SP3 (and possibly earlier 501 versions) have a nasty bug where displaced SDS geometry is frozen without any deformations. The workaround is similarly ugly: I initiate an incorrect file save which makes an error window pop up which forces some kind of an internal update after which the freeze command works properly. So when you see an error popup saying</p>\n<blockquote><p>Scene save was unsuccessful &#8212; Not Found File &#8220;C:&#8221; not written.</p></blockquote>\n<p>well, it&#8217;s &#8220;normal&#8221;&#8230; just click OK and wait for the script to finish.<br />\nAlso, freezing a PSDS surface messes up morphmaps. The workaround for that slows down the export process considerably.<br />\nTo avoid freezing altogether use the <em>NOFREEZE</em> parameter.</p>\n<p><strong>Arguments:</strong><br />\n<em>FBX; LWO; OBJ; COLLADA</em>: They define the output format. Default is FBX.<br />\n<em>SILENTSAVE</em>: The file will be saved next to the original file. No dialog will be displayed.<br />\n<em>NOQUADS</em>: Triangulates the object the exported object.</p>\n<p><em>FBXREVIT</em>: Saves an FBX file and makes it look like it came from Autodesk Revit.<br />\n- In this mode NOQUADS and SILENTSAVE are automatically enabled.<br />\n- 3ds Max will only recognize an UV if it&#8217;s used by at least one image in the shader tree.</p>\n<p>NOFREEZE: The geometry will not be frozen.<!-- PHP 5.x --></p>', u'datetime': u'2011-07-25T09:29:54', u'id': u'http://www.zspline.net/blog/?p=1340', u'categories': [], u'metadata': {u'guid': u'9ae35466-c6cf-4cb8-a070-c147ede632af', u'likes': 0, u'is_published': False}}, {u'title': u'Toggle debug print in Maxscript', u'url': u'http://www.rsart.co.uk/2011/07/23/toggle-debug-print-in-maxscript/', u'author': u'Rick', u'summary': u'Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O', u'html': u'<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.</p>\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:</p>\n<p><code>if debugprint == true then print "My debug stuff"</code></p>\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:</p>\n<p><code>fn debugPrint printStr =<br />\n(<br />\n    if debugPrintVal == true do<br />\n        (<br />\n            Print printStr<br />\n        )<br />\n)<br />\n</code></p>\n<p>So, instead of using  :</p>\n<p><code>if debugprint == true then print "My debug stuff"</code></p>\n<p>We can now used the much cleaner version:</p>\n<p><code>debugprint "My debug stuff"</code></p>', u'datetime': u'2011-07-23T23:44:45', u'id': u'http://www.rsart.co.uk/?p=407', u'categories': [], u'metadata': {u'guid': u'eae874f4-a637-4d6e-bd62-c057f2045c60', u'likes': 0, u'is_published': False}}, {u'title': u'Learning a programming language by reading a manual is like learning a language by reading a dictionary', u'url': u'http://www.robg3d.com/?p=708', u'author': u'Rob Galanakis', u'summary': u'A verbal language is more than its grammar and vocabulary. \xa0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \xa0You cannot learn this through words, you learn this through interacting with', u'html': u'<p>A verbal language is more than its grammar and vocabulary. \xa0A programming language is much more than its syntax and keywords.</p>\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \xa0You cannot learn this through words, you learn this through interacting with people, or libraries.</p>\n<p>Be wary of anyone who says they know more than a dozen languages. \xa0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.</p>\n<p>You can learn to speak a language without learning how to communicate in that language. \xa0In the same way, you can create a program in a language without communicating effectively.</p>\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \xa0Sophisticated use of a programming language allows and requires the same. \xa0We should understand when to be sophisticated and when to be crude, and always seek to educate.</p>\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \xa0Consider what Ebonix is to English, or a scripting language is to C++. \xa0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.</p>\n<p>You cannot learn how to speak a language by reading a dictionary. \xa0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \xa0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.</p>\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.</p>', u'datetime': u'2011-07-23T03:58:13', u'id': u'http://www.robg3d.com/?p=708', u'categories': [], u'metadata': {u'guid': u'8663e9bd-e78d-4c2d-816e-4f33d05827a9', u'likes': 0, u'is_published': False}}, {u'title': u'Highlight an Excel Cell Using Python', u'url': u'http://shawnkirsch.tumblr.com/post/7930189393', u'author': u'Unknown Author', u'summary': u'<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style ', u'html': u'<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style = xlwt.easyxf(\u2018pattern: pattern solid, fore-colour red\u2019)</li>\n<li>\n</li><li>for x in range(inputSheet.nrows):</li>\n<li>\xa0 \xa0 for y in range(inputSheet.ncols):</li>\n<li>\xa0 \xa0 \xa0 \xa0 if(inputSheet.cell(x,y).value):</li>\n<li>\xa0 \xa0 \xa0 \xa0 \xa0 \xa0cellValue = inputSheet.cell(x,y).value</li>\n<li>\xa0 \xa0 \xa0 \xa0 \xa0 \xa0outputSheet.write(x,y, cellValue)</li>\n<li>\n</li><li>outputSheet.write(5,5, \u201crewritten cell\u201d, style)</li>\n<li>\n</li><li>\n</li><li>outputBook.save(\u201ctest.xls\u201d)</li>\n\n</ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \xa0Good for validation purposes.</p>\n<ol></ol>', u'datetime': u'2011-07-22T11:55:00', u'id': u'http://shawnkirsch.tumblr.com/post/7930189393', u'categories': [], u'metadata': {u'guid': u'9a86dd70-2b83-49dc-a151-fac566245d11', u'likes': 0, u'is_published': False}}, {u'title': u'Power Animator', u'url': u'http://strongmanimator.blogspot.com/2011/07/power-animator.html', u'author': u'anim8d (noreply@blogger.com)', u'summary': u'<div class="MsoNormal"><i>(ed. note: If you\u2019ve made your way here from <a href="http://altdevblogaday.com/">http://altdevblogaday.com</a>, welcome!)</i></div><div class="MsoNormal"><br /></div><div class="MsoNormal"><span class="Apple-style-span" style="font-size: large;">\u201cThere are two ways of exer', u'html': u'<div class="MsoNormal"><i>(ed. note: If you\u2019ve made your way here from <a href="http://altdevblogaday.com/">http://altdevblogaday.com</a>, welcome!)</i></div><div class="MsoNormal"><br /></div><div class="MsoNormal"><span class="Apple-style-span" style="font-size: large;">\u201cThere are two ways of exerting one\'s strength: one is pushing down, the other is pulling up.\u201d</span> \u2013 Booker T. Washington</div><div class="MsoNormal"><br /></div><div class="MsoNormal">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">For today\u2019s post, I\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. </div><div class="MsoNormal"><br /></div><div class="MsoNormal">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold\'s Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.</div><div class="MsoNormal"><br /></div><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s1600/csi.png" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="640" src="http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s640/csi.png" width="233" /></a></div><div class="MsoNormal">On that day at Gold\'s Gym, I was benching and curling, because THAT\'S WHAT MEN DO (that\'s how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">She continued on with her squats while I performed my "superior" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since "clearly squats are supposed to be bad for your knees!" I reply "I\u2019m gonna do some curls!" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">She ignored me. She was deadlifting, and that was serious business for her.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">Later on that night Jessica turned to me and asked "So, what are your fitness goals?" I replied "To get bigger and stronger, of course." She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">Then she said it:</div><div class="MsoNormal"><br /></div><div class="MsoNormal"><br /></div><table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"><tbody><tr><td style="text-align: center;"><a href="http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s1600/LooneyTunes_Gossamer_Model_Sheet.jpg" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"><img border="0" height="256" src="http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s320/LooneyTunes_Gossamer_Model_Sheet.jpg" width="320" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">This is apparently what I looked like, hair and all.</td></tr></tbody></table><div class="MsoNormal">"You know you have chicken legs, right? You\'re shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that."</div><div class="MsoNormal"><br /></div><div class="MsoNormal">I was disheartened, totally bummed out, but more importantly, I was <i>confused</i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men\'s Health! They HAD to be right!<br /><br />More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!</i></div><div class="MsoNormal"><br /></div><div class="MsoNormal">Jessica and I didn\'t go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That\'s when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">Training in a vacuum that way had stunted my growth in a literal sense- I wasn\'t getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I\'ve gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. </div><div class="MsoNormal"><br /></div><div class="MsoNormal">So I guess getting strength training advice from a girl isn\u2019t so bad after all. <span style="font-family: Wingdings;">J</span></div><div class="MsoNormal"><br />I invite you to read my parallel story about animation on AltDevBlogADay (<a href="http://altdevblogaday.com/2011/07/22/power-animator/">http://altdevblogaday.com/2011/07/22/power-animator/</a>)</div><div style="line-height: 14.25pt;"><br /></div><div class="MsoNormal"><br /></div><div class="blogger-post-footer"><img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com" width="1" /></div>', u'datetime': u'2011-07-22T10:34:31.240000', u'id': u'tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526', u'categories': [], u'metadata': {u'guid': u'17f41b91-dcb0-4a6b-aae1-6f12c4364bc6', u'likes': 0, u'is_published': False}}, {u'title': u'more on OO rigging and animator tools', u'url': u'http://www.macaronikazoo.com/?p=784', u'author': u'hamish', u'summary': u'Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.', u'html': u'<p>Following on from the <a href="http://www.macaronikazoo.com/?p=752" title="object oriented rigging in Skeleton Builder">previous post</a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.</p>\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.</p>\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \xa0The next step is to create an <a href="http://www.macaronikazoo.com/?p=726" title="A more thorough Interface class">interface class</a> which defines two methods &#8211; switchToFk and switchToIk. \xa0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \xa0Our code ends up looking something like this:</p>\n<pre class="brush:py">import typeFactories\nimport baseRigPrimitive\nclass IkFkSwitchable(object):\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\n  def switchToFk( self ):\n    \'\'\'this method should implement the logic to switch to FK mode\'\'\'\n    pass\n  def switchToIk( self ):\n    \'\'\'this method should implement the logic to switch to IK mode\'\'\'\n    pass\n\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\n  #the code to implement this rig part goes here\n  ...\n  def switchToFk( self ):\n    #implementation of this method goes below...\n    ...\n  def switchToIk( self ):\n    #implementation of this method goes below...\n    ...</pre>\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:</p>\n<pre class="brush:py">import rigPrimitives\nimport maya.cmds as cmd\nfrom baseMelUI import *\n\ndef getSelectedSwitchableParts():\n  \'\'\'\n  returns a list of all RigPart instances that have at least one of their members\n  selected\n  \'\'\'\n  selectedSwitchableParts = []\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\n  for rigPart in selectedRigParts:\n    if isinstance( rigPart, IkFkSwitchable ):\n      selectedSwitchableParts.append( rigPart )\n\n  return selectedSwitchableParts\n\nclass UserToolLayout(MelHLayout):\n  def __init__( self, parent ):\n    MelHLayout.__init__( self, parent )\n    self.UI_fkButton = MelButton( self, l="switch to FK", c=self.on_pressFk )\n    self.UI_ikButton = MelButton( self, l="switch to IK", c=self.on_pressIk )\n\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\n    #method when the scene selection changes.  So this will update the UI when the user\n    #changes the selection\n    self.setSelectionChangeCB( self.on_selectionChange )\n    self.on_selectionChange()  #call this to init the UI\n\n    #make sure to call this so the form layout gets setup properly\n    self.layout()\n\n  ### EVENT HANDLERS ###\n  def on_selectionChange( self, *a ):\n    #need to explicitly cast here because of a bug in setEnabled\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\n  def on_pressFk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToFk()\n  def on_pressIk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToIk()\n\nclass UserToolWindow(BaseMelWindow):\n  WINDOW_NAME = "ikFkSwitcherTool"\n  WINDOW_TITLE = "Ik Fk switcher tool"\n  DEFAULT_SIZE = 300, 45\n  DEFAULT_MENU = None\n\n  def __init__( self ):\n    UserToolLayout( self )\n    self.show()\n\nUserToolWindow()</pre>\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.</p>\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.</p>\n<p>Anyway hopefully you get the idea.</p>', u'datetime': u'2011-07-21T22:47:08', u'id': u'http://www.macaronikazoo.com/?p=784', u'categories': [], u'metadata': {u'guid': u'78b71ec9-df92-4860-b8df-1eb4fc668c04', u'likes': 0, u'is_published': False}}, {u'title': u'Toward a quasi time independant  twist node', u'url': u'http://circecharacterworks.wordpress.com/2011/07/20/toward-a-quasi-time-independant-twist-node/', u'author': u'circerigging', u'summary': u'This post is about\xa0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\xa0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\xa0 I was often confronted with twist popping out of control w', u'html': u'<p>This post is about\xa0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.</p>\n<p><img alt="" height="483" src="http://circecharacterworks.files.wordpress.com/2011/07/orient_constraint_torsion1.gif?w=408&#038;h=483" title="orient_constraint_torsion" width="408" /></p>\n<p><em>(Above: notice the\xa0 flipping glitch when the torsion goes above 180.0 )</em></p>\n<p>After writing a <em><span style="color: #ff6600;"><a href="http://circecharacterworks.wordpress.com/2011/07/06/a-journey-in-the-realm-of-corrective-shapes-ii/">quaternion based aim constraint</a>\xa0</span></em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.</p>\n<p></p>\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.</p>\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.</p>\n<p>1)<em> From <span style="color: #ff6600;">pi</span>e to <span style="color: #ff6600;">pi</span>e ( with a thick French accent )</em> :</p>\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.</p>\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.</p>\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):</p>\n<pre class="brush: python; wrap-lines: false;">\nimport maya.cmds as cmds\n\nrefLoc = cmds.spaceLocator( n=\'referenceLoc1\')[0]\nstartLoc = cmds.spaceLocator( n=\'StartLoc1\')[0]\nEndLoc = cmds.spaceLocator( n=\'EndLoc1\')[0]\n\ncmds.parent( [startLoc ,EndLoc] , refLoc )\ncmds.setAttr( startLoc + \'.t\', 10.0, 0, 0, type=\'double3\' )\ncmds.setAttr( EndLoc + \'.t\', 10.0, 2.0, 0, type=\'double3\' )\n\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( refLoc + \'.angle\',e=True,keyable=True  )\n\n#Use locator position  as vector\nangleReader = cmds.createNode( \'angleBetween\' )\ncmds.connectAttr( startLoc + \'.translate\', angleReader + \'.vector1\' )\ncmds.connectAttr( EndLoc + \'.translate\', angleReader + \'.vector2\' )\n\nnullPos = [(0,0,0),(0,0,0)]\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n=\'starCurve1\')\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), \'starCurveShape1\' )\n\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n=\'endCurve1\')\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), \'endCurveShape1\' )\n\ncmds.parent( [startCurve ,endCurve] , refLoc )\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\ncmds.setAttr( cvShape1 + \'.controlPoints[0]\', 0,0,0,type=\'double3\' )\ncmds.connectAttr( startLoc + \'.translate\' , cvShape1 + \'.controlPoints[1]\', f=True )\ncmds.setAttr(  endShape1 + \'.controlPoints[0]\', 0,0,0,type=\'double3\' )\ncmds.connectAttr( EndLoc + \'.translate\' , endShape1 + \'.controlPoints[0]\', f=True )\n\ncmds.connectAttr( angleReader + \'.angle\',  refLoc + \'.angle\', f=True  )\n\n#Don\'t let depency node lives in the wild polluting the outliner: group them in container\nasset = cmds.container( type=\'dagContainer\',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\n\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( asset + \'.angle\',e=True,keyable=True  )\n\ncmds.connectAttr(  refLoc + \'.angle\',  asset + \'.angle\' , f=True  )\n#dont forget to rename The hyperLayout node associate with this container\nlayout = cmds.listConnections(  asset , t=\'hyperLayout\' )[0]\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\n\n#kindly prefix the element in the container\nNodeList =  cmds.container(asset, q=True, nl=True)\nfor node in NodeList :\n    cmds.rename( node,asset + \'_\' + node, ignoreShape=True)\n</pre>\n<p><img alt="" class="aligncenter" height="451" src="http://circecharacterworks.files.wordpress.com/2011/07/vector_angle.gif?w=393&#038;h=451" title="angle range beetween 2 vectors" width="393" /></p>\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.</p>\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )</em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\xa0 in a clock wise manner.</p>\n<p>2) History and time as a 4th dimension:</p>\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\xa0 host a wealth of research papers:</p>\n<ul>\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href="http://www.chrisevans3d.com/reference.htm"><span style="color: #ff6600;"><em>http://www.chrisevans3d.com/reference.htm</em></span></a></li>\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href="http://kesen.realtimerendering.com/"><span style="color: #ff6600;"><em>http://kesen.realtimerendering.com/</em></span></a></li>\n</ul>\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.</p>\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.</p>\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .</p>\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),</em> and not interactive.</p>\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href="http://www.strarup.net/maya/plugins/lagNode/"><span style="color: #ff6600;"><em>Alex V. U. Strarup</em></span></a> was talking about a lag node inspired by maya framecache node.</p>\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).</p>\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\xa0 an MPlug and MDGContext.</p>\n<p>This is what make it possible to <span style="color: #ff6600;"><em>&#8216;ghost&#8217;</em></span> an animated object in maya among many other things.</p>\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br />\n<em>(a little excerpt from Antitrust movie )</em></p>\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style="color: #ff6600;">setDependentsDirty</span>()\xa0 method\xa0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):</em></p>\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.</p>\n<p>I took advantage of this property to determine a twist direction:</p>\n<ul>\n<li>Inside a compute method ,the value of separate output buffer is first readen</li>\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.</li>\n<li>Finally\xa0 if the input and buffer values are not identical we store the twist input value into the output attribute.</li>\n</ul>\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.</p>\n<p><img alt="" height="471" src="http://circecharacterworks.files.wordpress.com/2011/07/vector_direction.gif?w=435&#038;h=471" title="" width="435" /></p>\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) </em>we can use their\xa0 cross product to create a perpendicular vector that will act as a twist axis.</p>\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\xa0 the reference vector <em>about</em> the twist axis <em>by</em> 90.0 degrees.</p>\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.</p>\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .</p>\n<p>In his article <span style="color: #ff6600;"><em>(<a href="http://www.3dfiggins.com/writeups/forearmTwist/">\xa0http://www.3dfiggins.com/writeups/forearmTwist/</a> )</em></span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:</p>\n<ul>\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.</li>\n<li>As a manual process, the result can be less accurate or lacks consistency.</li>\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.</li>\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.</li>\n</ul>\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.</p>\n<p>Part of the remaining works was\xa0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.</p>\n<p>3)<em> Angle <span style="color: #ff6600;">accumulation</span> versus number of <span style="color: #ff6600;">revolution</span>:</em></p>\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\xa0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.</p>\n<p><img alt="" height="395" src="http://circecharacterworks.files.wordpress.com/2011/07/clock_circle.gif?w=395&#038;h=395" title="" width="395" /></p>\n<p>First it was important to translate the past and current rotation vector into a more consistent\xa0 value : a normalized value <em>U</em> that represent a percentage of a circle perimeter.</p>\n<p>One way to figure this circle purpose is to think of it\xa0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.</p>\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\xa0the separation line increases and its band can start to turn and wrap\xa0 several times around this cylinder.</p>\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution</em> and a parametric value U.</p>\n<pre class="brush: python; wrap-lines: false;">\n# Procedure to compute the number of revolution along on unit circle\n\n#Case A: positive rotation direction:\n### current rotation is in most case greater than past rotation\n### when this is false we can increment the number of revolution\n\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\nif past_rotation &gt; current_rotation :\n   currentRevolution += 1.0\n\n#Case B: negative rotation direction:\n### current rotation is in most case lower than past rotation\n### when this is false we can decrement the number of revolution\n\nif past_rotation &lt; current_rotation :\n   currentRevolution -= 1.0\n\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\ncurrentRevolution_outputHandle.setClean()\n</pre>\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\xa0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].</p>\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .</p>\n<p>4)<em> Counter measure for a <span style="color: #ff6600;">previous value dependent</span> node</em>:</p>\n<br />  <a href="http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/575/" /></a> <img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1" width="1" />', u'datetime': u'2011-07-20T08:32:05', u'id': u'http://circecharacterworks.wordpress.com/?p=575', u'categories': [], u'metadata': {u'guid': u'6cc70911-ba01-4409-b2bb-128dee5d7817', u'likes': 0, u'is_published': False}}, {u'title': u'instantiate an asset by name', u'url': u'http://blarg.robertkist.com/?p=81', u'author': u'Robert', u'summary': u'More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82', u'html': u'<p>More Unity learning&#8230;</p>\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):</p>\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.</p>\n<p>Then use the following code (Boo):</p>\n<pre class="brush:py">obj as GameObject\nins as GameObject\n\n# let\'s grab the asset\nobj=Resources.Load("tile_flat01", GameObject)\n# add a texture to the asset\nobj.renderer.material.mainTexture=Resources.Load("cobbleTex", Texture2D)\n# instantiate it\nins=Instantiate(obj)</pre>\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.</p>\n<p>edit: seems I have to find a Unity icon for my blog</p>', u'datetime': u'2011-07-20T01:17:18', u'id': u'http://blarg.robertkist.com/?p=81', u'categories': [], u'metadata': {u'guid': u'3ed9e97a-8998-4ff4-80dd-57108af42b7d', u'likes': 0, u'is_published': False}}, {u'title': u'Compliments to the chef!', u'url': u'http://www.robg3d.com/?p=701', u'author': u'Rob Galanakis', u'summary': u'My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \xa0One time, a food critic dined there, and enjoyed his paella\xa0so much that he went into the back to compliment the chef. \xa0He saw', u'html': u'<p>My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \xa0One time, a food critic dined there, and enjoyed his <em>paella</em>\xa0so much that he went into the back to compliment the chef. \xa0He saw the two and congratulated the dishwasher-who didn&#8217;t speak a lick of English- on a dish well made.</p>', u'datetime': u'2011-07-20T00:44:10', u'id': u'http://www.robg3d.com/?p=701', u'categories': [], u'metadata': {u'guid': u'5e9b13e5-d329-4e9f-a441-c7a19ee854fd', u'likes': 0, u'is_published': False}}, {u'title': u'Rigging for the masses!', u'url': u'http://somosposmodernos.com/blog/?p=350', u'author': u'ike', u'summary': u'Last weekend I&#8217;ve been giving a conference about rigging in Campus Party. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In span', u'html': u'<p>Last weekend I&#8217;ve been giving a conference about rigging in <a href="http://www.campus-party.es/2011/index.html" target="_blank" title="Campus Party">Campus Party</a>. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In spanish.<br />\n<em><br />\nEl pasado fin de semana estuve en <a href="http://www.campus-party.es/2011/index.html" target="_blank" title="Campus Party">Campus Party</a>, en Valencia, dando una charla. Mi objetivo era hacer que la gente ajena al 3D entendiese en qu\xe9 consiste la figura del &#8216;rigger&#8217; y c\xf3mo se encaja dentro de una producci\xf3n. La organizaci\xf3n ha subido esta conferencia (as\xed como todas las dem\xe1s) a Youtube, as\xed que se puede ver completa. En espa\xf1ol.</em></p>\n<p></p>\n<p>&#8212;&#8212;&#8212; <strong>\xa1AUTOBOMBO EXTRA!</strong> &#8212;&#8212;&#8212;</p>\n<p><em>Hace unos meses, Abel, del <em>podcast</em> &#8216;Houston, tenemos un programa&#8217;, me hizo una entrevista para su programa. Se puede escuchar y descargar desde <a href="http://www.houstontenemosunprograma.com/2011/05/setup-de-personajes-con-iker-j-de-los.html" target="_blank" title="aqu\xed">aqu\xed</a>.</p>\n<p></em></p>', u'datetime': u'2011-07-19T22:14:43', u'id': u'http://somosposmodernos.com/blog/?p=350', u'categories': [], u'metadata': {u'guid': u'd2a10086-f592-4166-b969-68cc2beb0b4b', u'likes': 0, u'is_published': False}}]
07-31 19:56 root         INFO     Handling CGI request.
07-31 19:56 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 19:56 SocketClient INFO     Sending to service: "["downloadedcontent_count", [], {}]"
07-31 19:56 SocketClient INFO     Received from service: "881"
07-31 19:56 SocketClient INFO     Returning: 881
07-31 19:57 root         INFO     Handling CGI request.
07-31 19:57 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 19:57 SocketClient INFO     Sending to service: "["request_content_slice", [0, 15], {}]"
07-31 19:57 SocketClient INFO     Received from service: "[{"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/30/protocol-to-build-a-reusable-deformation-template-i-model-presentation/", "title": "Protocol to build a reusable deformation template I: model presentation", "datetime": "2011-07-30T09:41:32", "html": "<p>Character and creature rigging is a broad discipline that encompass many fields :</p>\n<ul>\n<li>Structure setup for animation .</li>\n<li>Skin / envelope configuration.</li>\n<li>Surface, hair , cloth and rigid body simulation.</li>\n<li>Scripts / tools writing.</li>\n</ul>\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.</p>\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.</p>\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\u00a0 I just think that to handle creature /character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.</p>\n<p>The ability to assign an attribute\u00a0per element is a powerful\u00a0 concept that has yet to find a limitation,\u00a0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.</p>\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png\"><img alt=\"\" height=\"499\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png?w=450&#038;h=499\" title=\"packageMan: a free animation rig by  Javier Solsona\" width=\"450\" /></a></p>\n<p>This fully rigged character can be found on <a href=\"http://www.rigging101.com/freestuff.htm\"><em><span style=\"color: #ff6600;\">Javier Solsona </span></em></a>&#8216;s website and was modeled\u00a0by Bob White.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png\"><img alt=\"\" height=\"248\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png?w=450&#038;h=248\" title=\"original topology of this character \" width=\"450\" /></a></p>\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.</p>\n<p>This means:</p>\n<ul>\n<li>less computing power,</li>\n<li>less memory</li>\n<li>less functionality by default in maya</li>\n<li>non existing support program like topoGun or Zbrush .</li>\n</ul>\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\u00a0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.</p>\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .</p>\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .</p>\n<p>Some triangles on the contrary are well used and help reinforce\u00a0 the shape of this sculpture <em>( on the the belly and crotch for example ) .</em></p>\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png\"><img alt=\"\" height=\"574\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png?w=450&#038;h=574\" title=\"\" width=\"450\" /></a><br />\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\u00a0 I will the focus on shoulder deformation.</p>\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )</em> and the socks were left unchanged.<br />\n<a href=\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png\"><img alt=\"\" height=\"383\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png?w=450&#038;h=383\" title=\"\" width=\"450\" /></a></p>\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br />\n<a href=\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png\"><img alt=\"\" class=\"alignleft size-full wp-image-713\" height=\"545\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png?w=450&#038;h=545\" title=\"\" width=\"450\" /></a></p>\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/692/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin / envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts / tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f", "id": "http://circecharacterworks.wordpress.com/?p=692", "categories": [], "metadata": {"guid": "b187aab2-bf23-4bba-8cd2-36fca514ccba", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=724", "title": "The Importance of Vision, 3 of 3", "datetime": "2011-07-30T04:31:25", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0<a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a>\u00a0in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these problems are simply lucky. I suspect that such people are in a fragile situation, and taking away a key player or two would destroy the precarious dynamic that doesn&#8217;t birth these problems. If you are at a studio without these problems, ask yourself this: is your setup one that you can describe, export, advocate for, reproduce? How would you do it, without saying &#8220;just hire better people?&#8221; It is this &#8220;coincidence as a solution&#8221; that propogates the problems at less lucky studios.</p>\n<p>Let&#8217;s create real solutions.</p>\n<p>We need to create roles and departments that can provide studios with a cohesive tools vision. We need to fill these director-level roles with uniquely qualified individuals who are experienced in art and design, and are excellent programmers. We need to mature our views on tools as an industry, and start looking for concrete solutions for our endemic tools issues rather than relying on chance.<br />\nWe&#8217;re not going to find these people or do these things overnight. We need to, first, decide on this path as our goal. Not just you, but your studio&#8217;s management, and there&#8217;s no formula helpful formula I can give to convince them. Just nonstop advocacy, education, and reflection.</p>\n<p>Then, start discussing what the application of these ideas would mean at your studio. And who is going to fill these key roles? There are people you already have at your studio who just need a little bit of training. Put your tech artists on your programming teams for a bit, or your programmers working on game design or art. See how quickly you&#8217;ll find someone with the unique set of skills for a Tools Director position.</p>\n<p>We need people who understand how people work and content flows across a project. \u00a0We need people who are able to guide its formulation/improvement/reconsideration. \u00a0This is vision. \u00a0And the lack of vision in tools development is a deadly disease we must remedy if we are to improve the state of our tools across the industry.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0recent post at AltDevBlogADay\u00a0in three parts. \u00a0View it there in its entirety. Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these", "id": "http://www.robg3d.com/?p=724", "categories": [], "metadata": {"guid": "e3ca9c4a-a6ad-4ade-aaaa-55c1e0d17b8f", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=722", "title": "The Importance of Vision, 2 of 3", "datetime": "2011-07-29T04:29:13", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0<a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a>\u00a0in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>\n<p>No longer can this vital role be left to a hodepodge of other people. Your Art/Technical/Creative Directors, your Lead Programmers/Artists/Designers, can no longer be the people expected to provide the vision for studio&#8217;s Tools and Pipeline.</p>\n<p>The person who fills this role needs to be someone with enough experience creating art that they can embed with Artists. Someone who can program well enough to have the title of Programmer. Someone flexible enough that they can deal with the needs of Designers. Someone charismatic enough that they can fight and win the battle against the inevitable skepticism, fear, and opposition a change like this would bring.</p>\n<p>These people are few and far between, and every one of them I know is happily employed. We&#8217;re asking for a unique set of passions and skills, a set that isn&#8217;t common in the games industry especially (who gets into games to write tools?!). We need to start training our tools developers (tech artists, tools programmers) to aspire to have these passions and skills.</p>\n<p>This won&#8217;t happen magically. Unless our studios can promise that these aspirations will be fulfilled, few people will bother, and I cannot blame them. Many studios have made the commitment to having killer tools. Almost as many have failed. And almost as many as that have failed to realize lack of a cohesive vision as a primary factor.</p>\n<p>It isn&#8217;t surprising that resources get moved from tools dev, that schedules cannot be stuck to, that they cannot attract senior developers. Without a cohesive tools vision, how are resources supposed to be properly allocated? Resources become a fragile compromise between competing departments, rather than brokered by a separate party without allegiances. How is a schedule supposed to be followed, when the people doing the work are not the ones who feel the repercussions? And it is no surprise that it is difficult to attract senior talent with strong programming skills necessary to develop great tools to these positions. If there is no career path- and, let&#8217;s face it, most studios have no career path for tools developers- they&#8217;re going to go into game programming, or the general software industry (which is, for the most part, some form of tools development in a different environment).</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0recent post at AltDevBlogADay\u00a0in three parts. \u00a0View it there in its entirety. So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows ", "id": "http://www.robg3d.com/?p=722", "categories": [], "metadata": {"guid": "ec73746a-1101-46af-8d12-6a3c94b7f875", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=720", "title": "The Importance of Vision, 1 of 3", "datetime": "2011-07-28T04:29:04", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a> in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.</p>\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.</p>\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.</p>\n<p>Where does this lack of vision come from? What can we do to resolve it?</p>\n<hr />\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.</p>\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.</p>\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?</p>\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \u00a0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we", "id": "http://www.robg3d.com/?p=720", "categories": [], "metadata": {"guid": "5bd65447-2fe8-44f8-a6f1-046c2b4563e0", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=712", "title": "WTFunctional: Be Declarative", "datetime": "2011-07-25T14:29:27", "html": "<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.</p>\n<p>First up is demonstrating that <strong>functional programming is declarative</strong>: it makes your code more expressive and optimized.</p>\n<p>Most programmers are used to seeing this:</p>\n<pre>list = []\nfor i = 0 to 10 do\n  if i % 2 == 0:\n    list.append(i)\n//list is now [0,2,4,6,8,10]</pre>\n<p>Less familiar would be:</p>\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)</pre>\n<p>The first focuses on the <em>how</em>: increment <em>i</em> from 0 to 10, and append every even item and 0 to a list. \u00a0This is an <strong>imperative style</strong>. \u00a0The second focuses on the <em>what</em>: \u00a0for each item from 0 to 10, select all even items. \u00a0This is a <strong>declarative style</strong>, which is an aspect of functional programming. \u00a0In this trivial case, the difference is, well, trivial. \u00a0But the key differences are:</p>\n<ol>\n<li>\u00a0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).</li>\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.</li>\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated/iterated over, not a concrete type like a list/array/etc.</li>\n</ol>\n<p>These differences create three key benefits:</p>\n<ol>\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.</li>\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative</em>\u00a0part of it. \u00a0We&#8217;ll see how to read a more complex statement next.</li>\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators</em>- it really depends on what is expedient for the statement.</li>\n</ol>\n<p>Let&#8217;s try out a more concrete example. \u00a0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \u00a0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.</p>\n<pre>dateAndItemsMap = dict()\nfor row in myTable.rows:\n\u00a0 \u00a0 if row.isActive:\n\u00a0 \u00a0 \u00a0 \u00a0 if row.date not in dateAndItemsMap:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date] = list()\n\u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date].append(new MyObject(row))\nsortedDates = dateAndItemsMap.values()\nsortedDates.sort()\nitemsSortedByDateThenId = list()\nfor date in sortedDates:\n\u00a0 \u00a0 items = dateAndItemsMap[date]\n\u00a0 \u00a0 items.sort(lamba obj: obj.id)\n\u00a0 \u00a0 itemsSortedByDateThenId.extend(items)</pre>\n<p>Wow, that&#8217;s a lot of code! \u00a0And not at all clear when reading it. \u00a0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \u00a0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.</em>\u00a0 That&#8217;s a mouthful, and I think that was pretty brief.</p>\n<p>Let&#8217;s compare this to the declarative style:</p>\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)</pre>\n<p>One line? \u00a0One stinking line? \u00a0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.</em>\u00a0 Notice a) how the explanation expresses <em>what you want</em>, <strong>not</strong>\u00a0how you want to get it, and b) the explanation reads very similar to the code.</p>\n<p>This is why declarative programming rocks, <strong>right now.</strong>\u00a0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \u00a0Your code will become infinitely clearer.</p>\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure</strong>), and the compiler or runtime can automatically parallelize it and optimize it. \u00a0This is one reason languages like SQL have been so effective- the software/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.</p>\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \u00a0Next up will probably be closures.</p>", "summary": "Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ", "id": "http://www.robg3d.com/?p=712", "categories": [], "metadata": {"guid": "7cf25c60-08d2-4be6-8544-0869547c3245", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/25/exportlayer-v1-3-for-modo-501/", "title": "ExportLayer v1.3 for modo 501", "datetime": "2011-07-25T09:29:54", "html": "<p>It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light.</p>\n<p>Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;<em>UCX_$ParentMeshName</em>&#8221; style names it&#8217;s enough to just name the collision hulls as &#8220;<em>UCX</em>&#8220;, the script will fix it during export. Just make sure that the collisions are children of the main mesh.</p>\n<p>FBX files can be saved with fake Revit signature which makes it possible to link the produced FBX file in 3ds Max 2011 (File Link Manager).</p>\n<p><strong>IMPORTANT</strong>: Modo 501 SP3 (and possibly earlier 501 versions) have a nasty bug where displaced SDS geometry is frozen without any deformations. The workaround is similarly ugly: I initiate an incorrect file save which makes an error window pop up which forces some kind of an internal update after which the freeze command works properly. So when you see an error popup saying</p>\n<blockquote><p>Scene save was unsuccessful &#8212; Not Found File &#8220;C:&#8221; not written.</p></blockquote>\n<p>well, it&#8217;s &#8220;normal&#8221;&#8230; just click OK and wait for the script to finish.<br />\nAlso, freezing a PSDS surface messes up morphmaps. The workaround for that slows down the export process considerably.<br />\nTo avoid freezing altogether use the <em>NOFREEZE</em> parameter.</p>\n<p><strong>Arguments:</strong><br />\n<em>FBX; LWO; OBJ; COLLADA</em>: They define the output format. Default is FBX.<br />\n<em>SILENTSAVE</em>: The file will be saved next to the original file. No dialog will be displayed.<br />\n<em>NOQUADS</em>: Triangulates the object the exported object.</p>\n<p><em>FBXREVIT</em>: Saves an FBX file and makes it look like it came from Autodesk Revit.<br />\n- In this mode NOQUADS and SILENTSAVE are automatically enabled.<br />\n- 3ds Max will only recognize an UV if it&#8217;s used by at least one image in the shader tree.</p>\n<p>NOFREEZE: The geometry will not be frozen.<!-- PHP 5.x --></p>", "summary": "It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light. Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;UCX_$ParentMeshName&#8221; style nam", "id": "http://www.zspline.net/blog/?p=1340", "categories": [], "metadata": {"guid": "9ae35466-c6cf-4cb8-a070-c147ede632af", "likes": 0, "is_published": false}}, {"author": "Rick", "url": "http://www.rsart.co.uk/2011/07/23/toggle-debug-print-in-maxscript/", "title": "Toggle debug print in Maxscript", "datetime": "2011-07-23T23:44:45", "html": "<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.</p>\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:</p>\n<p><code>if debugprint == true then print \"My debug stuff\"</code></p>\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:</p>\n<p><code>fn debugPrint printStr =<br />\n(<br />\n    if debugPrintVal == true do<br />\n        (<br />\n            Print printStr<br />\n        )<br />\n)<br />\n</code></p>\n<p>So, instead of using  :</p>\n<p><code>if debugprint == true then print \"My debug stuff\"</code></p>\n<p>We can now used the much cleaner version:</p>\n<p><code>debugprint \"My debug stuff\"</code></p>", "summary": "Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O", "id": "http://www.rsart.co.uk/?p=407", "categories": [], "metadata": {"guid": "eae874f4-a637-4d6e-bd62-c057f2045c60", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=708", "title": "Learning a programming language by reading a manual is like learning a language by reading a dictionary", "datetime": "2011-07-23T03:58:13", "html": "<p>A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords.</p>\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with people, or libraries.</p>\n<p>Be wary of anyone who says they know more than a dozen languages. \u00a0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.</p>\n<p>You can learn to speak a language without learning how to communicate in that language. \u00a0In the same way, you can create a program in a language without communicating effectively.</p>\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \u00a0Sophisticated use of a programming language allows and requires the same. \u00a0We should understand when to be sophisticated and when to be crude, and always seek to educate.</p>\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \u00a0Consider what Ebonix is to English, or a scripting language is to C++. \u00a0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.</p>\n<p>You cannot learn how to speak a language by reading a dictionary. \u00a0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \u00a0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.</p>\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.</p>", "summary": "A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with", "id": "http://www.robg3d.com/?p=708", "categories": [], "metadata": {"guid": "8663e9bd-e78d-4c2d-816e-4f33d05827a9", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/7930189393", "title": "Highlight an Excel Cell Using Python", "datetime": "2011-07-22T11:55:00", "html": "<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style = xlwt.easyxf(\u2018pattern: pattern solid, fore-colour red\u2019)</li>\n<li>\n</li><li>for x in range(inputSheet.nrows):</li>\n<li>\u00a0 \u00a0 for y in range(inputSheet.ncols):</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 if(inputSheet.cell(x,y).value):</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0cellValue = inputSheet.cell(x,y).value</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0outputSheet.write(x,y, cellValue)</li>\n<li>\n</li><li>outputSheet.write(5,5, \u201crewritten cell\u201d, style)</li>\n<li>\n</li><li>\n</li><li>outputBook.save(\u201ctest.xls\u201d)</li>\n\n</ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \u00a0Good for validation purposes.</p>\n<ol></ol>", "summary": "<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style ", "id": "http://shawnkirsch.tumblr.com/post/7930189393", "categories": [], "metadata": {"guid": "9a86dd70-2b83-49dc-a151-fac566245d11", "likes": 0, "is_published": false}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/07/power-animator.html", "title": "Power Animator", "datetime": "2011-07-22T10:34:31.240000", "html": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http://altdevblogaday.com/\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exerting one's strength: one is pushing down, the other is pulling up.\u201d</span> \u2013 Booker T. Washington</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">For today\u2019s post, I\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold's Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.</div><div class=\"MsoNormal\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s1600/csi.png\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"640\" src=\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s640/csi.png\" width=\"233\" /></a></div><div class=\"MsoNormal\">On that day at Gold's Gym, I was benching and curling, because THAT'S WHAT MEN DO (that's how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">She continued on with her squats while I performed my \"superior\" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since \"clearly squats are supposed to be bad for your knees!\" I reply \"I\u2019m gonna do some curls!\" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">She ignored me. She was deadlifting, and that was serious business for her.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Later on that night Jessica turned to me and asked \"So, what are your fitness goals?\" I replied \"To get bigger and stronger, of course.\" She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Then she said it:</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><br /></div><table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: right; margin-left: 1em; text-align: right;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s1600/LooneyTunes_Gossamer_Model_Sheet.jpg\" style=\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"256\" src=\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s320/LooneyTunes_Gossamer_Model_Sheet.jpg\" width=\"320\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">This is apparently what I looked like, hair and all.</td></tr></tbody></table><div class=\"MsoNormal\">\"You know you have chicken legs, right? You're shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that.\"</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">I was disheartened, totally bummed out, but more importantly, I was <i>confused</i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men's Health! They HAD to be right!<br /><br />More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Jessica and I didn't go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That's when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Training in a vacuum that way had stunted my growth in a literal sense- I wasn't getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I've gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">So I guess getting strength training advice from a girl isn\u2019t so bad after all. <span style=\"font-family: Wingdings;\">J</span></div><div class=\"MsoNormal\"><br />I invite you to read my parallel story about animation on AltDevBlogADay (<a href=\"http://altdevblogaday.com/2011/07/22/power-animator/\">http://altdevblogaday.com/2011/07/22/power-animator/</a>)</div><div style=\"line-height: 14.25pt;\"><br /></div><div class=\"MsoNormal\"><br /></div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com\" width=\"1\" /></div>", "summary": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http://altdevblogaday.com/\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exer", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526", "categories": [], "metadata": {"guid": "17f41b91-dcb0-4a6b-aae1-6f12c4364bc6", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=784", "title": "more on OO rigging and animator tools", "datetime": "2011-07-21T22:47:08", "html": "<p>Following on from the <a href=\"http://www.macaronikazoo.com/?p=752\" title=\"object oriented rigging in Skeleton Builder\">previous post</a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.</p>\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.</p>\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \u00a0The next step is to create an <a href=\"http://www.macaronikazoo.com/?p=726\" title=\"A more thorough Interface class\">interface class</a> which defines two methods &#8211; switchToFk and switchToIk. \u00a0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \u00a0Our code ends up looking something like this:</p>\n<pre class=\"brush:py\">import typeFactories\nimport baseRigPrimitive\nclass IkFkSwitchable(object):\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\n  def switchToFk( self ):\n    '''this method should implement the logic to switch to FK mode'''\n    pass\n  def switchToIk( self ):\n    '''this method should implement the logic to switch to IK mode'''\n    pass\n\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\n  #the code to implement this rig part goes here\n  ...\n  def switchToFk( self ):\n    #implementation of this method goes below...\n    ...\n  def switchToIk( self ):\n    #implementation of this method goes below...\n    ...</pre>\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:</p>\n<pre class=\"brush:py\">import rigPrimitives\nimport maya.cmds as cmd\nfrom baseMelUI import *\n\ndef getSelectedSwitchableParts():\n  '''\n  returns a list of all RigPart instances that have at least one of their members\n  selected\n  '''\n  selectedSwitchableParts = []\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\n  for rigPart in selectedRigParts:\n    if isinstance( rigPart, IkFkSwitchable ):\n      selectedSwitchableParts.append( rigPart )\n\n  return selectedSwitchableParts\n\nclass UserToolLayout(MelHLayout):\n  def __init__( self, parent ):\n    MelHLayout.__init__( self, parent )\n    self.UI_fkButton = MelButton( self, l=\"switch to FK\", c=self.on_pressFk )\n    self.UI_ikButton = MelButton( self, l=\"switch to IK\", c=self.on_pressIk )\n\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\n    #method when the scene selection changes.  So this will update the UI when the user\n    #changes the selection\n    self.setSelectionChangeCB( self.on_selectionChange )\n    self.on_selectionChange()  #call this to init the UI\n\n    #make sure to call this so the form layout gets setup properly\n    self.layout()\n\n  ### EVENT HANDLERS ###\n  def on_selectionChange( self, *a ):\n    #need to explicitly cast here because of a bug in setEnabled\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\n  def on_pressFk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToFk()\n  def on_pressIk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToIk()\n\nclass UserToolWindow(BaseMelWindow):\n  WINDOW_NAME = \"ikFkSwitcherTool\"\n  WINDOW_TITLE = \"Ik Fk switcher tool\"\n  DEFAULT_SIZE = 300, 45\n  DEFAULT_MENU = None\n\n  def __init__( self ):\n    UserToolLayout( self )\n    self.show()\n\nUserToolWindow()</pre>\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.</p>\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.</p>\n<p>Anyway hopefully you get the idea.</p>", "summary": "Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.", "id": "http://www.macaronikazoo.com/?p=784", "categories": [], "metadata": {"guid": "78b71ec9-df92-4860-b8df-1eb4fc668c04", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/20/toward-a-quasi-time-independant-twist-node/", "title": "Toward a quasi time independant  twist node", "datetime": "2011-07-20T08:32:05", "html": "<p>This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.</p>\n<p><img alt=\"\" height=\"483\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/orient_constraint_torsion1.gif?w=408&#038;h=483\" title=\"orient_constraint_torsion\" width=\"408\" /></p>\n<p><em>(Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 )</em></p>\n<p>After writing a <em><span style=\"color: #ff6600;\"><a href=\"http://circecharacterworks.wordpress.com/2011/07/06/a-journey-in-the-realm-of-corrective-shapes-ii/\">quaternion based aim constraint</a>\u00a0</span></em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.</p>\n<p></p>\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.</p>\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.</p>\n<p>1)<em> From <span style=\"color: #ff6600;\">pi</span>e to <span style=\"color: #ff6600;\">pi</span>e ( with a thick French accent )</em> :</p>\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.</p>\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.</p>\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):</p>\n<pre class=\"brush: python; wrap-lines: false;\">\nimport maya.cmds as cmds\n\nrefLoc = cmds.spaceLocator( n='referenceLoc1')[0]\nstartLoc = cmds.spaceLocator( n='StartLoc1')[0]\nEndLoc = cmds.spaceLocator( n='EndLoc1')[0]\n\ncmds.parent( [startLoc ,EndLoc] , refLoc )\ncmds.setAttr( startLoc + '.t', 10.0, 0, 0, type='double3' )\ncmds.setAttr( EndLoc + '.t', 10.0, 2.0, 0, type='double3' )\n\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( refLoc + '.angle',e=True,keyable=True  )\n\n#Use locator position  as vector\nangleReader = cmds.createNode( 'angleBetween' )\ncmds.connectAttr( startLoc + '.translate', angleReader + '.vector1' )\ncmds.connectAttr( EndLoc + '.translate', angleReader + '.vector2' )\n\nnullPos = [(0,0,0),(0,0,0)]\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='starCurve1')\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), 'starCurveShape1' )\n\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='endCurve1')\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), 'endCurveShape1' )\n\ncmds.parent( [startCurve ,endCurve] , refLoc )\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\ncmds.setAttr( cvShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( startLoc + '.translate' , cvShape1 + '.controlPoints[1]', f=True )\ncmds.setAttr(  endShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( EndLoc + '.translate' , endShape1 + '.controlPoints[0]', f=True )\n\ncmds.connectAttr( angleReader + '.angle',  refLoc + '.angle', f=True  )\n\n#Don't let depency node lives in the wild polluting the outliner: group them in container\nasset = cmds.container( type='dagContainer',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\n\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( asset + '.angle',e=True,keyable=True  )\n\ncmds.connectAttr(  refLoc + '.angle',  asset + '.angle' , f=True  )\n#dont forget to rename The hyperLayout node associate with this container\nlayout = cmds.listConnections(  asset , t='hyperLayout' )[0]\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\n\n#kindly prefix the element in the container\nNodeList =  cmds.container(asset, q=True, nl=True)\nfor node in NodeList :\n    cmds.rename( node,asset + '_' + node, ignoreShape=True)\n</pre>\n<p><img alt=\"\" class=\"aligncenter\" height=\"451\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/vector_angle.gif?w=393&#038;h=451\" title=\"angle range beetween 2 vectors\" width=\"393\" /></p>\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.</p>\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )</em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\u00a0 in a clock wise manner.</p>\n<p>2) History and time as a 4th dimension:</p>\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\u00a0 host a wealth of research papers:</p>\n<ul>\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href=\"http://www.chrisevans3d.com/reference.htm\"><span style=\"color: #ff6600;\"><em>http://www.chrisevans3d.com/reference.htm</em></span></a></li>\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href=\"http://kesen.realtimerendering.com/\"><span style=\"color: #ff6600;\"><em>http://kesen.realtimerendering.com/</em></span></a></li>\n</ul>\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.</p>\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.</p>\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .</p>\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),</em> and not interactive.</p>\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href=\"http://www.strarup.net/maya/plugins/lagNode/\"><span style=\"color: #ff6600;\"><em>Alex V. U. Strarup</em></span></a> was talking about a lag node inspired by maya framecache node.</p>\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).</p>\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\u00a0 an MPlug and MDGContext.</p>\n<p>This is what make it possible to <span style=\"color: #ff6600;\"><em>&#8216;ghost&#8217;</em></span> an animated object in maya among many other things.</p>\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br />\n<em>(a little excerpt from Antitrust movie )</em></p>\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style=\"color: #ff6600;\">setDependentsDirty</span>()\u00a0 method\u00a0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):</em></p>\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.</p>\n<p>I took advantage of this property to determine a twist direction:</p>\n<ul>\n<li>Inside a compute method ,the value of separate output buffer is first readen</li>\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.</li>\n<li>Finally\u00a0 if the input and buffer values are not identical we store the twist input value into the output attribute.</li>\n</ul>\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.</p>\n<p><img alt=\"\" height=\"471\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/vector_direction.gif?w=435&#038;h=471\" title=\"\" width=\"435\" /></p>\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) </em>we can use their\u00a0 cross product to create a perpendicular vector that will act as a twist axis.</p>\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\u00a0 the reference vector <em>about</em> the twist axis <em>by</em> 90.0 degrees.</p>\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.</p>\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .</p>\n<p>In his article <span style=\"color: #ff6600;\"><em>(<a href=\"http://www.3dfiggins.com/writeups/forearmTwist/\">\u00a0http://www.3dfiggins.com/writeups/forearmTwist/</a> )</em></span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:</p>\n<ul>\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.</li>\n<li>As a manual process, the result can be less accurate or lacks consistency.</li>\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.</li>\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.</li>\n</ul>\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.</p>\n<p>Part of the remaining works was\u00a0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.</p>\n<p>3)<em> Angle <span style=\"color: #ff6600;\">accumulation</span> versus number of <span style=\"color: #ff6600;\">revolution</span>:</em></p>\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\u00a0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.</p>\n<p><img alt=\"\" height=\"395\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/clock_circle.gif?w=395&#038;h=395\" title=\"\" width=\"395\" /></p>\n<p>First it was important to translate the past and current rotation vector into a more consistent\u00a0 value : a normalized value <em>U</em> that represent a percentage of a circle perimeter.</p>\n<p>One way to figure this circle purpose is to think of it\u00a0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.</p>\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\u00a0the separation line increases and its band can start to turn and wrap\u00a0 several times around this cylinder.</p>\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution</em> and a parametric value U.</p>\n<pre class=\"brush: python; wrap-lines: false;\">\n# Procedure to compute the number of revolution along on unit circle\n\n#Case A: positive rotation direction:\n### current rotation is in most case greater than past rotation\n### when this is false we can increment the number of revolution\n\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\nif past_rotation &gt; current_rotation :\n   currentRevolution += 1.0\n\n#Case B: negative rotation direction:\n### current rotation is in most case lower than past rotation\n### when this is false we can decrement the number of revolution\n\nif past_rotation &lt; current_rotation :\n   currentRevolution -= 1.0\n\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\ncurrentRevolution_outputHandle.setClean()\n</pre>\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\u00a0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].</p>\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .</p>\n<p>4)<em> Counter measure for a <span style=\"color: #ff6600;\">previous value dependent</span> node</em>:</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/575/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\u00a0 I was often confronted with twist popping out of control w", "id": "http://circecharacterworks.wordpress.com/?p=575", "categories": [], "metadata": {"guid": "6cc70911-ba01-4409-b2bb-128dee5d7817", "likes": 0, "is_published": false}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=81", "title": "instantiate an asset by name", "datetime": "2011-07-20T01:17:18", "html": "<p>More Unity learning&#8230;</p>\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):</p>\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.</p>\n<p>Then use the following code (Boo):</p>\n<pre class=\"brush:py\">obj as GameObject\nins as GameObject\n\n# let's grab the asset\nobj=Resources.Load(\"tile_flat01\", GameObject)\n# add a texture to the asset\nobj.renderer.material.mainTexture=Resources.Load(\"cobbleTex\", Texture2D)\n# instantiate it\nins=Instantiate(obj)</pre>\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.</p>\n<p>edit: seems I have to find a Unity icon for my blog</p>", "summary": "More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82", "id": "http://blarg.robertkist.com/?p=81", "categories": [], "metadata": {"guid": "3ed9e97a-8998-4ff4-80dd-57108af42b7d", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=701", "title": "Compliments to the chef!", "datetime": "2011-07-20T00:44:10", "html": "<p>My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \u00a0One time, a food critic dined there, and enjoyed his <em>paella</em>\u00a0so much that he went into the back to compliment the chef. \u00a0He saw the two and congratulated the dishwasher-who didn&#8217;t speak a lick of English- on a dish well made.</p>", "summary": "My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \u00a0One time, a food critic dined there, and enjoyed his paella\u00a0so much that he went into the back to compliment the chef. \u00a0He saw", "id": "http://www.robg3d.com/?p=701", "categories": [], "metadata": {"guid": "5e9b13e5-d329-4e9f-a441-c7a19ee854fd", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=350", "title": "Rigging for the masses!", "datetime": "2011-07-19T22:14:43", "html": "<p>Last weekend I&#8217;ve been giving a conference about rigging in <a href=\"http://www.campus-party.es/2011/index.html\" target=\"_blank\" title=\"Campus Party\">Campus Party</a>. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In spanish.<br />\n<em><br />\nEl pasado fin de semana estuve en <a href=\"http://www.campus-party.es/2011/index.html\" target=\"_blank\" title=\"Campus Party\">Campus Party</a>, en Valencia, dando una charla. Mi objetivo era hacer que la gente ajena al 3D entendiese en qu\u00e9 consiste la figura del &#8216;rigger&#8217; y c\u00f3mo se encaja dentro de una producci\u00f3n. La organizaci\u00f3n ha subido esta conferencia (as\u00ed como todas las dem\u00e1s) a Youtube, as\u00ed que se puede ver completa. En espa\u00f1ol.</em></p>\n<p></p>\n<p>&#8212;&#8212;&#8212; <strong>\u00a1AUTOBOMBO EXTRA!</strong> &#8212;&#8212;&#8212;</p>\n<p><em>Hace unos meses, Abel, del <em>podcast</em> &#8216;Houston, tenemos un programa&#8217;, me hizo una entrevista para su programa. Se puede escuchar y descargar desde <a href=\"http://www.houstontenemosunprograma.com/2011/05/setup-de-personajes-con-iker-j-de-los.html\" target=\"_blank\" title=\"aqu\u00ed\">aqu\u00ed</a>.</p>\n<p></em></p>", "summary": "Last weekend I&#8217;ve been giving a conference about rigging in Campus Party. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In span", "id": "http://somosposmodernos.com/blog/?p=350", "categories": [], "metadata": {"guid": "d2a10086-f592-4166-b969-68cc2beb0b4b", "likes": 0, "is_published": false}}]"
07-31 19:57 SocketClient INFO     Returning: [{u'title': u'Protocol to build a reusable deformation template I: model presentation', u'url': u'http://circecharacterworks.wordpress.com/2011/07/30/protocol-to-build-a-reusable-deformation-template-i-model-presentation/', u'author': u'circerigging', u'summary': u'Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin / envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts / tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f', u'html': u'<p>Character and creature rigging is a broad discipline that encompass many fields :</p>\n<ul>\n<li>Structure setup for animation .</li>\n<li>Skin / envelope configuration.</li>\n<li>Surface, hair , cloth and rigid body simulation.</li>\n<li>Scripts / tools writing.</li>\n</ul>\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.</p>\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.</p>\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\xa0 I just think that to handle creature /character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.</p>\n<p>The ability to assign an attribute\xa0per element is a powerful\xa0 concept that has yet to find a limitation,\xa0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.</p>\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.</p>\n<p><a href="http://circecharacterworks.files.wordpress.com/2011/07/packageman.png"><img alt="" height="499" src="http://circecharacterworks.files.wordpress.com/2011/07/packageman.png?w=450&#038;h=499" title="packageMan: a free animation rig by  Javier Solsona" width="450" /></a></p>\n<p>This fully rigged character can be found on <a href="http://www.rigging101.com/freestuff.htm"><em><span style="color: #ff6600;">Javier Solsona </span></em></a>&#8216;s website and was modeled\xa0by Bob White.</p>\n<p><a href="http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png"><img alt="" height="248" src="http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png?w=450&#038;h=248" title="original topology of this character " width="450" /></a></p>\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.</p>\n<p>This means:</p>\n<ul>\n<li>less computing power,</li>\n<li>less memory</li>\n<li>less functionality by default in maya</li>\n<li>non existing support program like topoGun or Zbrush .</li>\n</ul>\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\xa0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.</p>\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .</p>\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .</p>\n<p>Some triangles on the contrary are well used and help reinforce\xa0 the shape of this sculpture <em>( on the the belly and crotch for example ) .</em></p>\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.</p>\n<p><a href="http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png"><img alt="" height="574" src="http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png?w=450&#038;h=574" title="" width="450" /></a><br />\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\xa0 I will the focus on shoulder deformation.</p>\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )</em> and the socks were left unchanged.<br />\n<a href="http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png"><img alt="" height="383" src="http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png?w=450&#038;h=383" title="" width="450" /></a></p>\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br />\n<a href="http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png"><img alt="" class="alignleft size-full wp-image-713" height="545" src="http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png?w=450&#038;h=545" title="" width="450" /></a></p>\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.</p>\n<br />  <a href="http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/692/" /></a> <img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1" width="1" />', u'datetime': u'2011-07-30T09:41:32', u'id': u'http://circecharacterworks.wordpress.com/?p=692', u'categories': [], u'metadata': {u'guid': u'b187aab2-bf23-4bba-8cd2-36fca514ccba', u'likes': 0, u'is_published': False}}, {u'title': u'The Importance of Vision, 3 of 3', u'url': u'http://www.robg3d.com/?p=724', u'author': u'Rob Galanakis', u'summary': u'As a small break while I finish my vacation, I&#8217;m going to publish my\xa0recent post at AltDevBlogADay\xa0in three parts. \xa0View it there in its entirety. Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these', u'html': u'<p>As a small break while I finish my vacation, I&#8217;m going to publish my\xa0<a href="http://altdevblogaday.com/2011/07/28/the-importance-of-vision/">recent post at AltDevBlogADay</a>\xa0in three parts. \xa0View it there in its entirety.</p>\n<hr />\n<p>Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these problems are simply lucky. I suspect that such people are in a fragile situation, and taking away a key player or two would destroy the precarious dynamic that doesn&#8217;t birth these problems. If you are at a studio without these problems, ask yourself this: is your setup one that you can describe, export, advocate for, reproduce? How would you do it, without saying &#8220;just hire better people?&#8221; It is this &#8220;coincidence as a solution&#8221; that propogates the problems at less lucky studios.</p>\n<p>Let&#8217;s create real solutions.</p>\n<p>We need to create roles and departments that can provide studios with a cohesive tools vision. We need to fill these director-level roles with uniquely qualified individuals who are experienced in art and design, and are excellent programmers. We need to mature our views on tools as an industry, and start looking for concrete solutions for our endemic tools issues rather than relying on chance.<br />\nWe&#8217;re not going to find these people or do these things overnight. We need to, first, decide on this path as our goal. Not just you, but your studio&#8217;s management, and there&#8217;s no formula helpful formula I can give to convince them. Just nonstop advocacy, education, and reflection.</p>\n<p>Then, start discussing what the application of these ideas would mean at your studio. And who is going to fill these key roles? There are people you already have at your studio who just need a little bit of training. Put your tech artists on your programming teams for a bit, or your programmers working on game design or art. See how quickly you&#8217;ll find someone with the unique set of skills for a Tools Director position.</p>\n<p>We need people who understand how people work and content flows across a project. \xa0We need people who are able to guide its formulation/improvement/reconsideration. \xa0This is vision. \xa0And the lack of vision in tools development is a deadly disease we must remedy if we are to improve the state of our tools across the industry.</p>', u'datetime': u'2011-07-30T04:31:25', u'id': u'http://www.robg3d.com/?p=724', u'categories': [], u'metadata': {u'guid': u'e3ca9c4a-a6ad-4ade-aaaa-55c1e0d17b8f', u'likes': 0, u'is_published': False}}, {u'title': u'The Importance of Vision, 2 of 3', u'url': u'http://www.robg3d.com/?p=722', u'author': u'Rob Galanakis', u'summary': u'As a small break while I finish my vacation, I&#8217;m going to publish my\xa0recent post at AltDevBlogADay\xa0in three parts. \xa0View it there in its entirety. So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows ', u'html': u'<p>As a small break while I finish my vacation, I&#8217;m going to publish my\xa0<a href="http://altdevblogaday.com/2011/07/28/the-importance-of-vision/">recent post at AltDevBlogADay</a>\xa0in three parts. \xa0View it there in its entirety.</p>\n<hr />\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \xa0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>\n<p>No longer can this vital role be left to a hodepodge of other people. Your Art/Technical/Creative Directors, your Lead Programmers/Artists/Designers, can no longer be the people expected to provide the vision for studio&#8217;s Tools and Pipeline.</p>\n<p>The person who fills this role needs to be someone with enough experience creating art that they can embed with Artists. Someone who can program well enough to have the title of Programmer. Someone flexible enough that they can deal with the needs of Designers. Someone charismatic enough that they can fight and win the battle against the inevitable skepticism, fear, and opposition a change like this would bring.</p>\n<p>These people are few and far between, and every one of them I know is happily employed. We&#8217;re asking for a unique set of passions and skills, a set that isn&#8217;t common in the games industry especially (who gets into games to write tools?!). We need to start training our tools developers (tech artists, tools programmers) to aspire to have these passions and skills.</p>\n<p>This won&#8217;t happen magically. Unless our studios can promise that these aspirations will be fulfilled, few people will bother, and I cannot blame them. Many studios have made the commitment to having killer tools. Almost as many have failed. And almost as many as that have failed to realize lack of a cohesive vision as a primary factor.</p>\n<p>It isn&#8217;t surprising that resources get moved from tools dev, that schedules cannot be stuck to, that they cannot attract senior developers. Without a cohesive tools vision, how are resources supposed to be properly allocated? Resources become a fragile compromise between competing departments, rather than brokered by a separate party without allegiances. How is a schedule supposed to be followed, when the people doing the work are not the ones who feel the repercussions? And it is no surprise that it is difficult to attract senior talent with strong programming skills necessary to develop great tools to these positions. If there is no career path- and, let&#8217;s face it, most studios have no career path for tools developers- they&#8217;re going to go into game programming, or the general software industry (which is, for the most part, some form of tools development in a different environment).</p>', u'datetime': u'2011-07-29T04:29:13', u'id': u'http://www.robg3d.com/?p=722', u'categories': [], u'metadata': {u'guid': u'ec73746a-1101-46af-8d12-6a3c94b7f875', u'likes': 0, u'is_published': False}}, {u'title': u'The Importance of Vision, 1 of 3', u'url': u'http://www.robg3d.com/?p=720', u'author': u'Rob Galanakis', u'summary': u'As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \xa0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we', u'html': u'<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href="http://altdevblogaday.com/2011/07/28/the-importance-of-vision/">recent post at AltDevBlogADay</a> in three parts. \xa0View it there in its entirety.</p>\n<hr />\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.</p>\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.</p>\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.</p>\n<p>Where does this lack of vision come from? What can we do to resolve it?</p>\n<hr />\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.</p>\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.</p>\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?</p>\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \xa0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>', u'datetime': u'2011-07-28T04:29:04', u'id': u'http://www.robg3d.com/?p=720', u'categories': [], u'metadata': {u'guid': u'5bd65447-2fe8-44f8-a6f1-046c2b4563e0', u'likes': 0, u'is_published': False}}, {u'title': u'WTFunctional: Be Declarative', u'url': u'http://www.robg3d.com/?p=712', u'author': u'Rob Galanakis', u'summary': u'Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \xa0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ', u'html': u'<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \xa0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.</p>\n<p>First up is demonstrating that <strong>functional programming is declarative</strong>: it makes your code more expressive and optimized.</p>\n<p>Most programmers are used to seeing this:</p>\n<pre>list = []\nfor i = 0 to 10 do\n  if i % 2 == 0:\n    list.append(i)\n//list is now [0,2,4,6,8,10]</pre>\n<p>Less familiar would be:</p>\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)</pre>\n<p>The first focuses on the <em>how</em>: increment <em>i</em> from 0 to 10, and append every even item and 0 to a list. \xa0This is an <strong>imperative style</strong>. \xa0The second focuses on the <em>what</em>: \xa0for each item from 0 to 10, select all even items. \xa0This is a <strong>declarative style</strong>, which is an aspect of functional programming. \xa0In this trivial case, the difference is, well, trivial. \xa0But the key differences are:</p>\n<ol>\n<li>\xa0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).</li>\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.</li>\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated/iterated over, not a concrete type like a list/array/etc.</li>\n</ol>\n<p>These differences create three key benefits:</p>\n<ol>\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.</li>\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative</em>\xa0part of it. \xa0We&#8217;ll see how to read a more complex statement next.</li>\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators</em>- it really depends on what is expedient for the statement.</li>\n</ol>\n<p>Let&#8217;s try out a more concrete example. \xa0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \xa0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.</p>\n<pre>dateAndItemsMap = dict()\nfor row in myTable.rows:\n\xa0 \xa0 if row.isActive:\n\xa0 \xa0 \xa0 \xa0 if row.date not in dateAndItemsMap:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 dateAndItemsMap[row.date] = list()\n\xa0 \xa0 \xa0 \xa0 dateAndItemsMap[row.date].append(new MyObject(row))\nsortedDates = dateAndItemsMap.values()\nsortedDates.sort()\nitemsSortedByDateThenId = list()\nfor date in sortedDates:\n\xa0 \xa0 items = dateAndItemsMap[date]\n\xa0 \xa0 items.sort(lamba obj: obj.id)\n\xa0 \xa0 itemsSortedByDateThenId.extend(items)</pre>\n<p>Wow, that&#8217;s a lot of code! \xa0And not at all clear when reading it. \xa0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \xa0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.</em>\xa0 That&#8217;s a mouthful, and I think that was pretty brief.</p>\n<p>Let&#8217;s compare this to the declarative style:</p>\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)</pre>\n<p>One line? \xa0One stinking line? \xa0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.</em>\xa0 Notice a) how the explanation expresses <em>what you want</em>, <strong>not</strong>\xa0how you want to get it, and b) the explanation reads very similar to the code.</p>\n<p>This is why declarative programming rocks, <strong>right now.</strong>\xa0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \xa0Your code will become infinitely clearer.</p>\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure</strong>), and the compiler or runtime can automatically parallelize it and optimize it. \xa0This is one reason languages like SQL have been so effective- the software/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.</p>\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \xa0Next up will probably be closures.</p>', u'datetime': u'2011-07-25T14:29:27', u'id': u'http://www.robg3d.com/?p=712', u'categories': [], u'metadata': {u'guid': u'7cf25c60-08d2-4be6-8544-0869547c3245', u'likes': 0, u'is_published': False}}, {u'title': u'ExportLayer v1.3 for modo 501', u'url': u'http://www.zspline.net/blog/2011/07/25/exportlayer-v1-3-for-modo-501/', u'author': u'Zoltan', u'summary': u'It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light. Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;UCX_$ParentMeshName&#8221; style nam', u'html': u'<p>It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light.</p>\n<p>Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;<em>UCX_$ParentMeshName</em>&#8221; style names it&#8217;s enough to just name the collision hulls as &#8220;<em>UCX</em>&#8220;, the script will fix it during export. Just make sure that the collisions are children of the main mesh.</p>\n<p>FBX files can be saved with fake Revit signature which makes it possible to link the produced FBX file in 3ds Max 2011 (File Link Manager).</p>\n<p><strong>IMPORTANT</strong>: Modo 501 SP3 (and possibly earlier 501 versions) have a nasty bug where displaced SDS geometry is frozen without any deformations. The workaround is similarly ugly: I initiate an incorrect file save which makes an error window pop up which forces some kind of an internal update after which the freeze command works properly. So when you see an error popup saying</p>\n<blockquote><p>Scene save was unsuccessful &#8212; Not Found File &#8220;C:&#8221; not written.</p></blockquote>\n<p>well, it&#8217;s &#8220;normal&#8221;&#8230; just click OK and wait for the script to finish.<br />\nAlso, freezing a PSDS surface messes up morphmaps. The workaround for that slows down the export process considerably.<br />\nTo avoid freezing altogether use the <em>NOFREEZE</em> parameter.</p>\n<p><strong>Arguments:</strong><br />\n<em>FBX; LWO; OBJ; COLLADA</em>: They define the output format. Default is FBX.<br />\n<em>SILENTSAVE</em>: The file will be saved next to the original file. No dialog will be displayed.<br />\n<em>NOQUADS</em>: Triangulates the object the exported object.</p>\n<p><em>FBXREVIT</em>: Saves an FBX file and makes it look like it came from Autodesk Revit.<br />\n- In this mode NOQUADS and SILENTSAVE are automatically enabled.<br />\n- 3ds Max will only recognize an UV if it&#8217;s used by at least one image in the shader tree.</p>\n<p>NOFREEZE: The geometry will not be frozen.<!-- PHP 5.x --></p>', u'datetime': u'2011-07-25T09:29:54', u'id': u'http://www.zspline.net/blog/?p=1340', u'categories': [], u'metadata': {u'guid': u'9ae35466-c6cf-4cb8-a070-c147ede632af', u'likes': 0, u'is_published': False}}, {u'title': u'Toggle debug print in Maxscript', u'url': u'http://www.rsart.co.uk/2011/07/23/toggle-debug-print-in-maxscript/', u'author': u'Rick', u'summary': u'Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O', u'html': u'<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.</p>\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:</p>\n<p><code>if debugprint == true then print "My debug stuff"</code></p>\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:</p>\n<p><code>fn debugPrint printStr =<br />\n(<br />\n    if debugPrintVal == true do<br />\n        (<br />\n            Print printStr<br />\n        )<br />\n)<br />\n</code></p>\n<p>So, instead of using  :</p>\n<p><code>if debugprint == true then print "My debug stuff"</code></p>\n<p>We can now used the much cleaner version:</p>\n<p><code>debugprint "My debug stuff"</code></p>', u'datetime': u'2011-07-23T23:44:45', u'id': u'http://www.rsart.co.uk/?p=407', u'categories': [], u'metadata': {u'guid': u'eae874f4-a637-4d6e-bd62-c057f2045c60', u'likes': 0, u'is_published': False}}, {u'title': u'Learning a programming language by reading a manual is like learning a language by reading a dictionary', u'url': u'http://www.robg3d.com/?p=708', u'author': u'Rob Galanakis', u'summary': u'A verbal language is more than its grammar and vocabulary. \xa0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \xa0You cannot learn this through words, you learn this through interacting with', u'html': u'<p>A verbal language is more than its grammar and vocabulary. \xa0A programming language is much more than its syntax and keywords.</p>\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \xa0You cannot learn this through words, you learn this through interacting with people, or libraries.</p>\n<p>Be wary of anyone who says they know more than a dozen languages. \xa0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.</p>\n<p>You can learn to speak a language without learning how to communicate in that language. \xa0In the same way, you can create a program in a language without communicating effectively.</p>\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \xa0Sophisticated use of a programming language allows and requires the same. \xa0We should understand when to be sophisticated and when to be crude, and always seek to educate.</p>\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \xa0Consider what Ebonix is to English, or a scripting language is to C++. \xa0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.</p>\n<p>You cannot learn how to speak a language by reading a dictionary. \xa0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \xa0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.</p>\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.</p>', u'datetime': u'2011-07-23T03:58:13', u'id': u'http://www.robg3d.com/?p=708', u'categories': [], u'metadata': {u'guid': u'8663e9bd-e78d-4c2d-816e-4f33d05827a9', u'likes': 0, u'is_published': False}}, {u'title': u'Highlight an Excel Cell Using Python', u'url': u'http://shawnkirsch.tumblr.com/post/7930189393', u'author': u'Unknown Author', u'summary': u'<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style ', u'html': u'<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style = xlwt.easyxf(\u2018pattern: pattern solid, fore-colour red\u2019)</li>\n<li>\n</li><li>for x in range(inputSheet.nrows):</li>\n<li>\xa0 \xa0 for y in range(inputSheet.ncols):</li>\n<li>\xa0 \xa0 \xa0 \xa0 if(inputSheet.cell(x,y).value):</li>\n<li>\xa0 \xa0 \xa0 \xa0 \xa0 \xa0cellValue = inputSheet.cell(x,y).value</li>\n<li>\xa0 \xa0 \xa0 \xa0 \xa0 \xa0outputSheet.write(x,y, cellValue)</li>\n<li>\n</li><li>outputSheet.write(5,5, \u201crewritten cell\u201d, style)</li>\n<li>\n</li><li>\n</li><li>outputBook.save(\u201ctest.xls\u201d)</li>\n\n</ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \xa0Good for validation purposes.</p>\n<ol></ol>', u'datetime': u'2011-07-22T11:55:00', u'id': u'http://shawnkirsch.tumblr.com/post/7930189393', u'categories': [], u'metadata': {u'guid': u'9a86dd70-2b83-49dc-a151-fac566245d11', u'likes': 0, u'is_published': False}}, {u'title': u'Power Animator', u'url': u'http://strongmanimator.blogspot.com/2011/07/power-animator.html', u'author': u'anim8d (noreply@blogger.com)', u'summary': u'<div class="MsoNormal"><i>(ed. note: If you\u2019ve made your way here from <a href="http://altdevblogaday.com/">http://altdevblogaday.com</a>, welcome!)</i></div><div class="MsoNormal"><br /></div><div class="MsoNormal"><span class="Apple-style-span" style="font-size: large;">\u201cThere are two ways of exer', u'html': u'<div class="MsoNormal"><i>(ed. note: If you\u2019ve made your way here from <a href="http://altdevblogaday.com/">http://altdevblogaday.com</a>, welcome!)</i></div><div class="MsoNormal"><br /></div><div class="MsoNormal"><span class="Apple-style-span" style="font-size: large;">\u201cThere are two ways of exerting one\'s strength: one is pushing down, the other is pulling up.\u201d</span> \u2013 Booker T. Washington</div><div class="MsoNormal"><br /></div><div class="MsoNormal">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">For today\u2019s post, I\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. </div><div class="MsoNormal"><br /></div><div class="MsoNormal">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold\'s Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.</div><div class="MsoNormal"><br /></div><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s1600/csi.png" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="640" src="http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s640/csi.png" width="233" /></a></div><div class="MsoNormal">On that day at Gold\'s Gym, I was benching and curling, because THAT\'S WHAT MEN DO (that\'s how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">She continued on with her squats while I performed my "superior" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since "clearly squats are supposed to be bad for your knees!" I reply "I\u2019m gonna do some curls!" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">She ignored me. She was deadlifting, and that was serious business for her.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">Later on that night Jessica turned to me and asked "So, what are your fitness goals?" I replied "To get bigger and stronger, of course." She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">Then she said it:</div><div class="MsoNormal"><br /></div><div class="MsoNormal"><br /></div><table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"><tbody><tr><td style="text-align: center;"><a href="http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s1600/LooneyTunes_Gossamer_Model_Sheet.jpg" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"><img border="0" height="256" src="http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s320/LooneyTunes_Gossamer_Model_Sheet.jpg" width="320" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">This is apparently what I looked like, hair and all.</td></tr></tbody></table><div class="MsoNormal">"You know you have chicken legs, right? You\'re shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that."</div><div class="MsoNormal"><br /></div><div class="MsoNormal">I was disheartened, totally bummed out, but more importantly, I was <i>confused</i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men\'s Health! They HAD to be right!<br /><br />More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!</i></div><div class="MsoNormal"><br /></div><div class="MsoNormal">Jessica and I didn\'t go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That\'s when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">Training in a vacuum that way had stunted my growth in a literal sense- I wasn\'t getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I\'ve gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. </div><div class="MsoNormal"><br /></div><div class="MsoNormal">So I guess getting strength training advice from a girl isn\u2019t so bad after all. <span style="font-family: Wingdings;">J</span></div><div class="MsoNormal"><br />I invite you to read my parallel story about animation on AltDevBlogADay (<a href="http://altdevblogaday.com/2011/07/22/power-animator/">http://altdevblogaday.com/2011/07/22/power-animator/</a>)</div><div style="line-height: 14.25pt;"><br /></div><div class="MsoNormal"><br /></div><div class="blogger-post-footer"><img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com" width="1" /></div>', u'datetime': u'2011-07-22T10:34:31.240000', u'id': u'tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526', u'categories': [], u'metadata': {u'guid': u'17f41b91-dcb0-4a6b-aae1-6f12c4364bc6', u'likes': 0, u'is_published': False}}, {u'title': u'more on OO rigging and animator tools', u'url': u'http://www.macaronikazoo.com/?p=784', u'author': u'hamish', u'summary': u'Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.', u'html': u'<p>Following on from the <a href="http://www.macaronikazoo.com/?p=752" title="object oriented rigging in Skeleton Builder">previous post</a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.</p>\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.</p>\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \xa0The next step is to create an <a href="http://www.macaronikazoo.com/?p=726" title="A more thorough Interface class">interface class</a> which defines two methods &#8211; switchToFk and switchToIk. \xa0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \xa0Our code ends up looking something like this:</p>\n<pre class="brush:py">import typeFactories\nimport baseRigPrimitive\nclass IkFkSwitchable(object):\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\n  def switchToFk( self ):\n    \'\'\'this method should implement the logic to switch to FK mode\'\'\'\n    pass\n  def switchToIk( self ):\n    \'\'\'this method should implement the logic to switch to IK mode\'\'\'\n    pass\n\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\n  #the code to implement this rig part goes here\n  ...\n  def switchToFk( self ):\n    #implementation of this method goes below...\n    ...\n  def switchToIk( self ):\n    #implementation of this method goes below...\n    ...</pre>\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:</p>\n<pre class="brush:py">import rigPrimitives\nimport maya.cmds as cmd\nfrom baseMelUI import *\n\ndef getSelectedSwitchableParts():\n  \'\'\'\n  returns a list of all RigPart instances that have at least one of their members\n  selected\n  \'\'\'\n  selectedSwitchableParts = []\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\n  for rigPart in selectedRigParts:\n    if isinstance( rigPart, IkFkSwitchable ):\n      selectedSwitchableParts.append( rigPart )\n\n  return selectedSwitchableParts\n\nclass UserToolLayout(MelHLayout):\n  def __init__( self, parent ):\n    MelHLayout.__init__( self, parent )\n    self.UI_fkButton = MelButton( self, l="switch to FK", c=self.on_pressFk )\n    self.UI_ikButton = MelButton( self, l="switch to IK", c=self.on_pressIk )\n\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\n    #method when the scene selection changes.  So this will update the UI when the user\n    #changes the selection\n    self.setSelectionChangeCB( self.on_selectionChange )\n    self.on_selectionChange()  #call this to init the UI\n\n    #make sure to call this so the form layout gets setup properly\n    self.layout()\n\n  ### EVENT HANDLERS ###\n  def on_selectionChange( self, *a ):\n    #need to explicitly cast here because of a bug in setEnabled\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\n  def on_pressFk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToFk()\n  def on_pressIk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToIk()\n\nclass UserToolWindow(BaseMelWindow):\n  WINDOW_NAME = "ikFkSwitcherTool"\n  WINDOW_TITLE = "Ik Fk switcher tool"\n  DEFAULT_SIZE = 300, 45\n  DEFAULT_MENU = None\n\n  def __init__( self ):\n    UserToolLayout( self )\n    self.show()\n\nUserToolWindow()</pre>\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.</p>\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.</p>\n<p>Anyway hopefully you get the idea.</p>', u'datetime': u'2011-07-21T22:47:08', u'id': u'http://www.macaronikazoo.com/?p=784', u'categories': [], u'metadata': {u'guid': u'78b71ec9-df92-4860-b8df-1eb4fc668c04', u'likes': 0, u'is_published': False}}, {u'title': u'Toward a quasi time independant  twist node', u'url': u'http://circecharacterworks.wordpress.com/2011/07/20/toward-a-quasi-time-independant-twist-node/', u'author': u'circerigging', u'summary': u'This post is about\xa0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\xa0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\xa0 I was often confronted with twist popping out of control w', u'html': u'<p>This post is about\xa0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.</p>\n<p><img alt="" height="483" src="http://circecharacterworks.files.wordpress.com/2011/07/orient_constraint_torsion1.gif?w=408&#038;h=483" title="orient_constraint_torsion" width="408" /></p>\n<p><em>(Above: notice the\xa0 flipping glitch when the torsion goes above 180.0 )</em></p>\n<p>After writing a <em><span style="color: #ff6600;"><a href="http://circecharacterworks.wordpress.com/2011/07/06/a-journey-in-the-realm-of-corrective-shapes-ii/">quaternion based aim constraint</a>\xa0</span></em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.</p>\n<p></p>\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.</p>\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.</p>\n<p>1)<em> From <span style="color: #ff6600;">pi</span>e to <span style="color: #ff6600;">pi</span>e ( with a thick French accent )</em> :</p>\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.</p>\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.</p>\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):</p>\n<pre class="brush: python; wrap-lines: false;">\nimport maya.cmds as cmds\n\nrefLoc = cmds.spaceLocator( n=\'referenceLoc1\')[0]\nstartLoc = cmds.spaceLocator( n=\'StartLoc1\')[0]\nEndLoc = cmds.spaceLocator( n=\'EndLoc1\')[0]\n\ncmds.parent( [startLoc ,EndLoc] , refLoc )\ncmds.setAttr( startLoc + \'.t\', 10.0, 0, 0, type=\'double3\' )\ncmds.setAttr( EndLoc + \'.t\', 10.0, 2.0, 0, type=\'double3\' )\n\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( refLoc + \'.angle\',e=True,keyable=True  )\n\n#Use locator position  as vector\nangleReader = cmds.createNode( \'angleBetween\' )\ncmds.connectAttr( startLoc + \'.translate\', angleReader + \'.vector1\' )\ncmds.connectAttr( EndLoc + \'.translate\', angleReader + \'.vector2\' )\n\nnullPos = [(0,0,0),(0,0,0)]\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n=\'starCurve1\')\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), \'starCurveShape1\' )\n\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n=\'endCurve1\')\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), \'endCurveShape1\' )\n\ncmds.parent( [startCurve ,endCurve] , refLoc )\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\ncmds.setAttr( cvShape1 + \'.controlPoints[0]\', 0,0,0,type=\'double3\' )\ncmds.connectAttr( startLoc + \'.translate\' , cvShape1 + \'.controlPoints[1]\', f=True )\ncmds.setAttr(  endShape1 + \'.controlPoints[0]\', 0,0,0,type=\'double3\' )\ncmds.connectAttr( EndLoc + \'.translate\' , endShape1 + \'.controlPoints[0]\', f=True )\n\ncmds.connectAttr( angleReader + \'.angle\',  refLoc + \'.angle\', f=True  )\n\n#Don\'t let depency node lives in the wild polluting the outliner: group them in container\nasset = cmds.container( type=\'dagContainer\',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\n\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( asset + \'.angle\',e=True,keyable=True  )\n\ncmds.connectAttr(  refLoc + \'.angle\',  asset + \'.angle\' , f=True  )\n#dont forget to rename The hyperLayout node associate with this container\nlayout = cmds.listConnections(  asset , t=\'hyperLayout\' )[0]\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\n\n#kindly prefix the element in the container\nNodeList =  cmds.container(asset, q=True, nl=True)\nfor node in NodeList :\n    cmds.rename( node,asset + \'_\' + node, ignoreShape=True)\n</pre>\n<p><img alt="" class="aligncenter" height="451" src="http://circecharacterworks.files.wordpress.com/2011/07/vector_angle.gif?w=393&#038;h=451" title="angle range beetween 2 vectors" width="393" /></p>\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.</p>\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )</em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\xa0 in a clock wise manner.</p>\n<p>2) History and time as a 4th dimension:</p>\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\xa0 host a wealth of research papers:</p>\n<ul>\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href="http://www.chrisevans3d.com/reference.htm"><span style="color: #ff6600;"><em>http://www.chrisevans3d.com/reference.htm</em></span></a></li>\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href="http://kesen.realtimerendering.com/"><span style="color: #ff6600;"><em>http://kesen.realtimerendering.com/</em></span></a></li>\n</ul>\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.</p>\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.</p>\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .</p>\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),</em> and not interactive.</p>\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href="http://www.strarup.net/maya/plugins/lagNode/"><span style="color: #ff6600;"><em>Alex V. U. Strarup</em></span></a> was talking about a lag node inspired by maya framecache node.</p>\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).</p>\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\xa0 an MPlug and MDGContext.</p>\n<p>This is what make it possible to <span style="color: #ff6600;"><em>&#8216;ghost&#8217;</em></span> an animated object in maya among many other things.</p>\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br />\n<em>(a little excerpt from Antitrust movie )</em></p>\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style="color: #ff6600;">setDependentsDirty</span>()\xa0 method\xa0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):</em></p>\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.</p>\n<p>I took advantage of this property to determine a twist direction:</p>\n<ul>\n<li>Inside a compute method ,the value of separate output buffer is first readen</li>\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.</li>\n<li>Finally\xa0 if the input and buffer values are not identical we store the twist input value into the output attribute.</li>\n</ul>\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.</p>\n<p><img alt="" height="471" src="http://circecharacterworks.files.wordpress.com/2011/07/vector_direction.gif?w=435&#038;h=471" title="" width="435" /></p>\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) </em>we can use their\xa0 cross product to create a perpendicular vector that will act as a twist axis.</p>\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\xa0 the reference vector <em>about</em> the twist axis <em>by</em> 90.0 degrees.</p>\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.</p>\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .</p>\n<p>In his article <span style="color: #ff6600;"><em>(<a href="http://www.3dfiggins.com/writeups/forearmTwist/">\xa0http://www.3dfiggins.com/writeups/forearmTwist/</a> )</em></span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:</p>\n<ul>\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.</li>\n<li>As a manual process, the result can be less accurate or lacks consistency.</li>\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.</li>\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.</li>\n</ul>\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.</p>\n<p>Part of the remaining works was\xa0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.</p>\n<p>3)<em> Angle <span style="color: #ff6600;">accumulation</span> versus number of <span style="color: #ff6600;">revolution</span>:</em></p>\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\xa0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.</p>\n<p><img alt="" height="395" src="http://circecharacterworks.files.wordpress.com/2011/07/clock_circle.gif?w=395&#038;h=395" title="" width="395" /></p>\n<p>First it was important to translate the past and current rotation vector into a more consistent\xa0 value : a normalized value <em>U</em> that represent a percentage of a circle perimeter.</p>\n<p>One way to figure this circle purpose is to think of it\xa0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.</p>\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\xa0the separation line increases and its band can start to turn and wrap\xa0 several times around this cylinder.</p>\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution</em> and a parametric value U.</p>\n<pre class="brush: python; wrap-lines: false;">\n# Procedure to compute the number of revolution along on unit circle\n\n#Case A: positive rotation direction:\n### current rotation is in most case greater than past rotation\n### when this is false we can increment the number of revolution\n\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\nif past_rotation &gt; current_rotation :\n   currentRevolution += 1.0\n\n#Case B: negative rotation direction:\n### current rotation is in most case lower than past rotation\n### when this is false we can decrement the number of revolution\n\nif past_rotation &lt; current_rotation :\n   currentRevolution -= 1.0\n\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\ncurrentRevolution_outputHandle.setClean()\n</pre>\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\xa0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].</p>\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .</p>\n<p>4)<em> Counter measure for a <span style="color: #ff6600;">previous value dependent</span> node</em>:</p>\n<br />  <a href="http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/575/" /></a> <img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1" width="1" />', u'datetime': u'2011-07-20T08:32:05', u'id': u'http://circecharacterworks.wordpress.com/?p=575', u'categories': [], u'metadata': {u'guid': u'6cc70911-ba01-4409-b2bb-128dee5d7817', u'likes': 0, u'is_published': False}}, {u'title': u'instantiate an asset by name', u'url': u'http://blarg.robertkist.com/?p=81', u'author': u'Robert', u'summary': u'More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82', u'html': u'<p>More Unity learning&#8230;</p>\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):</p>\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.</p>\n<p>Then use the following code (Boo):</p>\n<pre class="brush:py">obj as GameObject\nins as GameObject\n\n# let\'s grab the asset\nobj=Resources.Load("tile_flat01", GameObject)\n# add a texture to the asset\nobj.renderer.material.mainTexture=Resources.Load("cobbleTex", Texture2D)\n# instantiate it\nins=Instantiate(obj)</pre>\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.</p>\n<p>edit: seems I have to find a Unity icon for my blog</p>', u'datetime': u'2011-07-20T01:17:18', u'id': u'http://blarg.robertkist.com/?p=81', u'categories': [], u'metadata': {u'guid': u'3ed9e97a-8998-4ff4-80dd-57108af42b7d', u'likes': 0, u'is_published': False}}, {u'title': u'Compliments to the chef!', u'url': u'http://www.robg3d.com/?p=701', u'author': u'Rob Galanakis', u'summary': u'My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \xa0One time, a food critic dined there, and enjoyed his paella\xa0so much that he went into the back to compliment the chef. \xa0He saw', u'html': u'<p>My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \xa0One time, a food critic dined there, and enjoyed his <em>paella</em>\xa0so much that he went into the back to compliment the chef. \xa0He saw the two and congratulated the dishwasher-who didn&#8217;t speak a lick of English- on a dish well made.</p>', u'datetime': u'2011-07-20T00:44:10', u'id': u'http://www.robg3d.com/?p=701', u'categories': [], u'metadata': {u'guid': u'5e9b13e5-d329-4e9f-a441-c7a19ee854fd', u'likes': 0, u'is_published': False}}, {u'title': u'Rigging for the masses!', u'url': u'http://somosposmodernos.com/blog/?p=350', u'author': u'ike', u'summary': u'Last weekend I&#8217;ve been giving a conference about rigging in Campus Party. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In span', u'html': u'<p>Last weekend I&#8217;ve been giving a conference about rigging in <a href="http://www.campus-party.es/2011/index.html" target="_blank" title="Campus Party">Campus Party</a>. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In spanish.<br />\n<em><br />\nEl pasado fin de semana estuve en <a href="http://www.campus-party.es/2011/index.html" target="_blank" title="Campus Party">Campus Party</a>, en Valencia, dando una charla. Mi objetivo era hacer que la gente ajena al 3D entendiese en qu\xe9 consiste la figura del &#8216;rigger&#8217; y c\xf3mo se encaja dentro de una producci\xf3n. La organizaci\xf3n ha subido esta conferencia (as\xed como todas las dem\xe1s) a Youtube, as\xed que se puede ver completa. En espa\xf1ol.</em></p>\n<p></p>\n<p>&#8212;&#8212;&#8212; <strong>\xa1AUTOBOMBO EXTRA!</strong> &#8212;&#8212;&#8212;</p>\n<p><em>Hace unos meses, Abel, del <em>podcast</em> &#8216;Houston, tenemos un programa&#8217;, me hizo una entrevista para su programa. Se puede escuchar y descargar desde <a href="http://www.houstontenemosunprograma.com/2011/05/setup-de-personajes-con-iker-j-de-los.html" target="_blank" title="aqu\xed">aqu\xed</a>.</p>\n<p></em></p>', u'datetime': u'2011-07-19T22:14:43', u'id': u'http://somosposmodernos.com/blog/?p=350', u'categories': [], u'metadata': {u'guid': u'd2a10086-f592-4166-b969-68cc2beb0b4b', u'likes': 0, u'is_published': False}}]
07-31 20:03 root         INFO     Handling CGI request.
07-31 20:03 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:03 SocketClient INFO     Sending to service: "["downloadedcontent_count", [], {}]"
07-31 20:03 SocketClient INFO     Received from service: "881"
07-31 20:03 SocketClient INFO     Returning: 881
07-31 20:03 root         INFO     Handling CGI request.
07-31 20:03 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:03 SocketClient INFO     Sending to service: "["request_content_slice", [0, 15], {}]"
07-31 20:03 SocketClient INFO     Received from service: "[{"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/30/protocol-to-build-a-reusable-deformation-template-i-model-presentation/", "title": "Protocol to build a reusable deformation template I: model presentation", "datetime": "2011-07-30T09:41:32", "html": "<p>Character and creature rigging is a broad discipline that encompass many fields :</p>\n<ul>\n<li>Structure setup for animation .</li>\n<li>Skin / envelope configuration.</li>\n<li>Surface, hair , cloth and rigid body simulation.</li>\n<li>Scripts / tools writing.</li>\n</ul>\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.</p>\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.</p>\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\u00a0 I just think that to handle creature /character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.</p>\n<p>The ability to assign an attribute\u00a0per element is a powerful\u00a0 concept that has yet to find a limitation,\u00a0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.</p>\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png\"><img alt=\"\" height=\"499\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png?w=450&#038;h=499\" title=\"packageMan: a free animation rig by  Javier Solsona\" width=\"450\" /></a></p>\n<p>This fully rigged character can be found on <a href=\"http://www.rigging101.com/freestuff.htm\"><em><span style=\"color: #ff6600;\">Javier Solsona </span></em></a>&#8216;s website and was modeled\u00a0by Bob White.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png\"><img alt=\"\" height=\"248\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png?w=450&#038;h=248\" title=\"original topology of this character \" width=\"450\" /></a></p>\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.</p>\n<p>This means:</p>\n<ul>\n<li>less computing power,</li>\n<li>less memory</li>\n<li>less functionality by default in maya</li>\n<li>non existing support program like topoGun or Zbrush .</li>\n</ul>\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\u00a0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.</p>\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .</p>\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .</p>\n<p>Some triangles on the contrary are well used and help reinforce\u00a0 the shape of this sculpture <em>( on the the belly and crotch for example ) .</em></p>\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png\"><img alt=\"\" height=\"574\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png?w=450&#038;h=574\" title=\"\" width=\"450\" /></a><br />\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\u00a0 I will the focus on shoulder deformation.</p>\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )</em> and the socks were left unchanged.<br />\n<a href=\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png\"><img alt=\"\" height=\"383\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png?w=450&#038;h=383\" title=\"\" width=\"450\" /></a></p>\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br />\n<a href=\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png\"><img alt=\"\" class=\"alignleft size-full wp-image-713\" height=\"545\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png?w=450&#038;h=545\" title=\"\" width=\"450\" /></a></p>\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/692/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin / envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts / tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f", "id": "http://circecharacterworks.wordpress.com/?p=692", "categories": [], "metadata": {"guid": "b187aab2-bf23-4bba-8cd2-36fca514ccba", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=724", "title": "The Importance of Vision, 3 of 3", "datetime": "2011-07-30T04:31:25", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0<a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a>\u00a0in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these problems are simply lucky. I suspect that such people are in a fragile situation, and taking away a key player or two would destroy the precarious dynamic that doesn&#8217;t birth these problems. If you are at a studio without these problems, ask yourself this: is your setup one that you can describe, export, advocate for, reproduce? How would you do it, without saying &#8220;just hire better people?&#8221; It is this &#8220;coincidence as a solution&#8221; that propogates the problems at less lucky studios.</p>\n<p>Let&#8217;s create real solutions.</p>\n<p>We need to create roles and departments that can provide studios with a cohesive tools vision. We need to fill these director-level roles with uniquely qualified individuals who are experienced in art and design, and are excellent programmers. We need to mature our views on tools as an industry, and start looking for concrete solutions for our endemic tools issues rather than relying on chance.<br />\nWe&#8217;re not going to find these people or do these things overnight. We need to, first, decide on this path as our goal. Not just you, but your studio&#8217;s management, and there&#8217;s no formula helpful formula I can give to convince them. Just nonstop advocacy, education, and reflection.</p>\n<p>Then, start discussing what the application of these ideas would mean at your studio. And who is going to fill these key roles? There are people you already have at your studio who just need a little bit of training. Put your tech artists on your programming teams for a bit, or your programmers working on game design or art. See how quickly you&#8217;ll find someone with the unique set of skills for a Tools Director position.</p>\n<p>We need people who understand how people work and content flows across a project. \u00a0We need people who are able to guide its formulation/improvement/reconsideration. \u00a0This is vision. \u00a0And the lack of vision in tools development is a deadly disease we must remedy if we are to improve the state of our tools across the industry.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0recent post at AltDevBlogADay\u00a0in three parts. \u00a0View it there in its entirety. Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these", "id": "http://www.robg3d.com/?p=724", "categories": [], "metadata": {"guid": "e3ca9c4a-a6ad-4ade-aaaa-55c1e0d17b8f", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=722", "title": "The Importance of Vision, 2 of 3", "datetime": "2011-07-29T04:29:13", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0<a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a>\u00a0in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>\n<p>No longer can this vital role be left to a hodepodge of other people. Your Art/Technical/Creative Directors, your Lead Programmers/Artists/Designers, can no longer be the people expected to provide the vision for studio&#8217;s Tools and Pipeline.</p>\n<p>The person who fills this role needs to be someone with enough experience creating art that they can embed with Artists. Someone who can program well enough to have the title of Programmer. Someone flexible enough that they can deal with the needs of Designers. Someone charismatic enough that they can fight and win the battle against the inevitable skepticism, fear, and opposition a change like this would bring.</p>\n<p>These people are few and far between, and every one of them I know is happily employed. We&#8217;re asking for a unique set of passions and skills, a set that isn&#8217;t common in the games industry especially (who gets into games to write tools?!). We need to start training our tools developers (tech artists, tools programmers) to aspire to have these passions and skills.</p>\n<p>This won&#8217;t happen magically. Unless our studios can promise that these aspirations will be fulfilled, few people will bother, and I cannot blame them. Many studios have made the commitment to having killer tools. Almost as many have failed. And almost as many as that have failed to realize lack of a cohesive vision as a primary factor.</p>\n<p>It isn&#8217;t surprising that resources get moved from tools dev, that schedules cannot be stuck to, that they cannot attract senior developers. Without a cohesive tools vision, how are resources supposed to be properly allocated? Resources become a fragile compromise between competing departments, rather than brokered by a separate party without allegiances. How is a schedule supposed to be followed, when the people doing the work are not the ones who feel the repercussions? And it is no surprise that it is difficult to attract senior talent with strong programming skills necessary to develop great tools to these positions. If there is no career path- and, let&#8217;s face it, most studios have no career path for tools developers- they&#8217;re going to go into game programming, or the general software industry (which is, for the most part, some form of tools development in a different environment).</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0recent post at AltDevBlogADay\u00a0in three parts. \u00a0View it there in its entirety. So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows ", "id": "http://www.robg3d.com/?p=722", "categories": [], "metadata": {"guid": "ec73746a-1101-46af-8d12-6a3c94b7f875", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=720", "title": "The Importance of Vision, 1 of 3", "datetime": "2011-07-28T04:29:04", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a> in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.</p>\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.</p>\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.</p>\n<p>Where does this lack of vision come from? What can we do to resolve it?</p>\n<hr />\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.</p>\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.</p>\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?</p>\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \u00a0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we", "id": "http://www.robg3d.com/?p=720", "categories": [], "metadata": {"guid": "5bd65447-2fe8-44f8-a6f1-046c2b4563e0", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=712", "title": "WTFunctional: Be Declarative", "datetime": "2011-07-25T14:29:27", "html": "<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.</p>\n<p>First up is demonstrating that <strong>functional programming is declarative</strong>: it makes your code more expressive and optimized.</p>\n<p>Most programmers are used to seeing this:</p>\n<pre>list = []\nfor i = 0 to 10 do\n  if i % 2 == 0:\n    list.append(i)\n//list is now [0,2,4,6,8,10]</pre>\n<p>Less familiar would be:</p>\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)</pre>\n<p>The first focuses on the <em>how</em>: increment <em>i</em> from 0 to 10, and append every even item and 0 to a list. \u00a0This is an <strong>imperative style</strong>. \u00a0The second focuses on the <em>what</em>: \u00a0for each item from 0 to 10, select all even items. \u00a0This is a <strong>declarative style</strong>, which is an aspect of functional programming. \u00a0In this trivial case, the difference is, well, trivial. \u00a0But the key differences are:</p>\n<ol>\n<li>\u00a0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).</li>\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.</li>\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated/iterated over, not a concrete type like a list/array/etc.</li>\n</ol>\n<p>These differences create three key benefits:</p>\n<ol>\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.</li>\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative</em>\u00a0part of it. \u00a0We&#8217;ll see how to read a more complex statement next.</li>\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators</em>- it really depends on what is expedient for the statement.</li>\n</ol>\n<p>Let&#8217;s try out a more concrete example. \u00a0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \u00a0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.</p>\n<pre>dateAndItemsMap = dict()\nfor row in myTable.rows:\n\u00a0 \u00a0 if row.isActive:\n\u00a0 \u00a0 \u00a0 \u00a0 if row.date not in dateAndItemsMap:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date] = list()\n\u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date].append(new MyObject(row))\nsortedDates = dateAndItemsMap.values()\nsortedDates.sort()\nitemsSortedByDateThenId = list()\nfor date in sortedDates:\n\u00a0 \u00a0 items = dateAndItemsMap[date]\n\u00a0 \u00a0 items.sort(lamba obj: obj.id)\n\u00a0 \u00a0 itemsSortedByDateThenId.extend(items)</pre>\n<p>Wow, that&#8217;s a lot of code! \u00a0And not at all clear when reading it. \u00a0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \u00a0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.</em>\u00a0 That&#8217;s a mouthful, and I think that was pretty brief.</p>\n<p>Let&#8217;s compare this to the declarative style:</p>\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)</pre>\n<p>One line? \u00a0One stinking line? \u00a0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.</em>\u00a0 Notice a) how the explanation expresses <em>what you want</em>, <strong>not</strong>\u00a0how you want to get it, and b) the explanation reads very similar to the code.</p>\n<p>This is why declarative programming rocks, <strong>right now.</strong>\u00a0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \u00a0Your code will become infinitely clearer.</p>\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure</strong>), and the compiler or runtime can automatically parallelize it and optimize it. \u00a0This is one reason languages like SQL have been so effective- the software/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.</p>\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \u00a0Next up will probably be closures.</p>", "summary": "Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ", "id": "http://www.robg3d.com/?p=712", "categories": [], "metadata": {"guid": "7cf25c60-08d2-4be6-8544-0869547c3245", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/25/exportlayer-v1-3-for-modo-501/", "title": "ExportLayer v1.3 for modo 501", "datetime": "2011-07-25T09:29:54", "html": "<p>It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light.</p>\n<p>Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;<em>UCX_$ParentMeshName</em>&#8221; style names it&#8217;s enough to just name the collision hulls as &#8220;<em>UCX</em>&#8220;, the script will fix it during export. Just make sure that the collisions are children of the main mesh.</p>\n<p>FBX files can be saved with fake Revit signature which makes it possible to link the produced FBX file in 3ds Max 2011 (File Link Manager).</p>\n<p><strong>IMPORTANT</strong>: Modo 501 SP3 (and possibly earlier 501 versions) have a nasty bug where displaced SDS geometry is frozen without any deformations. The workaround is similarly ugly: I initiate an incorrect file save which makes an error window pop up which forces some kind of an internal update after which the freeze command works properly. So when you see an error popup saying</p>\n<blockquote><p>Scene save was unsuccessful &#8212; Not Found File &#8220;C:&#8221; not written.</p></blockquote>\n<p>well, it&#8217;s &#8220;normal&#8221;&#8230; just click OK and wait for the script to finish.<br />\nAlso, freezing a PSDS surface messes up morphmaps. The workaround for that slows down the export process considerably.<br />\nTo avoid freezing altogether use the <em>NOFREEZE</em> parameter.</p>\n<p><strong>Arguments:</strong><br />\n<em>FBX; LWO; OBJ; COLLADA</em>: They define the output format. Default is FBX.<br />\n<em>SILENTSAVE</em>: The file will be saved next to the original file. No dialog will be displayed.<br />\n<em>NOQUADS</em>: Triangulates the object the exported object.</p>\n<p><em>FBXREVIT</em>: Saves an FBX file and makes it look like it came from Autodesk Revit.<br />\n- In this mode NOQUADS and SILENTSAVE are automatically enabled.<br />\n- 3ds Max will only recognize an UV if it&#8217;s used by at least one image in the shader tree.</p>\n<p>NOFREEZE: The geometry will not be frozen.<!-- PHP 5.x --></p>", "summary": "It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light. Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;UCX_$ParentMeshName&#8221; style nam", "id": "http://www.zspline.net/blog/?p=1340", "categories": [], "metadata": {"guid": "9ae35466-c6cf-4cb8-a070-c147ede632af", "likes": 0, "is_published": false}}, {"author": "Rick", "url": "http://www.rsart.co.uk/2011/07/23/toggle-debug-print-in-maxscript/", "title": "Toggle debug print in Maxscript", "datetime": "2011-07-23T23:44:45", "html": "<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.</p>\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:</p>\n<p><code>if debugprint == true then print \"My debug stuff\"</code></p>\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:</p>\n<p><code>fn debugPrint printStr =<br />\n(<br />\n    if debugPrintVal == true do<br />\n        (<br />\n            Print printStr<br />\n        )<br />\n)<br />\n</code></p>\n<p>So, instead of using  :</p>\n<p><code>if debugprint == true then print \"My debug stuff\"</code></p>\n<p>We can now used the much cleaner version:</p>\n<p><code>debugprint \"My debug stuff\"</code></p>", "summary": "Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O", "id": "http://www.rsart.co.uk/?p=407", "categories": [], "metadata": {"guid": "eae874f4-a637-4d6e-bd62-c057f2045c60", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=708", "title": "Learning a programming language by reading a manual is like learning a language by reading a dictionary", "datetime": "2011-07-23T03:58:13", "html": "<p>A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords.</p>\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with people, or libraries.</p>\n<p>Be wary of anyone who says they know more than a dozen languages. \u00a0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.</p>\n<p>You can learn to speak a language without learning how to communicate in that language. \u00a0In the same way, you can create a program in a language without communicating effectively.</p>\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \u00a0Sophisticated use of a programming language allows and requires the same. \u00a0We should understand when to be sophisticated and when to be crude, and always seek to educate.</p>\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \u00a0Consider what Ebonix is to English, or a scripting language is to C++. \u00a0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.</p>\n<p>You cannot learn how to speak a language by reading a dictionary. \u00a0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \u00a0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.</p>\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.</p>", "summary": "A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with", "id": "http://www.robg3d.com/?p=708", "categories": [], "metadata": {"guid": "8663e9bd-e78d-4c2d-816e-4f33d05827a9", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/7930189393", "title": "Highlight an Excel Cell Using Python", "datetime": "2011-07-22T11:55:00", "html": "<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style = xlwt.easyxf(\u2018pattern: pattern solid, fore-colour red\u2019)</li>\n<li>\n</li><li>for x in range(inputSheet.nrows):</li>\n<li>\u00a0 \u00a0 for y in range(inputSheet.ncols):</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 if(inputSheet.cell(x,y).value):</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0cellValue = inputSheet.cell(x,y).value</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0outputSheet.write(x,y, cellValue)</li>\n<li>\n</li><li>outputSheet.write(5,5, \u201crewritten cell\u201d, style)</li>\n<li>\n</li><li>\n</li><li>outputBook.save(\u201ctest.xls\u201d)</li>\n\n</ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \u00a0Good for validation purposes.</p>\n<ol></ol>", "summary": "<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style ", "id": "http://shawnkirsch.tumblr.com/post/7930189393", "categories": [], "metadata": {"guid": "9a86dd70-2b83-49dc-a151-fac566245d11", "likes": 0, "is_published": false}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/07/power-animator.html", "title": "Power Animator", "datetime": "2011-07-22T10:34:31.240000", "html": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http://altdevblogaday.com/\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exerting one's strength: one is pushing down, the other is pulling up.\u201d</span> \u2013 Booker T. Washington</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">For today\u2019s post, I\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold's Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.</div><div class=\"MsoNormal\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s1600/csi.png\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"640\" src=\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s640/csi.png\" width=\"233\" /></a></div><div class=\"MsoNormal\">On that day at Gold's Gym, I was benching and curling, because THAT'S WHAT MEN DO (that's how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">She continued on with her squats while I performed my \"superior\" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since \"clearly squats are supposed to be bad for your knees!\" I reply \"I\u2019m gonna do some curls!\" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">She ignored me. She was deadlifting, and that was serious business for her.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Later on that night Jessica turned to me and asked \"So, what are your fitness goals?\" I replied \"To get bigger and stronger, of course.\" She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Then she said it:</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><br /></div><table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: right; margin-left: 1em; text-align: right;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s1600/LooneyTunes_Gossamer_Model_Sheet.jpg\" style=\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"256\" src=\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s320/LooneyTunes_Gossamer_Model_Sheet.jpg\" width=\"320\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">This is apparently what I looked like, hair and all.</td></tr></tbody></table><div class=\"MsoNormal\">\"You know you have chicken legs, right? You're shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that.\"</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">I was disheartened, totally bummed out, but more importantly, I was <i>confused</i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men's Health! They HAD to be right!<br /><br />More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Jessica and I didn't go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That's when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Training in a vacuum that way had stunted my growth in a literal sense- I wasn't getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I've gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">So I guess getting strength training advice from a girl isn\u2019t so bad after all. <span style=\"font-family: Wingdings;\">J</span></div><div class=\"MsoNormal\"><br />I invite you to read my parallel story about animation on AltDevBlogADay (<a href=\"http://altdevblogaday.com/2011/07/22/power-animator/\">http://altdevblogaday.com/2011/07/22/power-animator/</a>)</div><div style=\"line-height: 14.25pt;\"><br /></div><div class=\"MsoNormal\"><br /></div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com\" width=\"1\" /></div>", "summary": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http://altdevblogaday.com/\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exer", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526", "categories": [], "metadata": {"guid": "17f41b91-dcb0-4a6b-aae1-6f12c4364bc6", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=784", "title": "more on OO rigging and animator tools", "datetime": "2011-07-21T22:47:08", "html": "<p>Following on from the <a href=\"http://www.macaronikazoo.com/?p=752\" title=\"object oriented rigging in Skeleton Builder\">previous post</a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.</p>\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.</p>\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \u00a0The next step is to create an <a href=\"http://www.macaronikazoo.com/?p=726\" title=\"A more thorough Interface class\">interface class</a> which defines two methods &#8211; switchToFk and switchToIk. \u00a0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \u00a0Our code ends up looking something like this:</p>\n<pre class=\"brush:py\">import typeFactories\nimport baseRigPrimitive\nclass IkFkSwitchable(object):\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\n  def switchToFk( self ):\n    '''this method should implement the logic to switch to FK mode'''\n    pass\n  def switchToIk( self ):\n    '''this method should implement the logic to switch to IK mode'''\n    pass\n\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\n  #the code to implement this rig part goes here\n  ...\n  def switchToFk( self ):\n    #implementation of this method goes below...\n    ...\n  def switchToIk( self ):\n    #implementation of this method goes below...\n    ...</pre>\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:</p>\n<pre class=\"brush:py\">import rigPrimitives\nimport maya.cmds as cmd\nfrom baseMelUI import *\n\ndef getSelectedSwitchableParts():\n  '''\n  returns a list of all RigPart instances that have at least one of their members\n  selected\n  '''\n  selectedSwitchableParts = []\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\n  for rigPart in selectedRigParts:\n    if isinstance( rigPart, IkFkSwitchable ):\n      selectedSwitchableParts.append( rigPart )\n\n  return selectedSwitchableParts\n\nclass UserToolLayout(MelHLayout):\n  def __init__( self, parent ):\n    MelHLayout.__init__( self, parent )\n    self.UI_fkButton = MelButton( self, l=\"switch to FK\", c=self.on_pressFk )\n    self.UI_ikButton = MelButton( self, l=\"switch to IK\", c=self.on_pressIk )\n\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\n    #method when the scene selection changes.  So this will update the UI when the user\n    #changes the selection\n    self.setSelectionChangeCB( self.on_selectionChange )\n    self.on_selectionChange()  #call this to init the UI\n\n    #make sure to call this so the form layout gets setup properly\n    self.layout()\n\n  ### EVENT HANDLERS ###\n  def on_selectionChange( self, *a ):\n    #need to explicitly cast here because of a bug in setEnabled\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\n  def on_pressFk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToFk()\n  def on_pressIk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToIk()\n\nclass UserToolWindow(BaseMelWindow):\n  WINDOW_NAME = \"ikFkSwitcherTool\"\n  WINDOW_TITLE = \"Ik Fk switcher tool\"\n  DEFAULT_SIZE = 300, 45\n  DEFAULT_MENU = None\n\n  def __init__( self ):\n    UserToolLayout( self )\n    self.show()\n\nUserToolWindow()</pre>\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.</p>\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.</p>\n<p>Anyway hopefully you get the idea.</p>", "summary": "Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.", "id": "http://www.macaronikazoo.com/?p=784", "categories": [], "metadata": {"guid": "78b71ec9-df92-4860-b8df-1eb4fc668c04", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/20/toward-a-quasi-time-independant-twist-node/", "title": "Toward a quasi time independant  twist node", "datetime": "2011-07-20T08:32:05", "html": "<p>This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.</p>\n<p><img alt=\"\" height=\"483\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/orient_constraint_torsion1.gif?w=408&#038;h=483\" title=\"orient_constraint_torsion\" width=\"408\" /></p>\n<p><em>(Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 )</em></p>\n<p>After writing a <em><span style=\"color: #ff6600;\"><a href=\"http://circecharacterworks.wordpress.com/2011/07/06/a-journey-in-the-realm-of-corrective-shapes-ii/\">quaternion based aim constraint</a>\u00a0</span></em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.</p>\n<p></p>\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.</p>\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.</p>\n<p>1)<em> From <span style=\"color: #ff6600;\">pi</span>e to <span style=\"color: #ff6600;\">pi</span>e ( with a thick French accent )</em> :</p>\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.</p>\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.</p>\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):</p>\n<pre class=\"brush: python; wrap-lines: false;\">\nimport maya.cmds as cmds\n\nrefLoc = cmds.spaceLocator( n='referenceLoc1')[0]\nstartLoc = cmds.spaceLocator( n='StartLoc1')[0]\nEndLoc = cmds.spaceLocator( n='EndLoc1')[0]\n\ncmds.parent( [startLoc ,EndLoc] , refLoc )\ncmds.setAttr( startLoc + '.t', 10.0, 0, 0, type='double3' )\ncmds.setAttr( EndLoc + '.t', 10.0, 2.0, 0, type='double3' )\n\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( refLoc + '.angle',e=True,keyable=True  )\n\n#Use locator position  as vector\nangleReader = cmds.createNode( 'angleBetween' )\ncmds.connectAttr( startLoc + '.translate', angleReader + '.vector1' )\ncmds.connectAttr( EndLoc + '.translate', angleReader + '.vector2' )\n\nnullPos = [(0,0,0),(0,0,0)]\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='starCurve1')\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), 'starCurveShape1' )\n\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='endCurve1')\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), 'endCurveShape1' )\n\ncmds.parent( [startCurve ,endCurve] , refLoc )\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\ncmds.setAttr( cvShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( startLoc + '.translate' , cvShape1 + '.controlPoints[1]', f=True )\ncmds.setAttr(  endShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( EndLoc + '.translate' , endShape1 + '.controlPoints[0]', f=True )\n\ncmds.connectAttr( angleReader + '.angle',  refLoc + '.angle', f=True  )\n\n#Don't let depency node lives in the wild polluting the outliner: group them in container\nasset = cmds.container( type='dagContainer',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\n\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( asset + '.angle',e=True,keyable=True  )\n\ncmds.connectAttr(  refLoc + '.angle',  asset + '.angle' , f=True  )\n#dont forget to rename The hyperLayout node associate with this container\nlayout = cmds.listConnections(  asset , t='hyperLayout' )[0]\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\n\n#kindly prefix the element in the container\nNodeList =  cmds.container(asset, q=True, nl=True)\nfor node in NodeList :\n    cmds.rename( node,asset + '_' + node, ignoreShape=True)\n</pre>\n<p><img alt=\"\" class=\"aligncenter\" height=\"451\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/vector_angle.gif?w=393&#038;h=451\" title=\"angle range beetween 2 vectors\" width=\"393\" /></p>\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.</p>\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )</em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\u00a0 in a clock wise manner.</p>\n<p>2) History and time as a 4th dimension:</p>\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\u00a0 host a wealth of research papers:</p>\n<ul>\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href=\"http://www.chrisevans3d.com/reference.htm\"><span style=\"color: #ff6600;\"><em>http://www.chrisevans3d.com/reference.htm</em></span></a></li>\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href=\"http://kesen.realtimerendering.com/\"><span style=\"color: #ff6600;\"><em>http://kesen.realtimerendering.com/</em></span></a></li>\n</ul>\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.</p>\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.</p>\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .</p>\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),</em> and not interactive.</p>\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href=\"http://www.strarup.net/maya/plugins/lagNode/\"><span style=\"color: #ff6600;\"><em>Alex V. U. Strarup</em></span></a> was talking about a lag node inspired by maya framecache node.</p>\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).</p>\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\u00a0 an MPlug and MDGContext.</p>\n<p>This is what make it possible to <span style=\"color: #ff6600;\"><em>&#8216;ghost&#8217;</em></span> an animated object in maya among many other things.</p>\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br />\n<em>(a little excerpt from Antitrust movie )</em></p>\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style=\"color: #ff6600;\">setDependentsDirty</span>()\u00a0 method\u00a0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):</em></p>\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.</p>\n<p>I took advantage of this property to determine a twist direction:</p>\n<ul>\n<li>Inside a compute method ,the value of separate output buffer is first readen</li>\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.</li>\n<li>Finally\u00a0 if the input and buffer values are not identical we store the twist input value into the output attribute.</li>\n</ul>\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.</p>\n<p><img alt=\"\" height=\"471\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/vector_direction.gif?w=435&#038;h=471\" title=\"\" width=\"435\" /></p>\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) </em>we can use their\u00a0 cross product to create a perpendicular vector that will act as a twist axis.</p>\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\u00a0 the reference vector <em>about</em> the twist axis <em>by</em> 90.0 degrees.</p>\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.</p>\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .</p>\n<p>In his article <span style=\"color: #ff6600;\"><em>(<a href=\"http://www.3dfiggins.com/writeups/forearmTwist/\">\u00a0http://www.3dfiggins.com/writeups/forearmTwist/</a> )</em></span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:</p>\n<ul>\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.</li>\n<li>As a manual process, the result can be less accurate or lacks consistency.</li>\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.</li>\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.</li>\n</ul>\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.</p>\n<p>Part of the remaining works was\u00a0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.</p>\n<p>3)<em> Angle <span style=\"color: #ff6600;\">accumulation</span> versus number of <span style=\"color: #ff6600;\">revolution</span>:</em></p>\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\u00a0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.</p>\n<p><img alt=\"\" height=\"395\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/clock_circle.gif?w=395&#038;h=395\" title=\"\" width=\"395\" /></p>\n<p>First it was important to translate the past and current rotation vector into a more consistent\u00a0 value : a normalized value <em>U</em> that represent a percentage of a circle perimeter.</p>\n<p>One way to figure this circle purpose is to think of it\u00a0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.</p>\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\u00a0the separation line increases and its band can start to turn and wrap\u00a0 several times around this cylinder.</p>\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution</em> and a parametric value U.</p>\n<pre class=\"brush: python; wrap-lines: false;\">\n# Procedure to compute the number of revolution along on unit circle\n\n#Case A: positive rotation direction:\n### current rotation is in most case greater than past rotation\n### when this is false we can increment the number of revolution\n\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\nif past_rotation &gt; current_rotation :\n   currentRevolution += 1.0\n\n#Case B: negative rotation direction:\n### current rotation is in most case lower than past rotation\n### when this is false we can decrement the number of revolution\n\nif past_rotation &lt; current_rotation :\n   currentRevolution -= 1.0\n\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\ncurrentRevolution_outputHandle.setClean()\n</pre>\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\u00a0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].</p>\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .</p>\n<p>4)<em> Counter measure for a <span style=\"color: #ff6600;\">previous value dependent</span> node</em>:</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/575/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\u00a0 I was often confronted with twist popping out of control w", "id": "http://circecharacterworks.wordpress.com/?p=575", "categories": [], "metadata": {"guid": "6cc70911-ba01-4409-b2bb-128dee5d7817", "likes": 0, "is_published": false}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=81", "title": "instantiate an asset by name", "datetime": "2011-07-20T01:17:18", "html": "<p>More Unity learning&#8230;</p>\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):</p>\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.</p>\n<p>Then use the following code (Boo):</p>\n<pre class=\"brush:py\">obj as GameObject\nins as GameObject\n\n# let's grab the asset\nobj=Resources.Load(\"tile_flat01\", GameObject)\n# add a texture to the asset\nobj.renderer.material.mainTexture=Resources.Load(\"cobbleTex\", Texture2D)\n# instantiate it\nins=Instantiate(obj)</pre>\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.</p>\n<p>edit: seems I have to find a Unity icon for my blog</p>", "summary": "More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82", "id": "http://blarg.robertkist.com/?p=81", "categories": [], "metadata": {"guid": "3ed9e97a-8998-4ff4-80dd-57108af42b7d", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=701", "title": "Compliments to the chef!", "datetime": "2011-07-20T00:44:10", "html": "<p>My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \u00a0One time, a food critic dined there, and enjoyed his <em>paella</em>\u00a0so much that he went into the back to compliment the chef. \u00a0He saw the two and congratulated the dishwasher-who didn&#8217;t speak a lick of English- on a dish well made.</p>", "summary": "My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \u00a0One time, a food critic dined there, and enjoyed his paella\u00a0so much that he went into the back to compliment the chef. \u00a0He saw", "id": "http://www.robg3d.com/?p=701", "categories": [], "metadata": {"guid": "5e9b13e5-d329-4e9f-a441-c7a19ee854fd", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=350", "title": "Rigging for the masses!", "datetime": "2011-07-19T22:14:43", "html": "<p>Last weekend I&#8217;ve been giving a conference about rigging in <a href=\"http://www.campus-party.es/2011/index.html\" target=\"_blank\" title=\"Campus Party\">Campus Party</a>. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In spanish.<br />\n<em><br />\nEl pasado fin de semana estuve en <a href=\"http://www.campus-party.es/2011/index.html\" target=\"_blank\" title=\"Campus Party\">Campus Party</a>, en Valencia, dando una charla. Mi objetivo era hacer que la gente ajena al 3D entendiese en qu\u00e9 consiste la figura del &#8216;rigger&#8217; y c\u00f3mo se encaja dentro de una producci\u00f3n. La organizaci\u00f3n ha subido esta conferencia (as\u00ed como todas las dem\u00e1s) a Youtube, as\u00ed que se puede ver completa. En espa\u00f1ol.</em></p>\n<p></p>\n<p>&#8212;&#8212;&#8212; <strong>\u00a1AUTOBOMBO EXTRA!</strong> &#8212;&#8212;&#8212;</p>\n<p><em>Hace unos meses, Abel, del <em>podcast</em> &#8216;Houston, tenemos un programa&#8217;, me hizo una entrevista para su programa. Se puede escuchar y descargar desde <a href=\"http://www.houstontenemosunprograma.com/2011/05/setup-de-personajes-con-iker-j-de-los.html\" target=\"_blank\" title=\"aqu\u00ed\">aqu\u00ed</a>.</p>\n<p></em></p>", "summary": "Last weekend I&#8217;ve been giving a conference about rigging in Campus Party. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In span", "id": "http://somosposmodernos.com/blog/?p=350", "categories": [], "metadata": {"guid": "d2a10086-f592-4166-b969-68cc2beb0b4b", "likes": 0, "is_published": false}}]"
07-31 20:03 SocketClient INFO     Returning: [{u'title': u'Protocol to build a reusable deformation template I: model presentation', u'url': u'http://circecharacterworks.wordpress.com/2011/07/30/protocol-to-build-a-reusable-deformation-template-i-model-presentation/', u'author': u'circerigging', u'summary': u'Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin / envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts / tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f', u'html': u'<p>Character and creature rigging is a broad discipline that encompass many fields :</p>\n<ul>\n<li>Structure setup for animation .</li>\n<li>Skin / envelope configuration.</li>\n<li>Surface, hair , cloth and rigid body simulation.</li>\n<li>Scripts / tools writing.</li>\n</ul>\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.</p>\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.</p>\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\xa0 I just think that to handle creature /character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.</p>\n<p>The ability to assign an attribute\xa0per element is a powerful\xa0 concept that has yet to find a limitation,\xa0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.</p>\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.</p>\n<p><a href="http://circecharacterworks.files.wordpress.com/2011/07/packageman.png"><img alt="" height="499" src="http://circecharacterworks.files.wordpress.com/2011/07/packageman.png?w=450&#038;h=499" title="packageMan: a free animation rig by  Javier Solsona" width="450" /></a></p>\n<p>This fully rigged character can be found on <a href="http://www.rigging101.com/freestuff.htm"><em><span style="color: #ff6600;">Javier Solsona </span></em></a>&#8216;s website and was modeled\xa0by Bob White.</p>\n<p><a href="http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png"><img alt="" height="248" src="http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png?w=450&#038;h=248" title="original topology of this character " width="450" /></a></p>\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.</p>\n<p>This means:</p>\n<ul>\n<li>less computing power,</li>\n<li>less memory</li>\n<li>less functionality by default in maya</li>\n<li>non existing support program like topoGun or Zbrush .</li>\n</ul>\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\xa0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.</p>\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .</p>\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .</p>\n<p>Some triangles on the contrary are well used and help reinforce\xa0 the shape of this sculpture <em>( on the the belly and crotch for example ) .</em></p>\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.</p>\n<p><a href="http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png"><img alt="" height="574" src="http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png?w=450&#038;h=574" title="" width="450" /></a><br />\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\xa0 I will the focus on shoulder deformation.</p>\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )</em> and the socks were left unchanged.<br />\n<a href="http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png"><img alt="" height="383" src="http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png?w=450&#038;h=383" title="" width="450" /></a></p>\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br />\n<a href="http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png"><img alt="" class="alignleft size-full wp-image-713" height="545" src="http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png?w=450&#038;h=545" title="" width="450" /></a></p>\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.</p>\n<br />  <a href="http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/692/" /></a> <a href="http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/692/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/692/" /></a> <img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1" width="1" />', u'datetime': u'2011-07-30T09:41:32', u'id': u'http://circecharacterworks.wordpress.com/?p=692', u'categories': [], u'metadata': {u'guid': u'b187aab2-bf23-4bba-8cd2-36fca514ccba', u'likes': 0, u'is_published': False}}, {u'title': u'The Importance of Vision, 3 of 3', u'url': u'http://www.robg3d.com/?p=724', u'author': u'Rob Galanakis', u'summary': u'As a small break while I finish my vacation, I&#8217;m going to publish my\xa0recent post at AltDevBlogADay\xa0in three parts. \xa0View it there in its entirety. Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these', u'html': u'<p>As a small break while I finish my vacation, I&#8217;m going to publish my\xa0<a href="http://altdevblogaday.com/2011/07/28/the-importance-of-vision/">recent post at AltDevBlogADay</a>\xa0in three parts. \xa0View it there in its entirety.</p>\n<hr />\n<p>Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these problems are simply lucky. I suspect that such people are in a fragile situation, and taking away a key player or two would destroy the precarious dynamic that doesn&#8217;t birth these problems. If you are at a studio without these problems, ask yourself this: is your setup one that you can describe, export, advocate for, reproduce? How would you do it, without saying &#8220;just hire better people?&#8221; It is this &#8220;coincidence as a solution&#8221; that propogates the problems at less lucky studios.</p>\n<p>Let&#8217;s create real solutions.</p>\n<p>We need to create roles and departments that can provide studios with a cohesive tools vision. We need to fill these director-level roles with uniquely qualified individuals who are experienced in art and design, and are excellent programmers. We need to mature our views on tools as an industry, and start looking for concrete solutions for our endemic tools issues rather than relying on chance.<br />\nWe&#8217;re not going to find these people or do these things overnight. We need to, first, decide on this path as our goal. Not just you, but your studio&#8217;s management, and there&#8217;s no formula helpful formula I can give to convince them. Just nonstop advocacy, education, and reflection.</p>\n<p>Then, start discussing what the application of these ideas would mean at your studio. And who is going to fill these key roles? There are people you already have at your studio who just need a little bit of training. Put your tech artists on your programming teams for a bit, or your programmers working on game design or art. See how quickly you&#8217;ll find someone with the unique set of skills for a Tools Director position.</p>\n<p>We need people who understand how people work and content flows across a project. \xa0We need people who are able to guide its formulation/improvement/reconsideration. \xa0This is vision. \xa0And the lack of vision in tools development is a deadly disease we must remedy if we are to improve the state of our tools across the industry.</p>', u'datetime': u'2011-07-30T04:31:25', u'id': u'http://www.robg3d.com/?p=724', u'categories': [], u'metadata': {u'guid': u'e3ca9c4a-a6ad-4ade-aaaa-55c1e0d17b8f', u'likes': 0, u'is_published': False}}, {u'title': u'The Importance of Vision, 2 of 3', u'url': u'http://www.robg3d.com/?p=722', u'author': u'Rob Galanakis', u'summary': u'As a small break while I finish my vacation, I&#8217;m going to publish my\xa0recent post at AltDevBlogADay\xa0in three parts. \xa0View it there in its entirety. So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows ', u'html': u'<p>As a small break while I finish my vacation, I&#8217;m going to publish my\xa0<a href="http://altdevblogaday.com/2011/07/28/the-importance-of-vision/">recent post at AltDevBlogADay</a>\xa0in three parts. \xa0View it there in its entirety.</p>\n<hr />\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \xa0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>\n<p>No longer can this vital role be left to a hodepodge of other people. Your Art/Technical/Creative Directors, your Lead Programmers/Artists/Designers, can no longer be the people expected to provide the vision for studio&#8217;s Tools and Pipeline.</p>\n<p>The person who fills this role needs to be someone with enough experience creating art that they can embed with Artists. Someone who can program well enough to have the title of Programmer. Someone flexible enough that they can deal with the needs of Designers. Someone charismatic enough that they can fight and win the battle against the inevitable skepticism, fear, and opposition a change like this would bring.</p>\n<p>These people are few and far between, and every one of them I know is happily employed. We&#8217;re asking for a unique set of passions and skills, a set that isn&#8217;t common in the games industry especially (who gets into games to write tools?!). We need to start training our tools developers (tech artists, tools programmers) to aspire to have these passions and skills.</p>\n<p>This won&#8217;t happen magically. Unless our studios can promise that these aspirations will be fulfilled, few people will bother, and I cannot blame them. Many studios have made the commitment to having killer tools. Almost as many have failed. And almost as many as that have failed to realize lack of a cohesive vision as a primary factor.</p>\n<p>It isn&#8217;t surprising that resources get moved from tools dev, that schedules cannot be stuck to, that they cannot attract senior developers. Without a cohesive tools vision, how are resources supposed to be properly allocated? Resources become a fragile compromise between competing departments, rather than brokered by a separate party without allegiances. How is a schedule supposed to be followed, when the people doing the work are not the ones who feel the repercussions? And it is no surprise that it is difficult to attract senior talent with strong programming skills necessary to develop great tools to these positions. If there is no career path- and, let&#8217;s face it, most studios have no career path for tools developers- they&#8217;re going to go into game programming, or the general software industry (which is, for the most part, some form of tools development in a different environment).</p>', u'datetime': u'2011-07-29T04:29:13', u'id': u'http://www.robg3d.com/?p=722', u'categories': [], u'metadata': {u'guid': u'ec73746a-1101-46af-8d12-6a3c94b7f875', u'likes': 0, u'is_published': False}}, {u'title': u'The Importance of Vision, 1 of 3', u'url': u'http://www.robg3d.com/?p=720', u'author': u'Rob Galanakis', u'summary': u'As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \xa0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we', u'html': u'<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href="http://altdevblogaday.com/2011/07/28/the-importance-of-vision/">recent post at AltDevBlogADay</a> in three parts. \xa0View it there in its entirety.</p>\n<hr />\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.</p>\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.</p>\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.</p>\n<p>Where does this lack of vision come from? What can we do to resolve it?</p>\n<hr />\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.</p>\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.</p>\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?</p>\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \xa0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>', u'datetime': u'2011-07-28T04:29:04', u'id': u'http://www.robg3d.com/?p=720', u'categories': [], u'metadata': {u'guid': u'5bd65447-2fe8-44f8-a6f1-046c2b4563e0', u'likes': 0, u'is_published': False}}, {u'title': u'WTFunctional: Be Declarative', u'url': u'http://www.robg3d.com/?p=712', u'author': u'Rob Galanakis', u'summary': u'Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \xa0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ', u'html': u'<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \xa0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.</p>\n<p>First up is demonstrating that <strong>functional programming is declarative</strong>: it makes your code more expressive and optimized.</p>\n<p>Most programmers are used to seeing this:</p>\n<pre>list = []\nfor i = 0 to 10 do\n  if i % 2 == 0:\n    list.append(i)\n//list is now [0,2,4,6,8,10]</pre>\n<p>Less familiar would be:</p>\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)</pre>\n<p>The first focuses on the <em>how</em>: increment <em>i</em> from 0 to 10, and append every even item and 0 to a list. \xa0This is an <strong>imperative style</strong>. \xa0The second focuses on the <em>what</em>: \xa0for each item from 0 to 10, select all even items. \xa0This is a <strong>declarative style</strong>, which is an aspect of functional programming. \xa0In this trivial case, the difference is, well, trivial. \xa0But the key differences are:</p>\n<ol>\n<li>\xa0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).</li>\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.</li>\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated/iterated over, not a concrete type like a list/array/etc.</li>\n</ol>\n<p>These differences create three key benefits:</p>\n<ol>\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.</li>\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative</em>\xa0part of it. \xa0We&#8217;ll see how to read a more complex statement next.</li>\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators</em>- it really depends on what is expedient for the statement.</li>\n</ol>\n<p>Let&#8217;s try out a more concrete example. \xa0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \xa0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.</p>\n<pre>dateAndItemsMap = dict()\nfor row in myTable.rows:\n\xa0 \xa0 if row.isActive:\n\xa0 \xa0 \xa0 \xa0 if row.date not in dateAndItemsMap:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 dateAndItemsMap[row.date] = list()\n\xa0 \xa0 \xa0 \xa0 dateAndItemsMap[row.date].append(new MyObject(row))\nsortedDates = dateAndItemsMap.values()\nsortedDates.sort()\nitemsSortedByDateThenId = list()\nfor date in sortedDates:\n\xa0 \xa0 items = dateAndItemsMap[date]\n\xa0 \xa0 items.sort(lamba obj: obj.id)\n\xa0 \xa0 itemsSortedByDateThenId.extend(items)</pre>\n<p>Wow, that&#8217;s a lot of code! \xa0And not at all clear when reading it. \xa0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \xa0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.</em>\xa0 That&#8217;s a mouthful, and I think that was pretty brief.</p>\n<p>Let&#8217;s compare this to the declarative style:</p>\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)</pre>\n<p>One line? \xa0One stinking line? \xa0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.</em>\xa0 Notice a) how the explanation expresses <em>what you want</em>, <strong>not</strong>\xa0how you want to get it, and b) the explanation reads very similar to the code.</p>\n<p>This is why declarative programming rocks, <strong>right now.</strong>\xa0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \xa0Your code will become infinitely clearer.</p>\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure</strong>), and the compiler or runtime can automatically parallelize it and optimize it. \xa0This is one reason languages like SQL have been so effective- the software/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.</p>\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \xa0Next up will probably be closures.</p>', u'datetime': u'2011-07-25T14:29:27', u'id': u'http://www.robg3d.com/?p=712', u'categories': [], u'metadata': {u'guid': u'7cf25c60-08d2-4be6-8544-0869547c3245', u'likes': 0, u'is_published': False}}, {u'title': u'ExportLayer v1.3 for modo 501', u'url': u'http://www.zspline.net/blog/2011/07/25/exportlayer-v1-3-for-modo-501/', u'author': u'Zoltan', u'summary': u'It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light. Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;UCX_$ParentMeshName&#8221; style nam', u'html': u'<p>It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light.</p>\n<p>Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;<em>UCX_$ParentMeshName</em>&#8221; style names it&#8217;s enough to just name the collision hulls as &#8220;<em>UCX</em>&#8220;, the script will fix it during export. Just make sure that the collisions are children of the main mesh.</p>\n<p>FBX files can be saved with fake Revit signature which makes it possible to link the produced FBX file in 3ds Max 2011 (File Link Manager).</p>\n<p><strong>IMPORTANT</strong>: Modo 501 SP3 (and possibly earlier 501 versions) have a nasty bug where displaced SDS geometry is frozen without any deformations. The workaround is similarly ugly: I initiate an incorrect file save which makes an error window pop up which forces some kind of an internal update after which the freeze command works properly. So when you see an error popup saying</p>\n<blockquote><p>Scene save was unsuccessful &#8212; Not Found File &#8220;C:&#8221; not written.</p></blockquote>\n<p>well, it&#8217;s &#8220;normal&#8221;&#8230; just click OK and wait for the script to finish.<br />\nAlso, freezing a PSDS surface messes up morphmaps. The workaround for that slows down the export process considerably.<br />\nTo avoid freezing altogether use the <em>NOFREEZE</em> parameter.</p>\n<p><strong>Arguments:</strong><br />\n<em>FBX; LWO; OBJ; COLLADA</em>: They define the output format. Default is FBX.<br />\n<em>SILENTSAVE</em>: The file will be saved next to the original file. No dialog will be displayed.<br />\n<em>NOQUADS</em>: Triangulates the object the exported object.</p>\n<p><em>FBXREVIT</em>: Saves an FBX file and makes it look like it came from Autodesk Revit.<br />\n- In this mode NOQUADS and SILENTSAVE are automatically enabled.<br />\n- 3ds Max will only recognize an UV if it&#8217;s used by at least one image in the shader tree.</p>\n<p>NOFREEZE: The geometry will not be frozen.<!-- PHP 5.x --></p>', u'datetime': u'2011-07-25T09:29:54', u'id': u'http://www.zspline.net/blog/?p=1340', u'categories': [], u'metadata': {u'guid': u'9ae35466-c6cf-4cb8-a070-c147ede632af', u'likes': 0, u'is_published': False}}, {u'title': u'Toggle debug print in Maxscript', u'url': u'http://www.rsart.co.uk/2011/07/23/toggle-debug-print-in-maxscript/', u'author': u'Rick', u'summary': u'Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O', u'html': u'<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.</p>\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:</p>\n<p><code>if debugprint == true then print "My debug stuff"</code></p>\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:</p>\n<p><code>fn debugPrint printStr =<br />\n(<br />\n    if debugPrintVal == true do<br />\n        (<br />\n            Print printStr<br />\n        )<br />\n)<br />\n</code></p>\n<p>So, instead of using  :</p>\n<p><code>if debugprint == true then print "My debug stuff"</code></p>\n<p>We can now used the much cleaner version:</p>\n<p><code>debugprint "My debug stuff"</code></p>', u'datetime': u'2011-07-23T23:44:45', u'id': u'http://www.rsart.co.uk/?p=407', u'categories': [], u'metadata': {u'guid': u'eae874f4-a637-4d6e-bd62-c057f2045c60', u'likes': 0, u'is_published': False}}, {u'title': u'Learning a programming language by reading a manual is like learning a language by reading a dictionary', u'url': u'http://www.robg3d.com/?p=708', u'author': u'Rob Galanakis', u'summary': u'A verbal language is more than its grammar and vocabulary. \xa0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \xa0You cannot learn this through words, you learn this through interacting with', u'html': u'<p>A verbal language is more than its grammar and vocabulary. \xa0A programming language is much more than its syntax and keywords.</p>\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \xa0You cannot learn this through words, you learn this through interacting with people, or libraries.</p>\n<p>Be wary of anyone who says they know more than a dozen languages. \xa0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.</p>\n<p>You can learn to speak a language without learning how to communicate in that language. \xa0In the same way, you can create a program in a language without communicating effectively.</p>\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \xa0Sophisticated use of a programming language allows and requires the same. \xa0We should understand when to be sophisticated and when to be crude, and always seek to educate.</p>\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \xa0Consider what Ebonix is to English, or a scripting language is to C++. \xa0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.</p>\n<p>You cannot learn how to speak a language by reading a dictionary. \xa0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \xa0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.</p>\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.</p>', u'datetime': u'2011-07-23T03:58:13', u'id': u'http://www.robg3d.com/?p=708', u'categories': [], u'metadata': {u'guid': u'8663e9bd-e78d-4c2d-816e-4f33d05827a9', u'likes': 0, u'is_published': False}}, {u'title': u'Highlight an Excel Cell Using Python', u'url': u'http://shawnkirsch.tumblr.com/post/7930189393', u'author': u'Unknown Author', u'summary': u'<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style ', u'html': u'<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style = xlwt.easyxf(\u2018pattern: pattern solid, fore-colour red\u2019)</li>\n<li>\n</li><li>for x in range(inputSheet.nrows):</li>\n<li>\xa0 \xa0 for y in range(inputSheet.ncols):</li>\n<li>\xa0 \xa0 \xa0 \xa0 if(inputSheet.cell(x,y).value):</li>\n<li>\xa0 \xa0 \xa0 \xa0 \xa0 \xa0cellValue = inputSheet.cell(x,y).value</li>\n<li>\xa0 \xa0 \xa0 \xa0 \xa0 \xa0outputSheet.write(x,y, cellValue)</li>\n<li>\n</li><li>outputSheet.write(5,5, \u201crewritten cell\u201d, style)</li>\n<li>\n</li><li>\n</li><li>outputBook.save(\u201ctest.xls\u201d)</li>\n\n</ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \xa0Good for validation purposes.</p>\n<ol></ol>', u'datetime': u'2011-07-22T11:55:00', u'id': u'http://shawnkirsch.tumblr.com/post/7930189393', u'categories': [], u'metadata': {u'guid': u'9a86dd70-2b83-49dc-a151-fac566245d11', u'likes': 0, u'is_published': False}}, {u'title': u'Power Animator', u'url': u'http://strongmanimator.blogspot.com/2011/07/power-animator.html', u'author': u'anim8d (noreply@blogger.com)', u'summary': u'<div class="MsoNormal"><i>(ed. note: If you\u2019ve made your way here from <a href="http://altdevblogaday.com/">http://altdevblogaday.com</a>, welcome!)</i></div><div class="MsoNormal"><br /></div><div class="MsoNormal"><span class="Apple-style-span" style="font-size: large;">\u201cThere are two ways of exer', u'html': u'<div class="MsoNormal"><i>(ed. note: If you\u2019ve made your way here from <a href="http://altdevblogaday.com/">http://altdevblogaday.com</a>, welcome!)</i></div><div class="MsoNormal"><br /></div><div class="MsoNormal"><span class="Apple-style-span" style="font-size: large;">\u201cThere are two ways of exerting one\'s strength: one is pushing down, the other is pulling up.\u201d</span> \u2013 Booker T. Washington</div><div class="MsoNormal"><br /></div><div class="MsoNormal">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">For today\u2019s post, I\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. </div><div class="MsoNormal"><br /></div><div class="MsoNormal">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold\'s Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.</div><div class="MsoNormal"><br /></div><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s1600/csi.png" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="640" src="http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s640/csi.png" width="233" /></a></div><div class="MsoNormal">On that day at Gold\'s Gym, I was benching and curling, because THAT\'S WHAT MEN DO (that\'s how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">She continued on with her squats while I performed my "superior" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since "clearly squats are supposed to be bad for your knees!" I reply "I\u2019m gonna do some curls!" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">She ignored me. She was deadlifting, and that was serious business for her.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">Later on that night Jessica turned to me and asked "So, what are your fitness goals?" I replied "To get bigger and stronger, of course." She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">Then she said it:</div><div class="MsoNormal"><br /></div><div class="MsoNormal"><br /></div><table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"><tbody><tr><td style="text-align: center;"><a href="http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s1600/LooneyTunes_Gossamer_Model_Sheet.jpg" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"><img border="0" height="256" src="http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s320/LooneyTunes_Gossamer_Model_Sheet.jpg" width="320" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">This is apparently what I looked like, hair and all.</td></tr></tbody></table><div class="MsoNormal">"You know you have chicken legs, right? You\'re shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that."</div><div class="MsoNormal"><br /></div><div class="MsoNormal">I was disheartened, totally bummed out, but more importantly, I was <i>confused</i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men\'s Health! They HAD to be right!<br /><br />More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!</i></div><div class="MsoNormal"><br /></div><div class="MsoNormal">Jessica and I didn\'t go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That\'s when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">Training in a vacuum that way had stunted my growth in a literal sense- I wasn\'t getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.</div><div class="MsoNormal"><br /></div><div class="MsoNormal">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I\'ve gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. </div><div class="MsoNormal"><br /></div><div class="MsoNormal">So I guess getting strength training advice from a girl isn\u2019t so bad after all. <span style="font-family: Wingdings;">J</span></div><div class="MsoNormal"><br />I invite you to read my parallel story about animation on AltDevBlogADay (<a href="http://altdevblogaday.com/2011/07/22/power-animator/">http://altdevblogaday.com/2011/07/22/power-animator/</a>)</div><div style="line-height: 14.25pt;"><br /></div><div class="MsoNormal"><br /></div><div class="blogger-post-footer"><img alt="" height="1" src="https://blogger.googleusercontent.com/tracker/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com" width="1" /></div>', u'datetime': u'2011-07-22T10:34:31.240000', u'id': u'tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526', u'categories': [], u'metadata': {u'guid': u'17f41b91-dcb0-4a6b-aae1-6f12c4364bc6', u'likes': 0, u'is_published': False}}, {u'title': u'more on OO rigging and animator tools', u'url': u'http://www.macaronikazoo.com/?p=784', u'author': u'hamish', u'summary': u'Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.', u'html': u'<p>Following on from the <a href="http://www.macaronikazoo.com/?p=752" title="object oriented rigging in Skeleton Builder">previous post</a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.</p>\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.</p>\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \xa0The next step is to create an <a href="http://www.macaronikazoo.com/?p=726" title="A more thorough Interface class">interface class</a> which defines two methods &#8211; switchToFk and switchToIk. \xa0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \xa0Our code ends up looking something like this:</p>\n<pre class="brush:py">import typeFactories\nimport baseRigPrimitive\nclass IkFkSwitchable(object):\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\n  def switchToFk( self ):\n    \'\'\'this method should implement the logic to switch to FK mode\'\'\'\n    pass\n  def switchToIk( self ):\n    \'\'\'this method should implement the logic to switch to IK mode\'\'\'\n    pass\n\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\n  #the code to implement this rig part goes here\n  ...\n  def switchToFk( self ):\n    #implementation of this method goes below...\n    ...\n  def switchToIk( self ):\n    #implementation of this method goes below...\n    ...</pre>\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:</p>\n<pre class="brush:py">import rigPrimitives\nimport maya.cmds as cmd\nfrom baseMelUI import *\n\ndef getSelectedSwitchableParts():\n  \'\'\'\n  returns a list of all RigPart instances that have at least one of their members\n  selected\n  \'\'\'\n  selectedSwitchableParts = []\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\n  for rigPart in selectedRigParts:\n    if isinstance( rigPart, IkFkSwitchable ):\n      selectedSwitchableParts.append( rigPart )\n\n  return selectedSwitchableParts\n\nclass UserToolLayout(MelHLayout):\n  def __init__( self, parent ):\n    MelHLayout.__init__( self, parent )\n    self.UI_fkButton = MelButton( self, l="switch to FK", c=self.on_pressFk )\n    self.UI_ikButton = MelButton( self, l="switch to IK", c=self.on_pressIk )\n\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\n    #method when the scene selection changes.  So this will update the UI when the user\n    #changes the selection\n    self.setSelectionChangeCB( self.on_selectionChange )\n    self.on_selectionChange()  #call this to init the UI\n\n    #make sure to call this so the form layout gets setup properly\n    self.layout()\n\n  ### EVENT HANDLERS ###\n  def on_selectionChange( self, *a ):\n    #need to explicitly cast here because of a bug in setEnabled\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\n  def on_pressFk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToFk()\n  def on_pressIk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToIk()\n\nclass UserToolWindow(BaseMelWindow):\n  WINDOW_NAME = "ikFkSwitcherTool"\n  WINDOW_TITLE = "Ik Fk switcher tool"\n  DEFAULT_SIZE = 300, 45\n  DEFAULT_MENU = None\n\n  def __init__( self ):\n    UserToolLayout( self )\n    self.show()\n\nUserToolWindow()</pre>\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.</p>\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.</p>\n<p>Anyway hopefully you get the idea.</p>', u'datetime': u'2011-07-21T22:47:08', u'id': u'http://www.macaronikazoo.com/?p=784', u'categories': [], u'metadata': {u'guid': u'78b71ec9-df92-4860-b8df-1eb4fc668c04', u'likes': 0, u'is_published': False}}, {u'title': u'Toward a quasi time independant  twist node', u'url': u'http://circecharacterworks.wordpress.com/2011/07/20/toward-a-quasi-time-independant-twist-node/', u'author': u'circerigging', u'summary': u'This post is about\xa0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\xa0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\xa0 I was often confronted with twist popping out of control w', u'html': u'<p>This post is about\xa0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.</p>\n<p><img alt="" height="483" src="http://circecharacterworks.files.wordpress.com/2011/07/orient_constraint_torsion1.gif?w=408&#038;h=483" title="orient_constraint_torsion" width="408" /></p>\n<p><em>(Above: notice the\xa0 flipping glitch when the torsion goes above 180.0 )</em></p>\n<p>After writing a <em><span style="color: #ff6600;"><a href="http://circecharacterworks.wordpress.com/2011/07/06/a-journey-in-the-realm-of-corrective-shapes-ii/">quaternion based aim constraint</a>\xa0</span></em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.</p>\n<p></p>\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.</p>\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.</p>\n<p>1)<em> From <span style="color: #ff6600;">pi</span>e to <span style="color: #ff6600;">pi</span>e ( with a thick French accent )</em> :</p>\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.</p>\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.</p>\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):</p>\n<pre class="brush: python; wrap-lines: false;">\nimport maya.cmds as cmds\n\nrefLoc = cmds.spaceLocator( n=\'referenceLoc1\')[0]\nstartLoc = cmds.spaceLocator( n=\'StartLoc1\')[0]\nEndLoc = cmds.spaceLocator( n=\'EndLoc1\')[0]\n\ncmds.parent( [startLoc ,EndLoc] , refLoc )\ncmds.setAttr( startLoc + \'.t\', 10.0, 0, 0, type=\'double3\' )\ncmds.setAttr( EndLoc + \'.t\', 10.0, 2.0, 0, type=\'double3\' )\n\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( refLoc + \'.angle\',e=True,keyable=True  )\n\n#Use locator position  as vector\nangleReader = cmds.createNode( \'angleBetween\' )\ncmds.connectAttr( startLoc + \'.translate\', angleReader + \'.vector1\' )\ncmds.connectAttr( EndLoc + \'.translate\', angleReader + \'.vector2\' )\n\nnullPos = [(0,0,0),(0,0,0)]\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n=\'starCurve1\')\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), \'starCurveShape1\' )\n\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n=\'endCurve1\')\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), \'endCurveShape1\' )\n\ncmds.parent( [startCurve ,endCurve] , refLoc )\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\ncmds.setAttr( cvShape1 + \'.controlPoints[0]\', 0,0,0,type=\'double3\' )\ncmds.connectAttr( startLoc + \'.translate\' , cvShape1 + \'.controlPoints[1]\', f=True )\ncmds.setAttr(  endShape1 + \'.controlPoints[0]\', 0,0,0,type=\'double3\' )\ncmds.connectAttr( EndLoc + \'.translate\' , endShape1 + \'.controlPoints[0]\', f=True )\n\ncmds.connectAttr( angleReader + \'.angle\',  refLoc + \'.angle\', f=True  )\n\n#Don\'t let depency node lives in the wild polluting the outliner: group them in container\nasset = cmds.container( type=\'dagContainer\',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\n\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( asset + \'.angle\',e=True,keyable=True  )\n\ncmds.connectAttr(  refLoc + \'.angle\',  asset + \'.angle\' , f=True  )\n#dont forget to rename The hyperLayout node associate with this container\nlayout = cmds.listConnections(  asset , t=\'hyperLayout\' )[0]\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\n\n#kindly prefix the element in the container\nNodeList =  cmds.container(asset, q=True, nl=True)\nfor node in NodeList :\n    cmds.rename( node,asset + \'_\' + node, ignoreShape=True)\n</pre>\n<p><img alt="" class="aligncenter" height="451" src="http://circecharacterworks.files.wordpress.com/2011/07/vector_angle.gif?w=393&#038;h=451" title="angle range beetween 2 vectors" width="393" /></p>\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.</p>\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )</em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\xa0 in a clock wise manner.</p>\n<p>2) History and time as a 4th dimension:</p>\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\xa0 host a wealth of research papers:</p>\n<ul>\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href="http://www.chrisevans3d.com/reference.htm"><span style="color: #ff6600;"><em>http://www.chrisevans3d.com/reference.htm</em></span></a></li>\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href="http://kesen.realtimerendering.com/"><span style="color: #ff6600;"><em>http://kesen.realtimerendering.com/</em></span></a></li>\n</ul>\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.</p>\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.</p>\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .</p>\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),</em> and not interactive.</p>\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href="http://www.strarup.net/maya/plugins/lagNode/"><span style="color: #ff6600;"><em>Alex V. U. Strarup</em></span></a> was talking about a lag node inspired by maya framecache node.</p>\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).</p>\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\xa0 an MPlug and MDGContext.</p>\n<p>This is what make it possible to <span style="color: #ff6600;"><em>&#8216;ghost&#8217;</em></span> an animated object in maya among many other things.</p>\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br />\n<em>(a little excerpt from Antitrust movie )</em></p>\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style="color: #ff6600;">setDependentsDirty</span>()\xa0 method\xa0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):</em></p>\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.</p>\n<p>I took advantage of this property to determine a twist direction:</p>\n<ul>\n<li>Inside a compute method ,the value of separate output buffer is first readen</li>\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.</li>\n<li>Finally\xa0 if the input and buffer values are not identical we store the twist input value into the output attribute.</li>\n</ul>\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.</p>\n<p><img alt="" height="471" src="http://circecharacterworks.files.wordpress.com/2011/07/vector_direction.gif?w=435&#038;h=471" title="" width="435" /></p>\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) </em>we can use their\xa0 cross product to create a perpendicular vector that will act as a twist axis.</p>\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\xa0 the reference vector <em>about</em> the twist axis <em>by</em> 90.0 degrees.</p>\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.</p>\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .</p>\n<p>In his article <span style="color: #ff6600;"><em>(<a href="http://www.3dfiggins.com/writeups/forearmTwist/">\xa0http://www.3dfiggins.com/writeups/forearmTwist/</a> )</em></span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:</p>\n<ul>\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.</li>\n<li>As a manual process, the result can be less accurate or lacks consistency.</li>\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.</li>\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.</li>\n</ul>\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.</p>\n<p>Part of the remaining works was\xa0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.</p>\n<p>3)<em> Angle <span style="color: #ff6600;">accumulation</span> versus number of <span style="color: #ff6600;">revolution</span>:</em></p>\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\xa0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.</p>\n<p><img alt="" height="395" src="http://circecharacterworks.files.wordpress.com/2011/07/clock_circle.gif?w=395&#038;h=395" title="" width="395" /></p>\n<p>First it was important to translate the past and current rotation vector into a more consistent\xa0 value : a normalized value <em>U</em> that represent a percentage of a circle perimeter.</p>\n<p>One way to figure this circle purpose is to think of it\xa0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.</p>\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\xa0the separation line increases and its band can start to turn and wrap\xa0 several times around this cylinder.</p>\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution</em> and a parametric value U.</p>\n<pre class="brush: python; wrap-lines: false;">\n# Procedure to compute the number of revolution along on unit circle\n\n#Case A: positive rotation direction:\n### current rotation is in most case greater than past rotation\n### when this is false we can increment the number of revolution\n\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\nif past_rotation &gt; current_rotation :\n   currentRevolution += 1.0\n\n#Case B: negative rotation direction:\n### current rotation is in most case lower than past rotation\n### when this is false we can decrement the number of revolution\n\nif past_rotation &lt; current_rotation :\n   currentRevolution -= 1.0\n\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\ncurrentRevolution_outputHandle.setClean()\n</pre>\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\xa0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].</p>\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .</p>\n<p>4)<em> Counter measure for a <span style="color: #ff6600;">previous value dependent</span> node</em>:</p>\n<br />  <a href="http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/575/" /></a> <a href="http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/575/" rel="nofollow"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/575/" /></a> <img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1" width="1" />', u'datetime': u'2011-07-20T08:32:05', u'id': u'http://circecharacterworks.wordpress.com/?p=575', u'categories': [], u'metadata': {u'guid': u'6cc70911-ba01-4409-b2bb-128dee5d7817', u'likes': 0, u'is_published': False}}, {u'title': u'instantiate an asset by name', u'url': u'http://blarg.robertkist.com/?p=81', u'author': u'Robert', u'summary': u'More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82', u'html': u'<p>More Unity learning&#8230;</p>\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):</p>\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.</p>\n<p>Then use the following code (Boo):</p>\n<pre class="brush:py">obj as GameObject\nins as GameObject\n\n# let\'s grab the asset\nobj=Resources.Load("tile_flat01", GameObject)\n# add a texture to the asset\nobj.renderer.material.mainTexture=Resources.Load("cobbleTex", Texture2D)\n# instantiate it\nins=Instantiate(obj)</pre>\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.</p>\n<p>edit: seems I have to find a Unity icon for my blog</p>', u'datetime': u'2011-07-20T01:17:18', u'id': u'http://blarg.robertkist.com/?p=81', u'categories': [], u'metadata': {u'guid': u'3ed9e97a-8998-4ff4-80dd-57108af42b7d', u'likes': 0, u'is_published': False}}, {u'title': u'Compliments to the chef!', u'url': u'http://www.robg3d.com/?p=701', u'author': u'Rob Galanakis', u'summary': u'My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \xa0One time, a food critic dined there, and enjoyed his paella\xa0so much that he went into the back to compliment the chef. \xa0He saw', u'html': u'<p>My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \xa0One time, a food critic dined there, and enjoyed his <em>paella</em>\xa0so much that he went into the back to compliment the chef. \xa0He saw the two and congratulated the dishwasher-who didn&#8217;t speak a lick of English- on a dish well made.</p>', u'datetime': u'2011-07-20T00:44:10', u'id': u'http://www.robg3d.com/?p=701', u'categories': [], u'metadata': {u'guid': u'5e9b13e5-d329-4e9f-a441-c7a19ee854fd', u'likes': 0, u'is_published': False}}, {u'title': u'Rigging for the masses!', u'url': u'http://somosposmodernos.com/blog/?p=350', u'author': u'ike', u'summary': u'Last weekend I&#8217;ve been giving a conference about rigging in Campus Party. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In span', u'html': u'<p>Last weekend I&#8217;ve been giving a conference about rigging in <a href="http://www.campus-party.es/2011/index.html" target="_blank" title="Campus Party">Campus Party</a>. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In spanish.<br />\n<em><br />\nEl pasado fin de semana estuve en <a href="http://www.campus-party.es/2011/index.html" target="_blank" title="Campus Party">Campus Party</a>, en Valencia, dando una charla. Mi objetivo era hacer que la gente ajena al 3D entendiese en qu\xe9 consiste la figura del &#8216;rigger&#8217; y c\xf3mo se encaja dentro de una producci\xf3n. La organizaci\xf3n ha subido esta conferencia (as\xed como todas las dem\xe1s) a Youtube, as\xed que se puede ver completa. En espa\xf1ol.</em></p>\n<p></p>\n<p>&#8212;&#8212;&#8212; <strong>\xa1AUTOBOMBO EXTRA!</strong> &#8212;&#8212;&#8212;</p>\n<p><em>Hace unos meses, Abel, del <em>podcast</em> &#8216;Houston, tenemos un programa&#8217;, me hizo una entrevista para su programa. Se puede escuchar y descargar desde <a href="http://www.houstontenemosunprograma.com/2011/05/setup-de-personajes-con-iker-j-de-los.html" target="_blank" title="aqu\xed">aqu\xed</a>.</p>\n<p></em></p>', u'datetime': u'2011-07-19T22:14:43', u'id': u'http://somosposmodernos.com/blog/?p=350', u'categories': [], u'metadata': {u'guid': u'd2a10086-f592-4166-b969-68cc2beb0b4b', u'likes': 0, u'is_published': False}}]
07-31 20:05 root         INFO     Handling CGI request.
07-31 20:05 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:05 SocketClient INFO     Sending to service: "["downloadedcontent_count", [], {}]"
07-31 20:05 SocketClient INFO     Received from service: "881"
07-31 20:05 SocketClient INFO     Returning(as str): '881'
07-31 20:05 root         INFO     Handling CGI request.
07-31 20:05 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:05 SocketClient INFO     Sending to service: "["request_content_slice", [0, 15], {}]"
07-31 20:05 SocketClient INFO     Received from service: "[{"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/30/protocol-to-build-a-reusable-deformation-template-i-model-presentation/", "title": "Protocol to build a reusable deformation template I: model presentation", "datetime": "2011-07-30T09:41:32", "html": "<p>Character and creature rigging is a broad discipline that encompass many fields :</p>\n<ul>\n<li>Structure setup for animation .</li>\n<li>Skin / envelope configuration.</li>\n<li>Surface, hair , cloth and rigid body simulation.</li>\n<li>Scripts / tools writing.</li>\n</ul>\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.</p>\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.</p>\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\u00a0 I just think that to handle creature /character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.</p>\n<p>The ability to assign an attribute\u00a0per element is a powerful\u00a0 concept that has yet to find a limitation,\u00a0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.</p>\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png\"><img alt=\"\" height=\"499\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png?w=450&#038;h=499\" title=\"packageMan: a free animation rig by  Javier Solsona\" width=\"450\" /></a></p>\n<p>This fully rigged character can be found on <a href=\"http://www.rigging101.com/freestuff.htm\"><em><span style=\"color: #ff6600;\">Javier Solsona </span></em></a>&#8216;s website and was modeled\u00a0by Bob White.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png\"><img alt=\"\" height=\"248\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png?w=450&#038;h=248\" title=\"original topology of this character \" width=\"450\" /></a></p>\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.</p>\n<p>This means:</p>\n<ul>\n<li>less computing power,</li>\n<li>less memory</li>\n<li>less functionality by default in maya</li>\n<li>non existing support program like topoGun or Zbrush .</li>\n</ul>\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\u00a0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.</p>\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .</p>\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .</p>\n<p>Some triangles on the contrary are well used and help reinforce\u00a0 the shape of this sculpture <em>( on the the belly and crotch for example ) .</em></p>\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png\"><img alt=\"\" height=\"574\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png?w=450&#038;h=574\" title=\"\" width=\"450\" /></a><br />\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\u00a0 I will the focus on shoulder deformation.</p>\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )</em> and the socks were left unchanged.<br />\n<a href=\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png\"><img alt=\"\" height=\"383\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png?w=450&#038;h=383\" title=\"\" width=\"450\" /></a></p>\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br />\n<a href=\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png\"><img alt=\"\" class=\"alignleft size-full wp-image-713\" height=\"545\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png?w=450&#038;h=545\" title=\"\" width=\"450\" /></a></p>\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/692/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin / envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts / tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f", "id": "http://circecharacterworks.wordpress.com/?p=692", "categories": [], "metadata": {"guid": "b187aab2-bf23-4bba-8cd2-36fca514ccba", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=724", "title": "The Importance of Vision, 3 of 3", "datetime": "2011-07-30T04:31:25", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0<a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a>\u00a0in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these problems are simply lucky. I suspect that such people are in a fragile situation, and taking away a key player or two would destroy the precarious dynamic that doesn&#8217;t birth these problems. If you are at a studio without these problems, ask yourself this: is your setup one that you can describe, export, advocate for, reproduce? How would you do it, without saying &#8220;just hire better people?&#8221; It is this &#8220;coincidence as a solution&#8221; that propogates the problems at less lucky studios.</p>\n<p>Let&#8217;s create real solutions.</p>\n<p>We need to create roles and departments that can provide studios with a cohesive tools vision. We need to fill these director-level roles with uniquely qualified individuals who are experienced in art and design, and are excellent programmers. We need to mature our views on tools as an industry, and start looking for concrete solutions for our endemic tools issues rather than relying on chance.<br />\nWe&#8217;re not going to find these people or do these things overnight. We need to, first, decide on this path as our goal. Not just you, but your studio&#8217;s management, and there&#8217;s no formula helpful formula I can give to convince them. Just nonstop advocacy, education, and reflection.</p>\n<p>Then, start discussing what the application of these ideas would mean at your studio. And who is going to fill these key roles? There are people you already have at your studio who just need a little bit of training. Put your tech artists on your programming teams for a bit, or your programmers working on game design or art. See how quickly you&#8217;ll find someone with the unique set of skills for a Tools Director position.</p>\n<p>We need people who understand how people work and content flows across a project. \u00a0We need people who are able to guide its formulation/improvement/reconsideration. \u00a0This is vision. \u00a0And the lack of vision in tools development is a deadly disease we must remedy if we are to improve the state of our tools across the industry.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0recent post at AltDevBlogADay\u00a0in three parts. \u00a0View it there in its entirety. Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these", "id": "http://www.robg3d.com/?p=724", "categories": [], "metadata": {"guid": "e3ca9c4a-a6ad-4ade-aaaa-55c1e0d17b8f", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=722", "title": "The Importance of Vision, 2 of 3", "datetime": "2011-07-29T04:29:13", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0<a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a>\u00a0in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>\n<p>No longer can this vital role be left to a hodepodge of other people. Your Art/Technical/Creative Directors, your Lead Programmers/Artists/Designers, can no longer be the people expected to provide the vision for studio&#8217;s Tools and Pipeline.</p>\n<p>The person who fills this role needs to be someone with enough experience creating art that they can embed with Artists. Someone who can program well enough to have the title of Programmer. Someone flexible enough that they can deal with the needs of Designers. Someone charismatic enough that they can fight and win the battle against the inevitable skepticism, fear, and opposition a change like this would bring.</p>\n<p>These people are few and far between, and every one of them I know is happily employed. We&#8217;re asking for a unique set of passions and skills, a set that isn&#8217;t common in the games industry especially (who gets into games to write tools?!). We need to start training our tools developers (tech artists, tools programmers) to aspire to have these passions and skills.</p>\n<p>This won&#8217;t happen magically. Unless our studios can promise that these aspirations will be fulfilled, few people will bother, and I cannot blame them. Many studios have made the commitment to having killer tools. Almost as many have failed. And almost as many as that have failed to realize lack of a cohesive vision as a primary factor.</p>\n<p>It isn&#8217;t surprising that resources get moved from tools dev, that schedules cannot be stuck to, that they cannot attract senior developers. Without a cohesive tools vision, how are resources supposed to be properly allocated? Resources become a fragile compromise between competing departments, rather than brokered by a separate party without allegiances. How is a schedule supposed to be followed, when the people doing the work are not the ones who feel the repercussions? And it is no surprise that it is difficult to attract senior talent with strong programming skills necessary to develop great tools to these positions. If there is no career path- and, let&#8217;s face it, most studios have no career path for tools developers- they&#8217;re going to go into game programming, or the general software industry (which is, for the most part, some form of tools development in a different environment).</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0recent post at AltDevBlogADay\u00a0in three parts. \u00a0View it there in its entirety. So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows ", "id": "http://www.robg3d.com/?p=722", "categories": [], "metadata": {"guid": "ec73746a-1101-46af-8d12-6a3c94b7f875", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=720", "title": "The Importance of Vision, 1 of 3", "datetime": "2011-07-28T04:29:04", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a> in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.</p>\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.</p>\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.</p>\n<p>Where does this lack of vision come from? What can we do to resolve it?</p>\n<hr />\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.</p>\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.</p>\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?</p>\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \u00a0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we", "id": "http://www.robg3d.com/?p=720", "categories": [], "metadata": {"guid": "5bd65447-2fe8-44f8-a6f1-046c2b4563e0", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=712", "title": "WTFunctional: Be Declarative", "datetime": "2011-07-25T14:29:27", "html": "<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.</p>\n<p>First up is demonstrating that <strong>functional programming is declarative</strong>: it makes your code more expressive and optimized.</p>\n<p>Most programmers are used to seeing this:</p>\n<pre>list = []\nfor i = 0 to 10 do\n  if i % 2 == 0:\n    list.append(i)\n//list is now [0,2,4,6,8,10]</pre>\n<p>Less familiar would be:</p>\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)</pre>\n<p>The first focuses on the <em>how</em>: increment <em>i</em> from 0 to 10, and append every even item and 0 to a list. \u00a0This is an <strong>imperative style</strong>. \u00a0The second focuses on the <em>what</em>: \u00a0for each item from 0 to 10, select all even items. \u00a0This is a <strong>declarative style</strong>, which is an aspect of functional programming. \u00a0In this trivial case, the difference is, well, trivial. \u00a0But the key differences are:</p>\n<ol>\n<li>\u00a0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).</li>\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.</li>\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated/iterated over, not a concrete type like a list/array/etc.</li>\n</ol>\n<p>These differences create three key benefits:</p>\n<ol>\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.</li>\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative</em>\u00a0part of it. \u00a0We&#8217;ll see how to read a more complex statement next.</li>\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators</em>- it really depends on what is expedient for the statement.</li>\n</ol>\n<p>Let&#8217;s try out a more concrete example. \u00a0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \u00a0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.</p>\n<pre>dateAndItemsMap = dict()\nfor row in myTable.rows:\n\u00a0 \u00a0 if row.isActive:\n\u00a0 \u00a0 \u00a0 \u00a0 if row.date not in dateAndItemsMap:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date] = list()\n\u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date].append(new MyObject(row))\nsortedDates = dateAndItemsMap.values()\nsortedDates.sort()\nitemsSortedByDateThenId = list()\nfor date in sortedDates:\n\u00a0 \u00a0 items = dateAndItemsMap[date]\n\u00a0 \u00a0 items.sort(lamba obj: obj.id)\n\u00a0 \u00a0 itemsSortedByDateThenId.extend(items)</pre>\n<p>Wow, that&#8217;s a lot of code! \u00a0And not at all clear when reading it. \u00a0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \u00a0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.</em>\u00a0 That&#8217;s a mouthful, and I think that was pretty brief.</p>\n<p>Let&#8217;s compare this to the declarative style:</p>\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)</pre>\n<p>One line? \u00a0One stinking line? \u00a0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.</em>\u00a0 Notice a) how the explanation expresses <em>what you want</em>, <strong>not</strong>\u00a0how you want to get it, and b) the explanation reads very similar to the code.</p>\n<p>This is why declarative programming rocks, <strong>right now.</strong>\u00a0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \u00a0Your code will become infinitely clearer.</p>\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure</strong>), and the compiler or runtime can automatically parallelize it and optimize it. \u00a0This is one reason languages like SQL have been so effective- the software/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.</p>\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \u00a0Next up will probably be closures.</p>", "summary": "Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ", "id": "http://www.robg3d.com/?p=712", "categories": [], "metadata": {"guid": "7cf25c60-08d2-4be6-8544-0869547c3245", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/25/exportlayer-v1-3-for-modo-501/", "title": "ExportLayer v1.3 for modo 501", "datetime": "2011-07-25T09:29:54", "html": "<p>It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light.</p>\n<p>Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;<em>UCX_$ParentMeshName</em>&#8221; style names it&#8217;s enough to just name the collision hulls as &#8220;<em>UCX</em>&#8220;, the script will fix it during export. Just make sure that the collisions are children of the main mesh.</p>\n<p>FBX files can be saved with fake Revit signature which makes it possible to link the produced FBX file in 3ds Max 2011 (File Link Manager).</p>\n<p><strong>IMPORTANT</strong>: Modo 501 SP3 (and possibly earlier 501 versions) have a nasty bug where displaced SDS geometry is frozen without any deformations. The workaround is similarly ugly: I initiate an incorrect file save which makes an error window pop up which forces some kind of an internal update after which the freeze command works properly. So when you see an error popup saying</p>\n<blockquote><p>Scene save was unsuccessful &#8212; Not Found File &#8220;C:&#8221; not written.</p></blockquote>\n<p>well, it&#8217;s &#8220;normal&#8221;&#8230; just click OK and wait for the script to finish.<br />\nAlso, freezing a PSDS surface messes up morphmaps. The workaround for that slows down the export process considerably.<br />\nTo avoid freezing altogether use the <em>NOFREEZE</em> parameter.</p>\n<p><strong>Arguments:</strong><br />\n<em>FBX; LWO; OBJ; COLLADA</em>: They define the output format. Default is FBX.<br />\n<em>SILENTSAVE</em>: The file will be saved next to the original file. No dialog will be displayed.<br />\n<em>NOQUADS</em>: Triangulates the object the exported object.</p>\n<p><em>FBXREVIT</em>: Saves an FBX file and makes it look like it came from Autodesk Revit.<br />\n- In this mode NOQUADS and SILENTSAVE are automatically enabled.<br />\n- 3ds Max will only recognize an UV if it&#8217;s used by at least one image in the shader tree.</p>\n<p>NOFREEZE: The geometry will not be frozen.<!-- PHP 5.x --></p>", "summary": "It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light. Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;UCX_$ParentMeshName&#8221; style nam", "id": "http://www.zspline.net/blog/?p=1340", "categories": [], "metadata": {"guid": "9ae35466-c6cf-4cb8-a070-c147ede632af", "likes": 0, "is_published": false}}, {"author": "Rick", "url": "http://www.rsart.co.uk/2011/07/23/toggle-debug-print-in-maxscript/", "title": "Toggle debug print in Maxscript", "datetime": "2011-07-23T23:44:45", "html": "<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.</p>\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:</p>\n<p><code>if debugprint == true then print \"My debug stuff\"</code></p>\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:</p>\n<p><code>fn debugPrint printStr =<br />\n(<br />\n    if debugPrintVal == true do<br />\n        (<br />\n            Print printStr<br />\n        )<br />\n)<br />\n</code></p>\n<p>So, instead of using  :</p>\n<p><code>if debugprint == true then print \"My debug stuff\"</code></p>\n<p>We can now used the much cleaner version:</p>\n<p><code>debugprint \"My debug stuff\"</code></p>", "summary": "Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O", "id": "http://www.rsart.co.uk/?p=407", "categories": [], "metadata": {"guid": "eae874f4-a637-4d6e-bd62-c057f2045c60", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=708", "title": "Learning a programming language by reading a manual is like learning a language by reading a dictionary", "datetime": "2011-07-23T03:58:13", "html": "<p>A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords.</p>\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with people, or libraries.</p>\n<p>Be wary of anyone who says they know more than a dozen languages. \u00a0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.</p>\n<p>You can learn to speak a language without learning how to communicate in that language. \u00a0In the same way, you can create a program in a language without communicating effectively.</p>\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \u00a0Sophisticated use of a programming language allows and requires the same. \u00a0We should understand when to be sophisticated and when to be crude, and always seek to educate.</p>\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \u00a0Consider what Ebonix is to English, or a scripting language is to C++. \u00a0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.</p>\n<p>You cannot learn how to speak a language by reading a dictionary. \u00a0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \u00a0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.</p>\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.</p>", "summary": "A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with", "id": "http://www.robg3d.com/?p=708", "categories": [], "metadata": {"guid": "8663e9bd-e78d-4c2d-816e-4f33d05827a9", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/7930189393", "title": "Highlight an Excel Cell Using Python", "datetime": "2011-07-22T11:55:00", "html": "<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style = xlwt.easyxf(\u2018pattern: pattern solid, fore-colour red\u2019)</li>\n<li>\n</li><li>for x in range(inputSheet.nrows):</li>\n<li>\u00a0 \u00a0 for y in range(inputSheet.ncols):</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 if(inputSheet.cell(x,y).value):</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0cellValue = inputSheet.cell(x,y).value</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0outputSheet.write(x,y, cellValue)</li>\n<li>\n</li><li>outputSheet.write(5,5, \u201crewritten cell\u201d, style)</li>\n<li>\n</li><li>\n</li><li>outputBook.save(\u201ctest.xls\u201d)</li>\n\n</ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \u00a0Good for validation purposes.</p>\n<ol></ol>", "summary": "<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style ", "id": "http://shawnkirsch.tumblr.com/post/7930189393", "categories": [], "metadata": {"guid": "9a86dd70-2b83-49dc-a151-fac566245d11", "likes": 0, "is_published": false}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/07/power-animator.html", "title": "Power Animator", "datetime": "2011-07-22T10:34:31.240000", "html": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http://altdevblogaday.com/\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exerting one's strength: one is pushing down, the other is pulling up.\u201d</span> \u2013 Booker T. Washington</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">For today\u2019s post, I\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold's Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.</div><div class=\"MsoNormal\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s1600/csi.png\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"640\" src=\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s640/csi.png\" width=\"233\" /></a></div><div class=\"MsoNormal\">On that day at Gold's Gym, I was benching and curling, because THAT'S WHAT MEN DO (that's how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">She continued on with her squats while I performed my \"superior\" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since \"clearly squats are supposed to be bad for your knees!\" I reply \"I\u2019m gonna do some curls!\" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">She ignored me. She was deadlifting, and that was serious business for her.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Later on that night Jessica turned to me and asked \"So, what are your fitness goals?\" I replied \"To get bigger and stronger, of course.\" She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Then she said it:</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><br /></div><table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: right; margin-left: 1em; text-align: right;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s1600/LooneyTunes_Gossamer_Model_Sheet.jpg\" style=\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"256\" src=\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s320/LooneyTunes_Gossamer_Model_Sheet.jpg\" width=\"320\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">This is apparently what I looked like, hair and all.</td></tr></tbody></table><div class=\"MsoNormal\">\"You know you have chicken legs, right? You're shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that.\"</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">I was disheartened, totally bummed out, but more importantly, I was <i>confused</i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men's Health! They HAD to be right!<br /><br />More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Jessica and I didn't go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That's when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Training in a vacuum that way had stunted my growth in a literal sense- I wasn't getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I've gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">So I guess getting strength training advice from a girl isn\u2019t so bad after all. <span style=\"font-family: Wingdings;\">J</span></div><div class=\"MsoNormal\"><br />I invite you to read my parallel story about animation on AltDevBlogADay (<a href=\"http://altdevblogaday.com/2011/07/22/power-animator/\">http://altdevblogaday.com/2011/07/22/power-animator/</a>)</div><div style=\"line-height: 14.25pt;\"><br /></div><div class=\"MsoNormal\"><br /></div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com\" width=\"1\" /></div>", "summary": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http://altdevblogaday.com/\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exer", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526", "categories": [], "metadata": {"guid": "17f41b91-dcb0-4a6b-aae1-6f12c4364bc6", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=784", "title": "more on OO rigging and animator tools", "datetime": "2011-07-21T22:47:08", "html": "<p>Following on from the <a href=\"http://www.macaronikazoo.com/?p=752\" title=\"object oriented rigging in Skeleton Builder\">previous post</a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.</p>\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.</p>\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \u00a0The next step is to create an <a href=\"http://www.macaronikazoo.com/?p=726\" title=\"A more thorough Interface class\">interface class</a> which defines two methods &#8211; switchToFk and switchToIk. \u00a0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \u00a0Our code ends up looking something like this:</p>\n<pre class=\"brush:py\">import typeFactories\nimport baseRigPrimitive\nclass IkFkSwitchable(object):\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\n  def switchToFk( self ):\n    '''this method should implement the logic to switch to FK mode'''\n    pass\n  def switchToIk( self ):\n    '''this method should implement the logic to switch to IK mode'''\n    pass\n\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\n  #the code to implement this rig part goes here\n  ...\n  def switchToFk( self ):\n    #implementation of this method goes below...\n    ...\n  def switchToIk( self ):\n    #implementation of this method goes below...\n    ...</pre>\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:</p>\n<pre class=\"brush:py\">import rigPrimitives\nimport maya.cmds as cmd\nfrom baseMelUI import *\n\ndef getSelectedSwitchableParts():\n  '''\n  returns a list of all RigPart instances that have at least one of their members\n  selected\n  '''\n  selectedSwitchableParts = []\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\n  for rigPart in selectedRigParts:\n    if isinstance( rigPart, IkFkSwitchable ):\n      selectedSwitchableParts.append( rigPart )\n\n  return selectedSwitchableParts\n\nclass UserToolLayout(MelHLayout):\n  def __init__( self, parent ):\n    MelHLayout.__init__( self, parent )\n    self.UI_fkButton = MelButton( self, l=\"switch to FK\", c=self.on_pressFk )\n    self.UI_ikButton = MelButton( self, l=\"switch to IK\", c=self.on_pressIk )\n\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\n    #method when the scene selection changes.  So this will update the UI when the user\n    #changes the selection\n    self.setSelectionChangeCB( self.on_selectionChange )\n    self.on_selectionChange()  #call this to init the UI\n\n    #make sure to call this so the form layout gets setup properly\n    self.layout()\n\n  ### EVENT HANDLERS ###\n  def on_selectionChange( self, *a ):\n    #need to explicitly cast here because of a bug in setEnabled\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\n  def on_pressFk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToFk()\n  def on_pressIk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToIk()\n\nclass UserToolWindow(BaseMelWindow):\n  WINDOW_NAME = \"ikFkSwitcherTool\"\n  WINDOW_TITLE = \"Ik Fk switcher tool\"\n  DEFAULT_SIZE = 300, 45\n  DEFAULT_MENU = None\n\n  def __init__( self ):\n    UserToolLayout( self )\n    self.show()\n\nUserToolWindow()</pre>\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.</p>\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.</p>\n<p>Anyway hopefully you get the idea.</p>", "summary": "Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.", "id": "http://www.macaronikazoo.com/?p=784", "categories": [], "metadata": {"guid": "78b71ec9-df92-4860-b8df-1eb4fc668c04", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/20/toward-a-quasi-time-independant-twist-node/", "title": "Toward a quasi time independant  twist node", "datetime": "2011-07-20T08:32:05", "html": "<p>This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.</p>\n<p><img alt=\"\" height=\"483\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/orient_constraint_torsion1.gif?w=408&#038;h=483\" title=\"orient_constraint_torsion\" width=\"408\" /></p>\n<p><em>(Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 )</em></p>\n<p>After writing a <em><span style=\"color: #ff6600;\"><a href=\"http://circecharacterworks.wordpress.com/2011/07/06/a-journey-in-the-realm-of-corrective-shapes-ii/\">quaternion based aim constraint</a>\u00a0</span></em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.</p>\n<p></p>\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.</p>\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.</p>\n<p>1)<em> From <span style=\"color: #ff6600;\">pi</span>e to <span style=\"color: #ff6600;\">pi</span>e ( with a thick French accent )</em> :</p>\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.</p>\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.</p>\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):</p>\n<pre class=\"brush: python; wrap-lines: false;\">\nimport maya.cmds as cmds\n\nrefLoc = cmds.spaceLocator( n='referenceLoc1')[0]\nstartLoc = cmds.spaceLocator( n='StartLoc1')[0]\nEndLoc = cmds.spaceLocator( n='EndLoc1')[0]\n\ncmds.parent( [startLoc ,EndLoc] , refLoc )\ncmds.setAttr( startLoc + '.t', 10.0, 0, 0, type='double3' )\ncmds.setAttr( EndLoc + '.t', 10.0, 2.0, 0, type='double3' )\n\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( refLoc + '.angle',e=True,keyable=True  )\n\n#Use locator position  as vector\nangleReader = cmds.createNode( 'angleBetween' )\ncmds.connectAttr( startLoc + '.translate', angleReader + '.vector1' )\ncmds.connectAttr( EndLoc + '.translate', angleReader + '.vector2' )\n\nnullPos = [(0,0,0),(0,0,0)]\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='starCurve1')\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), 'starCurveShape1' )\n\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='endCurve1')\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), 'endCurveShape1' )\n\ncmds.parent( [startCurve ,endCurve] , refLoc )\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\ncmds.setAttr( cvShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( startLoc + '.translate' , cvShape1 + '.controlPoints[1]', f=True )\ncmds.setAttr(  endShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( EndLoc + '.translate' , endShape1 + '.controlPoints[0]', f=True )\n\ncmds.connectAttr( angleReader + '.angle',  refLoc + '.angle', f=True  )\n\n#Don't let depency node lives in the wild polluting the outliner: group them in container\nasset = cmds.container( type='dagContainer',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\n\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( asset + '.angle',e=True,keyable=True  )\n\ncmds.connectAttr(  refLoc + '.angle',  asset + '.angle' , f=True  )\n#dont forget to rename The hyperLayout node associate with this container\nlayout = cmds.listConnections(  asset , t='hyperLayout' )[0]\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\n\n#kindly prefix the element in the container\nNodeList =  cmds.container(asset, q=True, nl=True)\nfor node in NodeList :\n    cmds.rename( node,asset + '_' + node, ignoreShape=True)\n</pre>\n<p><img alt=\"\" class=\"aligncenter\" height=\"451\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/vector_angle.gif?w=393&#038;h=451\" title=\"angle range beetween 2 vectors\" width=\"393\" /></p>\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.</p>\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )</em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\u00a0 in a clock wise manner.</p>\n<p>2) History and time as a 4th dimension:</p>\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\u00a0 host a wealth of research papers:</p>\n<ul>\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href=\"http://www.chrisevans3d.com/reference.htm\"><span style=\"color: #ff6600;\"><em>http://www.chrisevans3d.com/reference.htm</em></span></a></li>\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href=\"http://kesen.realtimerendering.com/\"><span style=\"color: #ff6600;\"><em>http://kesen.realtimerendering.com/</em></span></a></li>\n</ul>\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.</p>\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.</p>\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .</p>\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),</em> and not interactive.</p>\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href=\"http://www.strarup.net/maya/plugins/lagNode/\"><span style=\"color: #ff6600;\"><em>Alex V. U. Strarup</em></span></a> was talking about a lag node inspired by maya framecache node.</p>\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).</p>\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\u00a0 an MPlug and MDGContext.</p>\n<p>This is what make it possible to <span style=\"color: #ff6600;\"><em>&#8216;ghost&#8217;</em></span> an animated object in maya among many other things.</p>\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br />\n<em>(a little excerpt from Antitrust movie )</em></p>\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style=\"color: #ff6600;\">setDependentsDirty</span>()\u00a0 method\u00a0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):</em></p>\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.</p>\n<p>I took advantage of this property to determine a twist direction:</p>\n<ul>\n<li>Inside a compute method ,the value of separate output buffer is first readen</li>\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.</li>\n<li>Finally\u00a0 if the input and buffer values are not identical we store the twist input value into the output attribute.</li>\n</ul>\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.</p>\n<p><img alt=\"\" height=\"471\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/vector_direction.gif?w=435&#038;h=471\" title=\"\" width=\"435\" /></p>\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) </em>we can use their\u00a0 cross product to create a perpendicular vector that will act as a twist axis.</p>\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\u00a0 the reference vector <em>about</em> the twist axis <em>by</em> 90.0 degrees.</p>\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.</p>\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .</p>\n<p>In his article <span style=\"color: #ff6600;\"><em>(<a href=\"http://www.3dfiggins.com/writeups/forearmTwist/\">\u00a0http://www.3dfiggins.com/writeups/forearmTwist/</a> )</em></span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:</p>\n<ul>\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.</li>\n<li>As a manual process, the result can be less accurate or lacks consistency.</li>\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.</li>\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.</li>\n</ul>\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.</p>\n<p>Part of the remaining works was\u00a0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.</p>\n<p>3)<em> Angle <span style=\"color: #ff6600;\">accumulation</span> versus number of <span style=\"color: #ff6600;\">revolution</span>:</em></p>\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\u00a0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.</p>\n<p><img alt=\"\" height=\"395\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/clock_circle.gif?w=395&#038;h=395\" title=\"\" width=\"395\" /></p>\n<p>First it was important to translate the past and current rotation vector into a more consistent\u00a0 value : a normalized value <em>U</em> that represent a percentage of a circle perimeter.</p>\n<p>One way to figure this circle purpose is to think of it\u00a0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.</p>\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\u00a0the separation line increases and its band can start to turn and wrap\u00a0 several times around this cylinder.</p>\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution</em> and a parametric value U.</p>\n<pre class=\"brush: python; wrap-lines: false;\">\n# Procedure to compute the number of revolution along on unit circle\n\n#Case A: positive rotation direction:\n### current rotation is in most case greater than past rotation\n### when this is false we can increment the number of revolution\n\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\nif past_rotation &gt; current_rotation :\n   currentRevolution += 1.0\n\n#Case B: negative rotation direction:\n### current rotation is in most case lower than past rotation\n### when this is false we can decrement the number of revolution\n\nif past_rotation &lt; current_rotation :\n   currentRevolution -= 1.0\n\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\ncurrentRevolution_outputHandle.setClean()\n</pre>\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\u00a0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].</p>\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .</p>\n<p>4)<em> Counter measure for a <span style=\"color: #ff6600;\">previous value dependent</span> node</em>:</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/575/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\u00a0 I was often confronted with twist popping out of control w", "id": "http://circecharacterworks.wordpress.com/?p=575", "categories": [], "metadata": {"guid": "6cc70911-ba01-4409-b2bb-128dee5d7817", "likes": 0, "is_published": false}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=81", "title": "instantiate an asset by name", "datetime": "2011-07-20T01:17:18", "html": "<p>More Unity learning&#8230;</p>\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):</p>\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.</p>\n<p>Then use the following code (Boo):</p>\n<pre class=\"brush:py\">obj as GameObject\nins as GameObject\n\n# let's grab the asset\nobj=Resources.Load(\"tile_flat01\", GameObject)\n# add a texture to the asset\nobj.renderer.material.mainTexture=Resources.Load(\"cobbleTex\", Texture2D)\n# instantiate it\nins=Instantiate(obj)</pre>\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.</p>\n<p>edit: seems I have to find a Unity icon for my blog</p>", "summary": "More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82", "id": "http://blarg.robertkist.com/?p=81", "categories": [], "metadata": {"guid": "3ed9e97a-8998-4ff4-80dd-57108af42b7d", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=701", "title": "Compliments to the chef!", "datetime": "2011-07-20T00:44:10", "html": "<p>My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \u00a0One time, a food critic dined there, and enjoyed his <em>paella</em>\u00a0so much that he went into the back to compliment the chef. \u00a0He saw the two and congratulated the dishwasher-who didn&#8217;t speak a lick of English- on a dish well made.</p>", "summary": "My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \u00a0One time, a food critic dined there, and enjoyed his paella\u00a0so much that he went into the back to compliment the chef. \u00a0He saw", "id": "http://www.robg3d.com/?p=701", "categories": [], "metadata": {"guid": "5e9b13e5-d329-4e9f-a441-c7a19ee854fd", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=350", "title": "Rigging for the masses!", "datetime": "2011-07-19T22:14:43", "html": "<p>Last weekend I&#8217;ve been giving a conference about rigging in <a href=\"http://www.campus-party.es/2011/index.html\" target=\"_blank\" title=\"Campus Party\">Campus Party</a>. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In spanish.<br />\n<em><br />\nEl pasado fin de semana estuve en <a href=\"http://www.campus-party.es/2011/index.html\" target=\"_blank\" title=\"Campus Party\">Campus Party</a>, en Valencia, dando una charla. Mi objetivo era hacer que la gente ajena al 3D entendiese en qu\u00e9 consiste la figura del &#8216;rigger&#8217; y c\u00f3mo se encaja dentro de una producci\u00f3n. La organizaci\u00f3n ha subido esta conferencia (as\u00ed como todas las dem\u00e1s) a Youtube, as\u00ed que se puede ver completa. En espa\u00f1ol.</em></p>\n<p></p>\n<p>&#8212;&#8212;&#8212; <strong>\u00a1AUTOBOMBO EXTRA!</strong> &#8212;&#8212;&#8212;</p>\n<p><em>Hace unos meses, Abel, del <em>podcast</em> &#8216;Houston, tenemos un programa&#8217;, me hizo una entrevista para su programa. Se puede escuchar y descargar desde <a href=\"http://www.houstontenemosunprograma.com/2011/05/setup-de-personajes-con-iker-j-de-los.html\" target=\"_blank\" title=\"aqu\u00ed\">aqu\u00ed</a>.</p>\n<p></em></p>", "summary": "Last weekend I&#8217;ve been giving a conference about rigging in Campus Party. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In span", "id": "http://somosposmodernos.com/blog/?p=350", "categories": [], "metadata": {"guid": "d2a10086-f592-4166-b969-68cc2beb0b4b", "likes": 0, "is_published": false}}]"
07-31 20:05 SocketClient INFO     Returning(as str): '[{"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/30/protocol-to-build-a-reusable-deformation-template-i-model-presentation/", "title": "Protocol to build a reusable deformation template I: model presentation", "datetime": "2011-07-30T09:41:32", "html": "<p>Character and creature rigging is a broad discipline that encompass many fields :</p>\\n<ul>\\n<li>Structure setup for animation .</li>\\n<li>Skin / envelope configuration.</li>\\n<li>Surface, hair , cloth and rigid body simulation.</li>\\n<li>Scripts / tools writing.</li>\\n</ul>\\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.</p>\\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.</p>\\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\\u00a0 I just think that to handle creature /character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.</p>\\n<p>The ability to assign an attribute\\u00a0per element is a powerful\\u00a0 concept that has yet to find a limitation,\\u00a0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.</p>\\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.</p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png\\"><img alt=\\"\\" height=\\"499\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png?w=450&#038;h=499\\" title=\\"packageMan: a free animation rig by  Javier Solsona\\" width=\\"450\\" /></a></p>\\n<p>This fully rigged character can be found on <a href=\\"http://www.rigging101.com/freestuff.htm\\"><em><span style=\\"color: #ff6600;\\">Javier Solsona </span></em></a>&#8216;s website and was modeled\\u00a0by Bob White.</p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png\\"><img alt=\\"\\" height=\\"248\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png?w=450&#038;h=248\\" title=\\"original topology of this character \\" width=\\"450\\" /></a></p>\\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.</p>\\n<p>This means:</p>\\n<ul>\\n<li>less computing power,</li>\\n<li>less memory</li>\\n<li>less functionality by default in maya</li>\\n<li>non existing support program like topoGun or Zbrush .</li>\\n</ul>\\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\\u00a0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.</p>\\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .</p>\\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .</p>\\n<p>Some triangles on the contrary are well used and help reinforce\\u00a0 the shape of this sculpture <em>( on the the belly and crotch for example ) .</em></p>\\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.</p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png\\"><img alt=\\"\\" height=\\"574\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png?w=450&#038;h=574\\" title=\\"\\" width=\\"450\\" /></a><br />\\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\\u00a0 I will the focus on shoulder deformation.</p>\\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )</em> and the socks were left unchanged.<br />\\n<a href=\\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png\\"><img alt=\\"\\" height=\\"383\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png?w=450&#038;h=383\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br />\\n<a href=\\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png\\"><img alt=\\"\\" class=\\"alignleft size-full wp-image-713\\" height=\\"545\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png?w=450&#038;h=545\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.</p>\\n<br />  <a href=\\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/692/\\" /></a> <img alt=\\"\\" border=\\"0\\" height=\\"1\\" src=\\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\\" width=\\"1\\" />", "summary": "Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin / envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts / tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f", "id": "http://circecharacterworks.wordpress.com/?p=692", "categories": [], "metadata": {"guid": "b187aab2-bf23-4bba-8cd2-36fca514ccba", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=724", "title": "The Importance of Vision, 3 of 3", "datetime": "2011-07-30T04:31:25", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\\u00a0<a href=\\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\\">recent post at AltDevBlogADay</a>\\u00a0in three parts. \\u00a0View it there in its entirety.</p>\\n<hr />\\n<p>Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these problems are simply lucky. I suspect that such people are in a fragile situation, and taking away a key player or two would destroy the precarious dynamic that doesn&#8217;t birth these problems. If you are at a studio without these problems, ask yourself this: is your setup one that you can describe, export, advocate for, reproduce? How would you do it, without saying &#8220;just hire better people?&#8221; It is this &#8220;coincidence as a solution&#8221; that propogates the problems at less lucky studios.</p>\\n<p>Let&#8217;s create real solutions.</p>\\n<p>We need to create roles and departments that can provide studios with a cohesive tools vision. We need to fill these director-level roles with uniquely qualified individuals who are experienced in art and design, and are excellent programmers. We need to mature our views on tools as an industry, and start looking for concrete solutions for our endemic tools issues rather than relying on chance.<br />\\nWe&#8217;re not going to find these people or do these things overnight. We need to, first, decide on this path as our goal. Not just you, but your studio&#8217;s management, and there&#8217;s no formula helpful formula I can give to convince them. Just nonstop advocacy, education, and reflection.</p>\\n<p>Then, start discussing what the application of these ideas would mean at your studio. And who is going to fill these key roles? There are people you already have at your studio who just need a little bit of training. Put your tech artists on your programming teams for a bit, or your programmers working on game design or art. See how quickly you&#8217;ll find someone with the unique set of skills for a Tools Director position.</p>\\n<p>We need people who understand how people work and content flows across a project. \\u00a0We need people who are able to guide its formulation/improvement/reconsideration. \\u00a0This is vision. \\u00a0And the lack of vision in tools development is a deadly disease we must remedy if we are to improve the state of our tools across the industry.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\\u00a0recent post at AltDevBlogADay\\u00a0in three parts. \\u00a0View it there in its entirety. Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these", "id": "http://www.robg3d.com/?p=724", "categories": [], "metadata": {"guid": "e3ca9c4a-a6ad-4ade-aaaa-55c1e0d17b8f", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=722", "title": "The Importance of Vision, 2 of 3", "datetime": "2011-07-29T04:29:13", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\\u00a0<a href=\\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\\">recent post at AltDevBlogADay</a>\\u00a0in three parts. \\u00a0View it there in its entirety.</p>\\n<hr />\\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \\u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>\\n<p>No longer can this vital role be left to a hodepodge of other people. Your Art/Technical/Creative Directors, your Lead Programmers/Artists/Designers, can no longer be the people expected to provide the vision for studio&#8217;s Tools and Pipeline.</p>\\n<p>The person who fills this role needs to be someone with enough experience creating art that they can embed with Artists. Someone who can program well enough to have the title of Programmer. Someone flexible enough that they can deal with the needs of Designers. Someone charismatic enough that they can fight and win the battle against the inevitable skepticism, fear, and opposition a change like this would bring.</p>\\n<p>These people are few and far between, and every one of them I know is happily employed. We&#8217;re asking for a unique set of passions and skills, a set that isn&#8217;t common in the games industry especially (who gets into games to write tools?!). We need to start training our tools developers (tech artists, tools programmers) to aspire to have these passions and skills.</p>\\n<p>This won&#8217;t happen magically. Unless our studios can promise that these aspirations will be fulfilled, few people will bother, and I cannot blame them. Many studios have made the commitment to having killer tools. Almost as many have failed. And almost as many as that have failed to realize lack of a cohesive vision as a primary factor.</p>\\n<p>It isn&#8217;t surprising that resources get moved from tools dev, that schedules cannot be stuck to, that they cannot attract senior developers. Without a cohesive tools vision, how are resources supposed to be properly allocated? Resources become a fragile compromise between competing departments, rather than brokered by a separate party without allegiances. How is a schedule supposed to be followed, when the people doing the work are not the ones who feel the repercussions? And it is no surprise that it is difficult to attract senior talent with strong programming skills necessary to develop great tools to these positions. If there is no career path- and, let&#8217;s face it, most studios have no career path for tools developers- they&#8217;re going to go into game programming, or the general software industry (which is, for the most part, some form of tools development in a different environment).</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\\u00a0recent post at AltDevBlogADay\\u00a0in three parts. \\u00a0View it there in its entirety. So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows ", "id": "http://www.robg3d.com/?p=722", "categories": [], "metadata": {"guid": "ec73746a-1101-46af-8d12-6a3c94b7f875", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=720", "title": "The Importance of Vision, 1 of 3", "datetime": "2011-07-28T04:29:04", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href=\\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\\">recent post at AltDevBlogADay</a> in three parts. \\u00a0View it there in its entirety.</p>\\n<hr />\\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.</p>\\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.</p>\\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.</p>\\n<p>Where does this lack of vision come from? What can we do to resolve it?</p>\\n<hr />\\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.</p>\\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.</p>\\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?</p>\\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \\u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \\u00a0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we", "id": "http://www.robg3d.com/?p=720", "categories": [], "metadata": {"guid": "5bd65447-2fe8-44f8-a6f1-046c2b4563e0", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=712", "title": "WTFunctional: Be Declarative", "datetime": "2011-07-25T14:29:27", "html": "<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \\u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.</p>\\n<p>First up is demonstrating that <strong>functional programming is declarative</strong>: it makes your code more expressive and optimized.</p>\\n<p>Most programmers are used to seeing this:</p>\\n<pre>list = []\\nfor i = 0 to 10 do\\n  if i % 2 == 0:\\n    list.append(i)\\n//list is now [0,2,4,6,8,10]</pre>\\n<p>Less familiar would be:</p>\\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)</pre>\\n<p>The first focuses on the <em>how</em>: increment <em>i</em> from 0 to 10, and append every even item and 0 to a list. \\u00a0This is an <strong>imperative style</strong>. \\u00a0The second focuses on the <em>what</em>: \\u00a0for each item from 0 to 10, select all even items. \\u00a0This is a <strong>declarative style</strong>, which is an aspect of functional programming. \\u00a0In this trivial case, the difference is, well, trivial. \\u00a0But the key differences are:</p>\\n<ol>\\n<li>\\u00a0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).</li>\\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.</li>\\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated/iterated over, not a concrete type like a list/array/etc.</li>\\n</ol>\\n<p>These differences create three key benefits:</p>\\n<ol>\\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.</li>\\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative</em>\\u00a0part of it. \\u00a0We&#8217;ll see how to read a more complex statement next.</li>\\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators</em>- it really depends on what is expedient for the statement.</li>\\n</ol>\\n<p>Let&#8217;s try out a more concrete example. \\u00a0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \\u00a0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.</p>\\n<pre>dateAndItemsMap = dict()\\nfor row in myTable.rows:\\n\\u00a0 \\u00a0 if row.isActive:\\n\\u00a0 \\u00a0 \\u00a0 \\u00a0 if row.date not in dateAndItemsMap:\\n\\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 dateAndItemsMap[row.date] = list()\\n\\u00a0 \\u00a0 \\u00a0 \\u00a0 dateAndItemsMap[row.date].append(new MyObject(row))\\nsortedDates = dateAndItemsMap.values()\\nsortedDates.sort()\\nitemsSortedByDateThenId = list()\\nfor date in sortedDates:\\n\\u00a0 \\u00a0 items = dateAndItemsMap[date]\\n\\u00a0 \\u00a0 items.sort(lamba obj: obj.id)\\n\\u00a0 \\u00a0 itemsSortedByDateThenId.extend(items)</pre>\\n<p>Wow, that&#8217;s a lot of code! \\u00a0And not at all clear when reading it. \\u00a0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \\u00a0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.</em>\\u00a0 That&#8217;s a mouthful, and I think that was pretty brief.</p>\\n<p>Let&#8217;s compare this to the declarative style:</p>\\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)</pre>\\n<p>One line? \\u00a0One stinking line? \\u00a0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.</em>\\u00a0 Notice a) how the explanation expresses <em>what you want</em>, <strong>not</strong>\\u00a0how you want to get it, and b) the explanation reads very similar to the code.</p>\\n<p>This is why declarative programming rocks, <strong>right now.</strong>\\u00a0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \\u00a0Your code will become infinitely clearer.</p>\\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure</strong>), and the compiler or runtime can automatically parallelize it and optimize it. \\u00a0This is one reason languages like SQL have been so effective- the software/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.</p>\\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \\u00a0Next up will probably be closures.</p>", "summary": "Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \\u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ", "id": "http://www.robg3d.com/?p=712", "categories": [], "metadata": {"guid": "7cf25c60-08d2-4be6-8544-0869547c3245", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/25/exportlayer-v1-3-for-modo-501/", "title": "ExportLayer v1.3 for modo 501", "datetime": "2011-07-25T09:29:54", "html": "<p>It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light.</p>\\n<p>Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;<em>UCX_$ParentMeshName</em>&#8221; style names it&#8217;s enough to just name the collision hulls as &#8220;<em>UCX</em>&#8220;, the script will fix it during export. Just make sure that the collisions are children of the main mesh.</p>\\n<p>FBX files can be saved with fake Revit signature which makes it possible to link the produced FBX file in 3ds Max 2011 (File Link Manager).</p>\\n<p><strong>IMPORTANT</strong>: Modo 501 SP3 (and possibly earlier 501 versions) have a nasty bug where displaced SDS geometry is frozen without any deformations. The workaround is similarly ugly: I initiate an incorrect file save which makes an error window pop up which forces some kind of an internal update after which the freeze command works properly. So when you see an error popup saying</p>\\n<blockquote><p>Scene save was unsuccessful &#8212; Not Found File &#8220;C:&#8221; not written.</p></blockquote>\\n<p>well, it&#8217;s &#8220;normal&#8221;&#8230; just click OK and wait for the script to finish.<br />\\nAlso, freezing a PSDS surface messes up morphmaps. The workaround for that slows down the export process considerably.<br />\\nTo avoid freezing altogether use the <em>NOFREEZE</em> parameter.</p>\\n<p><strong>Arguments:</strong><br />\\n<em>FBX; LWO; OBJ; COLLADA</em>: They define the output format. Default is FBX.<br />\\n<em>SILENTSAVE</em>: The file will be saved next to the original file. No dialog will be displayed.<br />\\n<em>NOQUADS</em>: Triangulates the object the exported object.</p>\\n<p><em>FBXREVIT</em>: Saves an FBX file and makes it look like it came from Autodesk Revit.<br />\\n- In this mode NOQUADS and SILENTSAVE are automatically enabled.<br />\\n- 3ds Max will only recognize an UV if it&#8217;s used by at least one image in the shader tree.</p>\\n<p>NOFREEZE: The geometry will not be frozen.<!-- PHP 5.x --></p>", "summary": "It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light. Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;UCX_$ParentMeshName&#8221; style nam", "id": "http://www.zspline.net/blog/?p=1340", "categories": [], "metadata": {"guid": "9ae35466-c6cf-4cb8-a070-c147ede632af", "likes": 0, "is_published": false}}, {"author": "Rick", "url": "http://www.rsart.co.uk/2011/07/23/toggle-debug-print-in-maxscript/", "title": "Toggle debug print in Maxscript", "datetime": "2011-07-23T23:44:45", "html": "<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.</p>\\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:</p>\\n<p><code>if debugprint == true then print \\"My debug stuff\\"</code></p>\\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:</p>\\n<p><code>fn debugPrint printStr =<br />\\n(<br />\\n    if debugPrintVal == true do<br />\\n        (<br />\\n            Print printStr<br />\\n        )<br />\\n)<br />\\n</code></p>\\n<p>So, instead of using  :</p>\\n<p><code>if debugprint == true then print \\"My debug stuff\\"</code></p>\\n<p>We can now used the much cleaner version:</p>\\n<p><code>debugprint \\"My debug stuff\\"</code></p>", "summary": "Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O", "id": "http://www.rsart.co.uk/?p=407", "categories": [], "metadata": {"guid": "eae874f4-a637-4d6e-bd62-c057f2045c60", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=708", "title": "Learning a programming language by reading a manual is like learning a language by reading a dictionary", "datetime": "2011-07-23T03:58:13", "html": "<p>A verbal language is more than its grammar and vocabulary. \\u00a0A programming language is much more than its syntax and keywords.</p>\\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \\u00a0You cannot learn this through words, you learn this through interacting with people, or libraries.</p>\\n<p>Be wary of anyone who says they know more than a dozen languages. \\u00a0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.</p>\\n<p>You can learn to speak a language without learning how to communicate in that language. \\u00a0In the same way, you can create a program in a language without communicating effectively.</p>\\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \\u00a0Sophisticated use of a programming language allows and requires the same. \\u00a0We should understand when to be sophisticated and when to be crude, and always seek to educate.</p>\\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \\u00a0Consider what Ebonix is to English, or a scripting language is to C++. \\u00a0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.</p>\\n<p>You cannot learn how to speak a language by reading a dictionary. \\u00a0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \\u00a0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.</p>\\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.</p>", "summary": "A verbal language is more than its grammar and vocabulary. \\u00a0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \\u00a0You cannot learn this through words, you learn this through interacting with", "id": "http://www.robg3d.com/?p=708", "categories": [], "metadata": {"guid": "8663e9bd-e78d-4c2d-816e-4f33d05827a9", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/7930189393", "title": "Highlight an Excel Cell Using Python", "datetime": "2011-07-22T11:55:00", "html": "<ol><li>\\n</li><li>import xlrd, xlwt</li>\\n<li>\\n</li><li>inputBook = xlrd.open_workbook(\\u2018test.xls\\u2019)</li>\\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\\n<li>\\n</li><li>outputBook = xlwt.Workbook()</li>\\n<li>outputSheet = outputBook.add_sheet(\\u201csheet 1\\u201d, cell_overwrite_ok=True)</li>\\n<li>\\n</li><li>style = xlwt.easyxf(\\u2018pattern: pattern solid, fore-colour red\\u2019)</li>\\n<li>\\n</li><li>for x in range(inputSheet.nrows):</li>\\n<li>\\u00a0 \\u00a0 for y in range(inputSheet.ncols):</li>\\n<li>\\u00a0 \\u00a0 \\u00a0 \\u00a0 if(inputSheet.cell(x,y).value):</li>\\n<li>\\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0cellValue = inputSheet.cell(x,y).value</li>\\n<li>\\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0outputSheet.write(x,y, cellValue)</li>\\n<li>\\n</li><li>outputSheet.write(5,5, \\u201crewritten cell\\u201d, style)</li>\\n<li>\\n</li><li>\\n</li><li>outputBook.save(\\u201ctest.xls\\u201d)</li>\\n\\n</ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \\u00a0Good for validation purposes.</p>\\n<ol></ol>", "summary": "<ol><li>\\n</li><li>import xlrd, xlwt</li>\\n<li>\\n</li><li>inputBook = xlrd.open_workbook(\\u2018test.xls\\u2019)</li>\\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\\n<li>\\n</li><li>outputBook = xlwt.Workbook()</li>\\n<li>outputSheet = outputBook.add_sheet(\\u201csheet 1\\u201d, cell_overwrite_ok=True)</li>\\n<li>\\n</li><li>style ", "id": "http://shawnkirsch.tumblr.com/post/7930189393", "categories": [], "metadata": {"guid": "9a86dd70-2b83-49dc-a151-fac566245d11", "likes": 0, "is_published": false}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/07/power-animator.html", "title": "Power Animator", "datetime": "2011-07-22T10:34:31.240000", "html": "<div class=\\"MsoNormal\\"><i>(ed. note: If you\\u2019ve made your way here from <a href=\\"http://altdevblogaday.com/\\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\"><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\">\\u201cThere are two ways of exerting one\'s strength: one is pushing down, the other is pulling up.\\u201d</span> \\u2013 Booker T. Washington</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">For today\\u2019s post, I\\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. </div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold\'s Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><a href=\\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s1600/csi.png\\" style=\\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\\"><img border=\\"0\\" height=\\"640\\" src=\\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s640/csi.png\\" width=\\"233\\" /></a></div><div class=\\"MsoNormal\\">On that day at Gold\'s Gym, I was benching and curling, because THAT\'S WHAT MEN DO (that\'s how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">She continued on with her squats while I performed my \\"superior\\" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since \\"clearly squats are supposed to be bad for your knees!\\" I reply \\"I\\u2019m gonna do some curls!\\" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">She ignored me. She was deadlifting, and that was serious business for her.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Later on that night Jessica turned to me and asked \\"So, what are your fitness goals?\\" I replied \\"To get bigger and stronger, of course.\\" She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Then she said it:</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\"><br /></div><table cellpadding=\\"0\\" cellspacing=\\"0\\" class=\\"tr-caption-container\\" style=\\"float: right; margin-left: 1em; text-align: right;\\"><tbody><tr><td style=\\"text-align: center;\\"><a href=\\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s1600/LooneyTunes_Gossamer_Model_Sheet.jpg\\" style=\\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\\"><img border=\\"0\\" height=\\"256\\" src=\\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s320/LooneyTunes_Gossamer_Model_Sheet.jpg\\" width=\\"320\\" /></a></td></tr><tr><td class=\\"tr-caption\\" style=\\"text-align: center;\\">This is apparently what I looked like, hair and all.</td></tr></tbody></table><div class=\\"MsoNormal\\">\\"You know you have chicken legs, right? You\'re shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that.\\"</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">I was disheartened, totally bummed out, but more importantly, I was <i>confused</i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men\'s Health! They HAD to be right!<br /><br />More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!</i></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Jessica and I didn\'t go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That\'s when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Training in a vacuum that way had stunted my growth in a literal sense- I wasn\'t getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I\'ve gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. </div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">So I guess getting strength training advice from a girl isn\\u2019t so bad after all. <span style=\\"font-family: Wingdings;\\">J</span></div><div class=\\"MsoNormal\\"><br />I invite you to read my parallel story about animation on AltDevBlogADay (<a href=\\"http://altdevblogaday.com/2011/07/22/power-animator/\\">http://altdevblogaday.com/2011/07/22/power-animator/</a>)</div><div style=\\"line-height: 14.25pt;\\"><br /></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com\\" width=\\"1\\" /></div>", "summary": "<div class=\\"MsoNormal\\"><i>(ed. note: If you\\u2019ve made your way here from <a href=\\"http://altdevblogaday.com/\\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\"><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\">\\u201cThere are two ways of exer", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526", "categories": [], "metadata": {"guid": "17f41b91-dcb0-4a6b-aae1-6f12c4364bc6", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=784", "title": "more on OO rigging and animator tools", "datetime": "2011-07-21T22:47:08", "html": "<p>Following on from the <a href=\\"http://www.macaronikazoo.com/?p=752\\" title=\\"object oriented rigging in Skeleton Builder\\">previous post</a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.</p>\\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.</p>\\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \\u00a0The next step is to create an <a href=\\"http://www.macaronikazoo.com/?p=726\\" title=\\"A more thorough Interface class\\">interface class</a> which defines two methods &#8211; switchToFk and switchToIk. \\u00a0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \\u00a0Our code ends up looking something like this:</p>\\n<pre class=\\"brush:py\\">import typeFactories\\nimport baseRigPrimitive\\nclass IkFkSwitchable(object):\\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\\n  def switchToFk( self ):\\n    \'\'\'this method should implement the logic to switch to FK mode\'\'\'\\n    pass\\n  def switchToIk( self ):\\n    \'\'\'this method should implement the logic to switch to IK mode\'\'\'\\n    pass\\n\\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\\n  #the code to implement this rig part goes here\\n  ...\\n  def switchToFk( self ):\\n    #implementation of this method goes below...\\n    ...\\n  def switchToIk( self ):\\n    #implementation of this method goes below...\\n    ...</pre>\\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:</p>\\n<pre class=\\"brush:py\\">import rigPrimitives\\nimport maya.cmds as cmd\\nfrom baseMelUI import *\\n\\ndef getSelectedSwitchableParts():\\n  \'\'\'\\n  returns a list of all RigPart instances that have at least one of their members\\n  selected\\n  \'\'\'\\n  selectedSwitchableParts = []\\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\\n  for rigPart in selectedRigParts:\\n    if isinstance( rigPart, IkFkSwitchable ):\\n      selectedSwitchableParts.append( rigPart )\\n\\n  return selectedSwitchableParts\\n\\nclass UserToolLayout(MelHLayout):\\n  def __init__( self, parent ):\\n    MelHLayout.__init__( self, parent )\\n    self.UI_fkButton = MelButton( self, l=\\"switch to FK\\", c=self.on_pressFk )\\n    self.UI_ikButton = MelButton( self, l=\\"switch to IK\\", c=self.on_pressIk )\\n\\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\\n    #method when the scene selection changes.  So this will update the UI when the user\\n    #changes the selection\\n    self.setSelectionChangeCB( self.on_selectionChange )\\n    self.on_selectionChange()  #call this to init the UI\\n\\n    #make sure to call this so the form layout gets setup properly\\n    self.layout()\\n\\n  ### EVENT HANDLERS ###\\n  def on_selectionChange( self, *a ):\\n    #need to explicitly cast here because of a bug in setEnabled\\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\\n  def on_pressFk( self, *a ):\\n    for rigPart in getSelectedSwitchableParts():\\n      rigPart.switchToFk()\\n  def on_pressIk( self, *a ):\\n    for rigPart in getSelectedSwitchableParts():\\n      rigPart.switchToIk()\\n\\nclass UserToolWindow(BaseMelWindow):\\n  WINDOW_NAME = \\"ikFkSwitcherTool\\"\\n  WINDOW_TITLE = \\"Ik Fk switcher tool\\"\\n  DEFAULT_SIZE = 300, 45\\n  DEFAULT_MENU = None\\n\\n  def __init__( self ):\\n    UserToolLayout( self )\\n    self.show()\\n\\nUserToolWindow()</pre>\\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.</p>\\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.</p>\\n<p>Anyway hopefully you get the idea.</p>", "summary": "Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.", "id": "http://www.macaronikazoo.com/?p=784", "categories": [], "metadata": {"guid": "78b71ec9-df92-4860-b8df-1eb4fc668c04", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/20/toward-a-quasi-time-independant-twist-node/", "title": "Toward a quasi time independant  twist node", "datetime": "2011-07-20T08:32:05", "html": "<p>This post is about\\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.</p>\\n<p><img alt=\\"\\" height=\\"483\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/orient_constraint_torsion1.gif?w=408&#038;h=483\\" title=\\"orient_constraint_torsion\\" width=\\"408\\" /></p>\\n<p><em>(Above: notice the\\u00a0 flipping glitch when the torsion goes above 180.0 )</em></p>\\n<p>After writing a <em><span style=\\"color: #ff6600;\\"><a href=\\"http://circecharacterworks.wordpress.com/2011/07/06/a-journey-in-the-realm-of-corrective-shapes-ii/\\">quaternion based aim constraint</a>\\u00a0</span></em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.</p>\\n<p></p>\\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.</p>\\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.</p>\\n<p>1)<em> From <span style=\\"color: #ff6600;\\">pi</span>e to <span style=\\"color: #ff6600;\\">pi</span>e ( with a thick French accent )</em> :</p>\\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.</p>\\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.</p>\\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):</p>\\n<pre class=\\"brush: python; wrap-lines: false;\\">\\nimport maya.cmds as cmds\\n\\nrefLoc = cmds.spaceLocator( n=\'referenceLoc1\')[0]\\nstartLoc = cmds.spaceLocator( n=\'StartLoc1\')[0]\\nEndLoc = cmds.spaceLocator( n=\'EndLoc1\')[0]\\n\\ncmds.parent( [startLoc ,EndLoc] , refLoc )\\ncmds.setAttr( startLoc + \'.t\', 10.0, 0, 0, type=\'double3\' )\\ncmds.setAttr( EndLoc + \'.t\', 10.0, 2.0, 0, type=\'double3\' )\\n\\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\\ncmds.setAttr( refLoc + \'.angle\',e=True,keyable=True  )\\n\\n#Use locator position  as vector\\nangleReader = cmds.createNode( \'angleBetween\' )\\ncmds.connectAttr( startLoc + \'.translate\', angleReader + \'.vector1\' )\\ncmds.connectAttr( EndLoc + \'.translate\', angleReader + \'.vector2\' )\\n\\nnullPos = [(0,0,0),(0,0,0)]\\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n=\'starCurve1\')\\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), \'starCurveShape1\' )\\n\\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n=\'endCurve1\')\\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), \'endCurveShape1\' )\\n\\ncmds.parent( [startCurve ,endCurve] , refLoc )\\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\\ncmds.setAttr( cvShape1 + \'.controlPoints[0]\', 0,0,0,type=\'double3\' )\\ncmds.connectAttr( startLoc + \'.translate\' , cvShape1 + \'.controlPoints[1]\', f=True )\\ncmds.setAttr(  endShape1 + \'.controlPoints[0]\', 0,0,0,type=\'double3\' )\\ncmds.connectAttr( EndLoc + \'.translate\' , endShape1 + \'.controlPoints[0]\', f=True )\\n\\ncmds.connectAttr( angleReader + \'.angle\',  refLoc + \'.angle\', f=True  )\\n\\n#Don\'t let depency node lives in the wild polluting the outliner: group them in container\\nasset = cmds.container( type=\'dagContainer\',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\\n\\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\\ncmds.setAttr( asset + \'.angle\',e=True,keyable=True  )\\n\\ncmds.connectAttr(  refLoc + \'.angle\',  asset + \'.angle\' , f=True  )\\n#dont forget to rename The hyperLayout node associate with this container\\nlayout = cmds.listConnections(  asset , t=\'hyperLayout\' )[0]\\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\\n\\n#kindly prefix the element in the container\\nNodeList =  cmds.container(asset, q=True, nl=True)\\nfor node in NodeList :\\n    cmds.rename( node,asset + \'_\' + node, ignoreShape=True)\\n</pre>\\n<p><img alt=\\"\\" class=\\"aligncenter\\" height=\\"451\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/vector_angle.gif?w=393&#038;h=451\\" title=\\"angle range beetween 2 vectors\\" width=\\"393\\" /></p>\\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.</p>\\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )</em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\\u00a0 in a clock wise manner.</p>\\n<p>2) History and time as a 4th dimension:</p>\\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\\u00a0 host a wealth of research papers:</p>\\n<ul>\\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href=\\"http://www.chrisevans3d.com/reference.htm\\"><span style=\\"color: #ff6600;\\"><em>http://www.chrisevans3d.com/reference.htm</em></span></a></li>\\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href=\\"http://kesen.realtimerendering.com/\\"><span style=\\"color: #ff6600;\\"><em>http://kesen.realtimerendering.com/</em></span></a></li>\\n</ul>\\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.</p>\\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.</p>\\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .</p>\\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),</em> and not interactive.</p>\\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href=\\"http://www.strarup.net/maya/plugins/lagNode/\\"><span style=\\"color: #ff6600;\\"><em>Alex V. U. Strarup</em></span></a> was talking about a lag node inspired by maya framecache node.</p>\\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).</p>\\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\\u00a0 an MPlug and MDGContext.</p>\\n<p>This is what make it possible to <span style=\\"color: #ff6600;\\"><em>&#8216;ghost&#8217;</em></span> an animated object in maya among many other things.</p>\\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br />\\n<em>(a little excerpt from Antitrust movie )</em></p>\\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style=\\"color: #ff6600;\\">setDependentsDirty</span>()\\u00a0 method\\u00a0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):</em></p>\\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.</p>\\n<p>I took advantage of this property to determine a twist direction:</p>\\n<ul>\\n<li>Inside a compute method ,the value of separate output buffer is first readen</li>\\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.</li>\\n<li>Finally\\u00a0 if the input and buffer values are not identical we store the twist input value into the output attribute.</li>\\n</ul>\\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.</p>\\n<p><img alt=\\"\\" height=\\"471\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/vector_direction.gif?w=435&#038;h=471\\" title=\\"\\" width=\\"435\\" /></p>\\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) </em>we can use their\\u00a0 cross product to create a perpendicular vector that will act as a twist axis.</p>\\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\\u00a0 the reference vector <em>about</em> the twist axis <em>by</em> 90.0 degrees.</p>\\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.</p>\\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .</p>\\n<p>In his article <span style=\\"color: #ff6600;\\"><em>(<a href=\\"http://www.3dfiggins.com/writeups/forearmTwist/\\">\\u00a0http://www.3dfiggins.com/writeups/forearmTwist/</a> )</em></span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:</p>\\n<ul>\\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.</li>\\n<li>As a manual process, the result can be less accurate or lacks consistency.</li>\\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.</li>\\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.</li>\\n</ul>\\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.</p>\\n<p>Part of the remaining works was\\u00a0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.</p>\\n<p>3)<em> Angle <span style=\\"color: #ff6600;\\">accumulation</span> versus number of <span style=\\"color: #ff6600;\\">revolution</span>:</em></p>\\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\\u00a0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.</p>\\n<p><img alt=\\"\\" height=\\"395\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/clock_circle.gif?w=395&#038;h=395\\" title=\\"\\" width=\\"395\\" /></p>\\n<p>First it was important to translate the past and current rotation vector into a more consistent\\u00a0 value : a normalized value <em>U</em> that represent a percentage of a circle perimeter.</p>\\n<p>One way to figure this circle purpose is to think of it\\u00a0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.</p>\\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\\u00a0the separation line increases and its band can start to turn and wrap\\u00a0 several times around this cylinder.</p>\\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution</em> and a parametric value U.</p>\\n<pre class=\\"brush: python; wrap-lines: false;\\">\\n# Procedure to compute the number of revolution along on unit circle\\n\\n#Case A: positive rotation direction:\\n### current rotation is in most case greater than past rotation\\n### when this is false we can increment the number of revolution\\n\\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\\nif past_rotation &gt; current_rotation :\\n   currentRevolution += 1.0\\n\\n#Case B: negative rotation direction:\\n### current rotation is in most case lower than past rotation\\n### when this is false we can decrement the number of revolution\\n\\nif past_rotation &lt; current_rotation :\\n   currentRevolution -= 1.0\\n\\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\\ncurrentRevolution_outputHandle.setClean()\\n</pre>\\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\\u00a0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].</p>\\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .</p>\\n<p>4)<em> Counter measure for a <span style=\\"color: #ff6600;\\">previous value dependent</span> node</em>:</p>\\n<br />  <a href=\\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/575/\\" /></a> <img alt=\\"\\" border=\\"0\\" height=\\"1\\" src=\\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\\" width=\\"1\\" />", "summary": "This post is about\\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\\u00a0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\\u00a0 I was often confronted with twist popping out of control w", "id": "http://circecharacterworks.wordpress.com/?p=575", "categories": [], "metadata": {"guid": "6cc70911-ba01-4409-b2bb-128dee5d7817", "likes": 0, "is_published": false}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=81", "title": "instantiate an asset by name", "datetime": "2011-07-20T01:17:18", "html": "<p>More Unity learning&#8230;</p>\\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):</p>\\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.</p>\\n<p>Then use the following code (Boo):</p>\\n<pre class=\\"brush:py\\">obj as GameObject\\nins as GameObject\\n\\n# let\'s grab the asset\\nobj=Resources.Load(\\"tile_flat01\\", GameObject)\\n# add a texture to the asset\\nobj.renderer.material.mainTexture=Resources.Load(\\"cobbleTex\\", Texture2D)\\n# instantiate it\\nins=Instantiate(obj)</pre>\\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.</p>\\n<p>edit: seems I have to find a Unity icon for my blog</p>", "summary": "More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82", "id": "http://blarg.robertkist.com/?p=81", "categories": [], "metadata": {"guid": "3ed9e97a-8998-4ff4-80dd-57108af42b7d", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=701", "title": "Compliments to the chef!", "datetime": "2011-07-20T00:44:10", "html": "<p>My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \\u00a0One time, a food critic dined there, and enjoyed his <em>paella</em>\\u00a0so much that he went into the back to compliment the chef. \\u00a0He saw the two and congratulated the dishwasher-who didn&#8217;t speak a lick of English- on a dish well made.</p>", "summary": "My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \\u00a0One time, a food critic dined there, and enjoyed his paella\\u00a0so much that he went into the back to compliment the chef. \\u00a0He saw", "id": "http://www.robg3d.com/?p=701", "categories": [], "metadata": {"guid": "5e9b13e5-d329-4e9f-a441-c7a19ee854fd", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=350", "title": "Rigging for the masses!", "datetime": "2011-07-19T22:14:43", "html": "<p>Last weekend I&#8217;ve been giving a conference about rigging in <a href=\\"http://www.campus-party.es/2011/index.html\\" target=\\"_blank\\" title=\\"Campus Party\\">Campus Party</a>. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In spanish.<br />\\n<em><br />\\nEl pasado fin de semana estuve en <a href=\\"http://www.campus-party.es/2011/index.html\\" target=\\"_blank\\" title=\\"Campus Party\\">Campus Party</a>, en Valencia, dando una charla. Mi objetivo era hacer que la gente ajena al 3D entendiese en qu\\u00e9 consiste la figura del &#8216;rigger&#8217; y c\\u00f3mo se encaja dentro de una producci\\u00f3n. La organizaci\\u00f3n ha subido esta conferencia (as\\u00ed como todas las dem\\u00e1s) a Youtube, as\\u00ed que se puede ver completa. En espa\\u00f1ol.</em></p>\\n<p></p>\\n<p>&#8212;&#8212;&#8212; <strong>\\u00a1AUTOBOMBO EXTRA!</strong> &#8212;&#8212;&#8212;</p>\\n<p><em>Hace unos meses, Abel, del <em>podcast</em> &#8216;Houston, tenemos un programa&#8217;, me hizo una entrevista para su programa. Se puede escuchar y descargar desde <a href=\\"http://www.houstontenemosunprograma.com/2011/05/setup-de-personajes-con-iker-j-de-los.html\\" target=\\"_blank\\" title=\\"aqu\\u00ed\\">aqu\\u00ed</a>.</p>\\n<p></em></p>", "summary": "Last weekend I&#8217;ve been giving a conference about rigging in Campus Party. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In span", "id": "http://somosposmodernos.com/blog/?p=350", "categories": [], "metadata": {"guid": "d2a10086-f592-4166-b969-68cc2beb0b4b", "likes": 0, "is_published": false}}]'
07-31 20:06 root         INFO     Handling CGI request.
07-31 20:06 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:06 SocketClient INFO     Sending to service: "["request_content_slice", [15, 15], {}]"
07-31 20:06 SocketClient INFO     Received from service: "[{"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/19/gavit-dev-diary-14/", "title": "Gavit Dev Diary #14", "datetime": "2011-07-19T15:15:27", "html": "<p>It&#8217;s been a while since the last developer diary. Unfortunately the project suffered a serious setback on the programming side: I trusted the wrong person and got screwed. I lost a couple of hundred bucks but more importantly so much time was wasted that the planned animated short (showcasing the features of Gavit) can not be finished in time. I&#8217;ll have to come up with some other way to effectively present my achievements to potential employers.</p>\n<p><del>So if you are an experienced unreal programmer (or you know one who might be interested) <a href=\"http://www.zspline.net/blog/contact/\" target=\"_blank\">please let me know</a>.</del></p>\n<p><strong>UPDATE</strong>: Never mind, the good people at <a href=\"http://www.digitalconfectioners.com/\" target=\"_blank\">Digital Confectioners</a> took over the project. :)</p>\n<p>Other aspects of the project did advance though: I reported half a dozen modo bugs and implemented a few workarounds for them in my export script. I extended my MetaSL shader library with a few extra nodes and further refined the whole workflow.</p>\n<p>But these &#8220;under the hood&#8221; improvements are boring so let&#8217;s see something more visual.</p>\n<p>This is Mr Elegant, our first proper (non-test-dummy) character:</p>\n<div class=\"wp-caption aligncenter\" style=\"width: 170px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant01.png\" rel=\"lightbox\" title=\"mrelegant01.png\"><img alt=\"\" class=\"thumb \" height=\"134\" id=\"thumb607\" src=\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant01.png\" width=\"160\" /></a>\n<p class=\"wp-caption-text\">Mr Elegant (ingame)</p>\n</div>\n<p class=\"thickbox\" title=\"mrelegant01.png\">It was modeled by <a href=\"http://www.joshstoker.com/\" target=\"_blank\">Josh Stoker</a> in ZBrush then it was sent to modo using the excellent GoZ functionality. I used convexity/concavity tracing to generate the base diffuse color map:</p>\n<div class=\"wp-caption aligncenter\" style=\"width: 143px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant02.png\" rel=\"lightbox\" title=\"mrelegant02.png\"><img alt=\"\" class=\"thumb \" height=\"160\" id=\"thumb608\" src=\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant02.png\" width=\"133\" /></a>\n<p class=\"wp-caption-text\">The diffuse color.</p>\n</div>\n<p>Earlier I wrote about the theory behind <a href=\"http://www.zspline.net/blog/2011/05/22/gavit-dev-diary-13/\" target=\"_blank\">character colorization</a> and here I implemented it. The black/red/green areas are defined as vertex colors on the SDS cage of the high definition mesh then baked down to the low polygon object:</p>\n<div class=\"wp-caption aligncenter\" style=\"width: 143px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant03.png\" rel=\"lightbox\" title=\"mrelegant03.png\"><img alt=\"\" class=\"thumb \" height=\"160\" id=\"thumb609\" src=\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant03.png\" width=\"133\" /></a>\n<p class=\"wp-caption-text\">Vertex colors on the high polygon mesh.</p>\n</div>\n<p>This texture along with the extra UV map defining color zones, allow me to separately recolor the skin, the facial hair, the tie, the shirt, the handkerchief, the jacket, the hands, the pants, the shoes, the front of the shoe and the sole.</p>\n<p>I combined the &#8220;specular&#8221; and &#8220;specular power&#8221; maps into one texture so the final shader uses 4 texture samplers and 99 instructions (although that will go up a bit as soon as the mesh gets skinned).<!-- PHP 5.x --></p>", "summary": "It&#8217;s been a while since the last developer diary. Unfortunately the project suffered a serious setback on the programming side: I trusted the wrong person and got screwed. I lost a couple of hundred bucks but more importantly so much time was wasted that the planned animated short (showcasing ", "id": "http://www.zspline.net/blog/?p=1333", "categories": [], "metadata": {"guid": "15b2a405-d225-4d5c-9dcc-d617f27e5ab4", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://www.chrisevans3d.com/pub_blog/?p=673", "title": "SIGGRAPH 2011", "datetime": "2011-07-19T07:32:42", "html": "<p>I am giving three small talks at SIGGRAPH, drop me a line if you will be in Vancouver.</p>\n<h2><a href=\"http://www.siggraph.org/s2011/content/Rigging-Characters-CryENGINE-0\" target=\"_blank\">Rigging Characters for CryENGINE</a></h2>\n<p>How to rig, skin, and export a character for CryENGINE 3. Topics include  physics setup, building characters from many skinned meshes, and  creating Character Definitions and Character Parameter files. These  rigging basics are applicable to most run-time game engines.</p>\n<h2><a href=\"http://www.siggraph.org/s2011/content/introduction-python-scripting-0\" target=\"_blank\">Introduction to Python Scripting</a></h2>\n<p>In this introduction to Python, a powerful scripting language used by  many 3D applications, attendees learn the basics and explore small  example scenarios gleaned from actual game and film productions. The  sessions are taught in a way that should empower attendees to  immediately begin creating time-saving python scripts and applications.</p>\n<h2><a href=\"http://www.siggraph.org/s2011/content/World-Creation-CryENGINE-0\" target=\"_blank\">World Creation in CryENGINE</a></h2>\n<p>Have you ever wanted to make a videogame? This session shows how to  build a small level in the freely available CryENGINE 3 SDK. Topics  include: world building and tools (FlowGraph, CryENGINE&#8217;s visual  scripting language, and Trackview, the camera sequencing and directing  tools). In less than an hour, attendees create their own playable video  games.</p>", "summary": "I am giving three small talks at SIGGRAPH, drop me a line if you will be in Vancouver.\nRigging Characters for CryENGINE\nHow to rig, skin, and export a character for CryENGINE 3. Topics include  physics setup, building characters from many skinned meshes, and  creating Character Definitions and Chara", "id": "http://www.chrisevans3d.com/pub_blog/?p=673", "categories": [], "metadata": {"guid": "6dc7f8a3-ffd1-4f59-8c05-d5b4c6460f8a", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=698", "title": "Cloud Based Pipelines?", "datetime": "2011-07-19T00:37:28", "html": "<p>Originally posted on <a href=\"http://altdevblogaday.com/2011/07/16/cloud-based-pipelines/\">AltDevBlogADay</a>:</p>\n<p>The rest of software is moving into The Cloud, how come we aren&#8217;t doing the same with our tools and pipeline?</p>\n<p>I love the cloud. \u00a0Yes, I know it&#8217;s a buzz word for not quite revolutionary concepts, but I love it anyway. \u00a0I love it for the practical benefit I get, and I love it for the technological possibilities it brings. \u00a0It doesn&#8217;t just mean using web apps- it means using amazing applications that run in any browser on any platform, it means not worrying about storing data locally, it means a rich and expanding personal experience based on the connections between your data and everyone else&#8217;s.</p>\n<p>And then I think about most of the pipelines I&#8217;ve seen and I wonder: what have we missed? \u00a0Very often, we are building some of the most incredible and expensive games ever with incredibly shitty sets of tools. \u00a0Why do we have essentially the same pipelines as we&#8217;ve had for the same 10+ years? (I recently<a href=\"http://www.robg3d.com/?p=542\"> finished a case study</a> of Dark Angel&#8217;s pipeline, from 2001, which is remarkably similar to some I&#8217;ve seen recently). \u00a0Game production has changed, but pipelines have not. \u00a0We&#8217;re releasing games that get downloaded content (or are continuously updated like an MMO), and the amount of content is ballooning. \u00a0Yet we&#8217;re still using essentially the same technologies and strategies as we were in 2001. \u00a0There&#8217;s something to learn by looking at Cloud technologies and concepts, buzzword or not.</p>\n<p><strong>Can game pipelines, too, move into the cloud?</strong></p>\n<p>The one essential aspect of the cloud is its basis in service-based architectures. \u00a0For the sake of simplicity and those unfamiliar, let&#8217;s say a service is a local or remote process that has some set of exposed methods that can be called by a client through a common protocol (JSON, XMLRPC, etc.). \u00a0All other aspects of cloud technologies require this serviced based architecture. \u00a0You couldn&#8217;t have the characteristic web apps if there was no service behind them. \u00a0You couldn&#8217;t run the same or similar page on any platform and device if the work was happening on the client instead of the service. \u00a0You couldn&#8217;t have a backend that automatically scales if the real work was happening in a Rich Client App (RCA) instead of in a service.</p>\n<p>Could we build our pipelines with the same service-based approach (if not the always-there distributed-ness), and would we get similar results?</p>\n<pre lang=\"txt\">,--.::::::::::::::::::::::::::::::::::::\n    )::::::::::::::::::::::::::::::::..\n  _'-. _:::::::::::::::::::::::::::..\n (    ) ),--.::::::::::::::::::::::.\n             )-._::::::::::::::::::..\n_________________) ::::::::::::::...</pre>\n<p>Yes, we can. \u00a0But let&#8217;s consider what a service-based pipeline architecture would look like. \u00a0The biggest change is moving nearly all functionality out of DCC apps, which are RCA&#8217;s, and into libraries that can be consumed by the services. \u00a0This is what I&#8217;ve been doing for years, but I understand it may be a new thing for many people- but I guarantee you can do it and you&#8217;ll be better off because of it, not having to deal with buggy and monolithic DCC apps. \u00a0These libraries/services can use headless apps behind the scenes if necessary, to do rendering or some processing or whatever (mayabatch.exe or whatever). \u00a0Avoid it if you can, but you could do it.</p>\n<p>The DCC and its UI&#8217;s, then, become very simple shells which just call methods on the service, and contain very little functionality of their own. \u00a0The service does the processing and calls back to the client (and if the function can be done asynchronously, the user keeps working while the work happens in the background). \u00a0The service can communicate to other remote and local services to do the work it needs to do.</p>\n<p>Conceptually it is simple, but I promise you, the implementation will be complex. \u00a0So the benefits better be worth it.</p>\n<p>And they would be. \u00a0The first thing you get is better abstraction between systems and components. \u00a0We remove ourselves from the hacks and workarounds of programming in a DCC, and can instead concentrate on working in a sensible development environment and not have to worry about debugging in app or having to make sure all our libraries work under whatever half-assed and old implementation of python Autodesk provides. \u00a0This results in being more deliberate about design decisions- not having a hundred pipeline modules available to you is actually a good thing, it forces you to get your dependencies under control, and you give more consideration to your APIs (I <a href=\"http://www.robg3d.com/?p=385\">blogged about</a> how server/client systems can be a useful exercise in abstraction).</p>\n<p>These abstractions also give greater scalability. \u00a0No problem moving your code between versions of your DCC, machine architectures, python/.NET versions, etc. \u00a0It doesn&#8217;t have the ball and chain of DCC apps, because you&#8217;ve taken it all out of the DCC apps. \u00a0Compare this flexibility in scalability to something like render farms- they usually have a very specific functionality and required software and added more functionality takes lots of engineering time. \u00a0By having &#8216;normal&#8217; code that can be run on any machine, you can distribute your processing to a farm that can tackle anything, and doesn&#8217;t require as complex systems or specialized skills to manage. \u00a0This is the distributed processing capacity of cloud computing (in fact you could probably deploy this code to a cloud provider, if you had good server-fu).</p>\n<p>These abstractions also lead to language neutrality. \u00a0That&#8217;s right, I said it. \u00a0I didn&#8217;t say it is a good idea, just that it&#8217;s possible. \u00a0Just the same way the Twitter API has been wrapped in three dozen languages, your services should have an API using a common protocol like JSON, and many services and clients can communicate together. \u00a0You&#8217;re not stuck using COM or marshalling data or any other number of bullshit techniques I&#8217;ve seen people do to glue things together. \u00a0Your client can be anything- a DCC, a web app, a mobile app- you could even run it via email if you so desired, with zero change to the pipeline itself- only the client code you need to call it. \u00a0And don&#8217;t forget hosting a web page in a library like Qt or .NET could also run the service.</p>\n<p>This is software engineering as we tech artists and pipeline engineers should have been doing all along.</p>\n<pre lang=\"txt\"> _______________\n| | _________ |o|\n| |___________| |\n|     _____     |\n| DD |     |   V|\n|____|_____|____|</pre>\n<p>Let&#8217;s take a simple pipeline, like a character mesh exporter that includes an automatic LoD creator. \u00a0In Maya (or Max, or XSI, whatever), the user just hits &#8216;export selected&#8217;, and it can transfer the mesh data and the Maya filename/mesh name to the Local Service.&#8217; \u00a0It can transfer the mesh data directly as a json object, or it can save it to an fbx file first and transfer the name of the fbx file, whatever- the point is that it isn&#8217;t data <em>in</em>\u00a0the DCC, it&#8217;s data <em>from</em>\u00a0the DCC.</p>\n<p>At that point, Maya&#8217;s work is done and the user can go back to working while everything else happens in the background in other processes and machines. \u00a0Awesome! \u00a0Most (all?) DCC&#8217;s are still very single threaded so trying to do any real work in background threads is not practical (or stable&#8230;).</p>\n<p>The Local Service sends the mesh data to some Remote Services to request the generation of some crunched and optimized LoD meshes. \u00a0The Local Service can call an Asset Management Service with the scene filename/mesh name, to get the export path of the final mesh file. \u00a0The Local Service can then do whatever it needs to do to &#8216;export&#8217; the content: call some exe files, serialize it, whatever, it just needs to save the exported file to where the Asset Management Service said it should be.</p>\n<p>The Remote Services can call back to the Local Service as they finish processing the LoD&#8217;s, and the Local Service can save them where they&#8217;re supposed to go as well. \u00a0All of this without the user having to wait or intervene for anything, and without bogging down his box with expensive, CPU hungry operations.</p>\n<pre lang=\"txt\">  __________\n/_________/ |\n|         | |\n| |====|  | |\n| |====|  | |\n|   ___   | |\n|  | @ |  | |\n|   ---   | |\n|_________|./</pre>\n<p>Is this complex? \u00a0Yes. \u00a0Is it possible for a technically competent team to do? \u00a0Absolutely not. \u00a0Pipelines are the bastard child of game technology, and it show- we have been doing the same crappy things for a decade. \u00a0If we want to minimize ballooning costs of content development, develop robust pipelines capable of supporting games after ship with updates and DLC, and, let&#8217;s face it, work on some inspiring and exciting new technology, we&#8217;ll take pipelines to the cloud.</p>", "summary": "Originally posted on AltDevBlogADay: The rest of software is moving into The Cloud, how come we aren&#8217;t doing the same with our tools and pipeline? I love the cloud. \u00a0Yes, I know it&#8217;s a buzz word for not quite revolutionary concepts, but I love it anyway. \u00a0I love it for the practical bene", "id": "http://www.robg3d.com/?p=698", "categories": [], "metadata": {"guid": "06e15c51-d76f-465b-b68a-35e1f95a998f", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=780", "title": "yay for g+", "datetime": "2011-07-18T03:25:20", "html": "<p>Never managed to get into facebook. Within hours of signing up I had friend requests from all sorts of crazy people that I either barely knew, or knew but certainly wasn&#8217;t keen or comfortable sharing various aspects of my life with etc&#8230; I&#8217;m sure the story is familiar. So it just didn&#8217;t take with me.</p>\n<p>Anyhoo, g+ seems like its solved all of these problems in a way that makes complete sense. And its google. I manage all my photos with picasa because its just bloody easy. And I LOVE gReader. So anyway, hopefully it&#8217;ll be awesome. If you&#8217;re not using it, try it out. Look for <a href=\"https://plus.google.com/108847499546939618060/posts\" target=\"_blank\">macaronikazoo</a>!</p>", "summary": "Never managed to get into facebook. Within hours of signing up I had friend requests from all sorts of crazy people that I either barely knew, or knew but certainly wasn&#8217;t keen or comfortable sharing various aspects of my life with etc&#8230; I&#8217;m sure the story is familiar. So it just di", "id": "http://www.macaronikazoo.com/?p=780", "categories": [], "metadata": {"guid": "18b29e5c-bde8-4d40-a2c9-07e4bf37b7d9", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=685", "title": "I\u2019m on Google+", "datetime": "2011-07-17T20:55:19", "html": "<p>I&#8217;m on Google+, and it is the FIRST social networking site I&#8217;ve ever actively participated in. It seems pretty awesome so far, have I been missing this on Facebook all these years?</p>\n<p>Fine me here: https://plus.google.com/u/0/112207898076601628221/posts//p/pub</p>", "summary": "I&#8217;m on Google+, and it is the FIRST social networking site I&#8217;ve ever actively participated in. It seems pretty awesome so far, have I been missing this on Facebook all these years? Fine me here: https://plus.google.com/u/0/112207898076601628221/posts//p/pub", "id": "http://www.robg3d.com/?p=685", "categories": [], "metadata": {"guid": "5789492d-3749-4f6f-9672-af17a67f88a8", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=752", "title": "object oriented rigging in Skeleton Builder", "datetime": "2011-07-17T15:47:03", "html": "<p>Skeleton builder is a neat framework for writing rigging code, but its also a useful tool for writing runtime tools as well. \u00a0I figured I&#8217;d go over an example of this because its not terribly obvious until you actually get in there and write some code. And even then, its not terribly obvious until you read all the code written in baseRigPrimitive&#8230;</p>\n<p>Writing a tool to do seamless Ik/Fk switching on an arbitrary rig is basically impossible. \u00a0After all, your particular limb setup might be a simple biped leg, a 5 jointed spider type leg, or a quadruped leg or any other crazy scenario. \u00a0Writing a single function to deal with all these possibilities, especially when you factor in the different ways these rigs could be implemented is basically impossible.</p>\n<p>But writing the logic to do the switch for any of them in isolation is generally dead easy. \u00a0This is the sort of problem that object oriented programming was invented to solve. \u00a0In Skeleton Builder the way I solve these problems is like this.</p>\n<p>In Skeleton Builder you write rig primitives. Each rig primitive is written to rig a particular sub-section of a skeleton and the code to do so is implemented in its own class. \u00a0So using the above examples I would have 3 classes: BipedLegRig, SpiderLegRig and QuadrupedLegRig. \u00a0Now on each one of these classes, lets define a switchToIk() method and a switchToFk() method. \u00a0So the switching logic for each rig type can be implemented independently on each of these classes.</p>\n<p>Your code will look something like this:</p>\n<pre class=\"brush:py\">import rigPrimitives\n\nclass SpiderLegRig(rigPrimitives.RigPart):\n  #this class variable defines the alias' for the controls. controls are accessed using these alias'\n  CONTROL_NAMES = 'legControl', 'fkThigh', 'fkKnee', 'fkAnkle'\n\n  def _build( self, skeletonPart, **kw ):\n    #the code to build the actual rig goes here\n    ...\n\n    #this is the list of nodes that will get connected to the alias' defined\n    #in the CONTROL_NAMES class variable\n    controls = ikControl, fk0, fk1, fk2\n    namedNodes = ()\n\n    return controls, namedNodes\n  def switchToIk( self ):\n\n    #this code grabs the actual control nodes based on their alias'\n    legControl = self.getControl( 'legControl' )\n    fkThigh = self.getControl( 'fkThigh' )\n    fkKnee = self.getControl( 'fkKnee' )\n    fkAnkle = self.getControl( 'fkAnkle' )\n\n    #logic to switch from Fk to Ik goes below\n    ...\n  def switchToFk( self ):\n    #logic to switch from Ik to Fk goes below\n    ...</pre>\n<p>Then calling this switch method is as simple as doing something like this:</p>\n<pre class=\"brush:py\">from maya import cmds\n\nselectedControls = cmds.ls( sl=True )\nif selectedControls:\n  rigPart = rigPrimitives.RigPart.InitFromItem( selectedControls[0] )\n  rigPart.switchToFk()</pre>\n<p>And voila. So now you can write a single UI that lets users switch between Ik and Fk for ANY part of the rig simply by running the above code.</p>\n<p>I&#8217;ll write up another post with another example of a useful runtime tool that I&#8217;ve written that would be very difficult to do without a nice object oriented rigging framework to leverage.</p>", "summary": "Skeleton builder is a neat framework for writing rigging code, but its also a useful tool for writing runtime tools as well. \u00a0I figured I&#8217;d go over an example of this because its not terribly obvious until you actually get in there and write some code. And even then, its not terribly obvious u", "id": "http://www.macaronikazoo.com/?p=752", "categories": [], "metadata": {"guid": "bc24336d-9e40-4ac0-be25-433a8b3f08f5", "likes": 0, "is_published": false}}, {"author": "Peter van Ooijen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/IOooyM5QxII/", "title": "Pimping the content of a (Monotouch) iPhone app with a webview", "datetime": "2011-07-17T12:40:15", "html": "<p>At first sight iOS offers a rich set of UI elements containing things like navigation- tool- and tab-bars, buttons,&nbsp; spinners and scrolling views. When it comes to presenting text content there is the textview. Which does offer scrolling and automatic links for Utl\u2019s and phone numbers&nbsp; but dos not have a lot of possibilities to make the content look really good. The main reason is that all text in the view is displayed in one and the same font. No way to even just emphasize a single word in bold.</p>\n<h2>Back to HTML</h2>\n<p>For the remainder of this story I assume you are somewhat familiar with basic HTML and <a href=\"http://monotouch.net/\">Monotouch</a>&nbsp; or other iOS tools and will do a fast drive through. </p>\n<p>To make your content look better you need a WebView. At first sight this component seems intended to display online web-based content. Feeding it with local offline content, straight from code is just as easy. You can drop and size an UIWebView anywhere on a View (or instantiate one from code)&nbsp; and make it accessible to the code via an outlet. The webview has a method LoadHtmlString to feed it with content.</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 15pt;\">\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\">myWebView.LoadHtmlString(MyMarkup, <span style=\"color: blue;\">null</span>);</p>\n</div>\n<p><!--EndFragment--></div>\n<p><!--EndFragment-->\n<p>MyMarkup is the string containing Html content for the view. I will describe the basic possibilities for this content in a HTMLbuilder demo class which uses a stringbuilder to assemble the markup.</p>\n<p>Initialization in the constructor:</p>\n<ul>\n<li>Initializes the stringbuilder</li>\n<li>Create the &lt;head&gt; of the page</li>\n<li>Create a&nbsp; css-style sheet for the basic look of the \u201cpage\u201d</li>\n<li>Write the opening &lt;body&gt; tag</li>\n</ul>\n<p>After that the various methods build the content. These here are just some examples, just to get the idea. The assumptions made here</p>\n<ul>\n<li>All pages have the same fixed font set in the stylesheet.</li>\n<li>All images are in the Images folder</li>\n<li>All inline images have the same size</li>\n</ul>\n<p>I leave it up to your own imagination where, what and how to fix.</p>\n<p>The Markup property (when necessary) writes the page closing tags and returns the html for the \u201cpage\u201d. This result is fed straightly to the webview\u2019s LoadHtmlString method.</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> <span style=\"color: #2b91af;\">HTMLbuilder</span></p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> <span style=\"color: #2b91af;\">StringBuilder</span> html;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">bool</span> closed = <span style=\"color: blue;\">false</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> HTMLbuilder ()</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = <span style=\"color: blue;\">new</span> <span style=\"color: #2b91af;\">StringBuilder</span> ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;html&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;head&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;style type = \\&#8221;text/css\\&#8221;&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;body {font-family:helvetica;font-size:15;}&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;/style&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;/head&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;body&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">string</span> Markup</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">get</span></p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">if</span> (!closed)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; closed = <span style=\"color: blue;\">true</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\"color: #a31515;\">&#8220;&lt;/body&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\"color: #a31515;\">&#8220;&lt;/html&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> html.ToString();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> Append(<span style=\"color: blue;\">string</span> content)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(content);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> AppendBold(<span style=\"color: blue;\">string</span> content)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\"color: blue;\">string</span>.Format(<span style=\"color: #a31515;\">&#8220;&lt;b&gt;{0}&lt;/b&gt;&#8221;</span>, content));</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> AddParagraph(<span style=\"color: blue;\">string</span> tekst)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: blue;\">string</span>.Format (<span style=\"color: #a31515;\">&#8220;&lt;p&gt;{0}&lt;/p&gt;&#8221;</span>, tekst));</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">string</span> ImagePath (<span style=\"color: blue;\">string</span> image)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> NSBundle.MainBundle.PathForResource (<span style=\"color: blue;\">string</span>.Format (<span style=\"color: #a31515;\">&#8220;Images/{0}&#8221;</span>, image), <span style=\"color: #a31515;\">&#8220;png&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">string</span> InlineImage(<span style=\"color: blue;\">string</span> image)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">string</span>.Format(<span style=\"color: #a31515;\">&#8220;&lt;img src=\\&#8221;file:{0}\\&#8221; width=\\&#8221;22\\&#8221; height=\\&#8221;22\\&#8221; valign=\\&#8221;bottom\\&#8221;&gt;&#8221;</span>, ImagePath(image));</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> AddButton(<span style=\"color: blue;\">string</span> image, <span style=\"color: blue;\">string</span> urlpart)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">var</span> url = <span style=\"color: blue;\">string</span>.Format (<span style=\"color: #a31515;\">&#8220;&lt;a href=\\&#8221;{1}\\&#8221;&gt;&lt;img src=\\&#8221;file:{0}\\&#8221;&gt;&lt;/a&gt;&#8221;</span>, ImagePath(image), urlpart);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddParagraph (url);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment-->\n<p>The images and buttons require some explanation. A webview expects its resources, like an image, somewhere relative to it\u2019s URL. The Url is passed in the second parameter of the LoadHtmlString method. Here we are working local, inside the iPhone, there is no URL for that, as a second parameter I passed null. The ImagePath method translates the path of an image, which is a&nbsp; folder in the application, to a path reachable by the webview. The resulting url is fed to an &lt;img&gt; in the InLineImage or AddButton method.</p>\n<h2>Start surfing</h2>\n<p>The webview is also a great place for the user to start surfing the web. In the HTMLBuilder the AddButton method creates a clickable image which will take the user to an url outside the app. Like the company website. Clicking this button will fire up Mobile Safari which takes the user out of the app and into the site. The image turns into a linkbutton by embedding it in plain &lt;a&gt; tags. </p>\n<p>To steer this behavior the webview uses a WebViewDelegate</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> <span style=\"color: #2b91af;\">WebViewDelegate</span> : UIWebViewDelegate</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> WebViewDelegate ()</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">bool</span> ShouldStartLoad (UIWebView webView, MonoTouch.Foundation.NSUrlRequest request, UIWebViewNavigationType navigationType)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">if</span> (request.Url.Scheme.StartsWith (<span style=\"color: #a31515;\">&#8220;http&#8221;</span>)) {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UIApplication.SharedApplication.OpenUrl (request.Url);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">false</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">true</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment-->\n<p>The delegate checks the Url. When it is a http request it fires up the browser using SharedApplication.OpenUrl. Else the WebView is free to proceed.</p>\n<p>The delegate is set in the ViewDidLoad</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ViewDidLoad ()</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; WebViewDelegate = <span style=\"color: blue;\">new</span> WebViewDelegate ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = WebViewDelegate;</p>\n</div>\n<p><!--EndFragment-->\n<p>&nbsp;</p>\n<p>It is advised to remove the delegate when unloading</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ViewDidUnload ()</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = <span style=\"color: blue;\">null</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">base</span>.ViewDidUnload ();</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment--><br />\n<h2>More than HTML</h2>\n<p>So far we have seen the basics of pimping the content using HTML. The possibilities here are almost endless and Mobile Safari does work with HTML5. </p>\n<p>What HTML does not give you are specific iPhone features like gestures and the possibility to hook your own app code (behind<img alt=\"Smile\" class=\"wlEmoticon wlEmoticon-smile\" src=\"http://codebetter.com/petervanooijen/files/2011/07/wlEmoticon-smile.png\" style=\"border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none;\" />) in the page. The good thing is that the webview is a view like all other views, accessible to all&nbsp; your coding skills. As a demo I will add swiping to a webview. When the users swipes left or right the content of the webview is updated. Not by the browser, but my own code.</p>\n<p> The hard thing is that gesture-recognizers are not under quite the same control as the view, they have a different life cycle. Setting them up requires some fiddling. Doing that wrong will lead to a complete crash of the app.</p>\n<p>The methods handling the swipes are marked with an Export attribute.</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\">[Export(<span style=\"color: #a31515;\">\"SwipeLeft\"</span>)]</p>\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> SwipeLeftAction (UISwipeGestureRecognizer recognizer)</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; myWebview.LoadHtmlString(MyMarkup.prevPage(), <span style=\"color: blue;\">null</span>);</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">[Export(<span style=\"color: #a31515;\">\"SwipeRight\"</span>)]</p>\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> SwipeRightAction (UISwipeGestureRecognizer recognizer)</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.NextPage(), <span style=\"color: blue;\">null</span>);</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p>After a swipe the content is updated to my taste.</p>\n<p>Both the handlers should also be added as static properties of the view</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> Selector SwipeLeft {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">get</span> { <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">new</span> Selector (<span style=\"color: #a31515;\">&#8220;SwipeLeft&#8221;</span>); }</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> Selector SwipeRight {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">get</span> { <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">new</span> Selector (<span style=\"color: #a31515;\">&#8220;SwipeRight&#8221;</span>); }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment-->\n<p>Wiring up is done in the ViewDidLoad. Here it is absolutely essential to check whether the view already responds to the recognizer</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">if</span> (!View.RespondsToSelector (SwipeRight)) {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; var swipeRight = <span style=\"color: blue;\">new</span> UISwipeGestureRecognizer ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; swipeRight.AddTarget (<span style=\"color: blue;\">this</span>, SwipeRight);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; swipeRight.Direction = UISwipeGestureRecognizerDirection.Right;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; swipeRight.Delegate = <span style=\"color: blue;\">new</span> UIGestureRecognizerDelegate ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeRight);</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment-->\n<p>What the gesture recognizer will respond to should be self explanatory. The complexity of the wiring does show iOS is behind the scenes somewhat more complicated that the Monotouch framework can hide. </p>\n<h2></h2>\n<h2>Summing up</h2>\n<p>All of this leads to this result</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">partial</span> <span style=\"color: blue;\">class</span> <span style=\"color: #2b91af;\">MyPageWithWebView</span> : UIViewController</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp; #region</span> Constructors</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">#endregion</span></p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> WebViewDelegate WebViewDelegate;</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ViewDidLoad ()</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebViewDelegate = <span style=\"color: blue;\">new</span> WebViewDelegate ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = WebViewDelegate;</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">if</span> (!View.RespondsToSelector (SwipeRight)) {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var swipeRight = <span style=\"color: blue;\">new</span> UISwipeGestureRecognizer ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.AddTarget (<span style=\"color: blue;\">this</span>, SwipeRight);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.Direction = UISwipeGestureRecognizerDirection.Right;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.Delegate = <span style=\"color: blue;\">new</span> UIGestureRecognizerDelegate ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeRight);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">if</span> (!View.RespondsToSelector (SwipeLeft)) {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var swipeLeft = <span style=\"color: blue;\">new</span> UISwipeGestureRecognizer ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.AddTarget (<span style=\"color: blue;\">this</span>, SwipeLeft);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.Direction = UISwipeGestureRecognizerDirection.Left;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.Delegate = <span style=\"color: blue;\">new</span> UIGestureRecognizerDelegate ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeLeft);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">base</span>.ViewDidLoad ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ViewDidUnload ()</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = <span style=\"color: blue;\">null</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">base</span>.ViewDidUnload ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; [Export(<span style=\"color: #a31515;\">\"SwipeLeft\"</span>)]</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> SwipeLeftAction (UISwipeGestureRecognizer recognizer)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.prevPage(), <span style=\"color: blue;\">null</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; [Export(<span style=\"color: #a31515;\">\"SwipeRight\"</span>)]</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> SwipeRightAction (UISwipeGestureRecognizer recognizer)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.NextPage(), <span style=\"color: blue;\">null</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> Selector SwipeLeft {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">get</span> { <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">new</span> Selector (<span style=\"color: #a31515;\">&#8220;SwipeLeft&#8221;</span>); }</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> Selector SwipeRight {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">get</span> { <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">new</span> Selector (<span style=\"color: #a31515;\">&#8220;SwipeRight&#8221;</span>); }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment-->\n<p>Now I have the possibilities of pimping my content using HTML without giving up the power of C# code. </p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/IOooyM5QxII\" width=\"1\" />", "summary": "At first sight iOS offers a rich set of UI elements containing things like navigation- tool- and tab-bars, buttons,&#160; spinners and scrolling views. When it comes to presenting text content there is the textview. Which does offer scrolling and automatic&#160;&#8230; <a href=\"http://codebetter.com", "id": "http://codebetter.com/petervanooijen/2011/07/17/pimping-the-content-of-a-monotouch-iphone-app-with-a-webview/", "categories": [], "metadata": {"guid": "8e353e2f-8e72-4285-996c-23f4ee32a93a", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=584", "title": "Game Studio Takeover Nightmare Impossible", "datetime": "2011-07-17T02:29:31", "html": "<p>There&#8217;s a sub-genre of reality television that contains shows where experts come into a failing business and implement changes to fix things. \u00a0Three of the most well known are Gordon Ramsey&#8217;s Kitchen Nightmares, Robert Irvine&#8217;s Restaurant Impossible, and Tabatha&#8217;s Salon Takeover (totally awesome show, btw). \u00a0I&#8217;ve wondered what it&#8217;d be like to get a games industry version of one of these experts into a studio to see what she could do. \u00a0Fortunately, the programs all follow a very obvious (and repetitive) pattern to find and fix the problems- so you can really just do it yourself (most problems the experts find are obvious anyway- the people in charge are just ignorant or in denial).</p>\n<p>Follow these steps at your studio and imagine how things would go down.</p>\n<p><strong>Part 1: The initial personnel observation</strong><br />\nThe experts observe how things run without interferring. \u00a0They sit down to eat, watch hidden cameras, whatever.</p>\n<ol>\n<li>How do the employees get along? \u00a0Are they friendly to each other, do they enjoy work, do they hang out, do they do work?</li>\n<li>How does management interact with the employees?</li>\n<li>How many employees and managers are there, and what&#8217;s the ratio?</li>\n<li>Is there anything else fishy (nepotism, unqualified people, etc.)?</li>\n</ol>\n<p><strong>Part 2: The facilities inspection</strong><br />\nThe experts tour the facilities and inspect how things look, especially cleanliness.</p>\n<ol>\n<li>Do people have the right computer equipment and licenses?</li>\n<li>Are the bathrooms and structure in good shape? \u00a0AC working well?</li>\n<li>Are the employees treated well physically? \u00a0Are there drinks and food available?</li>\n<li>Where&#8217;s the studio located and where would people rather have it?</li>\n</ol>\n<p><strong>Part 3: The tragedy and shutdown</strong><br />\nThe expert does some minor changes and does a more formal observation, providing minor interventions. \u00a0Involves some sort of disaster. \u00a0Place eventually closes up and the expert begins to work his or her magic.</p>\n<ol>\n<li>What tools and processes go right? \u00a0What are the worst? \u00a0How far to which side is every tool and process in the middle?</li>\n<li>Do you have managers who crack under pressure, or do really obviously wrong things?</li>\n<li>Are there people seriously misbehaving? \u00a0Are there people seriously crunching?</li>\n<li>And the biggest question is: does the studio&#8217;s project suck, and what are the major problems with the game (is it not fun, has it taken way too long)?</li>\n</ol>\n<p><strong>Part 4: The personnel rebuilding</strong><br />\nRelationships are worked on, especially between employees and management. \u00a0Lots of training is provided.</p>\n<ol>\n<li>What training opportunities exist at your studio? \u00a0Are people encouraged to look outside for education? \u00a0Is ample opportunity provided internally?</li>\n<li>What are your employees biggest grievances? \u00a0What has changed the most in the past few years and how do your veterans feel about it?</li>\n<li>How are you dealing with your poor performers and rewarding your best?</li>\n<li>Figure out why the project/game is in the state it&#8217;s in, and put a plan in action to fix it and make sure it doesn&#8217;t keep happening.</li>\n</ol>\n<p><strong>Part 5: The facilities rebuild unveil</strong><br />\nNew and improved facilities are unveiled to the team.</p>\n<ol>\n<li>Your studio should be feeding you. \u00a0There&#8217;s no reason, financial or otherwise, not to provide developers with at least lunch every day.</li>\n<li>You should have enough bathrooms and they should be clean.</li>\n</ol>\n<p><strong>Part 6: First day reopening</strong><br />\nThe business runs for a day, usually with much better results (and generally a couple hiccups).<br />\nWith the grievances solved, or at least in the open and being worked on, studio culture should be improved and you can concentrate on building a great product.</p>\n<p><strong>Part 7: Checkin later</strong><br />\nExpert comes back to check up on how things have come along.<br />\nInevitably, some managers will devolve back into madness; or perhaps things were too far along to stop the studio&#8217;s shutdown or crappy project. \u00a0If you see this happening, you should leave.</p>\n<hr />\n<p>I wonder how something like this would fare in the games industry, and who the hell we could find to do it.</p>", "summary": "There&#8217;s a sub-genre of reality television that contains shows where experts come into a failing business and implement changes to fix things. \u00a0Three of the most well known are Gordon Ramsey&#8217;s Kitchen Nightmares, Robert Irvine&#8217;s Restaurant Impossible, and Tabatha&#8217;s Salon Takeo", "id": "http://www.robg3d.com/?p=584", "categories": [], "metadata": {"guid": "905cfadb-5cd4-44b1-95aa-619257392bde", "likes": 0, "is_published": false}}, {"author": "Rigging Dojo", "url": "http://www.riggingDojo.com/2011/07/16/leave-a-message/", "title": "Leave a message", "datetime": "2011-07-16T05:51:06", "html": "<p>Have we improved your work, helped you find a job or you just like what we are sharing and teaching?<br />\nMaybe you don&#8217;t like us and think we are terrible sock monsters ?</p>\n<p>Either way, take a second and comment on this post.<br />\nWe look forward to hearing from you.</p>\n<p>Thanks!</p>\n<p>Josh, Brad and Chad</p>\n<p><em><span style=\"color: #c0c0c0;\">*not responsible for lost socks</span></em></p>", "summary": "Have we improved your work, helped you find a job or you just like what we are sharing and teaching? Maybe you don&#8217;t like us and think we are terrible sock monsters ? Either way, take a second and comment on this post. We look forward to hearing from you. Thanks! Josh, Brad and Chad [...]", "id": "http://www.riggingDojo.com/?p=903", "categories": [], "metadata": {"guid": "6a14c947-65f0-4eb7-90e4-9826be683a72", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/07/15/resume-updated-demo-to-follow/", "title": "Resume Updated, Demo to Follow", "datetime": "2011-07-16T00:29:04", "html": "<!-- Start LikeButtonSetTop --><!-- End LikeButtonSetTop --><p>I did something productive today on my day off!\u00a0 Whilst staying at home avoiding &#8216;Carmageddon&#8217;, I spent hours revising my resume.\u00a0 Finally it is finished&#8230;\u00a0 oh, except for that mistake&#8230;\u00a0 <img alt=\";-)\" class=\"wp-smiley\" src=\"http://www.jonasavrin.com/wp-includes/images/smilies/icon_wink.gif\" /> \u00a0 View it at the normal <a href=\"http://www.jonasavrin.com/resume/\" title=\"Resum\u00e9\">location</a>.</p>\n<div class=\"shr-publisher-2646\"></div><!-- Start LikeButtonSetBottom --><!-- End LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "I did something productive today on my day off!\u00a0 Whilst staying at home avoiding &#8216;Carmageddon&#8217;, I spent hours revising my resume.\u00a0 Finally it is finished&#8230;\u00a0 oh, except for that mistake&#8230;\u00a0 \u00a0 View it at the normal location. &#038;nbsp", "id": "http://www.jonasavrin.com/?p=2646", "categories": [], "metadata": {"guid": "e390d8ff-6dbb-431f-ac9e-fd794ea3bddf", "likes": 0, "is_published": false}}, {"author": "Jeremy Miller", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/cgg4_cZpJAk/", "title": "FubuMVC Webinar Next Week", "datetime": "2011-07-15T14:11:57", "html": "<p><a href=\"http://twitter.com/#!/mkmurray\">Mike Murray</a> is giving a webinar introduction to FubuMVC next week as part of JP\u2019s Develop with Passion series.&nbsp; <a href=\"https://www1.gotomeeting.com/register/131448736\">Sign up here</a>.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/cgg4_cZpJAk\" width=\"1\" />", "summary": "Mike Murray is giving a webinar introduction to FubuMVC next week as part of JP\u2019s Develop with Passion series.&#160; Sign up here.", "id": "http://codebetter.com/jeremymiller/2011/07/15/fubumvc-webinar-next-week/", "categories": [], "metadata": {"guid": "124c0acd-dc31-4e72-ac32-b192f4b8ec74", "likes": 0, "is_published": false}}, {"author": "Ian Cooper", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/mi3ijGOOdh4/", "title": "Why CRUD might be what they want, but may not be what they need", "datetime": "2011-07-15T13:35:56", "html": "<h2>A brief history of CRUD </h2>\n<p>The Rolling Stones once sung:</p>\n<blockquote><p>&#8220;You can&#8217;t always get what you want, But if you try sometimes, well you just might find, You get what you need&#8221;</p></blockquote>\n<p>I think the same is true of CRUD. Our users seem to ask for it and we blindly agree to their wishes and build it; however, its regularly not what they need.</p>\n<h3>The File Store</h3>\n<p>When computers first arrived the early commercial use was to try and remove the need for paper files. Some of us may be old enough to remember that offices has filing departments with staff, where when we began a piece of work we went to get the records that the company had on that customer, or policy, or project. There were problems with this approach: file stores took up a lot of space, and the mangement of paper based records, particulary archival material is expensive; often, someone else had the file out, buried on their desk, and it was not always clear who &#8211; an early form of pessimistic concurrency control &#8211; which often stopped you responding to requests; files were only as useful as the discipline of maintaing them, and keeping them in order &#8211; searching was difficult within a file if it was not ordered and there was no idea of seaching the file store itself.</p>\n<p>So it was natural when we began to think about ways in which computers could help in the workplace to think about electronic filing systems. We would record the data around the customer, policy, or project on an electronic form instead of a paper one and the computer could store it for us. We saved paper, we saved staff, we saved time, and we added new functionality such as the ability to search.</p>\n<p>The UIs that we designed were optimized to enter data. After all there was a lot of data to enter just to catch up on. The essential questions for UX design became tab order or number of clicks &#8211; just how fast could we enter data. We wanted bulk data entry grids, and forms that mirrored our paper based forms, because that was what we needed to get out of the physical filing store and into our electronic store</p>\n<p>Throughout the paper told us what to do and the process was built around the form. The form was passed from person to person. Stickers attached to the form, or boxes on the file defined the workflow. The paper-trail was the business process. Indeed, early analysis techniques simply followed the paper trail. Initial systems just followed the existing paper based process. Someone took the paper, the insurance application form, and type it in to the terminal. Then a batch run moved the record to the next step, so the next person in line could perform the same step that they had at the computer.</p>\n<p>But no one really thought of this workflow as something the computer could handle. We just did handoffs the same way we did with paper. Indeed we sometimes used paper as the &#8216;token&#8217; that we passed around for the workflow and told you that you needed to enter the system and do some work. Or, later we became more sophisticated, and used email to do the same thing.</p>\n<p>And for this perspective &#8211; the electronic filing store &#8211; Create, Read, Update, and Delete (CRUD) was the paradigm we needed. It described the lifecycle of a paper file perfectly and with our goal to automate that physical file store it was a capable model &#8211; or so it seemed.</p>\n<h2>Brave New World</h2>\n<p>Users tend to create electronic documents today. There is less paper. Inputs come from phone, email, the consumer directly accessing a web-based interface. Removing the phsyical file store is no longer behind the business case to provide IT systems. We no longer want to remove the old filing room and its associated clerks. Of course we might want to move away from our new shadow IT world of documents on shared drives and Excel spreadsheets.</p>\n<p> The business goals around automation have changed too. To obtain the savings that justify the cost of IT savings, we want to enable smaller numbers of people to carry out the tasks formally done by many through not just electronic filing but through business process automation.</p>\n<p> But once we shift the goals away from data entry to process automation, the shape of our architecture changes too. Less of the value comes from data entry today. It comes from providing a key business differentiator that allows us to outperform the competition in service, control of costs, management of supply chain, enabling new business models through disintermediation etc.</p>\n<p>CRUD &#8211; a model for removing the old file store is less useful as a paradigm when we come to think about analysing and architecting a response to this kind of business process.</p>\n<p>Think about how we force users to interact under a CRUD paradigm. They have procedures written in a manual, a checklist for the process. They have to edit this page,then edit that page etc. The system consists of CRUD screens where the users do the data entry. People run their workflow using email. Business process is the preserve of a priesthood who maintain their position by understanding &#8216;how things are done here&#8217;. </p>\n<p>The problem here is that the behavior is not captured in the system, it is captured in the manual at best, more likely in the oral transmission of process from one worker to another. The business understands that it has workflow and behavior &#8211; they defined process with copies of memos, forms etc. We have not removed those steps by automating them, we have just\u00a0 given them electronic forms. Pejoratively we are little better than the shadow IT offering written in Access; why engage an IT expert at all for that, all you do is add cost. </p>\n<p>Much of the issue here is sheer laziness on our part. When I see tweets and blog posts saying: most business apps are CRUD, I hear, &#8220;we don&#8217;t want to work with the business to show them what IT could do for them&#8221;. Part of the reason is because it requires little skill to model CRUD; modelling business process is harder &#8211; but that is where the value lies. Think of early software development approaches that began with modeling the data, and then identified processes to act on that data. Is it any wonder we built CRUD based systems if we started by thinking about data. Data Flow diagrams, Process diagrams. These were the cornerstones of how we thought about the design phase of the software lifecycle and we have failed to escape from it. However, for our users recording data itself is rarely the end goal any more, completion of a business process is the goal.</p>\n<p>Now sure, in some cases we might still have CRUD, for some kinds of reference data, and I&#8217;m sure a lot of people will respond to this with straw men of CRUD only applications. But be careful. In a lot of cases the customer thinks about records management, and they don&#8217;t know you could help them with processing, business rules, workflow (or are frightened of what that might mean for their jobs). Anywhere where there is a process in someone&#8217;s head, a word document, or excel spreadsheet that says, when this happens, you need to go into this page and fill in these values on the form, you have behavior, or intent that could and should be captured.</p>\n<p>Let&#8217;s take a simple example: changing the state of a purchase order. What we tend to be saying is: the workflow for this process has reached a certain point and so it can move into this state. We can immediately see that we must have a number of things for this to occur: the purchase order must have some data that we need to validate it; we can also see that a number of things may be predicated on this occurring: we need to send the order to fulfilment, we need to begin the billing process etc. So this act, completing a purchase order, has both a workflow or business process and rules. A CRUD based approach to design tends to encourage us to leave these outside the system, with the user, in some set of manual checks or switching between parts of the application. What we want to look at is: is this process something we could automate, could the workflow and rules live in the system?</p>\n<p>Of course a traditional objection to putting workflow and rules &#8216;in the system&#8217; is that they can change. This causes some folks to suggest that they ought to be left out.</p>\n<p>Unfortunately in the typical business this means that a given named person Alice, Mary or Bob is the person that understands how to drive the process, and is mission critical to the success of the enterprise. If they get hit by a bus its all over, and they can pretty much ask for a raise whenever they like, because we can&#8217;t afford to lose them. Process diagrams often end up with a stick figure which imply that &#8216;Alice does her magic&#8217;. Often that person is uncommunicative and secretive about the process &#8211; to ensure that they remain essential to the business. When they are absent, things fall apart.</p>\n<p>No business really wants that.\n<p></p>\n<p>And the reality is that we have plenty of options we can use to make workflow and rules more configurable &#8211; though we need to look at the tradeoffs between the cost to change the app against using a rules engine or workflow engine carefully by understanding the amount of likely change.</p>\n<h2>Enter Tasks: What to you want to do today.</h2>\n<p>We need to drop the focus on CRUD and move to a focus on tasks: what is it that the user wants to accomplish, and how can we help them accomplish that?</p>\n<p>Let&#8217;s think about the case of a family doctor. In an appointment they tend to take the patient&#8217;s history, diagnose the illness, and prescribe a course of treatment. Now, in the UK the paper based way to achieve this used to be the <a href=\"http://www.patient.co.uk/doctor/Clinical-Negligence-and-the-Electronic-Patient-Record.htm\">Lloyd George envelope.</a> Simply replicating the functionality of the Lloyd George envelope using a CRUD approach would give us screens for entering consultation notes, prescriptions&#8230; But there is a lot more we could do to help. If we treat diagnosis as a task, then we ought to consider searching previous medical history to see if anything shows up related to the patient&#8217;s complaint that may be of concern. There may be guidelines for these symptoms that we should be following to check that we are not missing illnesses like meningitis. When we prescribe we can list common drugs for the illness, and look for incompatibility with drugs that the patient is currently being prescribed in a drugs database. That may lead to us offering further advice, for example if the patient is using the contraceptive pill and we prescribe them antibiotics.</p>\n<p>Or perhaps consider an on line retailer where the customer can go in and change their account details. If the customer changes their address, we might want to prompt the customer for in-flight orders and ask where they want them to be delivered &#8211; the old address or the new address.</p>\n<p>Ask yourself the question: am I thinking about the intent of what the user wishes to accomplish?</p>\n<p>The grid is particularly dangerous ground in this regard. It is rare that you can capture intent through a grid. if you are using a grid you are probably not focused on a task but on CRUD</p>\n<p>Greg Young has a great <a href=\"http://cqrsinfo.com/documents/task-based-ui/\">discussion on the Task-based UI</a>. It is one of the building blocks in a journey towards understanding the why of <a href=\"http://cqrsinfo.com/\">CQRS</a></p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/mi3ijGOOdh4\" width=\"1\" />", "summary": "A brief history of CRUD The Rolling Stones once sung: &#8220;You can&#8217;t always get what you want, But if you try sometimes, well you just might find, You get what you need&#8221; I think the same is true of CRUD.&#160;&#8230; <a href=\"http://codebetter.com/iancooper/2011/07/15/why-crud-might-be", "id": "http://codebetter.com/iancooper/?p=194", "categories": [], "metadata": {"guid": "3e513230-bb73-4898-955a-d937c88a736d", "likes": 0, "is_published": false}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=75", "title": "TileGame!", "datetime": "2011-07-15T05:43:12", "html": "<p>&nbsp;</p>\n<p>Whenever I see images of old Ultima games I become nostalgic, and I think I&#8217;m not alone. Why is there no modern adaptation that is not a cutesy cute J-RPG? Then recently I stumbled about two sites&#8230;</p>\n<p>* <a href=\"http://www.sophiehoulden.com/blog/\">Sophie Ho</a><a href=\"http://www.sophiehoulden.com/blog/\">ulden&#8217;s blog</a> &#8211; incredibly inspirational and shows what a single person can do</p>\n<p>* <a href=\"http://www.die-dunkle-dimension.de/\">Die Dunkl</a><a href=\"http://www.die-dunkle-dimension.de/\">e Dimension</a> &#8211; I loved this game on the C64 and it turns out that it was the labor of a single dedicated developer.</p>\n<p>So why not give it a try and make my own game? I&#8217;m not out to make money, instead I want this to be a learning exercise &#8211; create my own pipeline, tools, create art and program some game logic. Ideally the game should capture the feel of the old Ultima games (e.g. Ultima IV or V), but in 3D and with some improvements. I will go for a semi isometric top down view that still has a &#8220;tile&#8221; feel to it.</p>\n<p>Weapons of choice:</p>\n<p>* 3ds Max &#8211; I&#8217;m just more familiar with the modeling tools in this package</p>\n<p>* Unity 3D</p>\n<p>* Python + Qt + PIL &#8211; Tools will be written in this. e.g. my map editor</p>\n<p>* Boo &#8211; I spend some time looking at it and I just love how readable the code is. And it&#8217;s close enough to Python to be fun</p>\n<p>I will post some updates soon about some of the work I have done so far &#8211; e.g. version 0.1 of the map editor and my pipeline to get tiles from Max and my map into Unity.</p>\n<p><a href=\"http://blarg.robertkist.com/wp-content/uploads/2011/07/u42.png\"><img alt=\"\" class=\"size-full wp-image-78 aligncenter\" height=\"136\" src=\"http://blarg.robertkist.com/wp-content/uploads/2011/07/u42.png\" title=\"u4\" width=\"136\" /></a></p>", "summary": "&#160; Whenever I see images of old Ultima games I become nostalgic, and I think I&#8217;m not alone. Why is there no modern adaptation that is not a cutesy cute J-RPG? Then recently I stumbled about two sites&#8230; * Sophie Houlden&#8217;s blog &#8211; incredibly inspirational and shows what a sin", "id": "http://blarg.robertkist.com/?p=75", "categories": [], "metadata": {"guid": "f5c01ef8-3ee8-461e-b223-64ea18ab3397", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=582", "title": "Meaningful return values", "datetime": "2011-07-14T23:37:58", "html": "<p>I consistently see return values messed up in people&#8217;s API design. \u00a0Fortunately, there are some hard and fast rules to follow that make return values really hard to fuck up.</p>\n<ol>\n<li><strong>Only return True/False for a <em>single</em>\u00a0condition</strong>. \u00a0It is not an acceptable contract to say &#8216;Return True on success, False on failure.&#8217; \u00a0What is acceptable is &#8216;Return True on success, False if key does not exist.&#8217; \u00a0You&#8217;d still throw exceptions for invalid arguments or state.</li>\n<li><strong>Try to avoid returning from methods that mutate a public property on the instance you are calling the method on</strong>. \u00a0If <em>foo.Frobnicate()</em> mutates <em>foo</em> by changing <em>foo.Bar</em> (which is public), do not return a value- let the caller query <em>foo.Bar</em>. \u00a0It makes it more clear that <em>Frobnicate</em> is mutating and not just returning a value the caller can assign (a better design may be to NOT mutate and let the caller assign the result). \u00a0Make mutation the clear contract, not a side effect.</li>\n<li><strong>Except if you consistently return self/this</strong>. \u00a0For certain objects, it may make sense to mutate and return the object being mutated. \u00a0So you can string together calls, like you do on strings: <em>foo.Frobnicate().Spam().Eggs()</em>, which would mutate <em>foo</em>\u00a03 times. \u00a0Obviously if an object is immutable (like a string, or .NET IEnumerable) this is good design, but it can be unclear that the object is being mutated unless it is a core part of the object&#8217;s contract.</li>\n<li><strong>Do not have a return value if you don&#8217;t need it (private methods).</strong>\u00a0 If you have a private method, and no caller is using the return value, <em>don&#8217;t have a return value!</em>\u00a0 It generally means your contract is unclear, or your methods are doing too much, and your implementation needs some work.</li>\n</ol>\n<div>Pay close attention to how your return values work when you design your API&#8217;s and you&#8217;ll have a very easy way to detect code smell.</div>", "summary": "I consistently see return values messed up in people&#8217;s API design. \u00a0Fortunately, there are some hard and fast rules to follow that make return values really hard to fuck up. Only return True/False for a single\u00a0condition. \u00a0It is not an acceptable contract to say &#8216;Return True on success, F", "id": "http://www.robg3d.com/?p=582", "categories": [], "metadata": {"guid": "8a176157-ba8d-4641-8a8c-57b886decaf1", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/14/thoughts-on-razer-hydra/", "title": "Thoughts on Razer Hydra", "datetime": "2011-07-14T17:04:05", "html": "<p>Back in 1998 I saw an ad in a local PC magazine: it was about a gamepad which registered tilting. I was awestruck by the simple but great idea and a few weeks later I bought a <a href=\"http://en.wikipedia.org/wiki/Microsoft_SideWinder#Freestyle_Pro\" target=\"_blank\">Sidewinder Freestyle Pro</a>. The following years I played <a href=\"http://en.wikipedia.org/wiki/Midtown_Madness\" target=\"_blank\">Midtown Madness</a> and <a href=\"http://en.wikipedia.org/wiki/FreeSpace_2\" target=\"_blank\">Freespace 2</a> with it, many, <em>many</em> hours, and I&#8217;m a fan of motion controls ever since.</p>\n<p>A decade later of course I tried the Wii Remote and it&#8217;s MotionPlus extension. While they work reasonably well on their native platform, utilizing them on a PC is a major pain in the ass: Bluetooth stack problems plague even Win7 systems and all kind of additional applications need to be running (JoyToKey, X360 emulator, GlovePie) in order to make things work. My enthusiasm faded and I was left longing for a more user friendly solution. Something which I could use not just for gaming but for my current project as well: our characters have 20 degrees of freedom, 20 analogue inputs, which are a bit tricky to drive from a mouse+keyboard combo.</p>\n<p>I also looked at Kinect and the Playstation Move but none of them seemed like a reasonable solution: the former is laggy, imprecise and needs too much space while the latter is computationally intensive and has no official Windows support.</p>\n<p>Then I heard about the <a href=\"http://en.wikipedia.org/wiki/Sixense_TrueMotion\" target=\"_blank\">Razer Hydra</a>, watched a few videos, checked out first hand experiences then coughed up the 140 EUR for it.</p>\n<p>It&#8217;s a great hardware: quite precise, there is barely any lag with moderate filtering, plug and play, comfortable to hold and the buttons/triggers are fine.</p>\n<p>Unfortunately the software side is quite lacking: The provided software suit is very primitive: one needs to edit XML files manually to customize controls or to enable Hydra input to unsupported games. And even then the motion controls can not be mapped to joystick axes, it can only be used to emulate a mouse, so I can&#8217;t play Midtown Madness the way I could 13 years ago&#8230;</p>\n<p>It has great potential but until Razer produces proper driver support for it, it&#8217;s just a standard gamepad with benefits.</p>\n<p>One of such benefits is Portal 2. It&#8217;s a great game and the Hydra works well&#8230; except when it comes to freelook. Technically it&#8217;s fine, the problem is that I don&#8217;t like it but I can&#8217;t change it.<br />\nLooking is handled as an absolute mouse input: the cursor needs to be moved to the edges of the screen to initiate turning while pointing to the center stops the motion. It&#8217;s a bit more precise than the console standard right analog stick based look but has nothing on the precision and responsiveness of mouselook. The real problem is that the controls are hardwired so there is no way to change the behavior to &#8220;relative mouse&#8221; where you need to &#8220;<a href=\"http://sixense.com/forum/phpBB3/viewtopic.php?f=2&amp;t=229\" target=\"_blank\">ratchet</a>&#8220;, disable mouse input while you reposition your hand. That, with properly adjusted sensitivity, would get quite close what a mouse can do while not losing the ability to perform all the <a href=\"http://www.youtube.com/watch?v=7_1Ao2cd5BM\" target=\"_blank\">Hydra specific moves</a>.</p>\n<p>Having said that it&#8217;s inspiring to see how it is actually used in a real game. I&#8217;m hoping that I can get it integrated with UDK in the near future as my current project would benefit greatly with a proper input method. (The mouse+&#8221;left side of the x360 controller&#8221; combo is less then ideal.)</p>\n<p>So for now this piece of tech is more like a developer&#8217;s toy than an uber controller.<!-- PHP 5.x --></p>", "summary": "Back in 1998 I saw an ad in a local PC magazine: it was about a gamepad which registered tilting. I was awestruck by the simple but great idea and a few weeks later I bought a Sidewinder Freestyle Pro. The following years I played Midtown Madness and Freespace 2 with it, many, many hours, [...]", "id": "http://www.zspline.net/blog/?p=1327", "categories": [], "metadata": {"guid": "71e781a1-3f58-40ca-b923-3919a9504d9b", "likes": 0, "is_published": false}}]"
07-31 20:06 SocketClient INFO     Returning(as str): '[{"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/19/gavit-dev-diary-14/", "title": "Gavit Dev Diary #14", "datetime": "2011-07-19T15:15:27", "html": "<p>It&#8217;s been a while since the last developer diary. Unfortunately the project suffered a serious setback on the programming side: I trusted the wrong person and got screwed. I lost a couple of hundred bucks but more importantly so much time was wasted that the planned animated short (showcasing the features of Gavit) can not be finished in time. I&#8217;ll have to come up with some other way to effectively present my achievements to potential employers.</p>\\n<p><del>So if you are an experienced unreal programmer (or you know one who might be interested) <a href=\\"http://www.zspline.net/blog/contact/\\" target=\\"_blank\\">please let me know</a>.</del></p>\\n<p><strong>UPDATE</strong>: Never mind, the good people at <a href=\\"http://www.digitalconfectioners.com/\\" target=\\"_blank\\">Digital Confectioners</a> took over the project. :)</p>\\n<p>Other aspects of the project did advance though: I reported half a dozen modo bugs and implemented a few workarounds for them in my export script. I extended my MetaSL shader library with a few extra nodes and further refined the whole workflow.</p>\\n<p>But these &#8220;under the hood&#8221; improvements are boring so let&#8217;s see something more visual.</p>\\n<p>This is Mr Elegant, our first proper (non-test-dummy) character:</p>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 170px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant01.png\\" rel=\\"lightbox\\" title=\\"mrelegant01.png\\"><img alt=\\"\\" class=\\"thumb \\" height=\\"134\\" id=\\"thumb607\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant01.png\\" width=\\"160\\" /></a>\\n<p class=\\"wp-caption-text\\">Mr Elegant (ingame)</p>\\n</div>\\n<p class=\\"thickbox\\" title=\\"mrelegant01.png\\">It was modeled by <a href=\\"http://www.joshstoker.com/\\" target=\\"_blank\\">Josh Stoker</a> in ZBrush then it was sent to modo using the excellent GoZ functionality. I used convexity/concavity tracing to generate the base diffuse color map:</p>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 143px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant02.png\\" rel=\\"lightbox\\" title=\\"mrelegant02.png\\"><img alt=\\"\\" class=\\"thumb \\" height=\\"160\\" id=\\"thumb608\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant02.png\\" width=\\"133\\" /></a>\\n<p class=\\"wp-caption-text\\">The diffuse color.</p>\\n</div>\\n<p>Earlier I wrote about the theory behind <a href=\\"http://www.zspline.net/blog/2011/05/22/gavit-dev-diary-13/\\" target=\\"_blank\\">character colorization</a> and here I implemented it. The black/red/green areas are defined as vertex colors on the SDS cage of the high definition mesh then baked down to the low polygon object:</p>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 143px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant03.png\\" rel=\\"lightbox\\" title=\\"mrelegant03.png\\"><img alt=\\"\\" class=\\"thumb \\" height=\\"160\\" id=\\"thumb609\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant03.png\\" width=\\"133\\" /></a>\\n<p class=\\"wp-caption-text\\">Vertex colors on the high polygon mesh.</p>\\n</div>\\n<p>This texture along with the extra UV map defining color zones, allow me to separately recolor the skin, the facial hair, the tie, the shirt, the handkerchief, the jacket, the hands, the pants, the shoes, the front of the shoe and the sole.</p>\\n<p>I combined the &#8220;specular&#8221; and &#8220;specular power&#8221; maps into one texture so the final shader uses 4 texture samplers and 99 instructions (although that will go up a bit as soon as the mesh gets skinned).<!-- PHP 5.x --></p>", "summary": "It&#8217;s been a while since the last developer diary. Unfortunately the project suffered a serious setback on the programming side: I trusted the wrong person and got screwed. I lost a couple of hundred bucks but more importantly so much time was wasted that the planned animated short (showcasing ", "id": "http://www.zspline.net/blog/?p=1333", "categories": [], "metadata": {"guid": "15b2a405-d225-4d5c-9dcc-d617f27e5ab4", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://www.chrisevans3d.com/pub_blog/?p=673", "title": "SIGGRAPH 2011", "datetime": "2011-07-19T07:32:42", "html": "<p>I am giving three small talks at SIGGRAPH, drop me a line if you will be in Vancouver.</p>\\n<h2><a href=\\"http://www.siggraph.org/s2011/content/Rigging-Characters-CryENGINE-0\\" target=\\"_blank\\">Rigging Characters for CryENGINE</a></h2>\\n<p>How to rig, skin, and export a character for CryENGINE 3. Topics include  physics setup, building characters from many skinned meshes, and  creating Character Definitions and Character Parameter files. These  rigging basics are applicable to most run-time game engines.</p>\\n<h2><a href=\\"http://www.siggraph.org/s2011/content/introduction-python-scripting-0\\" target=\\"_blank\\">Introduction to Python Scripting</a></h2>\\n<p>In this introduction to Python, a powerful scripting language used by  many 3D applications, attendees learn the basics and explore small  example scenarios gleaned from actual game and film productions. The  sessions are taught in a way that should empower attendees to  immediately begin creating time-saving python scripts and applications.</p>\\n<h2><a href=\\"http://www.siggraph.org/s2011/content/World-Creation-CryENGINE-0\\" target=\\"_blank\\">World Creation in CryENGINE</a></h2>\\n<p>Have you ever wanted to make a videogame? This session shows how to  build a small level in the freely available CryENGINE 3 SDK. Topics  include: world building and tools (FlowGraph, CryENGINE&#8217;s visual  scripting language, and Trackview, the camera sequencing and directing  tools). In less than an hour, attendees create their own playable video  games.</p>", "summary": "I am giving three small talks at SIGGRAPH, drop me a line if you will be in Vancouver.\\nRigging Characters for CryENGINE\\nHow to rig, skin, and export a character for CryENGINE 3. Topics include  physics setup, building characters from many skinned meshes, and  creating Character Definitions and Chara", "id": "http://www.chrisevans3d.com/pub_blog/?p=673", "categories": [], "metadata": {"guid": "6dc7f8a3-ffd1-4f59-8c05-d5b4c6460f8a", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=698", "title": "Cloud Based Pipelines?", "datetime": "2011-07-19T00:37:28", "html": "<p>Originally posted on <a href=\\"http://altdevblogaday.com/2011/07/16/cloud-based-pipelines/\\">AltDevBlogADay</a>:</p>\\n<p>The rest of software is moving into The Cloud, how come we aren&#8217;t doing the same with our tools and pipeline?</p>\\n<p>I love the cloud. \\u00a0Yes, I know it&#8217;s a buzz word for not quite revolutionary concepts, but I love it anyway. \\u00a0I love it for the practical benefit I get, and I love it for the technological possibilities it brings. \\u00a0It doesn&#8217;t just mean using web apps- it means using amazing applications that run in any browser on any platform, it means not worrying about storing data locally, it means a rich and expanding personal experience based on the connections between your data and everyone else&#8217;s.</p>\\n<p>And then I think about most of the pipelines I&#8217;ve seen and I wonder: what have we missed? \\u00a0Very often, we are building some of the most incredible and expensive games ever with incredibly shitty sets of tools. \\u00a0Why do we have essentially the same pipelines as we&#8217;ve had for the same 10+ years? (I recently<a href=\\"http://www.robg3d.com/?p=542\\"> finished a case study</a> of Dark Angel&#8217;s pipeline, from 2001, which is remarkably similar to some I&#8217;ve seen recently). \\u00a0Game production has changed, but pipelines have not. \\u00a0We&#8217;re releasing games that get downloaded content (or are continuously updated like an MMO), and the amount of content is ballooning. \\u00a0Yet we&#8217;re still using essentially the same technologies and strategies as we were in 2001. \\u00a0There&#8217;s something to learn by looking at Cloud technologies and concepts, buzzword or not.</p>\\n<p><strong>Can game pipelines, too, move into the cloud?</strong></p>\\n<p>The one essential aspect of the cloud is its basis in service-based architectures. \\u00a0For the sake of simplicity and those unfamiliar, let&#8217;s say a service is a local or remote process that has some set of exposed methods that can be called by a client through a common protocol (JSON, XMLRPC, etc.). \\u00a0All other aspects of cloud technologies require this serviced based architecture. \\u00a0You couldn&#8217;t have the characteristic web apps if there was no service behind them. \\u00a0You couldn&#8217;t run the same or similar page on any platform and device if the work was happening on the client instead of the service. \\u00a0You couldn&#8217;t have a backend that automatically scales if the real work was happening in a Rich Client App (RCA) instead of in a service.</p>\\n<p>Could we build our pipelines with the same service-based approach (if not the always-there distributed-ness), and would we get similar results?</p>\\n<pre lang=\\"txt\\">,--.::::::::::::::::::::::::::::::::::::\\n    )::::::::::::::::::::::::::::::::..\\n  _\'-. _:::::::::::::::::::::::::::..\\n (    ) ),--.::::::::::::::::::::::.\\n             )-._::::::::::::::::::..\\n_________________) ::::::::::::::...</pre>\\n<p>Yes, we can. \\u00a0But let&#8217;s consider what a service-based pipeline architecture would look like. \\u00a0The biggest change is moving nearly all functionality out of DCC apps, which are RCA&#8217;s, and into libraries that can be consumed by the services. \\u00a0This is what I&#8217;ve been doing for years, but I understand it may be a new thing for many people- but I guarantee you can do it and you&#8217;ll be better off because of it, not having to deal with buggy and monolithic DCC apps. \\u00a0These libraries/services can use headless apps behind the scenes if necessary, to do rendering or some processing or whatever (mayabatch.exe or whatever). \\u00a0Avoid it if you can, but you could do it.</p>\\n<p>The DCC and its UI&#8217;s, then, become very simple shells which just call methods on the service, and contain very little functionality of their own. \\u00a0The service does the processing and calls back to the client (and if the function can be done asynchronously, the user keeps working while the work happens in the background). \\u00a0The service can communicate to other remote and local services to do the work it needs to do.</p>\\n<p>Conceptually it is simple, but I promise you, the implementation will be complex. \\u00a0So the benefits better be worth it.</p>\\n<p>And they would be. \\u00a0The first thing you get is better abstraction between systems and components. \\u00a0We remove ourselves from the hacks and workarounds of programming in a DCC, and can instead concentrate on working in a sensible development environment and not have to worry about debugging in app or having to make sure all our libraries work under whatever half-assed and old implementation of python Autodesk provides. \\u00a0This results in being more deliberate about design decisions- not having a hundred pipeline modules available to you is actually a good thing, it forces you to get your dependencies under control, and you give more consideration to your APIs (I <a href=\\"http://www.robg3d.com/?p=385\\">blogged about</a> how server/client systems can be a useful exercise in abstraction).</p>\\n<p>These abstractions also give greater scalability. \\u00a0No problem moving your code between versions of your DCC, machine architectures, python/.NET versions, etc. \\u00a0It doesn&#8217;t have the ball and chain of DCC apps, because you&#8217;ve taken it all out of the DCC apps. \\u00a0Compare this flexibility in scalability to something like render farms- they usually have a very specific functionality and required software and added more functionality takes lots of engineering time. \\u00a0By having &#8216;normal&#8217; code that can be run on any machine, you can distribute your processing to a farm that can tackle anything, and doesn&#8217;t require as complex systems or specialized skills to manage. \\u00a0This is the distributed processing capacity of cloud computing (in fact you could probably deploy this code to a cloud provider, if you had good server-fu).</p>\\n<p>These abstractions also lead to language neutrality. \\u00a0That&#8217;s right, I said it. \\u00a0I didn&#8217;t say it is a good idea, just that it&#8217;s possible. \\u00a0Just the same way the Twitter API has been wrapped in three dozen languages, your services should have an API using a common protocol like JSON, and many services and clients can communicate together. \\u00a0You&#8217;re not stuck using COM or marshalling data or any other number of bullshit techniques I&#8217;ve seen people do to glue things together. \\u00a0Your client can be anything- a DCC, a web app, a mobile app- you could even run it via email if you so desired, with zero change to the pipeline itself- only the client code you need to call it. \\u00a0And don&#8217;t forget hosting a web page in a library like Qt or .NET could also run the service.</p>\\n<p>This is software engineering as we tech artists and pipeline engineers should have been doing all along.</p>\\n<pre lang=\\"txt\\"> _______________\\n| | _________ |o|\\n| |___________| |\\n|     _____     |\\n| DD |     |   V|\\n|____|_____|____|</pre>\\n<p>Let&#8217;s take a simple pipeline, like a character mesh exporter that includes an automatic LoD creator. \\u00a0In Maya (or Max, or XSI, whatever), the user just hits &#8216;export selected&#8217;, and it can transfer the mesh data and the Maya filename/mesh name to the Local Service.&#8217; \\u00a0It can transfer the mesh data directly as a json object, or it can save it to an fbx file first and transfer the name of the fbx file, whatever- the point is that it isn&#8217;t data <em>in</em>\\u00a0the DCC, it&#8217;s data <em>from</em>\\u00a0the DCC.</p>\\n<p>At that point, Maya&#8217;s work is done and the user can go back to working while everything else happens in the background in other processes and machines. \\u00a0Awesome! \\u00a0Most (all?) DCC&#8217;s are still very single threaded so trying to do any real work in background threads is not practical (or stable&#8230;).</p>\\n<p>The Local Service sends the mesh data to some Remote Services to request the generation of some crunched and optimized LoD meshes. \\u00a0The Local Service can call an Asset Management Service with the scene filename/mesh name, to get the export path of the final mesh file. \\u00a0The Local Service can then do whatever it needs to do to &#8216;export&#8217; the content: call some exe files, serialize it, whatever, it just needs to save the exported file to where the Asset Management Service said it should be.</p>\\n<p>The Remote Services can call back to the Local Service as they finish processing the LoD&#8217;s, and the Local Service can save them where they&#8217;re supposed to go as well. \\u00a0All of this without the user having to wait or intervene for anything, and without bogging down his box with expensive, CPU hungry operations.</p>\\n<pre lang=\\"txt\\">  __________\\n/_________/ |\\n|         | |\\n| |====|  | |\\n| |====|  | |\\n|   ___   | |\\n|  | @ |  | |\\n|   ---   | |\\n|_________|./</pre>\\n<p>Is this complex? \\u00a0Yes. \\u00a0Is it possible for a technically competent team to do? \\u00a0Absolutely not. \\u00a0Pipelines are the bastard child of game technology, and it show- we have been doing the same crappy things for a decade. \\u00a0If we want to minimize ballooning costs of content development, develop robust pipelines capable of supporting games after ship with updates and DLC, and, let&#8217;s face it, work on some inspiring and exciting new technology, we&#8217;ll take pipelines to the cloud.</p>", "summary": "Originally posted on AltDevBlogADay: The rest of software is moving into The Cloud, how come we aren&#8217;t doing the same with our tools and pipeline? I love the cloud. \\u00a0Yes, I know it&#8217;s a buzz word for not quite revolutionary concepts, but I love it anyway. \\u00a0I love it for the practical bene", "id": "http://www.robg3d.com/?p=698", "categories": [], "metadata": {"guid": "06e15c51-d76f-465b-b68a-35e1f95a998f", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=780", "title": "yay for g+", "datetime": "2011-07-18T03:25:20", "html": "<p>Never managed to get into facebook. Within hours of signing up I had friend requests from all sorts of crazy people that I either barely knew, or knew but certainly wasn&#8217;t keen or comfortable sharing various aspects of my life with etc&#8230; I&#8217;m sure the story is familiar. So it just didn&#8217;t take with me.</p>\\n<p>Anyhoo, g+ seems like its solved all of these problems in a way that makes complete sense. And its google. I manage all my photos with picasa because its just bloody easy. And I LOVE gReader. So anyway, hopefully it&#8217;ll be awesome. If you&#8217;re not using it, try it out. Look for <a href=\\"https://plus.google.com/108847499546939618060/posts\\" target=\\"_blank\\">macaronikazoo</a>!</p>", "summary": "Never managed to get into facebook. Within hours of signing up I had friend requests from all sorts of crazy people that I either barely knew, or knew but certainly wasn&#8217;t keen or comfortable sharing various aspects of my life with etc&#8230; I&#8217;m sure the story is familiar. So it just di", "id": "http://www.macaronikazoo.com/?p=780", "categories": [], "metadata": {"guid": "18b29e5c-bde8-4d40-a2c9-07e4bf37b7d9", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=685", "title": "I\\u2019m on Google+", "datetime": "2011-07-17T20:55:19", "html": "<p>I&#8217;m on Google+, and it is the FIRST social networking site I&#8217;ve ever actively participated in. It seems pretty awesome so far, have I been missing this on Facebook all these years?</p>\\n<p>Fine me here: https://plus.google.com/u/0/112207898076601628221/posts//p/pub</p>", "summary": "I&#8217;m on Google+, and it is the FIRST social networking site I&#8217;ve ever actively participated in. It seems pretty awesome so far, have I been missing this on Facebook all these years? Fine me here: https://plus.google.com/u/0/112207898076601628221/posts//p/pub", "id": "http://www.robg3d.com/?p=685", "categories": [], "metadata": {"guid": "5789492d-3749-4f6f-9672-af17a67f88a8", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=752", "title": "object oriented rigging in Skeleton Builder", "datetime": "2011-07-17T15:47:03", "html": "<p>Skeleton builder is a neat framework for writing rigging code, but its also a useful tool for writing runtime tools as well. \\u00a0I figured I&#8217;d go over an example of this because its not terribly obvious until you actually get in there and write some code. And even then, its not terribly obvious until you read all the code written in baseRigPrimitive&#8230;</p>\\n<p>Writing a tool to do seamless Ik/Fk switching on an arbitrary rig is basically impossible. \\u00a0After all, your particular limb setup might be a simple biped leg, a 5 jointed spider type leg, or a quadruped leg or any other crazy scenario. \\u00a0Writing a single function to deal with all these possibilities, especially when you factor in the different ways these rigs could be implemented is basically impossible.</p>\\n<p>But writing the logic to do the switch for any of them in isolation is generally dead easy. \\u00a0This is the sort of problem that object oriented programming was invented to solve. \\u00a0In Skeleton Builder the way I solve these problems is like this.</p>\\n<p>In Skeleton Builder you write rig primitives. Each rig primitive is written to rig a particular sub-section of a skeleton and the code to do so is implemented in its own class. \\u00a0So using the above examples I would have 3 classes: BipedLegRig, SpiderLegRig and QuadrupedLegRig. \\u00a0Now on each one of these classes, lets define a switchToIk() method and a switchToFk() method. \\u00a0So the switching logic for each rig type can be implemented independently on each of these classes.</p>\\n<p>Your code will look something like this:</p>\\n<pre class=\\"brush:py\\">import rigPrimitives\\n\\nclass SpiderLegRig(rigPrimitives.RigPart):\\n  #this class variable defines the alias\' for the controls. controls are accessed using these alias\'\\n  CONTROL_NAMES = \'legControl\', \'fkThigh\', \'fkKnee\', \'fkAnkle\'\\n\\n  def _build( self, skeletonPart, **kw ):\\n    #the code to build the actual rig goes here\\n    ...\\n\\n    #this is the list of nodes that will get connected to the alias\' defined\\n    #in the CONTROL_NAMES class variable\\n    controls = ikControl, fk0, fk1, fk2\\n    namedNodes = ()\\n\\n    return controls, namedNodes\\n  def switchToIk( self ):\\n\\n    #this code grabs the actual control nodes based on their alias\'\\n    legControl = self.getControl( \'legControl\' )\\n    fkThigh = self.getControl( \'fkThigh\' )\\n    fkKnee = self.getControl( \'fkKnee\' )\\n    fkAnkle = self.getControl( \'fkAnkle\' )\\n\\n    #logic to switch from Fk to Ik goes below\\n    ...\\n  def switchToFk( self ):\\n    #logic to switch from Ik to Fk goes below\\n    ...</pre>\\n<p>Then calling this switch method is as simple as doing something like this:</p>\\n<pre class=\\"brush:py\\">from maya import cmds\\n\\nselectedControls = cmds.ls( sl=True )\\nif selectedControls:\\n  rigPart = rigPrimitives.RigPart.InitFromItem( selectedControls[0] )\\n  rigPart.switchToFk()</pre>\\n<p>And voila. So now you can write a single UI that lets users switch between Ik and Fk for ANY part of the rig simply by running the above code.</p>\\n<p>I&#8217;ll write up another post with another example of a useful runtime tool that I&#8217;ve written that would be very difficult to do without a nice object oriented rigging framework to leverage.</p>", "summary": "Skeleton builder is a neat framework for writing rigging code, but its also a useful tool for writing runtime tools as well. \\u00a0I figured I&#8217;d go over an example of this because its not terribly obvious until you actually get in there and write some code. And even then, its not terribly obvious u", "id": "http://www.macaronikazoo.com/?p=752", "categories": [], "metadata": {"guid": "bc24336d-9e40-4ac0-be25-433a8b3f08f5", "likes": 0, "is_published": false}}, {"author": "Peter van Ooijen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/IOooyM5QxII/", "title": "Pimping the content of a (Monotouch) iPhone app with a webview", "datetime": "2011-07-17T12:40:15", "html": "<p>At first sight iOS offers a rich set of UI elements containing things like navigation- tool- and tab-bars, buttons,&nbsp; spinners and scrolling views. When it comes to presenting text content there is the textview. Which does offer scrolling and automatic links for Utl\\u2019s and phone numbers&nbsp; but dos not have a lot of possibilities to make the content look really good. The main reason is that all text in the view is displayed in one and the same font. No way to even just emphasize a single word in bold.</p>\\n<h2>Back to HTML</h2>\\n<p>For the remainder of this story I assume you are somewhat familiar with basic HTML and <a href=\\"http://monotouch.net/\\">Monotouch</a>&nbsp; or other iOS tools and will do a fast drive through. </p>\\n<p>To make your content look better you need a WebView. At first sight this component seems intended to display online web-based content. Feeding it with local offline content, straight from code is just as easy. You can drop and size an UIWebView anywhere on a View (or instantiate one from code)&nbsp; and make it accessible to the code via an outlet. The webview has a method LoadHtmlString to feed it with content.</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 15pt;\\">\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\">myWebView.LoadHtmlString(MyMarkup, <span style=\\"color: blue;\\">null</span>);</p>\\n</div>\\n<p><!--EndFragment--></div>\\n<p><!--EndFragment-->\\n<p>MyMarkup is the string containing Html content for the view. I will describe the basic possibilities for this content in a HTMLbuilder demo class which uses a stringbuilder to assemble the markup.</p>\\n<p>Initialization in the constructor:</p>\\n<ul>\\n<li>Initializes the stringbuilder</li>\\n<li>Create the &lt;head&gt; of the page</li>\\n<li>Create a&nbsp; css-style sheet for the basic look of the \\u201cpage\\u201d</li>\\n<li>Write the opening &lt;body&gt; tag</li>\\n</ul>\\n<p>After that the various methods build the content. These here are just some examples, just to get the idea. The assumptions made here</p>\\n<ul>\\n<li>All pages have the same fixed font set in the stylesheet.</li>\\n<li>All images are in the Images folder</li>\\n<li>All inline images have the same size</li>\\n</ul>\\n<p>I leave it up to your own imagination where, what and how to fix.</p>\\n<p>The Markup property (when necessary) writes the page closing tags and returns the html for the \\u201cpage\\u201d. This result is fed straightly to the webview\\u2019s LoadHtmlString method.</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">class</span> <span style=\\"color: #2b91af;\\">HTMLbuilder</span></p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">private</span> <span style=\\"color: #2b91af;\\">StringBuilder</span> html;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">private</span> <span style=\\"color: blue;\\">bool</span> closed = <span style=\\"color: blue;\\">false</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> HTMLbuilder ()</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = <span style=\\"color: blue;\\">new</span> <span style=\\"color: #2b91af;\\">StringBuilder</span> ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;html&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;head&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;style type = \\\\&#8221;text/css\\\\&#8221;&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;body {font-family:helvetica;font-size:15;}&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;/style&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;/head&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;body&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">string</span> Markup</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">get</span></p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">if</span> (!closed)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; closed = <span style=\\"color: blue;\\">true</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\\"color: #a31515;\\">&#8220;&lt;/body&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\\"color: #a31515;\\">&#8220;&lt;/html&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">return</span> html.ToString();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> Append(<span style=\\"color: blue;\\">string</span> content)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(content);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> AppendBold(<span style=\\"color: blue;\\">string</span> content)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\\"color: blue;\\">string</span>.Format(<span style=\\"color: #a31515;\\">&#8220;&lt;b&gt;{0}&lt;/b&gt;&#8221;</span>, content));</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> AddParagraph(<span style=\\"color: blue;\\">string</span> tekst)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: blue;\\">string</span>.Format (<span style=\\"color: #a31515;\\">&#8220;&lt;p&gt;{0}&lt;/p&gt;&#8221;</span>, tekst));</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">private</span> <span style=\\"color: blue;\\">string</span> ImagePath (<span style=\\"color: blue;\\">string</span> image)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">return</span> NSBundle.MainBundle.PathForResource (<span style=\\"color: blue;\\">string</span>.Format (<span style=\\"color: #a31515;\\">&#8220;Images/{0}&#8221;</span>, image), <span style=\\"color: #a31515;\\">&#8220;png&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">string</span> InlineImage(<span style=\\"color: blue;\\">string</span> image)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">string</span>.Format(<span style=\\"color: #a31515;\\">&#8220;&lt;img src=\\\\&#8221;file:{0}\\\\&#8221; width=\\\\&#8221;22\\\\&#8221; height=\\\\&#8221;22\\\\&#8221; valign=\\\\&#8221;bottom\\\\&#8221;&gt;&#8221;</span>, ImagePath(image));</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">private</span> <span style=\\"color: blue;\\">void</span> AddButton(<span style=\\"color: blue;\\">string</span> image, <span style=\\"color: blue;\\">string</span> urlpart)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">var</span> url = <span style=\\"color: blue;\\">string</span>.Format (<span style=\\"color: #a31515;\\">&#8220;&lt;a href=\\\\&#8221;{1}\\\\&#8221;&gt;&lt;img src=\\\\&#8221;file:{0}\\\\&#8221;&gt;&lt;/a&gt;&#8221;</span>, ImagePath(image), urlpart);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddParagraph (url);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>The images and buttons require some explanation. A webview expects its resources, like an image, somewhere relative to it\\u2019s URL. The Url is passed in the second parameter of the LoadHtmlString method. Here we are working local, inside the iPhone, there is no URL for that, as a second parameter I passed null. The ImagePath method translates the path of an image, which is a&nbsp; folder in the application, to a path reachable by the webview. The resulting url is fed to an &lt;img&gt; in the InLineImage or AddButton method.</p>\\n<h2>Start surfing</h2>\\n<p>The webview is also a great place for the user to start surfing the web. In the HTMLBuilder the AddButton method creates a clickable image which will take the user to an url outside the app. Like the company website. Clicking this button will fire up Mobile Safari which takes the user out of the app and into the site. The image turns into a linkbutton by embedding it in plain &lt;a&gt; tags. </p>\\n<p>To steer this behavior the webview uses a WebViewDelegate</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">class</span> <span style=\\"color: #2b91af;\\">WebViewDelegate</span> : UIWebViewDelegate</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> WebViewDelegate ()</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">override</span> <span style=\\"color: blue;\\">bool</span> ShouldStartLoad (UIWebView webView, MonoTouch.Foundation.NSUrlRequest request, UIWebViewNavigationType navigationType)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">if</span> (request.Url.Scheme.StartsWith (<span style=\\"color: #a31515;\\">&#8220;http&#8221;</span>)) {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UIApplication.SharedApplication.OpenUrl (request.Url);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">false</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">true</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>The delegate checks the Url. When it is a http request it fires up the browser using SharedApplication.OpenUrl. Else the WebView is free to proceed.</p>\\n<p>The delegate is set in the ViewDidLoad</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">override</span> <span style=\\"color: blue;\\">void</span> ViewDidLoad ()</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; WebViewDelegate = <span style=\\"color: blue;\\">new</span> WebViewDelegate ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = WebViewDelegate;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>&nbsp;</p>\\n<p>It is advised to remove the delegate when unloading</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">override</span> <span style=\\"color: blue;\\">void</span> ViewDidUnload ()</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = <span style=\\"color: blue;\\">null</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">base</span>.ViewDidUnload ();</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment--><br />\\n<h2>More than HTML</h2>\\n<p>So far we have seen the basics of pimping the content using HTML. The possibilities here are almost endless and Mobile Safari does work with HTML5. </p>\\n<p>What HTML does not give you are specific iPhone features like gestures and the possibility to hook your own app code (behind<img alt=\\"Smile\\" class=\\"wlEmoticon wlEmoticon-smile\\" src=\\"http://codebetter.com/petervanooijen/files/2011/07/wlEmoticon-smile.png\\" style=\\"border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none;\\" />) in the page. The good thing is that the webview is a view like all other views, accessible to all&nbsp; your coding skills. As a demo I will add swiping to a webview. When the users swipes left or right the content of the webview is updated. Not by the browser, but my own code.</p>\\n<p> The hard thing is that gesture-recognizers are not under quite the same control as the view, they have a different life cycle. Setting them up requires some fiddling. Doing that wrong will lead to a complete crash of the app.</p>\\n<p>The methods handling the swipes are marked with an Export attribute.</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\">[Export(<span style=\\"color: #a31515;\\">\\"SwipeLeft\\"</span>)]</p>\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> SwipeLeftAction (UISwipeGestureRecognizer recognizer)</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; myWebview.LoadHtmlString(MyMarkup.prevPage(), <span style=\\"color: blue;\\">null</span>);</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">[Export(<span style=\\"color: #a31515;\\">\\"SwipeRight\\"</span>)]</p>\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> SwipeRightAction (UISwipeGestureRecognizer recognizer)</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.NextPage(), <span style=\\"color: blue;\\">null</span>);</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p>After a swipe the content is updated to my taste.</p>\\n<p>Both the handlers should also be added as static properties of the view</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">static</span> Selector SwipeLeft {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">get</span> { <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">new</span> Selector (<span style=\\"color: #a31515;\\">&#8220;SwipeLeft&#8221;</span>); }</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">static</span> Selector SwipeRight {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">get</span> { <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">new</span> Selector (<span style=\\"color: #a31515;\\">&#8220;SwipeRight&#8221;</span>); }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>Wiring up is done in the ViewDidLoad. Here it is absolutely essential to check whether the view already responds to the recognizer</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">if</span> (!View.RespondsToSelector (SwipeRight)) {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; var swipeRight = <span style=\\"color: blue;\\">new</span> UISwipeGestureRecognizer ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; swipeRight.AddTarget (<span style=\\"color: blue;\\">this</span>, SwipeRight);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; swipeRight.Direction = UISwipeGestureRecognizerDirection.Right;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; swipeRight.Delegate = <span style=\\"color: blue;\\">new</span> UIGestureRecognizerDelegate ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeRight);</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>What the gesture recognizer will respond to should be self explanatory. The complexity of the wiring does show iOS is behind the scenes somewhat more complicated that the Monotouch framework can hide. </p>\\n<h2></h2>\\n<h2>Summing up</h2>\\n<p>All of this leads to this result</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">partial</span> <span style=\\"color: blue;\\">class</span> <span style=\\"color: #2b91af;\\">MyPageWithWebView</span> : UIViewController</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">&nbsp;&nbsp;&nbsp; #region</span> Constructors</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">#endregion</span></p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">private</span> WebViewDelegate WebViewDelegate;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">override</span> <span style=\\"color: blue;\\">void</span> ViewDidLoad ()</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebViewDelegate = <span style=\\"color: blue;\\">new</span> WebViewDelegate ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = WebViewDelegate;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">if</span> (!View.RespondsToSelector (SwipeRight)) {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var swipeRight = <span style=\\"color: blue;\\">new</span> UISwipeGestureRecognizer ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.AddTarget (<span style=\\"color: blue;\\">this</span>, SwipeRight);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.Direction = UISwipeGestureRecognizerDirection.Right;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.Delegate = <span style=\\"color: blue;\\">new</span> UIGestureRecognizerDelegate ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeRight);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">if</span> (!View.RespondsToSelector (SwipeLeft)) {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var swipeLeft = <span style=\\"color: blue;\\">new</span> UISwipeGestureRecognizer ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.AddTarget (<span style=\\"color: blue;\\">this</span>, SwipeLeft);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.Direction = UISwipeGestureRecognizerDirection.Left;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.Delegate = <span style=\\"color: blue;\\">new</span> UIGestureRecognizerDelegate ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeLeft);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">base</span>.ViewDidLoad ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">override</span> <span style=\\"color: blue;\\">void</span> ViewDidUnload ()</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = <span style=\\"color: blue;\\">null</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">base</span>.ViewDidUnload ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; [Export(<span style=\\"color: #a31515;\\">\\"SwipeLeft\\"</span>)]</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> SwipeLeftAction (UISwipeGestureRecognizer recognizer)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.prevPage(), <span style=\\"color: blue;\\">null</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; [Export(<span style=\\"color: #a31515;\\">\\"SwipeRight\\"</span>)]</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> SwipeRightAction (UISwipeGestureRecognizer recognizer)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.NextPage(), <span style=\\"color: blue;\\">null</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">static</span> Selector SwipeLeft {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">get</span> { <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">new</span> Selector (<span style=\\"color: #a31515;\\">&#8220;SwipeLeft&#8221;</span>); }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">static</span> Selector SwipeRight {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">get</span> { <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">new</span> Selector (<span style=\\"color: #a31515;\\">&#8220;SwipeRight&#8221;</span>); }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>Now I have the possibilities of pimping my content using HTML without giving up the power of C# code. </p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/IOooyM5QxII\\" width=\\"1\\" />", "summary": "At first sight iOS offers a rich set of UI elements containing things like navigation- tool- and tab-bars, buttons,&#160; spinners and scrolling views. When it comes to presenting text content there is the textview. Which does offer scrolling and automatic&#160;&#8230; <a href=\\"http://codebetter.com", "id": "http://codebetter.com/petervanooijen/2011/07/17/pimping-the-content-of-a-monotouch-iphone-app-with-a-webview/", "categories": [], "metadata": {"guid": "8e353e2f-8e72-4285-996c-23f4ee32a93a", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=584", "title": "Game Studio Takeover Nightmare Impossible", "datetime": "2011-07-17T02:29:31", "html": "<p>There&#8217;s a sub-genre of reality television that contains shows where experts come into a failing business and implement changes to fix things. \\u00a0Three of the most well known are Gordon Ramsey&#8217;s Kitchen Nightmares, Robert Irvine&#8217;s Restaurant Impossible, and Tabatha&#8217;s Salon Takeover (totally awesome show, btw). \\u00a0I&#8217;ve wondered what it&#8217;d be like to get a games industry version of one of these experts into a studio to see what she could do. \\u00a0Fortunately, the programs all follow a very obvious (and repetitive) pattern to find and fix the problems- so you can really just do it yourself (most problems the experts find are obvious anyway- the people in charge are just ignorant or in denial).</p>\\n<p>Follow these steps at your studio and imagine how things would go down.</p>\\n<p><strong>Part 1: The initial personnel observation</strong><br />\\nThe experts observe how things run without interferring. \\u00a0They sit down to eat, watch hidden cameras, whatever.</p>\\n<ol>\\n<li>How do the employees get along? \\u00a0Are they friendly to each other, do they enjoy work, do they hang out, do they do work?</li>\\n<li>How does management interact with the employees?</li>\\n<li>How many employees and managers are there, and what&#8217;s the ratio?</li>\\n<li>Is there anything else fishy (nepotism, unqualified people, etc.)?</li>\\n</ol>\\n<p><strong>Part 2: The facilities inspection</strong><br />\\nThe experts tour the facilities and inspect how things look, especially cleanliness.</p>\\n<ol>\\n<li>Do people have the right computer equipment and licenses?</li>\\n<li>Are the bathrooms and structure in good shape? \\u00a0AC working well?</li>\\n<li>Are the employees treated well physically? \\u00a0Are there drinks and food available?</li>\\n<li>Where&#8217;s the studio located and where would people rather have it?</li>\\n</ol>\\n<p><strong>Part 3: The tragedy and shutdown</strong><br />\\nThe expert does some minor changes and does a more formal observation, providing minor interventions. \\u00a0Involves some sort of disaster. \\u00a0Place eventually closes up and the expert begins to work his or her magic.</p>\\n<ol>\\n<li>What tools and processes go right? \\u00a0What are the worst? \\u00a0How far to which side is every tool and process in the middle?</li>\\n<li>Do you have managers who crack under pressure, or do really obviously wrong things?</li>\\n<li>Are there people seriously misbehaving? \\u00a0Are there people seriously crunching?</li>\\n<li>And the biggest question is: does the studio&#8217;s project suck, and what are the major problems with the game (is it not fun, has it taken way too long)?</li>\\n</ol>\\n<p><strong>Part 4: The personnel rebuilding</strong><br />\\nRelationships are worked on, especially between employees and management. \\u00a0Lots of training is provided.</p>\\n<ol>\\n<li>What training opportunities exist at your studio? \\u00a0Are people encouraged to look outside for education? \\u00a0Is ample opportunity provided internally?</li>\\n<li>What are your employees biggest grievances? \\u00a0What has changed the most in the past few years and how do your veterans feel about it?</li>\\n<li>How are you dealing with your poor performers and rewarding your best?</li>\\n<li>Figure out why the project/game is in the state it&#8217;s in, and put a plan in action to fix it and make sure it doesn&#8217;t keep happening.</li>\\n</ol>\\n<p><strong>Part 5: The facilities rebuild unveil</strong><br />\\nNew and improved facilities are unveiled to the team.</p>\\n<ol>\\n<li>Your studio should be feeding you. \\u00a0There&#8217;s no reason, financial or otherwise, not to provide developers with at least lunch every day.</li>\\n<li>You should have enough bathrooms and they should be clean.</li>\\n</ol>\\n<p><strong>Part 6: First day reopening</strong><br />\\nThe business runs for a day, usually with much better results (and generally a couple hiccups).<br />\\nWith the grievances solved, or at least in the open and being worked on, studio culture should be improved and you can concentrate on building a great product.</p>\\n<p><strong>Part 7: Checkin later</strong><br />\\nExpert comes back to check up on how things have come along.<br />\\nInevitably, some managers will devolve back into madness; or perhaps things were too far along to stop the studio&#8217;s shutdown or crappy project. \\u00a0If you see this happening, you should leave.</p>\\n<hr />\\n<p>I wonder how something like this would fare in the games industry, and who the hell we could find to do it.</p>", "summary": "There&#8217;s a sub-genre of reality television that contains shows where experts come into a failing business and implement changes to fix things. \\u00a0Three of the most well known are Gordon Ramsey&#8217;s Kitchen Nightmares, Robert Irvine&#8217;s Restaurant Impossible, and Tabatha&#8217;s Salon Takeo", "id": "http://www.robg3d.com/?p=584", "categories": [], "metadata": {"guid": "905cfadb-5cd4-44b1-95aa-619257392bde", "likes": 0, "is_published": false}}, {"author": "Rigging Dojo", "url": "http://www.riggingDojo.com/2011/07/16/leave-a-message/", "title": "Leave a message", "datetime": "2011-07-16T05:51:06", "html": "<p>Have we improved your work, helped you find a job or you just like what we are sharing and teaching?<br />\\nMaybe you don&#8217;t like us and think we are terrible sock monsters ?</p>\\n<p>Either way, take a second and comment on this post.<br />\\nWe look forward to hearing from you.</p>\\n<p>Thanks!</p>\\n<p>Josh, Brad and Chad</p>\\n<p><em><span style=\\"color: #c0c0c0;\\">*not responsible for lost socks</span></em></p>", "summary": "Have we improved your work, helped you find a job or you just like what we are sharing and teaching? Maybe you don&#8217;t like us and think we are terrible sock monsters ? Either way, take a second and comment on this post. We look forward to hearing from you. Thanks! Josh, Brad and Chad [...]", "id": "http://www.riggingDojo.com/?p=903", "categories": [], "metadata": {"guid": "6a14c947-65f0-4eb7-90e4-9826be683a72", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/07/15/resume-updated-demo-to-follow/", "title": "Resume Updated, Demo to Follow", "datetime": "2011-07-16T00:29:04", "html": "<!-- Start LikeButtonSetTop --><!-- End LikeButtonSetTop --><p>I did something productive today on my day off!\\u00a0 Whilst staying at home avoiding &#8216;Carmageddon&#8217;, I spent hours revising my resume.\\u00a0 Finally it is finished&#8230;\\u00a0 oh, except for that mistake&#8230;\\u00a0 <img alt=\\";-)\\" class=\\"wp-smiley\\" src=\\"http://www.jonasavrin.com/wp-includes/images/smilies/icon_wink.gif\\" /> \\u00a0 View it at the normal <a href=\\"http://www.jonasavrin.com/resume/\\" title=\\"Resum\\u00e9\\">location</a>.</p>\\n<div class=\\"shr-publisher-2646\\"></div><!-- Start LikeButtonSetBottom --><!-- End LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "I did something productive today on my day off!\\u00a0 Whilst staying at home avoiding &#8216;Carmageddon&#8217;, I spent hours revising my resume.\\u00a0 Finally it is finished&#8230;\\u00a0 oh, except for that mistake&#8230;\\u00a0 \\u00a0 View it at the normal location. &#038;nbsp", "id": "http://www.jonasavrin.com/?p=2646", "categories": [], "metadata": {"guid": "e390d8ff-6dbb-431f-ac9e-fd794ea3bddf", "likes": 0, "is_published": false}}, {"author": "Jeremy Miller", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/cgg4_cZpJAk/", "title": "FubuMVC Webinar Next Week", "datetime": "2011-07-15T14:11:57", "html": "<p><a href=\\"http://twitter.com/#!/mkmurray\\">Mike Murray</a> is giving a webinar introduction to FubuMVC next week as part of JP\\u2019s Develop with Passion series.&nbsp; <a href=\\"https://www1.gotomeeting.com/register/131448736\\">Sign up here</a>.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/cgg4_cZpJAk\\" width=\\"1\\" />", "summary": "Mike Murray is giving a webinar introduction to FubuMVC next week as part of JP\\u2019s Develop with Passion series.&#160; Sign up here.", "id": "http://codebetter.com/jeremymiller/2011/07/15/fubumvc-webinar-next-week/", "categories": [], "metadata": {"guid": "124c0acd-dc31-4e72-ac32-b192f4b8ec74", "likes": 0, "is_published": false}}, {"author": "Ian Cooper", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/mi3ijGOOdh4/", "title": "Why CRUD might be what they want, but may not be what they need", "datetime": "2011-07-15T13:35:56", "html": "<h2>A brief history of CRUD </h2>\\n<p>The Rolling Stones once sung:</p>\\n<blockquote><p>&#8220;You can&#8217;t always get what you want, But if you try sometimes, well you just might find, You get what you need&#8221;</p></blockquote>\\n<p>I think the same is true of CRUD. Our users seem to ask for it and we blindly agree to their wishes and build it; however, its regularly not what they need.</p>\\n<h3>The File Store</h3>\\n<p>When computers first arrived the early commercial use was to try and remove the need for paper files. Some of us may be old enough to remember that offices has filing departments with staff, where when we began a piece of work we went to get the records that the company had on that customer, or policy, or project. There were problems with this approach: file stores took up a lot of space, and the mangement of paper based records, particulary archival material is expensive; often, someone else had the file out, buried on their desk, and it was not always clear who &#8211; an early form of pessimistic concurrency control &#8211; which often stopped you responding to requests; files were only as useful as the discipline of maintaing them, and keeping them in order &#8211; searching was difficult within a file if it was not ordered and there was no idea of seaching the file store itself.</p>\\n<p>So it was natural when we began to think about ways in which computers could help in the workplace to think about electronic filing systems. We would record the data around the customer, policy, or project on an electronic form instead of a paper one and the computer could store it for us. We saved paper, we saved staff, we saved time, and we added new functionality such as the ability to search.</p>\\n<p>The UIs that we designed were optimized to enter data. After all there was a lot of data to enter just to catch up on. The essential questions for UX design became tab order or number of clicks &#8211; just how fast could we enter data. We wanted bulk data entry grids, and forms that mirrored our paper based forms, because that was what we needed to get out of the physical filing store and into our electronic store</p>\\n<p>Throughout the paper told us what to do and the process was built around the form. The form was passed from person to person. Stickers attached to the form, or boxes on the file defined the workflow. The paper-trail was the business process. Indeed, early analysis techniques simply followed the paper trail. Initial systems just followed the existing paper based process. Someone took the paper, the insurance application form, and type it in to the terminal. Then a batch run moved the record to the next step, so the next person in line could perform the same step that they had at the computer.</p>\\n<p>But no one really thought of this workflow as something the computer could handle. We just did handoffs the same way we did with paper. Indeed we sometimes used paper as the &#8216;token&#8217; that we passed around for the workflow and told you that you needed to enter the system and do some work. Or, later we became more sophisticated, and used email to do the same thing.</p>\\n<p>And for this perspective &#8211; the electronic filing store &#8211; Create, Read, Update, and Delete (CRUD) was the paradigm we needed. It described the lifecycle of a paper file perfectly and with our goal to automate that physical file store it was a capable model &#8211; or so it seemed.</p>\\n<h2>Brave New World</h2>\\n<p>Users tend to create electronic documents today. There is less paper. Inputs come from phone, email, the consumer directly accessing a web-based interface. Removing the phsyical file store is no longer behind the business case to provide IT systems. We no longer want to remove the old filing room and its associated clerks. Of course we might want to move away from our new shadow IT world of documents on shared drives and Excel spreadsheets.</p>\\n<p> The business goals around automation have changed too. To obtain the savings that justify the cost of IT savings, we want to enable smaller numbers of people to carry out the tasks formally done by many through not just electronic filing but through business process automation.</p>\\n<p> But once we shift the goals away from data entry to process automation, the shape of our architecture changes too. Less of the value comes from data entry today. It comes from providing a key business differentiator that allows us to outperform the competition in service, control of costs, management of supply chain, enabling new business models through disintermediation etc.</p>\\n<p>CRUD &#8211; a model for removing the old file store is less useful as a paradigm when we come to think about analysing and architecting a response to this kind of business process.</p>\\n<p>Think about how we force users to interact under a CRUD paradigm. They have procedures written in a manual, a checklist for the process. They have to edit this page,then edit that page etc. The system consists of CRUD screens where the users do the data entry. People run their workflow using email. Business process is the preserve of a priesthood who maintain their position by understanding &#8216;how things are done here&#8217;. </p>\\n<p>The problem here is that the behavior is not captured in the system, it is captured in the manual at best, more likely in the oral transmission of process from one worker to another. The business understands that it has workflow and behavior &#8211; they defined process with copies of memos, forms etc. We have not removed those steps by automating them, we have just\\u00a0 given them electronic forms. Pejoratively we are little better than the shadow IT offering written in Access; why engage an IT expert at all for that, all you do is add cost. </p>\\n<p>Much of the issue here is sheer laziness on our part. When I see tweets and blog posts saying: most business apps are CRUD, I hear, &#8220;we don&#8217;t want to work with the business to show them what IT could do for them&#8221;. Part of the reason is because it requires little skill to model CRUD; modelling business process is harder &#8211; but that is where the value lies. Think of early software development approaches that began with modeling the data, and then identified processes to act on that data. Is it any wonder we built CRUD based systems if we started by thinking about data. Data Flow diagrams, Process diagrams. These were the cornerstones of how we thought about the design phase of the software lifecycle and we have failed to escape from it. However, for our users recording data itself is rarely the end goal any more, completion of a business process is the goal.</p>\\n<p>Now sure, in some cases we might still have CRUD, for some kinds of reference data, and I&#8217;m sure a lot of people will respond to this with straw men of CRUD only applications. But be careful. In a lot of cases the customer thinks about records management, and they don&#8217;t know you could help them with processing, business rules, workflow (or are frightened of what that might mean for their jobs). Anywhere where there is a process in someone&#8217;s head, a word document, or excel spreadsheet that says, when this happens, you need to go into this page and fill in these values on the form, you have behavior, or intent that could and should be captured.</p>\\n<p>Let&#8217;s take a simple example: changing the state of a purchase order. What we tend to be saying is: the workflow for this process has reached a certain point and so it can move into this state. We can immediately see that we must have a number of things for this to occur: the purchase order must have some data that we need to validate it; we can also see that a number of things may be predicated on this occurring: we need to send the order to fulfilment, we need to begin the billing process etc. So this act, completing a purchase order, has both a workflow or business process and rules. A CRUD based approach to design tends to encourage us to leave these outside the system, with the user, in some set of manual checks or switching between parts of the application. What we want to look at is: is this process something we could automate, could the workflow and rules live in the system?</p>\\n<p>Of course a traditional objection to putting workflow and rules &#8216;in the system&#8217; is that they can change. This causes some folks to suggest that they ought to be left out.</p>\\n<p>Unfortunately in the typical business this means that a given named person Alice, Mary or Bob is the person that understands how to drive the process, and is mission critical to the success of the enterprise. If they get hit by a bus its all over, and they can pretty much ask for a raise whenever they like, because we can&#8217;t afford to lose them. Process diagrams often end up with a stick figure which imply that &#8216;Alice does her magic&#8217;. Often that person is uncommunicative and secretive about the process &#8211; to ensure that they remain essential to the business. When they are absent, things fall apart.</p>\\n<p>No business really wants that.\\n<p></p>\\n<p>And the reality is that we have plenty of options we can use to make workflow and rules more configurable &#8211; though we need to look at the tradeoffs between the cost to change the app against using a rules engine or workflow engine carefully by understanding the amount of likely change.</p>\\n<h2>Enter Tasks: What to you want to do today.</h2>\\n<p>We need to drop the focus on CRUD and move to a focus on tasks: what is it that the user wants to accomplish, and how can we help them accomplish that?</p>\\n<p>Let&#8217;s think about the case of a family doctor. In an appointment they tend to take the patient&#8217;s history, diagnose the illness, and prescribe a course of treatment. Now, in the UK the paper based way to achieve this used to be the <a href=\\"http://www.patient.co.uk/doctor/Clinical-Negligence-and-the-Electronic-Patient-Record.htm\\">Lloyd George envelope.</a> Simply replicating the functionality of the Lloyd George envelope using a CRUD approach would give us screens for entering consultation notes, prescriptions&#8230; But there is a lot more we could do to help. If we treat diagnosis as a task, then we ought to consider searching previous medical history to see if anything shows up related to the patient&#8217;s complaint that may be of concern. There may be guidelines for these symptoms that we should be following to check that we are not missing illnesses like meningitis. When we prescribe we can list common drugs for the illness, and look for incompatibility with drugs that the patient is currently being prescribed in a drugs database. That may lead to us offering further advice, for example if the patient is using the contraceptive pill and we prescribe them antibiotics.</p>\\n<p>Or perhaps consider an on line retailer where the customer can go in and change their account details. If the customer changes their address, we might want to prompt the customer for in-flight orders and ask where they want them to be delivered &#8211; the old address or the new address.</p>\\n<p>Ask yourself the question: am I thinking about the intent of what the user wishes to accomplish?</p>\\n<p>The grid is particularly dangerous ground in this regard. It is rare that you can capture intent through a grid. if you are using a grid you are probably not focused on a task but on CRUD</p>\\n<p>Greg Young has a great <a href=\\"http://cqrsinfo.com/documents/task-based-ui/\\">discussion on the Task-based UI</a>. It is one of the building blocks in a journey towards understanding the why of <a href=\\"http://cqrsinfo.com/\\">CQRS</a></p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/mi3ijGOOdh4\\" width=\\"1\\" />", "summary": "A brief history of CRUD The Rolling Stones once sung: &#8220;You can&#8217;t always get what you want, But if you try sometimes, well you just might find, You get what you need&#8221; I think the same is true of CRUD.&#160;&#8230; <a href=\\"http://codebetter.com/iancooper/2011/07/15/why-crud-might-be", "id": "http://codebetter.com/iancooper/?p=194", "categories": [], "metadata": {"guid": "3e513230-bb73-4898-955a-d937c88a736d", "likes": 0, "is_published": false}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=75", "title": "TileGame!", "datetime": "2011-07-15T05:43:12", "html": "<p>&nbsp;</p>\\n<p>Whenever I see images of old Ultima games I become nostalgic, and I think I&#8217;m not alone. Why is there no modern adaptation that is not a cutesy cute J-RPG? Then recently I stumbled about two sites&#8230;</p>\\n<p>* <a href=\\"http://www.sophiehoulden.com/blog/\\">Sophie Ho</a><a href=\\"http://www.sophiehoulden.com/blog/\\">ulden&#8217;s blog</a> &#8211; incredibly inspirational and shows what a single person can do</p>\\n<p>* <a href=\\"http://www.die-dunkle-dimension.de/\\">Die Dunkl</a><a href=\\"http://www.die-dunkle-dimension.de/\\">e Dimension</a> &#8211; I loved this game on the C64 and it turns out that it was the labor of a single dedicated developer.</p>\\n<p>So why not give it a try and make my own game? I&#8217;m not out to make money, instead I want this to be a learning exercise &#8211; create my own pipeline, tools, create art and program some game logic. Ideally the game should capture the feel of the old Ultima games (e.g. Ultima IV or V), but in 3D and with some improvements. I will go for a semi isometric top down view that still has a &#8220;tile&#8221; feel to it.</p>\\n<p>Weapons of choice:</p>\\n<p>* 3ds Max &#8211; I&#8217;m just more familiar with the modeling tools in this package</p>\\n<p>* Unity 3D</p>\\n<p>* Python + Qt + PIL &#8211; Tools will be written in this. e.g. my map editor</p>\\n<p>* Boo &#8211; I spend some time looking at it and I just love how readable the code is. And it&#8217;s close enough to Python to be fun</p>\\n<p>I will post some updates soon about some of the work I have done so far &#8211; e.g. version 0.1 of the map editor and my pipeline to get tiles from Max and my map into Unity.</p>\\n<p><a href=\\"http://blarg.robertkist.com/wp-content/uploads/2011/07/u42.png\\"><img alt=\\"\\" class=\\"size-full wp-image-78 aligncenter\\" height=\\"136\\" src=\\"http://blarg.robertkist.com/wp-content/uploads/2011/07/u42.png\\" title=\\"u4\\" width=\\"136\\" /></a></p>", "summary": "&#160; Whenever I see images of old Ultima games I become nostalgic, and I think I&#8217;m not alone. Why is there no modern adaptation that is not a cutesy cute J-RPG? Then recently I stumbled about two sites&#8230; * Sophie Houlden&#8217;s blog &#8211; incredibly inspirational and shows what a sin", "id": "http://blarg.robertkist.com/?p=75", "categories": [], "metadata": {"guid": "f5c01ef8-3ee8-461e-b223-64ea18ab3397", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=582", "title": "Meaningful return values", "datetime": "2011-07-14T23:37:58", "html": "<p>I consistently see return values messed up in people&#8217;s API design. \\u00a0Fortunately, there are some hard and fast rules to follow that make return values really hard to fuck up.</p>\\n<ol>\\n<li><strong>Only return True/False for a <em>single</em>\\u00a0condition</strong>. \\u00a0It is not an acceptable contract to say &#8216;Return True on success, False on failure.&#8217; \\u00a0What is acceptable is &#8216;Return True on success, False if key does not exist.&#8217; \\u00a0You&#8217;d still throw exceptions for invalid arguments or state.</li>\\n<li><strong>Try to avoid returning from methods that mutate a public property on the instance you are calling the method on</strong>. \\u00a0If <em>foo.Frobnicate()</em> mutates <em>foo</em> by changing <em>foo.Bar</em> (which is public), do not return a value- let the caller query <em>foo.Bar</em>. \\u00a0It makes it more clear that <em>Frobnicate</em> is mutating and not just returning a value the caller can assign (a better design may be to NOT mutate and let the caller assign the result). \\u00a0Make mutation the clear contract, not a side effect.</li>\\n<li><strong>Except if you consistently return self/this</strong>. \\u00a0For certain objects, it may make sense to mutate and return the object being mutated. \\u00a0So you can string together calls, like you do on strings: <em>foo.Frobnicate().Spam().Eggs()</em>, which would mutate <em>foo</em>\\u00a03 times. \\u00a0Obviously if an object is immutable (like a string, or .NET IEnumerable) this is good design, but it can be unclear that the object is being mutated unless it is a core part of the object&#8217;s contract.</li>\\n<li><strong>Do not have a return value if you don&#8217;t need it (private methods).</strong>\\u00a0 If you have a private method, and no caller is using the return value, <em>don&#8217;t have a return value!</em>\\u00a0 It generally means your contract is unclear, or your methods are doing too much, and your implementation needs some work.</li>\\n</ol>\\n<div>Pay close attention to how your return values work when you design your API&#8217;s and you&#8217;ll have a very easy way to detect code smell.</div>", "summary": "I consistently see return values messed up in people&#8217;s API design. \\u00a0Fortunately, there are some hard and fast rules to follow that make return values really hard to fuck up. Only return True/False for a single\\u00a0condition. \\u00a0It is not an acceptable contract to say &#8216;Return True on success, F", "id": "http://www.robg3d.com/?p=582", "categories": [], "metadata": {"guid": "8a176157-ba8d-4641-8a8c-57b886decaf1", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/14/thoughts-on-razer-hydra/", "title": "Thoughts on Razer Hydra", "datetime": "2011-07-14T17:04:05", "html": "<p>Back in 1998 I saw an ad in a local PC magazine: it was about a gamepad which registered tilting. I was awestruck by the simple but great idea and a few weeks later I bought a <a href=\\"http://en.wikipedia.org/wiki/Microsoft_SideWinder#Freestyle_Pro\\" target=\\"_blank\\">Sidewinder Freestyle Pro</a>. The following years I played <a href=\\"http://en.wikipedia.org/wiki/Midtown_Madness\\" target=\\"_blank\\">Midtown Madness</a> and <a href=\\"http://en.wikipedia.org/wiki/FreeSpace_2\\" target=\\"_blank\\">Freespace 2</a> with it, many, <em>many</em> hours, and I&#8217;m a fan of motion controls ever since.</p>\\n<p>A decade later of course I tried the Wii Remote and it&#8217;s MotionPlus extension. While they work reasonably well on their native platform, utilizing them on a PC is a major pain in the ass: Bluetooth stack problems plague even Win7 systems and all kind of additional applications need to be running (JoyToKey, X360 emulator, GlovePie) in order to make things work. My enthusiasm faded and I was left longing for a more user friendly solution. Something which I could use not just for gaming but for my current project as well: our characters have 20 degrees of freedom, 20 analogue inputs, which are a bit tricky to drive from a mouse+keyboard combo.</p>\\n<p>I also looked at Kinect and the Playstation Move but none of them seemed like a reasonable solution: the former is laggy, imprecise and needs too much space while the latter is computationally intensive and has no official Windows support.</p>\\n<p>Then I heard about the <a href=\\"http://en.wikipedia.org/wiki/Sixense_TrueMotion\\" target=\\"_blank\\">Razer Hydra</a>, watched a few videos, checked out first hand experiences then coughed up the 140 EUR for it.</p>\\n<p>It&#8217;s a great hardware: quite precise, there is barely any lag with moderate filtering, plug and play, comfortable to hold and the buttons/triggers are fine.</p>\\n<p>Unfortunately the software side is quite lacking: The provided software suit is very primitive: one needs to edit XML files manually to customize controls or to enable Hydra input to unsupported games. And even then the motion controls can not be mapped to joystick axes, it can only be used to emulate a mouse, so I can&#8217;t play Midtown Madness the way I could 13 years ago&#8230;</p>\\n<p>It has great potential but until Razer produces proper driver support for it, it&#8217;s just a standard gamepad with benefits.</p>\\n<p>One of such benefits is Portal 2. It&#8217;s a great game and the Hydra works well&#8230; except when it comes to freelook. Technically it&#8217;s fine, the problem is that I don&#8217;t like it but I can&#8217;t change it.<br />\\nLooking is handled as an absolute mouse input: the cursor needs to be moved to the edges of the screen to initiate turning while pointing to the center stops the motion. It&#8217;s a bit more precise than the console standard right analog stick based look but has nothing on the precision and responsiveness of mouselook. The real problem is that the controls are hardwired so there is no way to change the behavior to &#8220;relative mouse&#8221; where you need to &#8220;<a href=\\"http://sixense.com/forum/phpBB3/viewtopic.php?f=2&amp;t=229\\" target=\\"_blank\\">ratchet</a>&#8220;, disable mouse input while you reposition your hand. That, with properly adjusted sensitivity, would get quite close what a mouse can do while not losing the ability to perform all the <a href=\\"http://www.youtube.com/watch?v=7_1Ao2cd5BM\\" target=\\"_blank\\">Hydra specific moves</a>.</p>\\n<p>Having said that it&#8217;s inspiring to see how it is actually used in a real game. I&#8217;m hoping that I can get it integrated with UDK in the near future as my current project would benefit greatly with a proper input method. (The mouse+&#8221;left side of the x360 controller&#8221; combo is less then ideal.)</p>\\n<p>So for now this piece of tech is more like a developer&#8217;s toy than an uber controller.<!-- PHP 5.x --></p>", "summary": "Back in 1998 I saw an ad in a local PC magazine: it was about a gamepad which registered tilting. I was awestruck by the simple but great idea and a few weeks later I bought a Sidewinder Freestyle Pro. The following years I played Midtown Madness and Freespace 2 with it, many, many hours, [...]", "id": "http://www.zspline.net/blog/?p=1327", "categories": [], "metadata": {"guid": "71e781a1-3f58-40ca-b923-3919a9504d9b", "likes": 0, "is_published": false}}]'
07-31 20:06 root         INFO     Handling CGI request.
07-31 20:06 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:06 SocketClient INFO     Sending to service: "["request_content_slice", [30, 15], {}]"
07-31 20:06 SocketClient INFO     Received from service: "[{"author": "Robert", "url": "http://blarg.robertkist.com/?p=74", "title": "Shanghai Game Jam!", "datetime": "2011-07-14T15:46:13", "html": "<p>Make a game in 48 hours? Yes it&#8217;s possible &#8211; numerous ambitious artists and coders have proven it in &#8220;Game Jams&#8221; where the goal is to make a working computer, card or board game in 48 hours. This is not for the faint of heart and the sponsors even supply folding beds and blankets for those who can&#8217;t stay awake 48 hours.</p>\n<p>Cool to see something like this happening here in Shanghai!</p>\n<p>Event starts on July 22nd &#8211; more info <a href=\"http://www.shanghaigamejam.com/english-version/\">here</a></p>\n<p>&nbsp;</p>", "summary": "Make a game in 48 hours? Yes it&#8217;s possible &#8211; numerous ambitious artists and coders have proven it in &#8220;Game Jams&#8221; where the goal is to make a working computer, card or board game in 48 hours. This is not for the faint of heart and the sponsors even supply folding beds and blan", "id": "http://blarg.robertkist.com/?p=74", "categories": [], "metadata": {"guid": "cf48c91a-028b-4c7e-b115-e29c45b003ba", "likes": 0, "is_published": false}}, {"author": "tistatos (noreply@blogger.com)", "url": "http://technical3dart.blogspot.com/2011/07/c-motionbuilder.html", "title": "C# + MotionBuilder?", "datetime": "2011-07-14T06:29:27.964000", "html": "<div style=\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\"><br /></div><br />My latest project is to try to get something familiar to what <a href=\"http://www.noctua-blog.com/index.php/2008/07/18/extending-maya-with-c-part-1/\">Francois Fruneau(noctua)</a> achieved with Maya, using C# to create the UI with winforms and have it talking to motionbuilder thru Eventhandlers.<br /><br /><a href=\"http://2.bp.blogspot.com/-QH3UJENzWig/Th7tz-4KIGI/AAAAAAAAADo/ahuX3F2runY/s1600/Capture.JPG\" style=\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-QH3UJENzWig/Th7tz-4KIGI/AAAAAAAAADo/ahuX3F2runY/s1600/Capture.JPG\" /></a>I've more or less worked to recreate noctua's code for motionbuilder. There are some small issues: I'm right now using Motionbuilder's FBTool class to initiate the C# UI, and the problem is that this class has to create an window for its own UI, so what I end up with is a small window like this:<br /><br /><br />I'll try looking into inheriting from another class to avoid this, but the good thing about the FBTool class is the fact that it registers the class to the ui to create a Menu item for it.<br />If my further tests are a success I will look into creating a good class to inherit that would heko ne to in the future set up similar configurations with Motionbuilder and C#.<br /><br /><br />If you'd like to recreate this, just check out the link i posted further up to find the code, with some info regarding Motionbuilders SDK (Open Reality) it's fairly simple.<br />Some notes:<br />&nbsp;- When you've built your C# DLL, this shoud be place inside of motionbuilder's bin folder NOT the plugins folder.<br />- You'll need to change settings on individual cpp files in to complie with or without CLR support.<br /><br />Time to continue my dive into the rabbit hole!<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/3506009783909421573-9148612369221107943?l=technical3dart.blogspot.com\" width=\"1\" /></div>", "summary": "<div style=\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\"><br /></div><br />My latest project is to try to get something familiar to what <a href=\"http://www.noctua-blog.com/index.php/2008/07/18/extending-maya-with-c-part-1/\">Francois Fruneau(noctua)</a> achieved with Maya, usin", "id": "tag:blogger.com,1999:blog-3506009783909421573.post-9148612369221107943", "categories": ["tistatos (noreply@blogger.com)"], "metadata": {"guid": "c2578697-7479-444c-871a-03351e6f2ebc", "likes": 0, "is_published": true}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/07/lost-animation-when-loading-referenced.html", "title": "Lost Animation when loading Referenced Rigs", "datetime": "2011-07-14T05:28:43.434000", "html": "This is Particularly relevant to referenced Rigs which have characterSets.<br /><br />So this has come up a few times on the forums and I've also had emails asking how to fix it so thought I'd drop some info up here. The issue is that at some point the referenceEdits that connect Animation Data to a referenced rig can get broken or corrupted. This means you can be animating away all day, saving incrementals as you go, completely unaware that when you load this scene in, all animation will be lost..or so it would seem.<br /><br />see this post recently:<br /><a href=\"http://forums.cgsociety.org/showthread.php?f=7&amp;t=990314\">http://forums.cgsociety.org/showthread.php?f=7&amp;t=990314</a><br /><br />The issue is usually the referenceEdits themselves. What sometimes happens is that the 'connectAttr' block in the referenceEdits gets blanked. We have no idea why, neither does Autodesk, it's completely random. Its also more common on files that came from 2010 and have been loaded in 2011. It also was an issue with rigs that had characterSets on the early release of 2011 IF you were using AnimLayers. (pre hotfix2)<br /><br />So what to look for?<br /><br />If you open up the Reference Editor then go to file>referenceEdits. In there you should get a list of all the edits performed since that file was initially  referenced in. It's basically a macro that the file load uses to reconstruct the file. So, take a look in the list, see if you still have a large 'connectAttr' block. These should be the connections from the characterSet (placeholder list) to the anim curves themselves. If these edits get corrupted then as I said,  you can spend all day saving incremental saves which are all broken but you wouldn't have been aware of them until you reloaded the scenes and the reference list got re-passed.<br /><br />Now there are some good things to help you. Firstly the fact that the connections aren't there doesn't mean that there's no link from the anim curves to the reference. What happens is that the curves will be left connected to the references RN reference node. If you graph the referenceNode in the hypershade you should still see the connected anim data. It's what happens when you unload a reference, the anim data is cast back to the referenceNode for safe keeping.<br /><br />So, graph the data, see if it's there, look at the referenceEdit list, see if it is correct or not. If you have no 'ConnectAttrs' then its the same issues we have.<br /><br />Fixing it is a different issue. Basically we need to write a little tool which spins through the characterSet plugs, then the animCurves left connected to the RN node, does a nameMatch, then reconnects the data. The following dropped into a Python script Tab should do it, just select the characterSet you want reconnected!<br /><br /><pre class=\"python\" name=\"code\">import pymel.core as pm<br />import maya.cmds as cmds<br />cSet,type=pm.ls(sl=True,st=True)<br />refNode=cSet.referenceFile().refNode<br /><br />if not type=='character':<br />   raise StandardError('You must select a CharacterSet to reconnect')<br />if not refNode:<br />   raise StandardError('Given characterSet is not from a referenced file')<br /><br />animCurves=refNode.listConnections(type='animCurve',s=True)<br />cSetPlugs=pm.aliasAttr(cSet,q=True)<br /><br />for plug in cSetPlugs[::2]:<br />   for anim in animCurves:<br />       if anim.split(':')[-1].endswith(plug):<br />           print '%s >> %s' % (anim,plug)<br />           pm.connectAttr('%s.output' % anim,'%s.%s' % (cSet,plug),force=True)<br /></pre><br />Simple but effective fix to get round the bug. I think in light of the amount of people posting things like this I'll follow this up with the Maya dev team again. We get this maybe once a month if that, actually probably less than that now we're all on 2011SAP release.<br /><br />hope that helps folks. I know, referencing is like a black art, god knows I had enough help 7 or 8 years ago when we first started with referenced pipelines.... so thought I'd share the Bug work around.<br /><br /><br />Mark<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/1407054789026932542-8907649085025923245?l=markj3d.blogspot.com\" width=\"1\" /></div>", "summary": "This is Particularly relevant to referenced Rigs which have characterSets.<br /><br />So this has come up a few times on the forums and I've also had emails asking how to fix it so thought I'd drop some info up here. The issue is that at some point the referenceEdits that connect Animation Data to a", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-8907649085025923245", "categories": ["Mark Jackson (markj3d@gmail.com)"], "metadata": {"guid": "95f6bcf1-aa6e-4e9d-a039-4ce7c161c7e7", "likes": 0, "is_published": true}}, {"author": "Artur Le\u00e3o", "url": "http://dimensao3.com/al/?p=536", "title": "iPhone cover has arrived!", "datetime": "2011-07-13T11:07:06", "html": "<div class=\"alignleft\"><img alt=\"\" src=\"https://lh3.googleusercontent.com/-eIWOQJhP_FM/Th1zKUHgKGI/AAAAAAAAADA/KU5fDV_JvXY/pic_01.jpg\" width=\"400px\" /></div>\n<p>Here it is guys, my cover arrived today! Thanks again to Jamie!</p>\n<p><a href=\"http://jamiesjewels.typepad.com/jamies_jewels/\" target=\"_blank\">Jamie&#8217;s Jewels</a></p>", "summary": "Here it is guys, my cover arrived today! Thanks again to Jamie! Jamie&#8217;s Jewels", "id": "http://dimensao3.com/al/?p=536", "categories": [], "metadata": {"guid": "1ab6752b-d149-4f7a-b6aa-09912433038b", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=764", "title": "dependencies tool", "datetime": "2011-07-13T05:36:32", "html": "<p>I finally managed to package up the dependency tracking tool I <a href=\"http://www.macaronikazoo.com/?p=329\" title=\"Finding Dependencies\">blogged about ages ago</a>. \u00a0If you want to take a squiz you can <a href=\"http://www.macaronikazoo.com/download/pyDeps.zip\" target=\"_blank\">find it here</a>. \u00a0Its kinda neat actually. \u00a0As you can see from the link to the tool &#8211; its a zip file. \u00a0I made this zip file using one of the features of the tool; the /package flag. \u00a0Because the tool knows all the dependencies of all the scripts in your tree, you can ask it to make a zip file containing all the dependencies for a given list of scripts.</p>\n<p>So to make the zip file in the link above I ran this command:</p>\n<pre>pydeps /package pydeps.cmd</pre>\n<p>And that was it. \u00a0Simple eh? \u00a0Packaging isn&#8217;t terribly useful, but I figured I&#8217;ll most likely use this tool to generate future zooToolBox distributions. \u00a0I should be able to maintain a list of tools I want to include and pipe them into this command. \u00a0And it seemed like a useful thing for anyone who wants to distribute a neat tool without having to manually figure out what they need to include.</p>\n<p>You may be wondering about the .cmd extension in the example above. \u00a0Well take a look at the zip file. \u00a0Basically .cmd files in windows are similar to shell scripts in *nix. \u00a0The tool will peek into a .cmd file to see if its a python script and if so, will include them in the dependency database.</p>\n<p>So what else can you do with it? \u00a0The main features are the /i and the /d flags. \u00a0The /i flag will report all import dependencies for the given scripts. \u00a0By default it will report only immediate import dependencies, but you can pass it an depth integer as well. \u00a0For example if you wanted to know every single import dependency for a script (ie what the imported scripts import etc), you&#8217;d simply run this command:</p>\n<pre>pydeps /i 0 someScript.py</pre>\n<p>The /d flag will report scripts that are dependent on the ones you specify. \u00a0So just say you find some code you want to re-factor. \u00a0You can run this command:</p>\n<pre>pydeps /d 1 someScript.py</pre>\n<p>This command will report deep dependents for someScript.py. \u00a0By this I mean it will report every script that may possibly be using some part of someScript.py. \u00a0So for example, just say you import someScript into scriptA and then import scriptA into scriptB. \u00a0ScriptB will have access to code in someScript via its scriptA import right? \u00a0So now the pyDeps tool will report scriptA as an immediate dependent and scriptB as a deep dependent when run on someScript.</p>\n<p>The other flag worth pointing out is the /tree flag. \u00a0This will print out a dependency tree for the given scripts. \u00a0This can be an interesting exercise &#8211; try running it on some of your tools. \u00a0I expect you&#8217;ll see some cross dependencies that you weren&#8217;t expecting. \u00a0It&#8217;d be kinda neat to do some big fat visualization graph of this&#8230; \u00a0I did think about this &#8211; in fact I figured if I bothered doing it, I&#8217;d just use maya&#8217;s hypergraph. \u00a0Build some nodes to reflect the scripts and connect em up. \u00a0If anyone ends up doing this &#8211; let me know!</p>\n<p>Anyway, there are a few other flags &#8211; just run the tool without args to see the available flags. \u00a0Enjoy!</p>", "summary": "I finally managed to package up the dependency tracking tool I blogged about ages ago. \u00a0If you want to take a squiz you can find it here. \u00a0Its kinda neat actually. \u00a0As you can see from the link to the tool &#8211; its a zip file. \u00a0I made this zip file using one of the [...]", "id": "http://www.macaronikazoo.com/?p=764", "categories": ["hamish"], "metadata": {"guid": "2fab184f-1f40-460b-be79-618c5c39ad69", "likes": 0, "is_published": true}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=762", "title": "cleaning house", "datetime": "2011-07-12T00:22:15", "html": "<p>I figured I&#8217;d try to clean up the toolbox. \u00a0Its basically a horrible mess of crap all in the top level directory. \u00a0I&#8217;ve wanted to have this done for a long time, but so far my strategy of leaving it to magically fix itself has failed to yield results. \u00a0:(</p>\n<p>Anyway I wanted to get a little feedback from folks. \u00a0Is anyone still using zooCST?</p>\n<p>I also might split the project into two &#8211; one with old horrible MEL only tools and the other with the shiny new python tools. \u00a0The MEL tools aren&#8217;t changing anyway so its not like continually including them in releases is helpful.</p>\n<p>Thoughts anyone? \u00a0Feel free to leave a comment or shoot me email.</p>", "summary": "I figured I&#8217;d try to clean up the toolbox. \u00a0Its basically a horrible mess of crap all in the top level directory. \u00a0I&#8217;ve wanted to have this done for a long time, but so far my strategy of leaving it to magically fix itself has failed to yield results. \u00a0:( Anyway I wanted to get [...]", "id": "http://www.macaronikazoo.com/?p=762", "categories": [], "metadata": {"guid": "5e3320f0-ad4c-45e9-850c-38dd42830fd8", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=730", "title": "capturing nodes created by function", "datetime": "2011-07-11T23:20:34", "html": "<p>I&#8217;ve written a few tools where being able to capture the nodes created by a particular function has come in handy.  So I figured I&#8217;d blog about it in the hopes that it makes someone else&#8217;s life easier.</p>\n<p>So do what exactly?  Well, the idea is to run some function, and be able to capture all the nodes created while that function executes.  I&#8217;ll talk a bit about my motivations for this at the end of the post &#8211; for now, lets dig into the code.</p>\n<p>Maya provides quite a few event based callbacks that you can hook up using the C++ API.  This hasn&#8217;t been easy to do before python came along without writing C++ code. This particular problem you could mostly solve without this API access, but not any way that would be performant.</p>\n<pre class=\"brush:py\">from maya.OpenMaya import MObjectHandle, MDGMessage, MMessage\nimport apiExtensions  #this module makes the maya api bindings a little easier to work with\n\ndef getNodesCreatedBy( function, *args, **kwargs ):\n        '''\n        returns a 2-tuple containing all the nodes created by the passed function, and\n        the return value of said function\n        '''\n\n        #construct the node created callback\n        newNodeHandles = []\n        def newNodeCB( newNode, data ):\n                newNodeHandles.append( MObjectHandle( newNode ) )\n\n        def remNodeCB( remNode, data ):\n                remNodeHandle = MObjectHandle( remNode )\n                if remNodeHandle in newNodeHandles:\n                        newNodeHandles.remove( remNodeHandle )\n\n        newNodeCBMsgId = MDGMessage.addNodeAddedCallback( newNodeCB )\n        remNodeCBMsgId = MDGMessage.addNodeRemovedCallback( remNodeCB )\n\n        ret = function( *args, **kwargs )\n        MMessage.removeCallback( newNodeCBMsgId )\n        MMessage.removeCallback( remNodeCBMsgId )\n\n        #NOTE: the newNodes is a list of MObjects.  If you want node names do something like this:\n        #newNodes = [ str( h.object() ) for h in newNodeHandles ]\n        #this solution relies on using the apiExtensions module imported above\n        newNodes = [ h.object() for h in newNodeHandles ]\n\n        return newNodes, ret</pre>\n<p>So thats the code that does the magic.  Its pretty simple, even if a bit awkward to use.  Basically you pass it the function you want to run and all its corresponding args, and it will return the list of nodes created by that function, and the return value of that function.</p>\n<p>Just a quick note &#8211; as it says in the comments if you don&#8217;t want MObjects returned you can easily return node names instead.  Although if you&#8217;re using the <a href=\"http://zootoolbox.googlecode.com/svn/trunk/apiExtensions.py\" target=\"_blank\">apiExtensions</a> module you can use MObject instances <em>as if they were node names</em>. You can grab the <a href=\"http://zootoolbox.googlecode.com/svn/trunk/apiExtensions.py\" target=\"_blank\">apiExtensions module from here</a>, or just grab it out of the latest release. \u00a0Or if you&#8217;re a pymel kinda guy/gal, I expect you can instantiate the PyNode class with an MObject.</p>\n<p>Moving on, here is a quick example:</p>\n<pre class=\"brush:py\">from maya.cmds import *\ndef someFunc():\n        spaceLocator()\n        group( em=True )\n        joint()\n        polySphere()\n\n        return 'some interesting return value'\n\nnodesCreated, returnValue = getNodesCreatedBy( someFunc )\nprint nodesCreated, returnValue</pre>\n<p>Thats it.  Doesn&#8217;t matter how the nodes are created, this function will capture them all. \u00a0You may also notice that the shape nodes for the locator have been included as well. \u00a0The nodesCreated list will quite literally contain ALL nodes created by the function passed in.</p>\n<p>So whats it used for?</p>\n<p>Just say I want to write a tool that will build a dynamics network on a given control chain. \u00a0I want to be able to turn this functionality on and off easily and I want to make sure when it gets deleted there is no cruft left behind. \u00a0First I write the code to build the network. \u00a0Then I write another function that will execute this code and capture the created nodes and put them in an object set or a container or something.</p>\n<p>Skeleton Builder works in this way. \u00a0When a rig part is built the build method gets run inside this node capturing decorator and all created nodes are put into an object set. \u00a0So Skeleton Builder can easily delete a rig cleanly. \u00a0It can also more easily understand the relationship between a given node and a given part of the rig.</p>\n<p>Another tool that uses this is the <a href=\"http://code.google.com/p/zootoolbox/source/browse/trunk/dynamicChain.py\" target=\"_blank\">Dynamics Tool</a>. \u00a0This tool will create a hair follicle setup and constrain a given list of objects to it. \u00a0It will then give you an interface to delete and create this setup on the fly, or bake the results down to keys. \u00a0The deletion of the hair setup is clean because ALL nodes are captured when the rig is created.</p>\n<p>One minor thing to note &#8211; if you&#8217;re running maya 2009 there is a bug with removing node creation callbacks&#8230; \u00a0This bug is fairly harmless although it may result in noticeable slowdowns if you end up with lots of improperly removed callbacks.</p>", "summary": "I&#8217;ve written a few tools where being able to capture the nodes created by a particular function has come in handy. So I figured I&#8217;d blog about it in the hopes that it makes someone else&#8217;s life easier. So do what exactly? Well, the idea is to run some function, and be able to captur", "id": "http://www.macaronikazoo.com/?p=730", "categories": ["hamish"], "metadata": {"guid": "08c5c23e-fb56-42b4-85ac-179773557081", "likes": 0, "is_published": true}}, {"author": "Artur Le\u00e3o", "url": "http://dimensao3.com/al/?p=526", "title": "Jamie\u2019s Jewels Blog + 3ds Max iPhone cover :D", "datetime": "2011-07-11T14:36:38", "html": "<div class=\"alignleft\"><img alt=\"\" src=\"http://jamiesjewels.typepad.com/JAMIE_HeadShots_CROPPED.jpg\" /></div>\n<p>Have I told you that I just won a\u00a0\u00a03ds Max icon branded iPhone covers? YEAH I just did <img alt=\":D\" class=\"wp-smiley\" src=\"http://dimensao3.com/wptest/wp-includes/images/smilies/icon_biggrin.gif\" />  Thanks to the great\u00a0JAMIE GWILLIAM. He just did a contest in his blog and I was one of the winners so please take a minute and drop by his website and check the cool things he has there!</p>\n<p><a href=\"http://jamiesjewels.typepad.com/jamies_jewels/\" target=\"_blank\">Jamie&#8217;s Jewels</a></p>", "summary": "Have I told you that I just won a\u00a0\u00a03ds Max icon branded iPhone covers? YEAH I just did Thanks to the great\u00a0JAMIE GWILLIAM. He just did a contest in his blog and I was one of the winners so please take a minute and drop by his website and check the cool things he has [...]", "id": "http://dimensao3.com/al/?p=526", "categories": ["Artur Le\u00e3o"], "metadata": {"guid": "520d2310-57a0-48e1-aa7c-eae37aa0aa60", "likes": 0, "is_published": true}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=576", "title": "Why server programmers don\u2019t need ruthlessness", "datetime": "2011-07-11T11:43:48", "html": "<p>There were some (expected) disagreements to my post about<a href=\"http://www.robg3d.com/?p=545\" title=\"Why Tech Artists must have \u201cruthlessness\u201d\"> why tech artists need ruthlessness</a>. \u00a0Perhaps I can help explain my opinion by providing another one about something I know little enough about to run the risk of mischaracterizations: server programmers, and how they don&#8217;t need ruthlessness.</p>\n<p>(Please mind the words here- I&#8217;m not saying they should NOT have it, just that I don&#8217;t think it&#8217;s essential)</p>\n<p>Server programmers occupy, conceptually, the opposite end of the programmer attribute spectrum from TA&#8217;s. They are necessarily highly technical, educated about the lowest levels, always working on highly complex systems, their niche is established, they have a clear area of expertise and control.</p>\n<p>This creates a pretty big distance between everyone and server programmers- and this distance allows them to work with more autonomy. \u00a0And the autonomy means they don&#8217;t have as strong a need for ruthlessness to make decisions.</p>\n<p>Tech art overlaps with both Art/Animation and Tools Engineering. \u00a0They&#8217;re working with specs that are often defined by any other number of parties. \u00a0Everyone wants a piece of them but few people understand them (how many times have you heard &#8216;our server runs automatigically&#8217;?). \u00a0The core work and decisions of a tech artist is infinitely more scattered than that of a server programmer.</p>\n<p>I really should have started with this explanation, as I think it better helps illustrate the causes that require ruthlessness to solve.</p>\n<p>So the question to further explore is, how far is the expertise of a tech artist regarding tools from the people using them? \u00a0Is it near the same distance as between a server programmer and a user? \u00a0A server programmer and an applications programmer? \u00a0Something else?</p>\n<p>It depends highly on what you consider the job of a tech artist, I think.</p>", "summary": "There were some (expected) disagreements to my post about why tech artists need ruthlessness. \u00a0Perhaps I can help explain my opinion by providing another one about something I know little enough about to run the risk of mischaracterizations: server programmers, and how they don&#8217;t need ruthless", "id": "http://www.robg3d.com/?p=576", "categories": ["Rob Galanakis"], "metadata": {"guid": "b531667b-d16f-46ea-a19f-83aeee6d667b", "likes": 0, "is_published": true}}, {"author": "jason", "url": "http://www.jason-parks.com/artoftech/?p=289", "title": "path(), the awesomest class", "datetime": "2011-07-11T04:44:17", "html": "<p>Jason Orendorff wrote an awesome module some years ago to make it quick and easy to manipulate file paths and file names. I was fortunate enough to be exposed to this module and class via PyMEL&#8217;s package which included it.</p>\n<p>Here is our test path and we&#8217;ll slice it and dice it in all kinds of ways:<br />\n<strong>&#8216;c:/temp/test/myTestFile.txt&#8217;</strong></p>\n<p>Here&#8217;s how you cast a string into the class:</p>\n<pre class=\"brush: python; title: python code here; notranslate\">\nfrom path import path\nfilePath = 'c:/temp/test/myTestFile.txt'\nfpPathObj = path(filePath)\nfpPathObj\n# Result: path('c:/temp/test/myTestFile.txt') #\n</pre>\n<p>There are a 167 methods on this class, so you can obviously get practically anything you want. Here are some of my favorite methods:</p>\n<pre class=\"brush: python; title: python code here; notranslate\">\nfpPathObj.basename()\n# Result: 'myTestFile.txt' # \n\n# .name is a property which returns the same\nfpPathObj.name\n# Result: 'myTestFile.txt' #\n\n# namebase returns fileName only w/o extension\nfpPathObj.namebase\n# Result: 'myTestFile' #\n\n# return directory above file\nfpPathObj.parent\n# Result: path('c:/temp/test') # \n\n# check extension\nfpPathObj.endswith('txt')\n# Result: True # \n\n# check existance\nfpPathObj.exists()\n# Result: True # \n\n# check to see if folder type\nfpPathObj.parent.isdir()\n# Result: True #\n</pre>\n<p>And many, many more. I use the above ones practically everyday, though.</p>\n<p>Last example is my latest usage I used today. You can daisy chain the .parent calls to traverse up the chain:</p>\n<pre class=\"brush: python; title: python code here; notranslate\">\nfpPathObj.parent.parent.name\n# Result: 'temp' #\n</pre>\n<p>So if you&#8217;re using Maya, then your probably be using PyMEL by now (if not, get with it and watch <a href=\"http://www.jason-parks.com/artoftech/?page_id=294\" title=\"Presentations\">THIS</a>). If so, you already have the path class in a convenient location. You can simply import it like this:</p>\n<pre class=\"brush: python; title: python code here; notranslate\">\nfrom pymel.util.path import path\n</pre>\n<p>If you&#8217;re in MotionBuilder or other DCC app using Python, you can get it here: <a href=\"http://pypi.python.org/pypi/path.py/2.2\">http://pypi.python.org/pypi/path.py/2.2</a></p>\n<p>Enjoy one of the handier classes any Tech Artist can add to his/her toolbox.</p>\n<div class=\"tweetthis\" style=\"text-align: left;\"><p> <a class=\"tt\" href=\"http://twitter.com/intent/tweet?text=path%28%29%2C+the+awesomest+class+http%3A%2F%2Fbit.ly%2FqlzaqB\" rel=\"nofollow\" target=\"_blank\" title=\"Post to Twitter\"><img alt=\"Post to Twitter\" class=\"nothumb\" src=\"http://www.jason-parks.com/artoftech/wp-content/plugins/tweet-this/icons/en/twitter/tt-twitter-micro4.png\" /></a></p></div>", "summary": "Jason Orendorff wrote an awesome module some years ago to make it quick and easy to manipulate file paths and file names. I was fortunate enough to be exposed to this module and class via PyMEL&#8217;s package which included it. Here is our test path and we&#8217;ll slice it and dice it in all kinds", "id": "http://www.jason-parks.com/artoftech/?p=289", "categories": ["jason"], "metadata": {"guid": "0c992061-23b8-4daf-b318-a4b3ee1e5dfd", "likes": 0, "is_published": true}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=596", "title": "Condensing tags", "datetime": "2011-07-11T03:32:25", "html": "<p>Quick note- I&#8217;ll be reducing the number of tags used by my blog posts.  I have far too many that are too similar right now.</p>", "summary": "Quick note- I&#8217;ll be reducing the number of tags used by my blog posts. I have far too many that are too similar right now", "id": "http://www.robg3d.com/?p=596", "categories": [], "metadata": {"guid": "ffbe8d15-cca0-45be-9edf-ae75e90542c0", "likes": 0, "is_published": false}}, {"author": "ldunham (noreply@blogger.com)", "url": "http://ldunham.blogspot.com/2011/07/nearly-over.html", "title": "Nearly over...", "datetime": "2011-07-10T15:54:19.076000", "html": "Here it comes... about to start the final week on <i>Iconicles</i>, my first contract for Dinamo.<br /><br />I could never have guessed how rewarding an experience it would be, being in the industry. Also, how lucky we were, getting a year-long contract to (pretty much) build from the ground up a TV show for the BBC straight out of uni.<br /><br />What I've learnt in the last 12 months has been staggering, and as sad as I am to be leaving, I'm also excited to put everything I've learnt back to start something from scratch again.<br /><br />Main job will be rigging the characters, props etc then onto animating again but initially&nbsp;I'm guessing I'll be writing the pipeline and animation tools alongside Milan, which will be cool, its pretty rewarding actually, and I'm hoping to start posting up more of my findings as I go along this time, which tbh will probably just be during the first couple of months.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/536028505499887975-2505441436287303163?l=ldunham.blogspot.com\" width=\"1\" /></div>", "summary": "Here it comes... about to start the final week on <i>Iconicles</i>, my first contract for Dinamo.<br /><br />I could never have guessed how rewarding an experience it would be, being in the industry. Also, how lucky we were, getting a year-long contract to (pretty much) build from the ground up a TV", "id": "tag:blogger.com,1999:blog-536028505499887975.post-2505441436287303163", "categories": [], "metadata": {"guid": "76f2c2be-47df-4d98-a718-573d542e305c", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=553", "title": "A brief history of an animation export pipeline", "datetime": "2011-07-09T23:19:18", "html": "<p>I&#8217;ve spoken a lot about the animation export pipeline I made at my last job. \u00a0I started as a Technical Animator and naturally animation was where I spent a lot of my time early on (also because it is the most complex part of a pipeline). \u00a0I saw the pipeline through a number of major overhauls and improvements, and it was where I created and validated many of my technical views on pipeline. \u00a0I&#8217;ll provide this here because I love reading this type of history and micro-post mortem, and I hope there are other people out there that enjoy it. \u00a0Note this is only about <em>a small portion</em> of\u00a0the animation pipeline- this doesn&#8217;t include the rigs, animation tools, or even a lot of the other things that were involved in the export pipeline, such as optimizations, animation sharing, and compiling.</p>\n<p>When I started, we had a &#8216;traditional&#8217; export pipeline- export paths were done by manipulating the path of the file being exported, it was using a third-party exporter for writing the data, and it was converting everything (inside Max) to bones in order to get objects to put into the exporter (and manipulate the bones in the case of additive animations) and then deleting them after the export. \u00a0This was inflexible (paths), buggy (3rd party exporter), and slow (creating bones).</p>\n<p>One of the first things I did was write a &#8216;frame stripper&#8217; in python that would remove every other frame from most animations (not locomotion or additives). \u00a0It operated on the ascii file spit out by the exporter.</p>\n<p>After that came a solution for the paths- see, there were cases where we <em>really couldn&#8217;t</em> export animations based on the source path, because the source and game skeletons were named differently. \u00a0So I came up with a system where we&#8217;d associate some data with a skeleton name: export path, export skeleton name, path to a bunch of useful data, etc. \u00a0This same concept eventually became the concept behind the database-backed asset management system, but for now it was stored in a MAXScript file that was just fileIn&#8217;ed to get the data. \u00a0This was a huge win as it put all path information in one place.</p>\n<p>After that came time to address the intermittent failures we were getting in our exporter. \u00a0It was writing out empty files randomly. \u00a0We were never able to get a solid repro and the vendor told us no one else had the problem. \u00a0So I wrote a custom exporter that wrote out the same ascii files. \u00a0This was also a win because it allowed me to move the &#8216;frame stripping&#8217; into the export phase, rather than running it as a python script after the export. \u00a0It also allowed me to read transforms directly from the PuppetShop rig, and avoid the conversion to MaxBones, so things were significantly sped up. \u00a0Funny enough, the vendor got back to us 2 weeks after the exporter was really done and well tested (a year from the initial ticket), saying they found and fixed the problem.</p>\n<p>Soon after this, I started work on our Asset Management pipeline/database. \u00a0I hooked this new system up into the animation export pipeline, and threw out the old maxscript-based system, and we had a unified asset management pipeline for all dynamic content (character art and animations).</p>\n<p>Realizing the power of C# and .NET in MXS at my fingertips, I created a .NET library of data structures for the animation that could be exported out to the ascii files. \u00a0This was a major turning point- we could have all processing hooked up to the data structures, rather than part of the export pipeline. \u00a0So we could strip frames that way, optimize the files, update formats, save them in binary (via a commandline binary&lt;-&gt;ascii converter that could be run transparently from the .NET library), save out additional files such as xml animation markup on save, whatever, without adjusting the 3ds Max export code almost at all. \u00a0It gave us a flexibility that would have been <em>impossible</em> to try- maybe even impossible to conceptualize- without this abstraction.</p>\n<p>This worked great and was what things were built on for a long time. \u00a0At some point I realized that this was still not enough of an abstraction. \u00a0I built a motion data framework for some animation tools and realized it could be used for the exporter as well. \u00a0Basically you have a common motion data data structure, and any number of serializers/deserializers. \u00a0So you could load BVH into this common format, and save it out to FBX, without ever going through a DCC or writing any code especially for it. \u00a0You also have glue that can fill the data structures, and apply the data structures back to the scene. \u00a0So you remove the concept of an exporter entirely. \u00a0In your DCC you can just have:</p>\n<pre style=\"padding-left: 30px;\">motiondata = getMotionData(myRig)\nFbxSerializer().serialize(motiondata, 'exported.fbx')</pre>\n<p>Likewise, if you wanted to batch-export all your BVH mocap to stub out a bunch of animations, so you don&#8217;t need to export stubs yourself, you can just have a script:</p>\n<pre style=\"padding-left: 30px;\">FbxSerializer().serialize(BvhSerializer().deserialize('mydata.bvh'), 'exported.fbx')</pre>\n<p>Unfortunately by the time I had finished the framework, I wasn&#8217;t the main person responsible for the animation pipeline and was moving off the Tech Art team, so I never actually hooked up our export format into the system or ported over the features into it- but I did have it working for various other formats and it worked great.</p>\n<p>That&#8217;s a pretty natural, albeit fast, evolution (all that happened over 2 years and it was rarely my primary focus). \u00a0So, where to go from there? \u00a0I guess the next step would be to remove the export step entirely, and just hook the same data structures up on a service that can communicate to an animation runtime/game engine, and Maya/DCC. \u00a0The same sort of technology as Autodesk&#8217;s Skyline, but in a much more flexible and home-brew solution. \u00a0From a tools perspective, this may not be incredibly difficult. \u00a0The main hiccup is performance due to the still single-threaded nature of DCC apps. \u00a0If you could read the scene and send data on a background thread, performance wouldn&#8217;t be a problem. \u00a0And the beauty extends itself further when creating a service-based pipeline like this, because you could pretty easily hook MotionBuilder (or even 3ds Max) up to the system.</p>\n<p>This, though, presents a pretty big leap, and for the time being (until DCC apps improve multithreaded capabilities), I&#8217;ll stick with the pipeline in the state it&#8217;s in and bring more systems to the same level of abstraction.</p>", "summary": "I&#8217;ve spoken a lot about the animation export pipeline I made at my last job. \u00a0I started as a Technical Animator and naturally animation was where I spent a lot of my time early on (also because it is the most complex part of a pipeline). \u00a0I saw the pipeline through a number of major", "id": "http://www.robg3d.com/?p=553", "categories": ["Rob Galanakis"], "metadata": {"guid": "75b1956b-c31b-4ad0-a996-7ca659e4b3e2", "likes": 0, "is_published": true}}, {"author": "Nathan", "url": "http://nathanhorne.com/?p=353", "title": "Python and Threading (Also, Maya)", "datetime": "2011-07-09T03:30:33", "html": "<p>So, we noticed some odd behavior with several threaded scripts at work: They ran slower than the initial single threaded version.. Off to the Maya docs!</p>\n<p>Per the\u00a0<a href=\"http://download.autodesk.com/us/maya/2011help/index.html?url=./files/WS1a9193826455f5ff-7f10494411f03a24f24-7e6e.htm,topicNumber=d0e672317\">Maya docs</a> on threading and python:</p>\n<p style=\"padding-left: 30px;\">&#8220;One important difference between Python threads and C++-based threads is that\u00a0python threads do not run concurrently since the Python interpreter itself is not currently threadsafe. For this reason,\u00a0they are not useful for data parallel applications. However, they may be useful, for example, where polling of resources is done that might otherwise have to wait for timeouts.&#8221;</p>\n<p>After doing a bit of research I thought I would share some of what I found on python and Threading, this sparked a few conversations at work about the usefulness and specific use cases of threads.</p>\n<p>Short version:</p>\n<ul>\n<li><span style=\"color: #993300;\"><span style=\"color: #888888;\">Maya Python and standalone Python handle threads differently: </span><span style=\"color: #3366ff;\">False</span></span></li>\n<li><span style=\"color: #888888;\">Python instructions cannot run in parallel: <span style=\"color: #993300;\">True</span></span></li>\n<li><span style=\"color: #993300;\"><span style=\"color: #888888;\">Python threads are not &#8220;true&#8221; threads: </span><span style=\"color: #3366ff;\">False</span></span></li>\n<li><span style=\"color: #888888;\">Threads provide no speed benefit or parallelism: </span><span style=\"color: #993300;\"><span style=\"color: #3366ff;\">False</span></span></li>\n<li><span style=\"color: #888888;\">Should you use threads speed up potentially parallel operations: </span><span style=\"color: #3366ff;\">Sometimes</span></li>\n</ul>\n<p>Python&#8217;s natively limited via the <span style=\"color: #0000ff;\"><a href=\"http://docs.python.org/glossary.html#term-global-interpreter-lock\">Global Interpreter Lock (GIL)</a></span> to prevent concurrent Python byte code instructions, this prevents separate threads from simultaneously modifying the same memory space in order to prevent \u00a0memory access issues. If one thread were able to delete a shared object while another thread tried to append to it, the result would be a crash without the GIL. On the internal implementation side it get&#8217;s even more important as internal data like weakref&#8217;s and reference counts could become out of sync.</p>\n<p>The silver lining to this limitation is that it <span style=\"color: #993300;\">only effect&#8217;s pure python bytecode</span>, anything happening via a compiled c extension or a linked C++ library like PyQt will generally try to<span style=\"color: #993300;\"> release the GIL while the compiled code is running, as that code can&#8217;t modify the internal Python interpreter state</span> anyways (C++ code couldn&#8217;t delete your python object for example). Most of the major and intensive operations that you would want to do in a thread are already careful to release the GIL when performing a blocking operation: file read/write, time.sleep, sql select/execute, xml parse, etc..</p>\n<p><a href=\"http://wiki.python.org/moin/GlobalInterpreterLock\">Per the python documentation on the GIL</a>:</p>\n<p style=\"padding-left: 30px;\">&#8221; The GIL is controversial because it prevents multithreaded CPython programs from taking full advantage of multiprocessor systems in certain situations. Note that potentially blocking or long-running operations, such as I/O, image processing, and NumPy number crunching, happen outside the GIL. Therefore it is only in multithreaded programs that spend a lot of time inside the GIL, interpreting CPython bytecode, that the GIL becomes a bottleneck.&#8221;</p>\n<p><a href=\"http://nathanhorne.com/lock/http://www.riverbankcomputing.com/pipermail/pyqt/2011-January/028961.html\">PyQt and the GIL</a>:</p>\n<p style=\"padding-left: 30px;\">&#8220;when the threaded code is calling long running c/c++ functions, such as a\u00a0database select, it will release the GIL until the call completes.\u00a0 This is\u00a0all done automatically within python and PyQt.\u00a0 This is &#8220;real&#8221; multithreading.&#8221;</p>\n<p>As for the original issue raised by the Maya api docs, the real issue isn&#8217;t as straightforward as the docs would lead you to believe: Yes, using threads to number crunch in pure python threads is pointless, they will not run in parallel and will yeild no speed increase. However, file operations, numpy, sql access, and many other functions can be used safely within Maya and yield speed increases and truly parallel work. The docs seem to be primarily focused on parallelism in the context of deformers or number crunching/simulation plugins, in which case that computation should be offloaded to a custom c extension or something like numpy.</p>\n<p>References:</p>\n<ul>\n<li><a href=\"http://docs.python.org/glossary.html#term-global-interpreter-lock\">http://docs.python.org/glossary.html#term-global-interpreter-lock</a></li>\n<li><a href=\"http://wiki.python.org/moin/GlobalInterpreterLock\">http://wiki.python.org/moin/GlobalInterpreterLock</a></li>\n<li><a href=\"http://www.riverbankcomputing.co.uk/static/Docs/sip4/using.html\">http://www.riverbankcomputing.co.uk/static/Docs/sip4/using.html</a></li>\n<li><a href=\"http://jessenoller.com/2009/02/01/python-threads-and-the-global-interpreter-lock/\">http://jessenoller.com/2009/02/01/python-threads-and-the-global-interpreter-lock/</a><a href=\"http://www.riverbankcomputing.com/pipermail/pyqt/2011-January/028961.html\">http://www.riverbankcomputing.com/pipermail/pyqt/2011-January/028961.html</a></li>\n<li><a href=\"http://download.autodesk.com/us/maya/2011help/index.html?url=./files/WS1a9193826455f5ff-7f10494411f03a24f24-7e6e.htm,topicNumber=d0e672317\">http://download.autodesk.com/us/maya/2011help/index.html?url=./files/WS1a9193826455f5ff-7f10494411f03a24f24-7e6e.htm,topicNumber=d0e672317</a></li>\n<li><a href=\"http://www.dabeaz.com/python/UnderstandingGIL.pdf\">http://www.dabeaz.com/python/UnderstandingGIL.pdf</a></li>\n</ul>", "summary": "So, we noticed some odd behavior with several threaded scripts at work: They ran slower than the initial single threaded version.. Off to the Maya docs! Per the\u00a0Maya docs on threading and python: &#8220;One important difference between Python threads and C++-based threads is that\u00a0python threads do n", "id": "http://nathanhorne.com/?p=353", "categories": ["Nathan"], "metadata": {"guid": "1c4818bb-b778-4c75-a7b8-d6d0c8bc0bc4", "likes": 0, "is_published": true}}, {"author": "Artur Le\u00e3o", "url": "http://dimensao3.com/al/?p=521", "title": "CG Cookie iRay Manager 1.6 tutorial", "datetime": "2011-07-08T11:13:58", "html": "<p>The guys at CG Cookie have done a cool <a href=\"http://vimeo.com/23928969\" target=\"_blank\" title=\"tutorial\">tutorial </a>using iRay Manager 1.6. Check it out and dont forget to visit <a href=\"http://www.cgcookie.com\" target=\"_blank\">http://www.cgcookie.com</a> for more tutorials!</p>", "summary": "The guys at CG Cookie have done a cool tutorial using iRay Manager 1.6. Check it out and dont forget to visit http://www.cgcookie.com for more tutorials!", "id": "http://dimensao3.com/al/?p=521", "categories": [], "metadata": {"guid": "20acf654-0557-49a4-bb7a-5cb0249f2eb8", "likes": 0, "is_published": false}}]"
07-31 20:06 SocketClient INFO     Returning(as str): '[{"author": "Robert", "url": "http://blarg.robertkist.com/?p=74", "title": "Shanghai Game Jam!", "datetime": "2011-07-14T15:46:13", "html": "<p>Make a game in 48 hours? Yes it&#8217;s possible &#8211; numerous ambitious artists and coders have proven it in &#8220;Game Jams&#8221; where the goal is to make a working computer, card or board game in 48 hours. This is not for the faint of heart and the sponsors even supply folding beds and blankets for those who can&#8217;t stay awake 48 hours.</p>\\n<p>Cool to see something like this happening here in Shanghai!</p>\\n<p>Event starts on July 22nd &#8211; more info <a href=\\"http://www.shanghaigamejam.com/english-version/\\">here</a></p>\\n<p>&nbsp;</p>", "summary": "Make a game in 48 hours? Yes it&#8217;s possible &#8211; numerous ambitious artists and coders have proven it in &#8220;Game Jams&#8221; where the goal is to make a working computer, card or board game in 48 hours. This is not for the faint of heart and the sponsors even supply folding beds and blan", "id": "http://blarg.robertkist.com/?p=74", "categories": [], "metadata": {"guid": "cf48c91a-028b-4c7e-b115-e29c45b003ba", "likes": 0, "is_published": false}}, {"author": "tistatos (noreply@blogger.com)", "url": "http://technical3dart.blogspot.com/2011/07/c-motionbuilder.html", "title": "C# + MotionBuilder?", "datetime": "2011-07-14T06:29:27.964000", "html": "<div style=\\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\\"><br /></div><br />My latest project is to try to get something familiar to what <a href=\\"http://www.noctua-blog.com/index.php/2008/07/18/extending-maya-with-c-part-1/\\">Francois Fruneau(noctua)</a> achieved with Maya, using C# to create the UI with winforms and have it talking to motionbuilder thru Eventhandlers.<br /><br /><a href=\\"http://2.bp.blogspot.com/-QH3UJENzWig/Th7tz-4KIGI/AAAAAAAAADo/ahuX3F2runY/s1600/Capture.JPG\\" style=\\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\\"><img border=\\"0\\" src=\\"http://2.bp.blogspot.com/-QH3UJENzWig/Th7tz-4KIGI/AAAAAAAAADo/ahuX3F2runY/s1600/Capture.JPG\\" /></a>I\'ve more or less worked to recreate noctua\'s code for motionbuilder. There are some small issues: I\'m right now using Motionbuilder\'s FBTool class to initiate the C# UI, and the problem is that this class has to create an window for its own UI, so what I end up with is a small window like this:<br /><br /><br />I\'ll try looking into inheriting from another class to avoid this, but the good thing about the FBTool class is the fact that it registers the class to the ui to create a Menu item for it.<br />If my further tests are a success I will look into creating a good class to inherit that would heko ne to in the future set up similar configurations with Motionbuilder and C#.<br /><br /><br />If you\'d like to recreate this, just check out the link i posted further up to find the code, with some info regarding Motionbuilders SDK (Open Reality) it\'s fairly simple.<br />Some notes:<br />&nbsp;- When you\'ve built your C# DLL, this shoud be place inside of motionbuilder\'s bin folder NOT the plugins folder.<br />- You\'ll need to change settings on individual cpp files in to complie with or without CLR support.<br /><br />Time to continue my dive into the rabbit hole!<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/3506009783909421573-9148612369221107943?l=technical3dart.blogspot.com\\" width=\\"1\\" /></div>", "summary": "<div style=\\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\\"><br /></div><br />My latest project is to try to get something familiar to what <a href=\\"http://www.noctua-blog.com/index.php/2008/07/18/extending-maya-with-c-part-1/\\">Francois Fruneau(noctua)</a> achieved with Maya, usin", "id": "tag:blogger.com,1999:blog-3506009783909421573.post-9148612369221107943", "categories": ["tistatos (noreply@blogger.com)"], "metadata": {"guid": "c2578697-7479-444c-871a-03351e6f2ebc", "likes": 0, "is_published": true}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/07/lost-animation-when-loading-referenced.html", "title": "Lost Animation when loading Referenced Rigs", "datetime": "2011-07-14T05:28:43.434000", "html": "This is Particularly relevant to referenced Rigs which have characterSets.<br /><br />So this has come up a few times on the forums and I\'ve also had emails asking how to fix it so thought I\'d drop some info up here. The issue is that at some point the referenceEdits that connect Animation Data to a referenced rig can get broken or corrupted. This means you can be animating away all day, saving incrementals as you go, completely unaware that when you load this scene in, all animation will be lost..or so it would seem.<br /><br />see this post recently:<br /><a href=\\"http://forums.cgsociety.org/showthread.php?f=7&amp;t=990314\\">http://forums.cgsociety.org/showthread.php?f=7&amp;t=990314</a><br /><br />The issue is usually the referenceEdits themselves. What sometimes happens is that the \'connectAttr\' block in the referenceEdits gets blanked. We have no idea why, neither does Autodesk, it\'s completely random. Its also more common on files that came from 2010 and have been loaded in 2011. It also was an issue with rigs that had characterSets on the early release of 2011 IF you were using AnimLayers. (pre hotfix2)<br /><br />So what to look for?<br /><br />If you open up the Reference Editor then go to file>referenceEdits. In there you should get a list of all the edits performed since that file was initially  referenced in. It\'s basically a macro that the file load uses to reconstruct the file. So, take a look in the list, see if you still have a large \'connectAttr\' block. These should be the connections from the characterSet (placeholder list) to the anim curves themselves. If these edits get corrupted then as I said,  you can spend all day saving incremental saves which are all broken but you wouldn\'t have been aware of them until you reloaded the scenes and the reference list got re-passed.<br /><br />Now there are some good things to help you. Firstly the fact that the connections aren\'t there doesn\'t mean that there\'s no link from the anim curves to the reference. What happens is that the curves will be left connected to the references RN reference node. If you graph the referenceNode in the hypershade you should still see the connected anim data. It\'s what happens when you unload a reference, the anim data is cast back to the referenceNode for safe keeping.<br /><br />So, graph the data, see if it\'s there, look at the referenceEdit list, see if it is correct or not. If you have no \'ConnectAttrs\' then its the same issues we have.<br /><br />Fixing it is a different issue. Basically we need to write a little tool which spins through the characterSet plugs, then the animCurves left connected to the RN node, does a nameMatch, then reconnects the data. The following dropped into a Python script Tab should do it, just select the characterSet you want reconnected!<br /><br /><pre class=\\"python\\" name=\\"code\\">import pymel.core as pm<br />import maya.cmds as cmds<br />cSet,type=pm.ls(sl=True,st=True)<br />refNode=cSet.referenceFile().refNode<br /><br />if not type==\'character\':<br />   raise StandardError(\'You must select a CharacterSet to reconnect\')<br />if not refNode:<br />   raise StandardError(\'Given characterSet is not from a referenced file\')<br /><br />animCurves=refNode.listConnections(type=\'animCurve\',s=True)<br />cSetPlugs=pm.aliasAttr(cSet,q=True)<br /><br />for plug in cSetPlugs[::2]:<br />   for anim in animCurves:<br />       if anim.split(\':\')[-1].endswith(plug):<br />           print \'%s >> %s\' % (anim,plug)<br />           pm.connectAttr(\'%s.output\' % anim,\'%s.%s\' % (cSet,plug),force=True)<br /></pre><br />Simple but effective fix to get round the bug. I think in light of the amount of people posting things like this I\'ll follow this up with the Maya dev team again. We get this maybe once a month if that, actually probably less than that now we\'re all on 2011SAP release.<br /><br />hope that helps folks. I know, referencing is like a black art, god knows I had enough help 7 or 8 years ago when we first started with referenced pipelines.... so thought I\'d share the Bug work around.<br /><br /><br />Mark<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/1407054789026932542-8907649085025923245?l=markj3d.blogspot.com\\" width=\\"1\\" /></div>", "summary": "This is Particularly relevant to referenced Rigs which have characterSets.<br /><br />So this has come up a few times on the forums and I\'ve also had emails asking how to fix it so thought I\'d drop some info up here. The issue is that at some point the referenceEdits that connect Animation Data to a", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-8907649085025923245", "categories": ["Mark Jackson (markj3d@gmail.com)"], "metadata": {"guid": "95f6bcf1-aa6e-4e9d-a039-4ce7c161c7e7", "likes": 0, "is_published": true}}, {"author": "Artur Le\\u00e3o", "url": "http://dimensao3.com/al/?p=536", "title": "iPhone cover has arrived!", "datetime": "2011-07-13T11:07:06", "html": "<div class=\\"alignleft\\"><img alt=\\"\\" src=\\"https://lh3.googleusercontent.com/-eIWOQJhP_FM/Th1zKUHgKGI/AAAAAAAAADA/KU5fDV_JvXY/pic_01.jpg\\" width=\\"400px\\" /></div>\\n<p>Here it is guys, my cover arrived today! Thanks again to Jamie!</p>\\n<p><a href=\\"http://jamiesjewels.typepad.com/jamies_jewels/\\" target=\\"_blank\\">Jamie&#8217;s Jewels</a></p>", "summary": "Here it is guys, my cover arrived today! Thanks again to Jamie! Jamie&#8217;s Jewels", "id": "http://dimensao3.com/al/?p=536", "categories": [], "metadata": {"guid": "1ab6752b-d149-4f7a-b6aa-09912433038b", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=764", "title": "dependencies tool", "datetime": "2011-07-13T05:36:32", "html": "<p>I finally managed to package up the dependency tracking tool I <a href=\\"http://www.macaronikazoo.com/?p=329\\" title=\\"Finding Dependencies\\">blogged about ages ago</a>. \\u00a0If you want to take a squiz you can <a href=\\"http://www.macaronikazoo.com/download/pyDeps.zip\\" target=\\"_blank\\">find it here</a>. \\u00a0Its kinda neat actually. \\u00a0As you can see from the link to the tool &#8211; its a zip file. \\u00a0I made this zip file using one of the features of the tool; the /package flag. \\u00a0Because the tool knows all the dependencies of all the scripts in your tree, you can ask it to make a zip file containing all the dependencies for a given list of scripts.</p>\\n<p>So to make the zip file in the link above I ran this command:</p>\\n<pre>pydeps /package pydeps.cmd</pre>\\n<p>And that was it. \\u00a0Simple eh? \\u00a0Packaging isn&#8217;t terribly useful, but I figured I&#8217;ll most likely use this tool to generate future zooToolBox distributions. \\u00a0I should be able to maintain a list of tools I want to include and pipe them into this command. \\u00a0And it seemed like a useful thing for anyone who wants to distribute a neat tool without having to manually figure out what they need to include.</p>\\n<p>You may be wondering about the .cmd extension in the example above. \\u00a0Well take a look at the zip file. \\u00a0Basically .cmd files in windows are similar to shell scripts in *nix. \\u00a0The tool will peek into a .cmd file to see if its a python script and if so, will include them in the dependency database.</p>\\n<p>So what else can you do with it? \\u00a0The main features are the /i and the /d flags. \\u00a0The /i flag will report all import dependencies for the given scripts. \\u00a0By default it will report only immediate import dependencies, but you can pass it an depth integer as well. \\u00a0For example if you wanted to know every single import dependency for a script (ie what the imported scripts import etc), you&#8217;d simply run this command:</p>\\n<pre>pydeps /i 0 someScript.py</pre>\\n<p>The /d flag will report scripts that are dependent on the ones you specify. \\u00a0So just say you find some code you want to re-factor. \\u00a0You can run this command:</p>\\n<pre>pydeps /d 1 someScript.py</pre>\\n<p>This command will report deep dependents for someScript.py. \\u00a0By this I mean it will report every script that may possibly be using some part of someScript.py. \\u00a0So for example, just say you import someScript into scriptA and then import scriptA into scriptB. \\u00a0ScriptB will have access to code in someScript via its scriptA import right? \\u00a0So now the pyDeps tool will report scriptA as an immediate dependent and scriptB as a deep dependent when run on someScript.</p>\\n<p>The other flag worth pointing out is the /tree flag. \\u00a0This will print out a dependency tree for the given scripts. \\u00a0This can be an interesting exercise &#8211; try running it on some of your tools. \\u00a0I expect you&#8217;ll see some cross dependencies that you weren&#8217;t expecting. \\u00a0It&#8217;d be kinda neat to do some big fat visualization graph of this&#8230; \\u00a0I did think about this &#8211; in fact I figured if I bothered doing it, I&#8217;d just use maya&#8217;s hypergraph. \\u00a0Build some nodes to reflect the scripts and connect em up. \\u00a0If anyone ends up doing this &#8211; let me know!</p>\\n<p>Anyway, there are a few other flags &#8211; just run the tool without args to see the available flags. \\u00a0Enjoy!</p>", "summary": "I finally managed to package up the dependency tracking tool I blogged about ages ago. \\u00a0If you want to take a squiz you can find it here. \\u00a0Its kinda neat actually. \\u00a0As you can see from the link to the tool &#8211; its a zip file. \\u00a0I made this zip file using one of the [...]", "id": "http://www.macaronikazoo.com/?p=764", "categories": ["hamish"], "metadata": {"guid": "2fab184f-1f40-460b-be79-618c5c39ad69", "likes": 0, "is_published": true}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=762", "title": "cleaning house", "datetime": "2011-07-12T00:22:15", "html": "<p>I figured I&#8217;d try to clean up the toolbox. \\u00a0Its basically a horrible mess of crap all in the top level directory. \\u00a0I&#8217;ve wanted to have this done for a long time, but so far my strategy of leaving it to magically fix itself has failed to yield results. \\u00a0:(</p>\\n<p>Anyway I wanted to get a little feedback from folks. \\u00a0Is anyone still using zooCST?</p>\\n<p>I also might split the project into two &#8211; one with old horrible MEL only tools and the other with the shiny new python tools. \\u00a0The MEL tools aren&#8217;t changing anyway so its not like continually including them in releases is helpful.</p>\\n<p>Thoughts anyone? \\u00a0Feel free to leave a comment or shoot me email.</p>", "summary": "I figured I&#8217;d try to clean up the toolbox. \\u00a0Its basically a horrible mess of crap all in the top level directory. \\u00a0I&#8217;ve wanted to have this done for a long time, but so far my strategy of leaving it to magically fix itself has failed to yield results. \\u00a0:( Anyway I wanted to get [...]", "id": "http://www.macaronikazoo.com/?p=762", "categories": [], "metadata": {"guid": "5e3320f0-ad4c-45e9-850c-38dd42830fd8", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=730", "title": "capturing nodes created by function", "datetime": "2011-07-11T23:20:34", "html": "<p>I&#8217;ve written a few tools where being able to capture the nodes created by a particular function has come in handy.  So I figured I&#8217;d blog about it in the hopes that it makes someone else&#8217;s life easier.</p>\\n<p>So do what exactly?  Well, the idea is to run some function, and be able to capture all the nodes created while that function executes.  I&#8217;ll talk a bit about my motivations for this at the end of the post &#8211; for now, lets dig into the code.</p>\\n<p>Maya provides quite a few event based callbacks that you can hook up using the C++ API.  This hasn&#8217;t been easy to do before python came along without writing C++ code. This particular problem you could mostly solve without this API access, but not any way that would be performant.</p>\\n<pre class=\\"brush:py\\">from maya.OpenMaya import MObjectHandle, MDGMessage, MMessage\\nimport apiExtensions  #this module makes the maya api bindings a little easier to work with\\n\\ndef getNodesCreatedBy( function, *args, **kwargs ):\\n        \'\'\'\\n        returns a 2-tuple containing all the nodes created by the passed function, and\\n        the return value of said function\\n        \'\'\'\\n\\n        #construct the node created callback\\n        newNodeHandles = []\\n        def newNodeCB( newNode, data ):\\n                newNodeHandles.append( MObjectHandle( newNode ) )\\n\\n        def remNodeCB( remNode, data ):\\n                remNodeHandle = MObjectHandle( remNode )\\n                if remNodeHandle in newNodeHandles:\\n                        newNodeHandles.remove( remNodeHandle )\\n\\n        newNodeCBMsgId = MDGMessage.addNodeAddedCallback( newNodeCB )\\n        remNodeCBMsgId = MDGMessage.addNodeRemovedCallback( remNodeCB )\\n\\n        ret = function( *args, **kwargs )\\n        MMessage.removeCallback( newNodeCBMsgId )\\n        MMessage.removeCallback( remNodeCBMsgId )\\n\\n        #NOTE: the newNodes is a list of MObjects.  If you want node names do something like this:\\n        #newNodes = [ str( h.object() ) for h in newNodeHandles ]\\n        #this solution relies on using the apiExtensions module imported above\\n        newNodes = [ h.object() for h in newNodeHandles ]\\n\\n        return newNodes, ret</pre>\\n<p>So thats the code that does the magic.  Its pretty simple, even if a bit awkward to use.  Basically you pass it the function you want to run and all its corresponding args, and it will return the list of nodes created by that function, and the return value of that function.</p>\\n<p>Just a quick note &#8211; as it says in the comments if you don&#8217;t want MObjects returned you can easily return node names instead.  Although if you&#8217;re using the <a href=\\"http://zootoolbox.googlecode.com/svn/trunk/apiExtensions.py\\" target=\\"_blank\\">apiExtensions</a> module you can use MObject instances <em>as if they were node names</em>. You can grab the <a href=\\"http://zootoolbox.googlecode.com/svn/trunk/apiExtensions.py\\" target=\\"_blank\\">apiExtensions module from here</a>, or just grab it out of the latest release. \\u00a0Or if you&#8217;re a pymel kinda guy/gal, I expect you can instantiate the PyNode class with an MObject.</p>\\n<p>Moving on, here is a quick example:</p>\\n<pre class=\\"brush:py\\">from maya.cmds import *\\ndef someFunc():\\n        spaceLocator()\\n        group( em=True )\\n        joint()\\n        polySphere()\\n\\n        return \'some interesting return value\'\\n\\nnodesCreated, returnValue = getNodesCreatedBy( someFunc )\\nprint nodesCreated, returnValue</pre>\\n<p>Thats it.  Doesn&#8217;t matter how the nodes are created, this function will capture them all. \\u00a0You may also notice that the shape nodes for the locator have been included as well. \\u00a0The nodesCreated list will quite literally contain ALL nodes created by the function passed in.</p>\\n<p>So whats it used for?</p>\\n<p>Just say I want to write a tool that will build a dynamics network on a given control chain. \\u00a0I want to be able to turn this functionality on and off easily and I want to make sure when it gets deleted there is no cruft left behind. \\u00a0First I write the code to build the network. \\u00a0Then I write another function that will execute this code and capture the created nodes and put them in an object set or a container or something.</p>\\n<p>Skeleton Builder works in this way. \\u00a0When a rig part is built the build method gets run inside this node capturing decorator and all created nodes are put into an object set. \\u00a0So Skeleton Builder can easily delete a rig cleanly. \\u00a0It can also more easily understand the relationship between a given node and a given part of the rig.</p>\\n<p>Another tool that uses this is the <a href=\\"http://code.google.com/p/zootoolbox/source/browse/trunk/dynamicChain.py\\" target=\\"_blank\\">Dynamics Tool</a>. \\u00a0This tool will create a hair follicle setup and constrain a given list of objects to it. \\u00a0It will then give you an interface to delete and create this setup on the fly, or bake the results down to keys. \\u00a0The deletion of the hair setup is clean because ALL nodes are captured when the rig is created.</p>\\n<p>One minor thing to note &#8211; if you&#8217;re running maya 2009 there is a bug with removing node creation callbacks&#8230; \\u00a0This bug is fairly harmless although it may result in noticeable slowdowns if you end up with lots of improperly removed callbacks.</p>", "summary": "I&#8217;ve written a few tools where being able to capture the nodes created by a particular function has come in handy. So I figured I&#8217;d blog about it in the hopes that it makes someone else&#8217;s life easier. So do what exactly? Well, the idea is to run some function, and be able to captur", "id": "http://www.macaronikazoo.com/?p=730", "categories": ["hamish"], "metadata": {"guid": "08c5c23e-fb56-42b4-85ac-179773557081", "likes": 0, "is_published": true}}, {"author": "Artur Le\\u00e3o", "url": "http://dimensao3.com/al/?p=526", "title": "Jamie\\u2019s Jewels Blog + 3ds Max iPhone cover :D", "datetime": "2011-07-11T14:36:38", "html": "<div class=\\"alignleft\\"><img alt=\\"\\" src=\\"http://jamiesjewels.typepad.com/JAMIE_HeadShots_CROPPED.jpg\\" /></div>\\n<p>Have I told you that I just won a\\u00a0\\u00a03ds Max icon branded iPhone covers? YEAH I just did <img alt=\\":D\\" class=\\"wp-smiley\\" src=\\"http://dimensao3.com/wptest/wp-includes/images/smilies/icon_biggrin.gif\\" />  Thanks to the great\\u00a0JAMIE GWILLIAM. He just did a contest in his blog and I was one of the winners so please take a minute and drop by his website and check the cool things he has there!</p>\\n<p><a href=\\"http://jamiesjewels.typepad.com/jamies_jewels/\\" target=\\"_blank\\">Jamie&#8217;s Jewels</a></p>", "summary": "Have I told you that I just won a\\u00a0\\u00a03ds Max icon branded iPhone covers? YEAH I just did Thanks to the great\\u00a0JAMIE GWILLIAM. He just did a contest in his blog and I was one of the winners so please take a minute and drop by his website and check the cool things he has [...]", "id": "http://dimensao3.com/al/?p=526", "categories": ["Artur Le\\u00e3o"], "metadata": {"guid": "520d2310-57a0-48e1-aa7c-eae37aa0aa60", "likes": 0, "is_published": true}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=576", "title": "Why server programmers don\\u2019t need ruthlessness", "datetime": "2011-07-11T11:43:48", "html": "<p>There were some (expected) disagreements to my post about<a href=\\"http://www.robg3d.com/?p=545\\" title=\\"Why Tech Artists must have \\u201cruthlessness\\u201d\\"> why tech artists need ruthlessness</a>. \\u00a0Perhaps I can help explain my opinion by providing another one about something I know little enough about to run the risk of mischaracterizations: server programmers, and how they don&#8217;t need ruthlessness.</p>\\n<p>(Please mind the words here- I&#8217;m not saying they should NOT have it, just that I don&#8217;t think it&#8217;s essential)</p>\\n<p>Server programmers occupy, conceptually, the opposite end of the programmer attribute spectrum from TA&#8217;s. They are necessarily highly technical, educated about the lowest levels, always working on highly complex systems, their niche is established, they have a clear area of expertise and control.</p>\\n<p>This creates a pretty big distance between everyone and server programmers- and this distance allows them to work with more autonomy. \\u00a0And the autonomy means they don&#8217;t have as strong a need for ruthlessness to make decisions.</p>\\n<p>Tech art overlaps with both Art/Animation and Tools Engineering. \\u00a0They&#8217;re working with specs that are often defined by any other number of parties. \\u00a0Everyone wants a piece of them but few people understand them (how many times have you heard &#8216;our server runs automatigically&#8217;?). \\u00a0The core work and decisions of a tech artist is infinitely more scattered than that of a server programmer.</p>\\n<p>I really should have started with this explanation, as I think it better helps illustrate the causes that require ruthlessness to solve.</p>\\n<p>So the question to further explore is, how far is the expertise of a tech artist regarding tools from the people using them? \\u00a0Is it near the same distance as between a server programmer and a user? \\u00a0A server programmer and an applications programmer? \\u00a0Something else?</p>\\n<p>It depends highly on what you consider the job of a tech artist, I think.</p>", "summary": "There were some (expected) disagreements to my post about why tech artists need ruthlessness. \\u00a0Perhaps I can help explain my opinion by providing another one about something I know little enough about to run the risk of mischaracterizations: server programmers, and how they don&#8217;t need ruthless", "id": "http://www.robg3d.com/?p=576", "categories": ["Rob Galanakis"], "metadata": {"guid": "b531667b-d16f-46ea-a19f-83aeee6d667b", "likes": 0, "is_published": true}}, {"author": "jason", "url": "http://www.jason-parks.com/artoftech/?p=289", "title": "path(), the awesomest class", "datetime": "2011-07-11T04:44:17", "html": "<p>Jason Orendorff wrote an awesome module some years ago to make it quick and easy to manipulate file paths and file names. I was fortunate enough to be exposed to this module and class via PyMEL&#8217;s package which included it.</p>\\n<p>Here is our test path and we&#8217;ll slice it and dice it in all kinds of ways:<br />\\n<strong>&#8216;c:/temp/test/myTestFile.txt&#8217;</strong></p>\\n<p>Here&#8217;s how you cast a string into the class:</p>\\n<pre class=\\"brush: python; title: python code here; notranslate\\">\\nfrom path import path\\nfilePath = \'c:/temp/test/myTestFile.txt\'\\nfpPathObj = path(filePath)\\nfpPathObj\\n# Result: path(\'c:/temp/test/myTestFile.txt\') #\\n</pre>\\n<p>There are a 167 methods on this class, so you can obviously get practically anything you want. Here are some of my favorite methods:</p>\\n<pre class=\\"brush: python; title: python code here; notranslate\\">\\nfpPathObj.basename()\\n# Result: \'myTestFile.txt\' # \\n\\n# .name is a property which returns the same\\nfpPathObj.name\\n# Result: \'myTestFile.txt\' #\\n\\n# namebase returns fileName only w/o extension\\nfpPathObj.namebase\\n# Result: \'myTestFile\' #\\n\\n# return directory above file\\nfpPathObj.parent\\n# Result: path(\'c:/temp/test\') # \\n\\n# check extension\\nfpPathObj.endswith(\'txt\')\\n# Result: True # \\n\\n# check existance\\nfpPathObj.exists()\\n# Result: True # \\n\\n# check to see if folder type\\nfpPathObj.parent.isdir()\\n# Result: True #\\n</pre>\\n<p>And many, many more. I use the above ones practically everyday, though.</p>\\n<p>Last example is my latest usage I used today. You can daisy chain the .parent calls to traverse up the chain:</p>\\n<pre class=\\"brush: python; title: python code here; notranslate\\">\\nfpPathObj.parent.parent.name\\n# Result: \'temp\' #\\n</pre>\\n<p>So if you&#8217;re using Maya, then your probably be using PyMEL by now (if not, get with it and watch <a href=\\"http://www.jason-parks.com/artoftech/?page_id=294\\" title=\\"Presentations\\">THIS</a>). If so, you already have the path class in a convenient location. You can simply import it like this:</p>\\n<pre class=\\"brush: python; title: python code here; notranslate\\">\\nfrom pymel.util.path import path\\n</pre>\\n<p>If you&#8217;re in MotionBuilder or other DCC app using Python, you can get it here: <a href=\\"http://pypi.python.org/pypi/path.py/2.2\\">http://pypi.python.org/pypi/path.py/2.2</a></p>\\n<p>Enjoy one of the handier classes any Tech Artist can add to his/her toolbox.</p>\\n<div class=\\"tweetthis\\" style=\\"text-align: left;\\"><p> <a class=\\"tt\\" href=\\"http://twitter.com/intent/tweet?text=path%28%29%2C+the+awesomest+class+http%3A%2F%2Fbit.ly%2FqlzaqB\\" rel=\\"nofollow\\" target=\\"_blank\\" title=\\"Post to Twitter\\"><img alt=\\"Post to Twitter\\" class=\\"nothumb\\" src=\\"http://www.jason-parks.com/artoftech/wp-content/plugins/tweet-this/icons/en/twitter/tt-twitter-micro4.png\\" /></a></p></div>", "summary": "Jason Orendorff wrote an awesome module some years ago to make it quick and easy to manipulate file paths and file names. I was fortunate enough to be exposed to this module and class via PyMEL&#8217;s package which included it. Here is our test path and we&#8217;ll slice it and dice it in all kinds", "id": "http://www.jason-parks.com/artoftech/?p=289", "categories": ["jason"], "metadata": {"guid": "0c992061-23b8-4daf-b318-a4b3ee1e5dfd", "likes": 0, "is_published": true}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=596", "title": "Condensing tags", "datetime": "2011-07-11T03:32:25", "html": "<p>Quick note- I&#8217;ll be reducing the number of tags used by my blog posts.  I have far too many that are too similar right now.</p>", "summary": "Quick note- I&#8217;ll be reducing the number of tags used by my blog posts. I have far too many that are too similar right now", "id": "http://www.robg3d.com/?p=596", "categories": [], "metadata": {"guid": "ffbe8d15-cca0-45be-9edf-ae75e90542c0", "likes": 0, "is_published": false}}, {"author": "ldunham (noreply@blogger.com)", "url": "http://ldunham.blogspot.com/2011/07/nearly-over.html", "title": "Nearly over...", "datetime": "2011-07-10T15:54:19.076000", "html": "Here it comes... about to start the final week on <i>Iconicles</i>, my first contract for Dinamo.<br /><br />I could never have guessed how rewarding an experience it would be, being in the industry. Also, how lucky we were, getting a year-long contract to (pretty much) build from the ground up a TV show for the BBC straight out of uni.<br /><br />What I\'ve learnt in the last 12 months has been staggering, and as sad as I am to be leaving, I\'m also excited to put everything I\'ve learnt back to start something from scratch again.<br /><br />Main job will be rigging the characters, props etc then onto animating again but initially&nbsp;I\'m guessing I\'ll be writing the pipeline and animation tools alongside Milan, which will be cool, its pretty rewarding actually, and I\'m hoping to start posting up more of my findings as I go along this time, which tbh will probably just be during the first couple of months.<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/536028505499887975-2505441436287303163?l=ldunham.blogspot.com\\" width=\\"1\\" /></div>", "summary": "Here it comes... about to start the final week on <i>Iconicles</i>, my first contract for Dinamo.<br /><br />I could never have guessed how rewarding an experience it would be, being in the industry. Also, how lucky we were, getting a year-long contract to (pretty much) build from the ground up a TV", "id": "tag:blogger.com,1999:blog-536028505499887975.post-2505441436287303163", "categories": [], "metadata": {"guid": "76f2c2be-47df-4d98-a718-573d542e305c", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=553", "title": "A brief history of an animation export pipeline", "datetime": "2011-07-09T23:19:18", "html": "<p>I&#8217;ve spoken a lot about the animation export pipeline I made at my last job. \\u00a0I started as a Technical Animator and naturally animation was where I spent a lot of my time early on (also because it is the most complex part of a pipeline). \\u00a0I saw the pipeline through a number of major overhauls and improvements, and it was where I created and validated many of my technical views on pipeline. \\u00a0I&#8217;ll provide this here because I love reading this type of history and micro-post mortem, and I hope there are other people out there that enjoy it. \\u00a0Note this is only about <em>a small portion</em> of\\u00a0the animation pipeline- this doesn&#8217;t include the rigs, animation tools, or even a lot of the other things that were involved in the export pipeline, such as optimizations, animation sharing, and compiling.</p>\\n<p>When I started, we had a &#8216;traditional&#8217; export pipeline- export paths were done by manipulating the path of the file being exported, it was using a third-party exporter for writing the data, and it was converting everything (inside Max) to bones in order to get objects to put into the exporter (and manipulate the bones in the case of additive animations) and then deleting them after the export. \\u00a0This was inflexible (paths), buggy (3rd party exporter), and slow (creating bones).</p>\\n<p>One of the first things I did was write a &#8216;frame stripper&#8217; in python that would remove every other frame from most animations (not locomotion or additives). \\u00a0It operated on the ascii file spit out by the exporter.</p>\\n<p>After that came a solution for the paths- see, there were cases where we <em>really couldn&#8217;t</em> export animations based on the source path, because the source and game skeletons were named differently. \\u00a0So I came up with a system where we&#8217;d associate some data with a skeleton name: export path, export skeleton name, path to a bunch of useful data, etc. \\u00a0This same concept eventually became the concept behind the database-backed asset management system, but for now it was stored in a MAXScript file that was just fileIn&#8217;ed to get the data. \\u00a0This was a huge win as it put all path information in one place.</p>\\n<p>After that came time to address the intermittent failures we were getting in our exporter. \\u00a0It was writing out empty files randomly. \\u00a0We were never able to get a solid repro and the vendor told us no one else had the problem. \\u00a0So I wrote a custom exporter that wrote out the same ascii files. \\u00a0This was also a win because it allowed me to move the &#8216;frame stripping&#8217; into the export phase, rather than running it as a python script after the export. \\u00a0It also allowed me to read transforms directly from the PuppetShop rig, and avoid the conversion to MaxBones, so things were significantly sped up. \\u00a0Funny enough, the vendor got back to us 2 weeks after the exporter was really done and well tested (a year from the initial ticket), saying they found and fixed the problem.</p>\\n<p>Soon after this, I started work on our Asset Management pipeline/database. \\u00a0I hooked this new system up into the animation export pipeline, and threw out the old maxscript-based system, and we had a unified asset management pipeline for all dynamic content (character art and animations).</p>\\n<p>Realizing the power of C# and .NET in MXS at my fingertips, I created a .NET library of data structures for the animation that could be exported out to the ascii files. \\u00a0This was a major turning point- we could have all processing hooked up to the data structures, rather than part of the export pipeline. \\u00a0So we could strip frames that way, optimize the files, update formats, save them in binary (via a commandline binary&lt;-&gt;ascii converter that could be run transparently from the .NET library), save out additional files such as xml animation markup on save, whatever, without adjusting the 3ds Max export code almost at all. \\u00a0It gave us a flexibility that would have been <em>impossible</em> to try- maybe even impossible to conceptualize- without this abstraction.</p>\\n<p>This worked great and was what things were built on for a long time. \\u00a0At some point I realized that this was still not enough of an abstraction. \\u00a0I built a motion data framework for some animation tools and realized it could be used for the exporter as well. \\u00a0Basically you have a common motion data data structure, and any number of serializers/deserializers. \\u00a0So you could load BVH into this common format, and save it out to FBX, without ever going through a DCC or writing any code especially for it. \\u00a0You also have glue that can fill the data structures, and apply the data structures back to the scene. \\u00a0So you remove the concept of an exporter entirely. \\u00a0In your DCC you can just have:</p>\\n<pre style=\\"padding-left: 30px;\\">motiondata = getMotionData(myRig)\\nFbxSerializer().serialize(motiondata, \'exported.fbx\')</pre>\\n<p>Likewise, if you wanted to batch-export all your BVH mocap to stub out a bunch of animations, so you don&#8217;t need to export stubs yourself, you can just have a script:</p>\\n<pre style=\\"padding-left: 30px;\\">FbxSerializer().serialize(BvhSerializer().deserialize(\'mydata.bvh\'), \'exported.fbx\')</pre>\\n<p>Unfortunately by the time I had finished the framework, I wasn&#8217;t the main person responsible for the animation pipeline and was moving off the Tech Art team, so I never actually hooked up our export format into the system or ported over the features into it- but I did have it working for various other formats and it worked great.</p>\\n<p>That&#8217;s a pretty natural, albeit fast, evolution (all that happened over 2 years and it was rarely my primary focus). \\u00a0So, where to go from there? \\u00a0I guess the next step would be to remove the export step entirely, and just hook the same data structures up on a service that can communicate to an animation runtime/game engine, and Maya/DCC. \\u00a0The same sort of technology as Autodesk&#8217;s Skyline, but in a much more flexible and home-brew solution. \\u00a0From a tools perspective, this may not be incredibly difficult. \\u00a0The main hiccup is performance due to the still single-threaded nature of DCC apps. \\u00a0If you could read the scene and send data on a background thread, performance wouldn&#8217;t be a problem. \\u00a0And the beauty extends itself further when creating a service-based pipeline like this, because you could pretty easily hook MotionBuilder (or even 3ds Max) up to the system.</p>\\n<p>This, though, presents a pretty big leap, and for the time being (until DCC apps improve multithreaded capabilities), I&#8217;ll stick with the pipeline in the state it&#8217;s in and bring more systems to the same level of abstraction.</p>", "summary": "I&#8217;ve spoken a lot about the animation export pipeline I made at my last job. \\u00a0I started as a Technical Animator and naturally animation was where I spent a lot of my time early on (also because it is the most complex part of a pipeline). \\u00a0I saw the pipeline through a number of major", "id": "http://www.robg3d.com/?p=553", "categories": ["Rob Galanakis"], "metadata": {"guid": "75b1956b-c31b-4ad0-a996-7ca659e4b3e2", "likes": 0, "is_published": true}}, {"author": "Nathan", "url": "http://nathanhorne.com/?p=353", "title": "Python and Threading (Also, Maya)", "datetime": "2011-07-09T03:30:33", "html": "<p>So, we noticed some odd behavior with several threaded scripts at work: They ran slower than the initial single threaded version.. Off to the Maya docs!</p>\\n<p>Per the\\u00a0<a href=\\"http://download.autodesk.com/us/maya/2011help/index.html?url=./files/WS1a9193826455f5ff-7f10494411f03a24f24-7e6e.htm,topicNumber=d0e672317\\">Maya docs</a> on threading and python:</p>\\n<p style=\\"padding-left: 30px;\\">&#8220;One important difference between Python threads and C++-based threads is that\\u00a0python threads do not run concurrently since the Python interpreter itself is not currently threadsafe. For this reason,\\u00a0they are not useful for data parallel applications. However, they may be useful, for example, where polling of resources is done that might otherwise have to wait for timeouts.&#8221;</p>\\n<p>After doing a bit of research I thought I would share some of what I found on python and Threading, this sparked a few conversations at work about the usefulness and specific use cases of threads.</p>\\n<p>Short version:</p>\\n<ul>\\n<li><span style=\\"color: #993300;\\"><span style=\\"color: #888888;\\">Maya Python and standalone Python handle threads differently: </span><span style=\\"color: #3366ff;\\">False</span></span></li>\\n<li><span style=\\"color: #888888;\\">Python instructions cannot run in parallel: <span style=\\"color: #993300;\\">True</span></span></li>\\n<li><span style=\\"color: #993300;\\"><span style=\\"color: #888888;\\">Python threads are not &#8220;true&#8221; threads: </span><span style=\\"color: #3366ff;\\">False</span></span></li>\\n<li><span style=\\"color: #888888;\\">Threads provide no speed benefit or parallelism: </span><span style=\\"color: #993300;\\"><span style=\\"color: #3366ff;\\">False</span></span></li>\\n<li><span style=\\"color: #888888;\\">Should you use threads speed up potentially parallel operations: </span><span style=\\"color: #3366ff;\\">Sometimes</span></li>\\n</ul>\\n<p>Python&#8217;s natively limited via the <span style=\\"color: #0000ff;\\"><a href=\\"http://docs.python.org/glossary.html#term-global-interpreter-lock\\">Global Interpreter Lock (GIL)</a></span> to prevent concurrent Python byte code instructions, this prevents separate threads from simultaneously modifying the same memory space in order to prevent \\u00a0memory access issues. If one thread were able to delete a shared object while another thread tried to append to it, the result would be a crash without the GIL. On the internal implementation side it get&#8217;s even more important as internal data like weakref&#8217;s and reference counts could become out of sync.</p>\\n<p>The silver lining to this limitation is that it <span style=\\"color: #993300;\\">only effect&#8217;s pure python bytecode</span>, anything happening via a compiled c extension or a linked C++ library like PyQt will generally try to<span style=\\"color: #993300;\\"> release the GIL while the compiled code is running, as that code can&#8217;t modify the internal Python interpreter state</span> anyways (C++ code couldn&#8217;t delete your python object for example). Most of the major and intensive operations that you would want to do in a thread are already careful to release the GIL when performing a blocking operation: file read/write, time.sleep, sql select/execute, xml parse, etc..</p>\\n<p><a href=\\"http://wiki.python.org/moin/GlobalInterpreterLock\\">Per the python documentation on the GIL</a>:</p>\\n<p style=\\"padding-left: 30px;\\">&#8221; The GIL is controversial because it prevents multithreaded CPython programs from taking full advantage of multiprocessor systems in certain situations. Note that potentially blocking or long-running operations, such as I/O, image processing, and NumPy number crunching, happen outside the GIL. Therefore it is only in multithreaded programs that spend a lot of time inside the GIL, interpreting CPython bytecode, that the GIL becomes a bottleneck.&#8221;</p>\\n<p><a href=\\"http://nathanhorne.com/lock/http://www.riverbankcomputing.com/pipermail/pyqt/2011-January/028961.html\\">PyQt and the GIL</a>:</p>\\n<p style=\\"padding-left: 30px;\\">&#8220;when the threaded code is calling long running c/c++ functions, such as a\\u00a0database select, it will release the GIL until the call completes.\\u00a0 This is\\u00a0all done automatically within python and PyQt.\\u00a0 This is &#8220;real&#8221; multithreading.&#8221;</p>\\n<p>As for the original issue raised by the Maya api docs, the real issue isn&#8217;t as straightforward as the docs would lead you to believe: Yes, using threads to number crunch in pure python threads is pointless, they will not run in parallel and will yeild no speed increase. However, file operations, numpy, sql access, and many other functions can be used safely within Maya and yield speed increases and truly parallel work. The docs seem to be primarily focused on parallelism in the context of deformers or number crunching/simulation plugins, in which case that computation should be offloaded to a custom c extension or something like numpy.</p>\\n<p>References:</p>\\n<ul>\\n<li><a href=\\"http://docs.python.org/glossary.html#term-global-interpreter-lock\\">http://docs.python.org/glossary.html#term-global-interpreter-lock</a></li>\\n<li><a href=\\"http://wiki.python.org/moin/GlobalInterpreterLock\\">http://wiki.python.org/moin/GlobalInterpreterLock</a></li>\\n<li><a href=\\"http://www.riverbankcomputing.co.uk/static/Docs/sip4/using.html\\">http://www.riverbankcomputing.co.uk/static/Docs/sip4/using.html</a></li>\\n<li><a href=\\"http://jessenoller.com/2009/02/01/python-threads-and-the-global-interpreter-lock/\\">http://jessenoller.com/2009/02/01/python-threads-and-the-global-interpreter-lock/</a><a href=\\"http://www.riverbankcomputing.com/pipermail/pyqt/2011-January/028961.html\\">http://www.riverbankcomputing.com/pipermail/pyqt/2011-January/028961.html</a></li>\\n<li><a href=\\"http://download.autodesk.com/us/maya/2011help/index.html?url=./files/WS1a9193826455f5ff-7f10494411f03a24f24-7e6e.htm,topicNumber=d0e672317\\">http://download.autodesk.com/us/maya/2011help/index.html?url=./files/WS1a9193826455f5ff-7f10494411f03a24f24-7e6e.htm,topicNumber=d0e672317</a></li>\\n<li><a href=\\"http://www.dabeaz.com/python/UnderstandingGIL.pdf\\">http://www.dabeaz.com/python/UnderstandingGIL.pdf</a></li>\\n</ul>", "summary": "So, we noticed some odd behavior with several threaded scripts at work: They ran slower than the initial single threaded version.. Off to the Maya docs! Per the\\u00a0Maya docs on threading and python: &#8220;One important difference between Python threads and C++-based threads is that\\u00a0python threads do n", "id": "http://nathanhorne.com/?p=353", "categories": ["Nathan"], "metadata": {"guid": "1c4818bb-b778-4c75-a7b8-d6d0c8bc0bc4", "likes": 0, "is_published": true}}, {"author": "Artur Le\\u00e3o", "url": "http://dimensao3.com/al/?p=521", "title": "CG Cookie iRay Manager 1.6 tutorial", "datetime": "2011-07-08T11:13:58", "html": "<p>The guys at CG Cookie have done a cool <a href=\\"http://vimeo.com/23928969\\" target=\\"_blank\\" title=\\"tutorial\\">tutorial </a>using iRay Manager 1.6. Check it out and dont forget to visit <a href=\\"http://www.cgcookie.com\\" target=\\"_blank\\">http://www.cgcookie.com</a> for more tutorials!</p>", "summary": "The guys at CG Cookie have done a cool tutorial using iRay Manager 1.6. Check it out and dont forget to visit http://www.cgcookie.com for more tutorials!", "id": "http://dimensao3.com/al/?p=521", "categories": [], "metadata": {"guid": "20acf654-0557-49a4-bb7a-5cb0249f2eb8", "likes": 0, "is_published": false}}]'
07-31 20:06 root         INFO     Handling CGI request.
07-31 20:06 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:06 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Meaningful return values", "url": "http:\/\/www.robg3d.com\/?p=582", "author": "Rob Galanakis", "summary": "I consistently see return values messed up in people&#8217;s API design. \u00a0Fortunately, there are some hard and fast rules to follow that make return values really hard to fuck up. Only return True\/False for a single\u00a0condition. \u00a0It is not an acceptable contract to say &#8216;Return True on success, F", "html": "<p>I consistently see return values messed up in people&#8217;s API design. \u00a0Fortunately, there are some hard and fast rules to follow that make return values really hard to fuck up.<\/p>\n<ol>\n<li><strong>Only return True\/False for a <em>single<\/em>\u00a0condition<\/strong>. \u00a0It is not an acceptable contract to say &#8216;Return True on success, False on failure.&#8217; \u00a0What is acceptable is &#8216;Return True on success, False if key does not exist.&#8217; \u00a0You&#8217;d still throw exceptions for invalid arguments or state.<\/li>\n<li><strong>Try to avoid returning from methods that mutate a public property on the instance you are calling the method on<\/strong>. \u00a0If <em>foo.Frobnicate()<\/em> mutates <em>foo<\/em> by changing <em>foo.Bar<\/em> (which is public), do not return a value- let the caller query <em>foo.Bar<\/em>. \u00a0It makes it more clear that <em>Frobnicate<\/em> is mutating and not just returning a value the caller can assign (a better design may be to NOT mutate and let the caller assign the result). \u00a0Make mutation the clear contract, not a side effect.<\/li>\n<li><strong>Except if you consistently return self\/this<\/strong>. \u00a0For certain objects, it may make sense to mutate and return the object being mutated. \u00a0So you can string together calls, like you do on strings: <em>foo.Frobnicate().Spam().Eggs()<\/em>, which would mutate <em>foo<\/em>\u00a03 times. \u00a0Obviously if an object is immutable (like a string, or .NET IEnumerable) this is good design, but it can be unclear that the object is being mutated unless it is a core part of the object&#8217;s contract.<\/li>\n<li><strong>Do not have a return value if you don&#8217;t need it (private methods).<\/strong>\u00a0 If you have a private method, and no caller is using the return value, <em>don&#8217;t have a return value!<\/em>\u00a0 It generally means your contract is unclear, or your methods are doing too much, and your implementation needs some work.<\/li>\n<\/ol>\n<div>Pay close attention to how your return values work when you design your API&#8217;s and you&#8217;ll have a very easy way to detect code smell.<\/div>", "datetime": "2011-07-14T23:37:58", "id": "http:\/\/www.robg3d.com\/?p=582", "categories": [], "metadata": {"guid": "8a176157-ba8d-4641-8a8c-57b886decaf1", "likes": 0, "is_published": false}}], {}]"
07-31 20:06 SocketClient INFO     Received from service: "true"
07-31 20:06 SocketClient INFO     Returning(as str): 'true'
07-31 20:06 root         INFO     Handling CGI request.
07-31 20:06 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:06 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Why CRUD might be what they want, but may not be what they need", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/mi3ijGOOdh4\/", "author": "Ian Cooper", "summary": "A brief history of CRUD The Rolling Stones once sung: &#8220;You can&#8217;t always get what you want, But if you try sometimes, well you just might find, You get what you need&#8221; I think the same is true of CRUD.&#160;&#8230; <a href=\"http:\/\/codebetter.com\/iancooper\/2011\/07\/15\/why-crud-might-be", "html": "<h2>A brief history of CRUD <\/h2>\n<p>The Rolling Stones once sung:<\/p>\n<blockquote><p>&#8220;You can&#8217;t always get what you want, But if you try sometimes, well you just might find, You get what you need&#8221;<\/p><\/blockquote>\n<p>I think the same is true of CRUD. Our users seem to ask for it and we blindly agree to their wishes and build it; however, its regularly not what they need.<\/p>\n<h3>The File Store<\/h3>\n<p>When computers first arrived the early commercial use was to try and remove the need for paper files. Some of us may be old enough to remember that offices has filing departments with staff, where when we began a piece of work we went to get the records that the company had on that customer, or policy, or project. There were problems with this approach: file stores took up a lot of space, and the mangement of paper based records, particulary archival material is expensive; often, someone else had the file out, buried on their desk, and it was not always clear who &#8211; an early form of pessimistic concurrency control &#8211; which often stopped you responding to requests; files were only as useful as the discipline of maintaing them, and keeping them in order &#8211; searching was difficult within a file if it was not ordered and there was no idea of seaching the file store itself.<\/p>\n<p>So it was natural when we began to think about ways in which computers could help in the workplace to think about electronic filing systems. We would record the data around the customer, policy, or project on an electronic form instead of a paper one and the computer could store it for us. We saved paper, we saved staff, we saved time, and we added new functionality such as the ability to search.<\/p>\n<p>The UIs that we designed were optimized to enter data. After all there was a lot of data to enter just to catch up on. The essential questions for UX design became tab order or number of clicks &#8211; just how fast could we enter data. We wanted bulk data entry grids, and forms that mirrored our paper based forms, because that was what we needed to get out of the physical filing store and into our electronic store<\/p>\n<p>Throughout the paper told us what to do and the process was built around the form. The form was passed from person to person. Stickers attached to the form, or boxes on the file defined the workflow. The paper-trail was the business process. Indeed, early analysis techniques simply followed the paper trail. Initial systems just followed the existing paper based process. Someone took the paper, the insurance application form, and type it in to the terminal. Then a batch run moved the record to the next step, so the next person in line could perform the same step that they had at the computer.<\/p>\n<p>But no one really thought of this workflow as something the computer could handle. We just did handoffs the same way we did with paper. Indeed we sometimes used paper as the &#8216;token&#8217; that we passed around for the workflow and told you that you needed to enter the system and do some work. Or, later we became more sophisticated, and used email to do the same thing.<\/p>\n<p>And for this perspective &#8211; the electronic filing store &#8211; Create, Read, Update, and Delete (CRUD) was the paradigm we needed. It described the lifecycle of a paper file perfectly and with our goal to automate that physical file store it was a capable model &#8211; or so it seemed.<\/p>\n<h2>Brave New World<\/h2>\n<p>Users tend to create electronic documents today. There is less paper. Inputs come from phone, email, the consumer directly accessing a web-based interface. Removing the phsyical file store is no longer behind the business case to provide IT systems. We no longer want to remove the old filing room and its associated clerks. Of course we might want to move away from our new shadow IT world of documents on shared drives and Excel spreadsheets.<\/p>\n<p> The business goals around automation have changed too. To obtain the savings that justify the cost of IT savings, we want to enable smaller numbers of people to carry out the tasks formally done by many through not just electronic filing but through business process automation.<\/p>\n<p> But once we shift the goals away from data entry to process automation, the shape of our architecture changes too. Less of the value comes from data entry today. It comes from providing a key business differentiator that allows us to outperform the competition in service, control of costs, management of supply chain, enabling new business models through disintermediation etc.<\/p>\n<p>CRUD &#8211; a model for removing the old file store is less useful as a paradigm when we come to think about analysing and architecting a response to this kind of business process.<\/p>\n<p>Think about how we force users to interact under a CRUD paradigm. They have procedures written in a manual, a checklist for the process. They have to edit this page,then edit that page etc. The system consists of CRUD screens where the users do the data entry. People run their workflow using email. Business process is the preserve of a priesthood who maintain their position by understanding &#8216;how things are done here&#8217;. <\/p>\n<p>The problem here is that the behavior is not captured in the system, it is captured in the manual at best, more likely in the oral transmission of process from one worker to another. The business understands that it has workflow and behavior &#8211; they defined process with copies of memos, forms etc. We have not removed those steps by automating them, we have just\u00a0 given them electronic forms. Pejoratively we are little better than the shadow IT offering written in Access; why engage an IT expert at all for that, all you do is add cost. <\/p>\n<p>Much of the issue here is sheer laziness on our part. When I see tweets and blog posts saying: most business apps are CRUD, I hear, &#8220;we don&#8217;t want to work with the business to show them what IT could do for them&#8221;. Part of the reason is because it requires little skill to model CRUD; modelling business process is harder &#8211; but that is where the value lies. Think of early software development approaches that began with modeling the data, and then identified processes to act on that data. Is it any wonder we built CRUD based systems if we started by thinking about data. Data Flow diagrams, Process diagrams. These were the cornerstones of how we thought about the design phase of the software lifecycle and we have failed to escape from it. However, for our users recording data itself is rarely the end goal any more, completion of a business process is the goal.<\/p>\n<p>Now sure, in some cases we might still have CRUD, for some kinds of reference data, and I&#8217;m sure a lot of people will respond to this with straw men of CRUD only applications. But be careful. In a lot of cases the customer thinks about records management, and they don&#8217;t know you could help them with processing, business rules, workflow (or are frightened of what that might mean for their jobs). Anywhere where there is a process in someone&#8217;s head, a word document, or excel spreadsheet that says, when this happens, you need to go into this page and fill in these values on the form, you have behavior, or intent that could and should be captured.<\/p>\n<p>Let&#8217;s take a simple example: changing the state of a purchase order. What we tend to be saying is: the workflow for this process has reached a certain point and so it can move into this state. We can immediately see that we must have a number of things for this to occur: the purchase order must have some data that we need to validate it; we can also see that a number of things may be predicated on this occurring: we need to send the order to fulfilment, we need to begin the billing process etc. So this act, completing a purchase order, has both a workflow or business process and rules. A CRUD based approach to design tends to encourage us to leave these outside the system, with the user, in some set of manual checks or switching between parts of the application. What we want to look at is: is this process something we could automate, could the workflow and rules live in the system?<\/p>\n<p>Of course a traditional objection to putting workflow and rules &#8216;in the system&#8217; is that they can change. This causes some folks to suggest that they ought to be left out.<\/p>\n<p>Unfortunately in the typical business this means that a given named person Alice, Mary or Bob is the person that understands how to drive the process, and is mission critical to the success of the enterprise. If they get hit by a bus its all over, and they can pretty much ask for a raise whenever they like, because we can&#8217;t afford to lose them. Process diagrams often end up with a stick figure which imply that &#8216;Alice does her magic&#8217;. Often that person is uncommunicative and secretive about the process &#8211; to ensure that they remain essential to the business. When they are absent, things fall apart.<\/p>\n<p>No business really wants that.\n<p><\/p>\n<p>And the reality is that we have plenty of options we can use to make workflow and rules more configurable &#8211; though we need to look at the tradeoffs between the cost to change the app against using a rules engine or workflow engine carefully by understanding the amount of likely change.<\/p>\n<h2>Enter Tasks: What to you want to do today.<\/h2>\n<p>We need to drop the focus on CRUD and move to a focus on tasks: what is it that the user wants to accomplish, and how can we help them accomplish that?<\/p>\n<p>Let&#8217;s think about the case of a family doctor. In an appointment they tend to take the patient&#8217;s history, diagnose the illness, and prescribe a course of treatment. Now, in the UK the paper based way to achieve this used to be the <a href=\"http:\/\/www.patient.co.uk\/doctor\/Clinical-Negligence-and-the-Electronic-Patient-Record.htm\">Lloyd George envelope.<\/a> Simply replicating the functionality of the Lloyd George envelope using a CRUD approach would give us screens for entering consultation notes, prescriptions&#8230; But there is a lot more we could do to help. If we treat diagnosis as a task, then we ought to consider searching previous medical history to see if anything shows up related to the patient&#8217;s complaint that may be of concern. There may be guidelines for these symptoms that we should be following to check that we are not missing illnesses like meningitis. When we prescribe we can list common drugs for the illness, and look for incompatibility with drugs that the patient is currently being prescribed in a drugs database. That may lead to us offering further advice, for example if the patient is using the contraceptive pill and we prescribe them antibiotics.<\/p>\n<p>Or perhaps consider an on line retailer where the customer can go in and change their account details. If the customer changes their address, we might want to prompt the customer for in-flight orders and ask where they want them to be delivered &#8211; the old address or the new address.<\/p>\n<p>Ask yourself the question: am I thinking about the intent of what the user wishes to accomplish?<\/p>\n<p>The grid is particularly dangerous ground in this regard. It is rare that you can capture intent through a grid. if you are using a grid you are probably not focused on a task but on CRUD<\/p>\n<p>Greg Young has a great <a href=\"http:\/\/cqrsinfo.com\/documents\/task-based-ui\/\">discussion on the Task-based UI<\/a>. It is one of the building blocks in a journey towards understanding the why of <a href=\"http:\/\/cqrsinfo.com\/\">CQRS<\/a><\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/mi3ijGOOdh4\" width=\"1\" \/>", "datetime": "2011-07-15T13:35:56", "id": "http:\/\/codebetter.com\/iancooper\/?p=194", "categories": [], "metadata": {"guid": "3e513230-bb73-4898-955a-d937c88a736d", "likes": 0, "is_published": false}}], {}]"
07-31 20:07 SocketClient INFO     Received from service: "true"
07-31 20:07 SocketClient INFO     Returning(as str): 'true'
07-31 20:07 root         INFO     Handling CGI request.
07-31 20:07 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:07 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Game Studio Takeover Nightmare Impossible", "url": "http:\/\/www.robg3d.com\/?p=584", "author": "Rob Galanakis", "summary": "There&#8217;s a sub-genre of reality television that contains shows where experts come into a failing business and implement changes to fix things. \u00a0Three of the most well known are Gordon Ramsey&#8217;s Kitchen Nightmares, Robert Irvine&#8217;s Restaurant Impossible, and Tabatha&#8217;s Salon Takeo", "html": "<p>There&#8217;s a sub-genre of reality television that contains shows where experts come into a failing business and implement changes to fix things. \u00a0Three of the most well known are Gordon Ramsey&#8217;s Kitchen Nightmares, Robert Irvine&#8217;s Restaurant Impossible, and Tabatha&#8217;s Salon Takeover (totally awesome show, btw). \u00a0I&#8217;ve wondered what it&#8217;d be like to get a games industry version of one of these experts into a studio to see what she could do. \u00a0Fortunately, the programs all follow a very obvious (and repetitive) pattern to find and fix the problems- so you can really just do it yourself (most problems the experts find are obvious anyway- the people in charge are just ignorant or in denial).<\/p>\n<p>Follow these steps at your studio and imagine how things would go down.<\/p>\n<p><strong>Part 1: The initial personnel observation<\/strong><br \/>\nThe experts observe how things run without interferring. \u00a0They sit down to eat, watch hidden cameras, whatever.<\/p>\n<ol>\n<li>How do the employees get along? \u00a0Are they friendly to each other, do they enjoy work, do they hang out, do they do work?<\/li>\n<li>How does management interact with the employees?<\/li>\n<li>How many employees and managers are there, and what&#8217;s the ratio?<\/li>\n<li>Is there anything else fishy (nepotism, unqualified people, etc.)?<\/li>\n<\/ol>\n<p><strong>Part 2: The facilities inspection<\/strong><br \/>\nThe experts tour the facilities and inspect how things look, especially cleanliness.<\/p>\n<ol>\n<li>Do people have the right computer equipment and licenses?<\/li>\n<li>Are the bathrooms and structure in good shape? \u00a0AC working well?<\/li>\n<li>Are the employees treated well physically? \u00a0Are there drinks and food available?<\/li>\n<li>Where&#8217;s the studio located and where would people rather have it?<\/li>\n<\/ol>\n<p><strong>Part 3: The tragedy and shutdown<\/strong><br \/>\nThe expert does some minor changes and does a more formal observation, providing minor interventions. \u00a0Involves some sort of disaster. \u00a0Place eventually closes up and the expert begins to work his or her magic.<\/p>\n<ol>\n<li>What tools and processes go right? \u00a0What are the worst? \u00a0How far to which side is every tool and process in the middle?<\/li>\n<li>Do you have managers who crack under pressure, or do really obviously wrong things?<\/li>\n<li>Are there people seriously misbehaving? \u00a0Are there people seriously crunching?<\/li>\n<li>And the biggest question is: does the studio&#8217;s project suck, and what are the major problems with the game (is it not fun, has it taken way too long)?<\/li>\n<\/ol>\n<p><strong>Part 4: The personnel rebuilding<\/strong><br \/>\nRelationships are worked on, especially between employees and management. \u00a0Lots of training is provided.<\/p>\n<ol>\n<li>What training opportunities exist at your studio? \u00a0Are people encouraged to look outside for education? \u00a0Is ample opportunity provided internally?<\/li>\n<li>What are your employees biggest grievances? \u00a0What has changed the most in the past few years and how do your veterans feel about it?<\/li>\n<li>How are you dealing with your poor performers and rewarding your best?<\/li>\n<li>Figure out why the project\/game is in the state it&#8217;s in, and put a plan in action to fix it and make sure it doesn&#8217;t keep happening.<\/li>\n<\/ol>\n<p><strong>Part 5: The facilities rebuild unveil<\/strong><br \/>\nNew and improved facilities are unveiled to the team.<\/p>\n<ol>\n<li>Your studio should be feeding you. \u00a0There&#8217;s no reason, financial or otherwise, not to provide developers with at least lunch every day.<\/li>\n<li>You should have enough bathrooms and they should be clean.<\/li>\n<\/ol>\n<p><strong>Part 6: First day reopening<\/strong><br \/>\nThe business runs for a day, usually with much better results (and generally a couple hiccups).<br \/>\nWith the grievances solved, or at least in the open and being worked on, studio culture should be improved and you can concentrate on building a great product.<\/p>\n<p><strong>Part 7: Checkin later<\/strong><br \/>\nExpert comes back to check up on how things have come along.<br \/>\nInevitably, some managers will devolve back into madness; or perhaps things were too far along to stop the studio&#8217;s shutdown or crappy project. \u00a0If you see this happening, you should leave.<\/p>\n<hr \/>\n<p>I wonder how something like this would fare in the games industry, and who the hell we could find to do it.<\/p>", "datetime": "2011-07-17T02:29:31", "id": "http:\/\/www.robg3d.com\/?p=584", "categories": [], "metadata": {"guid": "905cfadb-5cd4-44b1-95aa-619257392bde", "likes": 0, "is_published": false}}], {}]"
07-31 20:07 SocketClient INFO     Received from service: "true"
07-31 20:07 SocketClient INFO     Returning(as str): 'true'
07-31 20:07 root         INFO     Handling CGI request.
07-31 20:07 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:07 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Cloud Based Pipelines?", "url": "http:\/\/www.robg3d.com\/?p=698", "author": "Rob Galanakis", "summary": "Originally posted on AltDevBlogADay: The rest of software is moving into The Cloud, how come we aren&#8217;t doing the same with our tools and pipeline? I love the cloud. \u00a0Yes, I know it&#8217;s a buzz word for not quite revolutionary concepts, but I love it anyway. \u00a0I love it for the practical bene", "html": "<p>Originally posted on <a href=\"http:\/\/altdevblogaday.com\/2011\/07\/16\/cloud-based-pipelines\/\">AltDevBlogADay<\/a>:<\/p>\n<p>The rest of software is moving into The Cloud, how come we aren&#8217;t doing the same with our tools and pipeline?<\/p>\n<p>I love the cloud. \u00a0Yes, I know it&#8217;s a buzz word for not quite revolutionary concepts, but I love it anyway. \u00a0I love it for the practical benefit I get, and I love it for the technological possibilities it brings. \u00a0It doesn&#8217;t just mean using web apps- it means using amazing applications that run in any browser on any platform, it means not worrying about storing data locally, it means a rich and expanding personal experience based on the connections between your data and everyone else&#8217;s.<\/p>\n<p>And then I think about most of the pipelines I&#8217;ve seen and I wonder: what have we missed? \u00a0Very often, we are building some of the most incredible and expensive games ever with incredibly shitty sets of tools. \u00a0Why do we have essentially the same pipelines as we&#8217;ve had for the same 10+ years? (I recently<a href=\"http:\/\/www.robg3d.com\/?p=542\"> finished a case study<\/a> of Dark Angel&#8217;s pipeline, from 2001, which is remarkably similar to some I&#8217;ve seen recently). \u00a0Game production has changed, but pipelines have not. \u00a0We&#8217;re releasing games that get downloaded content (or are continuously updated like an MMO), and the amount of content is ballooning. \u00a0Yet we&#8217;re still using essentially the same technologies and strategies as we were in 2001. \u00a0There&#8217;s something to learn by looking at Cloud technologies and concepts, buzzword or not.<\/p>\n<p><strong>Can game pipelines, too, move into the cloud?<\/strong><\/p>\n<p>The one essential aspect of the cloud is its basis in service-based architectures. \u00a0For the sake of simplicity and those unfamiliar, let&#8217;s say a service is a local or remote process that has some set of exposed methods that can be called by a client through a common protocol (JSON, XMLRPC, etc.). \u00a0All other aspects of cloud technologies require this serviced based architecture. \u00a0You couldn&#8217;t have the characteristic web apps if there was no service behind them. \u00a0You couldn&#8217;t run the same or similar page on any platform and device if the work was happening on the client instead of the service. \u00a0You couldn&#8217;t have a backend that automatically scales if the real work was happening in a Rich Client App (RCA) instead of in a service.<\/p>\n<p>Could we build our pipelines with the same service-based approach (if not the always-there distributed-ness), and would we get similar results?<\/p>\n<pre lang=\"txt\">,--.::::::::::::::::::::::::::::::::::::\n    )::::::::::::::::::::::::::::::::..\n  _'-. _:::::::::::::::::::::::::::..\n (    ) ),--.::::::::::::::::::::::.\n             )-._::::::::::::::::::..\n_________________) ::::::::::::::...<\/pre>\n<p>Yes, we can. \u00a0But let&#8217;s consider what a service-based pipeline architecture would look like. \u00a0The biggest change is moving nearly all functionality out of DCC apps, which are RCA&#8217;s, and into libraries that can be consumed by the services. \u00a0This is what I&#8217;ve been doing for years, but I understand it may be a new thing for many people- but I guarantee you can do it and you&#8217;ll be better off because of it, not having to deal with buggy and monolithic DCC apps. \u00a0These libraries\/services can use headless apps behind the scenes if necessary, to do rendering or some processing or whatever (mayabatch.exe or whatever). \u00a0Avoid it if you can, but you could do it.<\/p>\n<p>The DCC and its UI&#8217;s, then, become very simple shells which just call methods on the service, and contain very little functionality of their own. \u00a0The service does the processing and calls back to the client (and if the function can be done asynchronously, the user keeps working while the work happens in the background). \u00a0The service can communicate to other remote and local services to do the work it needs to do.<\/p>\n<p>Conceptually it is simple, but I promise you, the implementation will be complex. \u00a0So the benefits better be worth it.<\/p>\n<p>And they would be. \u00a0The first thing you get is better abstraction between systems and components. \u00a0We remove ourselves from the hacks and workarounds of programming in a DCC, and can instead concentrate on working in a sensible development environment and not have to worry about debugging in app or having to make sure all our libraries work under whatever half-assed and old implementation of python Autodesk provides. \u00a0This results in being more deliberate about design decisions- not having a hundred pipeline modules available to you is actually a good thing, it forces you to get your dependencies under control, and you give more consideration to your APIs (I <a href=\"http:\/\/www.robg3d.com\/?p=385\">blogged about<\/a> how server\/client systems can be a useful exercise in abstraction).<\/p>\n<p>These abstractions also give greater scalability. \u00a0No problem moving your code between versions of your DCC, machine architectures, python\/.NET versions, etc. \u00a0It doesn&#8217;t have the ball and chain of DCC apps, because you&#8217;ve taken it all out of the DCC apps. \u00a0Compare this flexibility in scalability to something like render farms- they usually have a very specific functionality and required software and added more functionality takes lots of engineering time. \u00a0By having &#8216;normal&#8217; code that can be run on any machine, you can distribute your processing to a farm that can tackle anything, and doesn&#8217;t require as complex systems or specialized skills to manage. \u00a0This is the distributed processing capacity of cloud computing (in fact you could probably deploy this code to a cloud provider, if you had good server-fu).<\/p>\n<p>These abstractions also lead to language neutrality. \u00a0That&#8217;s right, I said it. \u00a0I didn&#8217;t say it is a good idea, just that it&#8217;s possible. \u00a0Just the same way the Twitter API has been wrapped in three dozen languages, your services should have an API using a common protocol like JSON, and many services and clients can communicate together. \u00a0You&#8217;re not stuck using COM or marshalling data or any other number of bullshit techniques I&#8217;ve seen people do to glue things together. \u00a0Your client can be anything- a DCC, a web app, a mobile app- you could even run it via email if you so desired, with zero change to the pipeline itself- only the client code you need to call it. \u00a0And don&#8217;t forget hosting a web page in a library like Qt or .NET could also run the service.<\/p>\n<p>This is software engineering as we tech artists and pipeline engineers should have been doing all along.<\/p>\n<pre lang=\"txt\"> _______________\n| | _________ |o|\n| |___________| |\n|     _____     |\n| DD |     |   V|\n|____|_____|____|<\/pre>\n<p>Let&#8217;s take a simple pipeline, like a character mesh exporter that includes an automatic LoD creator. \u00a0In Maya (or Max, or XSI, whatever), the user just hits &#8216;export selected&#8217;, and it can transfer the mesh data and the Maya filename\/mesh name to the Local Service.&#8217; \u00a0It can transfer the mesh data directly as a json object, or it can save it to an fbx file first and transfer the name of the fbx file, whatever- the point is that it isn&#8217;t data <em>in<\/em>\u00a0the DCC, it&#8217;s data <em>from<\/em>\u00a0the DCC.<\/p>\n<p>At that point, Maya&#8217;s work is done and the user can go back to working while everything else happens in the background in other processes and machines. \u00a0Awesome! \u00a0Most (all?) DCC&#8217;s are still very single threaded so trying to do any real work in background threads is not practical (or stable&#8230;).<\/p>\n<p>The Local Service sends the mesh data to some Remote Services to request the generation of some crunched and optimized LoD meshes. \u00a0The Local Service can call an Asset Management Service with the scene filename\/mesh name, to get the export path of the final mesh file. \u00a0The Local Service can then do whatever it needs to do to &#8216;export&#8217; the content: call some exe files, serialize it, whatever, it just needs to save the exported file to where the Asset Management Service said it should be.<\/p>\n<p>The Remote Services can call back to the Local Service as they finish processing the LoD&#8217;s, and the Local Service can save them where they&#8217;re supposed to go as well. \u00a0All of this without the user having to wait or intervene for anything, and without bogging down his box with expensive, CPU hungry operations.<\/p>\n<pre lang=\"txt\">  __________\n\/_________\/ |\n|         | |\n| |====|  | |\n| |====|  | |\n|   ___   | |\n|  | @ |  | |\n|   ---   | |\n|_________|.\/<\/pre>\n<p>Is this complex? \u00a0Yes. \u00a0Is it possible for a technically competent team to do? \u00a0Absolutely not. \u00a0Pipelines are the bastard child of game technology, and it show- we have been doing the same crappy things for a decade. \u00a0If we want to minimize ballooning costs of content development, develop robust pipelines capable of supporting games after ship with updates and DLC, and, let&#8217;s face it, work on some inspiring and exciting new technology, we&#8217;ll take pipelines to the cloud.<\/p>", "datetime": "2011-07-19T00:37:28", "id": "http:\/\/www.robg3d.com\/?p=698", "categories": [], "metadata": {"guid": "06e15c51-d76f-465b-b68a-35e1f95a998f", "likes": 0, "is_published": false}}], {}]"
07-31 20:07 SocketClient INFO     Received from service: "true"
07-31 20:07 SocketClient INFO     Returning(as str): 'true'
07-31 20:07 root         INFO     Handling CGI request.
07-31 20:07 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:07 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Toward a quasi time independant  twist node", "url": "http:\/\/circecharacterworks.wordpress.com\/2011\/07\/20\/toward-a-quasi-time-independant-twist-node\/", "author": "circerigging", "summary": "This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\u00a0 I was often confronted with twist popping out of control w", "html": "<p>This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.<\/p>\n<p><img alt=\"\" height=\"483\" src=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/orient_constraint_torsion1.gif?w=408&#038;h=483\" title=\"orient_constraint_torsion\" width=\"408\" \/><\/p>\n<p><em>(Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 )<\/em><\/p>\n<p>After writing a <em><span style=\"color: #ff6600;\"><a href=\"http:\/\/circecharacterworks.wordpress.com\/2011\/07\/06\/a-journey-in-the-realm-of-corrective-shapes-ii\/\">quaternion based aim constraint<\/a>\u00a0<\/span><\/em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.<\/p>\n<p><\/p>\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.<\/p>\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.<\/p>\n<p>1)<em> From <span style=\"color: #ff6600;\">pi<\/span>e to <span style=\"color: #ff6600;\">pi<\/span>e ( with a thick French accent )<\/em> :<\/p>\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.<\/p>\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.<\/p>\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):<\/p>\n<pre class=\"brush: python; wrap-lines: false;\">\nimport maya.cmds as cmds\n\nrefLoc = cmds.spaceLocator( n='referenceLoc1')[0]\nstartLoc = cmds.spaceLocator( n='StartLoc1')[0]\nEndLoc = cmds.spaceLocator( n='EndLoc1')[0]\n\ncmds.parent( [startLoc ,EndLoc] , refLoc )\ncmds.setAttr( startLoc + '.t', 10.0, 0, 0, type='double3' )\ncmds.setAttr( EndLoc + '.t', 10.0, 2.0, 0, type='double3' )\n\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( refLoc + '.angle',e=True,keyable=True  )\n\n#Use locator position  as vector\nangleReader = cmds.createNode( 'angleBetween' )\ncmds.connectAttr( startLoc + '.translate', angleReader + '.vector1' )\ncmds.connectAttr( EndLoc + '.translate', angleReader + '.vector2' )\n\nnullPos = [(0,0,0),(0,0,0)]\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='starCurve1')\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), 'starCurveShape1' )\n\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='endCurve1')\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), 'endCurveShape1' )\n\ncmds.parent( [startCurve ,endCurve] , refLoc )\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\ncmds.setAttr( cvShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( startLoc + '.translate' , cvShape1 + '.controlPoints[1]', f=True )\ncmds.setAttr(  endShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( EndLoc + '.translate' , endShape1 + '.controlPoints[0]', f=True )\n\ncmds.connectAttr( angleReader + '.angle',  refLoc + '.angle', f=True  )\n\n#Don't let depency node lives in the wild polluting the outliner: group them in container\nasset = cmds.container( type='dagContainer',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\n\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( asset + '.angle',e=True,keyable=True  )\n\ncmds.connectAttr(  refLoc + '.angle',  asset + '.angle' , f=True  )\n#dont forget to rename The hyperLayout node associate with this container\nlayout = cmds.listConnections(  asset , t='hyperLayout' )[0]\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\n\n#kindly prefix the element in the container\nNodeList =  cmds.container(asset, q=True, nl=True)\nfor node in NodeList :\n    cmds.rename( node,asset + '_' + node, ignoreShape=True)\n<\/pre>\n<p><img alt=\"\" class=\"aligncenter\" height=\"451\" src=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/vector_angle.gif?w=393&#038;h=451\" title=\"angle range beetween 2 vectors\" width=\"393\" \/><\/p>\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.<\/p>\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )<\/em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\u00a0 in a clock wise manner.<\/p>\n<p>2) History and time as a 4th dimension:<\/p>\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\u00a0 host a wealth of research papers:<\/p>\n<ul>\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href=\"http:\/\/www.chrisevans3d.com\/reference.htm\"><span style=\"color: #ff6600;\"><em>http:\/\/www.chrisevans3d.com\/reference.htm<\/em><\/span><\/a><\/li>\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href=\"http:\/\/kesen.realtimerendering.com\/\"><span style=\"color: #ff6600;\"><em>http:\/\/kesen.realtimerendering.com\/<\/em><\/span><\/a><\/li>\n<\/ul>\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.<\/p>\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.<\/p>\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .<\/p>\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),<\/em> and not interactive.<\/p>\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href=\"http:\/\/www.strarup.net\/maya\/plugins\/lagNode\/\"><span style=\"color: #ff6600;\"><em>Alex V. U. Strarup<\/em><\/span><\/a> was talking about a lag node inspired by maya framecache node.<\/p>\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).<\/p>\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\u00a0 an MPlug and MDGContext.<\/p>\n<p>This is what make it possible to <span style=\"color: #ff6600;\"><em>&#8216;ghost&#8217;<\/em><\/span> an animated object in maya among many other things.<\/p>\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br \/>\n<em>(a little excerpt from Antitrust movie )<\/em><\/p>\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style=\"color: #ff6600;\">setDependentsDirty<\/span>()\u00a0 method\u00a0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):<\/em><\/p>\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.<\/p>\n<p>I took advantage of this property to determine a twist direction:<\/p>\n<ul>\n<li>Inside a compute method ,the value of separate output buffer is first readen<\/li>\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.<\/li>\n<li>Finally\u00a0 if the input and buffer values are not identical we store the twist input value into the output attribute.<\/li>\n<\/ul>\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.<\/p>\n<p><img alt=\"\" height=\"471\" src=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/vector_direction.gif?w=435&#038;h=471\" title=\"\" width=\"435\" \/><\/p>\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) <\/em>we can use their\u00a0 cross product to create a perpendicular vector that will act as a twist axis.<\/p>\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\u00a0 the reference vector <em>about<\/em> the twist axis <em>by<\/em> 90.0 degrees.<\/p>\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.<\/p>\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .<\/p>\n<p>In his article <span style=\"color: #ff6600;\"><em>(<a href=\"http:\/\/www.3dfiggins.com\/writeups\/forearmTwist\/\">\u00a0http:\/\/www.3dfiggins.com\/writeups\/forearmTwist\/<\/a> )<\/em><\/span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:<\/p>\n<ul>\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.<\/li>\n<li>As a manual process, the result can be less accurate or lacks consistency.<\/li>\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.<\/li>\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.<\/li>\n<\/ul>\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.<\/p>\n<p>Part of the remaining works was\u00a0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.<\/p>\n<p>3)<em> Angle <span style=\"color: #ff6600;\">accumulation<\/span> versus number of <span style=\"color: #ff6600;\">revolution<\/span>:<\/em><\/p>\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\u00a0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.<\/p>\n<p><img alt=\"\" height=\"395\" src=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/clock_circle.gif?w=395&#038;h=395\" title=\"\" width=\"395\" \/><\/p>\n<p>First it was important to translate the past and current rotation vector into a more consistent\u00a0 value : a normalized value <em>U<\/em> that represent a percentage of a circle perimeter.<\/p>\n<p>One way to figure this circle purpose is to think of it\u00a0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.<\/p>\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\u00a0the separation line increases and its band can start to turn and wrap\u00a0 several times around this cylinder.<\/p>\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution<\/em> and a parametric value U.<\/p>\n<pre class=\"brush: python; wrap-lines: false;\">\n# Procedure to compute the number of revolution along on unit circle\n\n#Case A: positive rotation direction:\n### current rotation is in most case greater than past rotation\n### when this is false we can increment the number of revolution\n\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\nif past_rotation &gt; current_rotation :\n   currentRevolution += 1.0\n\n#Case B: negative rotation direction:\n### current rotation is in most case lower than past rotation\n### when this is false we can decrement the number of revolution\n\nif past_rotation &lt; current_rotation :\n   currentRevolution -= 1.0\n\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\ncurrentRevolution_outputHandle.setClean()\n<\/pre>\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\u00a0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].<\/p>\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .<\/p>\n<p>4)<em> Counter measure for a <span style=\"color: #ff6600;\">previous value dependent<\/span> node<\/em>:<\/p>\n<br \/>  <a href=\"http:\/\/feeds.wordpress.com\/1.0\/gocomments\/circecharacterworks.wordpress.com\/575\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/comments\/circecharacterworks.wordpress.com\/575\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/godelicious\/circecharacterworks.wordpress.com\/575\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/delicious\/circecharacterworks.wordpress.com\/575\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/gofacebook\/circecharacterworks.wordpress.com\/575\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/facebook\/circecharacterworks.wordpress.com\/575\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/gotwitter\/circecharacterworks.wordpress.com\/575\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/twitter\/circecharacterworks.wordpress.com\/575\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/gostumble\/circecharacterworks.wordpress.com\/575\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/stumble\/circecharacterworks.wordpress.com\/575\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/godigg\/circecharacterworks.wordpress.com\/575\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/digg\/circecharacterworks.wordpress.com\/575\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/goreddit\/circecharacterworks.wordpress.com\/575\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/reddit\/circecharacterworks.wordpress.com\/575\/\" \/><\/a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http:\/\/stats.wordpress.com\/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" \/>", "datetime": "2011-07-20T08:32:05", "id": "http:\/\/circecharacterworks.wordpress.com\/?p=575", "categories": [], "metadata": {"guid": "6cc70911-ba01-4409-b2bb-128dee5d7817", "likes": 0, "is_published": false}}], {}]"
07-31 20:07 SocketClient INFO     Received from service: "true"
07-31 20:07 SocketClient INFO     Returning(as str): 'true'
07-31 20:07 root         INFO     Handling CGI request.
07-31 20:07 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:07 SocketClient INFO     Sending to service: "["publish_content", [{"title": "more on OO rigging and animator tools", "url": "http:\/\/www.macaronikazoo.com\/?p=784", "author": "hamish", "summary": "Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.", "html": "<p>Following on from the <a href=\"http:\/\/www.macaronikazoo.com\/?p=752\" title=\"object oriented rigging in Skeleton Builder\">previous post<\/a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.<\/p>\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.<\/p>\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \u00a0The next step is to create an <a href=\"http:\/\/www.macaronikazoo.com\/?p=726\" title=\"A more thorough Interface class\">interface class<\/a> which defines two methods &#8211; switchToFk and switchToIk. \u00a0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \u00a0Our code ends up looking something like this:<\/p>\n<pre class=\"brush:py\">import typeFactories\nimport baseRigPrimitive\nclass IkFkSwitchable(object):\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\n  def switchToFk( self ):\n    '''this method should implement the logic to switch to FK mode'''\n    pass\n  def switchToIk( self ):\n    '''this method should implement the logic to switch to IK mode'''\n    pass\n\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\n  #the code to implement this rig part goes here\n  ...\n  def switchToFk( self ):\n    #implementation of this method goes below...\n    ...\n  def switchToIk( self ):\n    #implementation of this method goes below...\n    ...<\/pre>\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:<\/p>\n<pre class=\"brush:py\">import rigPrimitives\nimport maya.cmds as cmd\nfrom baseMelUI import *\n\ndef getSelectedSwitchableParts():\n  '''\n  returns a list of all RigPart instances that have at least one of their members\n  selected\n  '''\n  selectedSwitchableParts = []\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\n  for rigPart in selectedRigParts:\n    if isinstance( rigPart, IkFkSwitchable ):\n      selectedSwitchableParts.append( rigPart )\n\n  return selectedSwitchableParts\n\nclass UserToolLayout(MelHLayout):\n  def __init__( self, parent ):\n    MelHLayout.__init__( self, parent )\n    self.UI_fkButton = MelButton( self, l=\"switch to FK\", c=self.on_pressFk )\n    self.UI_ikButton = MelButton( self, l=\"switch to IK\", c=self.on_pressIk )\n\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\n    #method when the scene selection changes.  So this will update the UI when the user\n    #changes the selection\n    self.setSelectionChangeCB( self.on_selectionChange )\n    self.on_selectionChange()  #call this to init the UI\n\n    #make sure to call this so the form layout gets setup properly\n    self.layout()\n\n  ### EVENT HANDLERS ###\n  def on_selectionChange( self, *a ):\n    #need to explicitly cast here because of a bug in setEnabled\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\n  def on_pressFk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToFk()\n  def on_pressIk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToIk()\n\nclass UserToolWindow(BaseMelWindow):\n  WINDOW_NAME = \"ikFkSwitcherTool\"\n  WINDOW_TITLE = \"Ik Fk switcher tool\"\n  DEFAULT_SIZE = 300, 45\n  DEFAULT_MENU = None\n\n  def __init__( self ):\n    UserToolLayout( self )\n    self.show()\n\nUserToolWindow()<\/pre>\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.<\/p>\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.<\/p>\n<p>Anyway hopefully you get the idea.<\/p>", "datetime": "2011-07-21T22:47:08", "id": "http:\/\/www.macaronikazoo.com\/?p=784", "categories": [], "metadata": {"guid": "78b71ec9-df92-4860-b8df-1eb4fc668c04", "likes": 0, "is_published": false}}], {}]"
07-31 20:07 SocketClient INFO     Received from service: "true"
07-31 20:07 SocketClient INFO     Returning(as str): 'true'
07-31 20:07 root         INFO     Handling CGI request.
07-31 20:07 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:07 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Highlight an Excel Cell Using Python", "url": "http:\/\/shawnkirsch.tumblr.com\/post\/7930189393", "author": "Unknown Author", "summary": "<ol><li>\n<\/li><li>import xlrd, xlwt<\/li>\n<li>\n<\/li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)<\/li>\n<li>inputSheet = inputBook.sheet_by_index(0)<\/li>\n<li>\n<\/li><li>outputBook = xlwt.Workbook()<\/li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)<\/li>\n<li>\n<\/li><li>style ", "html": "<ol><li>\n<\/li><li>import xlrd, xlwt<\/li>\n<li>\n<\/li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)<\/li>\n<li>inputSheet = inputBook.sheet_by_index(0)<\/li>\n<li>\n<\/li><li>outputBook = xlwt.Workbook()<\/li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)<\/li>\n<li>\n<\/li><li>style = xlwt.easyxf(\u2018pattern: pattern solid, fore-colour red\u2019)<\/li>\n<li>\n<\/li><li>for x in range(inputSheet.nrows):<\/li>\n<li>\u00a0 \u00a0 for y in range(inputSheet.ncols):<\/li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 if(inputSheet.cell(x,y).value):<\/li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0cellValue = inputSheet.cell(x,y).value<\/li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0outputSheet.write(x,y, cellValue)<\/li>\n<li>\n<\/li><li>outputSheet.write(5,5, \u201crewritten cell\u201d, style)<\/li>\n<li>\n<\/li><li>\n<\/li><li>outputBook.save(\u201ctest.xls\u201d)<\/li>\n\n<\/ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \u00a0Good for validation purposes.<\/p>\n<ol><\/ol>", "datetime": "2011-07-22T11:55:00", "id": "http:\/\/shawnkirsch.tumblr.com\/post\/7930189393", "categories": [], "metadata": {"guid": "9a86dd70-2b83-49dc-a151-fac566245d11", "likes": 0, "is_published": false}}], {}]"
07-31 20:07 SocketClient INFO     Received from service: "true"
07-31 20:07 SocketClient INFO     Returning(as str): 'true'
07-31 20:07 root         INFO     Handling CGI request.
07-31 20:07 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:07 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Learning a programming language by reading a manual is like learning a language by reading a dictionary", "url": "http:\/\/www.robg3d.com\/?p=708", "author": "Rob Galanakis", "summary": "A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with", "html": "<p>A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords.<\/p>\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with people, or libraries.<\/p>\n<p>Be wary of anyone who says they know more than a dozen languages. \u00a0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.<\/p>\n<p>You can learn to speak a language without learning how to communicate in that language. \u00a0In the same way, you can create a program in a language without communicating effectively.<\/p>\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \u00a0Sophisticated use of a programming language allows and requires the same. \u00a0We should understand when to be sophisticated and when to be crude, and always seek to educate.<\/p>\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \u00a0Consider what Ebonix is to English, or a scripting language is to C++. \u00a0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.<\/p>\n<p>You cannot learn how to speak a language by reading a dictionary. \u00a0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \u00a0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.<\/p>\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.<\/p>", "datetime": "2011-07-23T03:58:13", "id": "http:\/\/www.robg3d.com\/?p=708", "categories": [], "metadata": {"guid": "8663e9bd-e78d-4c2d-816e-4f33d05827a9", "likes": 0, "is_published": false}}], {}]"
07-31 20:08 SocketClient INFO     Received from service: "true"
07-31 20:08 SocketClient INFO     Returning(as str): 'true'
07-31 20:08 root         INFO     Handling CGI request.
07-31 20:08 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:08 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Toggle debug print in Maxscript", "url": "http:\/\/www.rsart.co.uk\/2011\/07\/23\/toggle-debug-print-in-maxscript\/", "author": "Rick", "summary": "Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O", "html": "<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.<\/p>\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:<\/p>\n<p><code>if debugprint == true then print \"My debug stuff\"<\/code><\/p>\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:<\/p>\n<p><code>fn debugPrint printStr =<br \/>\n(<br \/>\n    if debugPrintVal == true do<br \/>\n        (<br \/>\n            Print printStr<br \/>\n        )<br \/>\n)<br \/>\n<\/code><\/p>\n<p>So, instead of using  :<\/p>\n<p><code>if debugprint == true then print \"My debug stuff\"<\/code><\/p>\n<p>We can now used the much cleaner version:<\/p>\n<p><code>debugprint \"My debug stuff\"<\/code><\/p>", "datetime": "2011-07-23T23:44:45", "id": "http:\/\/www.rsart.co.uk\/?p=407", "categories": [], "metadata": {"guid": "eae874f4-a637-4d6e-bd62-c057f2045c60", "likes": 0, "is_published": false}}], {}]"
07-31 20:08 SocketClient INFO     Received from service: "true"
07-31 20:08 SocketClient INFO     Returning(as str): 'true'
07-31 20:08 root         INFO     Handling CGI request.
07-31 20:08 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:08 SocketClient INFO     Sending to service: "["publish_content", [{"title": "WTFunctional: Be Declarative", "url": "http:\/\/www.robg3d.com\/?p=712", "author": "Rob Galanakis", "summary": "Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ", "html": "<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.<\/p>\n<p>First up is demonstrating that <strong>functional programming is declarative<\/strong>: it makes your code more expressive and optimized.<\/p>\n<p>Most programmers are used to seeing this:<\/p>\n<pre>list = []\nfor i = 0 to 10 do\n  if i % 2 == 0:\n    list.append(i)\n\/\/list is now [0,2,4,6,8,10]<\/pre>\n<p>Less familiar would be:<\/p>\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)<\/pre>\n<p>The first focuses on the <em>how<\/em>: increment <em>i<\/em> from 0 to 10, and append every even item and 0 to a list. \u00a0This is an <strong>imperative style<\/strong>. \u00a0The second focuses on the <em>what<\/em>: \u00a0for each item from 0 to 10, select all even items. \u00a0This is a <strong>declarative style<\/strong>, which is an aspect of functional programming. \u00a0In this trivial case, the difference is, well, trivial. \u00a0But the key differences are:<\/p>\n<ol>\n<li>\u00a0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).<\/li>\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.<\/li>\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated\/iterated over, not a concrete type like a list\/array\/etc.<\/li>\n<\/ol>\n<p>These differences create three key benefits:<\/p>\n<ol>\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.<\/li>\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative<\/em>\u00a0part of it. \u00a0We&#8217;ll see how to read a more complex statement next.<\/li>\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators<\/em>- it really depends on what is expedient for the statement.<\/li>\n<\/ol>\n<p>Let&#8217;s try out a more concrete example. \u00a0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \u00a0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.<\/p>\n<pre>dateAndItemsMap = dict()\nfor row in myTable.rows:\n\u00a0 \u00a0 if row.isActive:\n\u00a0 \u00a0 \u00a0 \u00a0 if row.date not in dateAndItemsMap:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date] = list()\n\u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date].append(new MyObject(row))\nsortedDates = dateAndItemsMap.values()\nsortedDates.sort()\nitemsSortedByDateThenId = list()\nfor date in sortedDates:\n\u00a0 \u00a0 items = dateAndItemsMap[date]\n\u00a0 \u00a0 items.sort(lamba obj: obj.id)\n\u00a0 \u00a0 itemsSortedByDateThenId.extend(items)<\/pre>\n<p>Wow, that&#8217;s a lot of code! \u00a0And not at all clear when reading it. \u00a0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \u00a0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.<\/em>\u00a0 That&#8217;s a mouthful, and I think that was pretty brief.<\/p>\n<p>Let&#8217;s compare this to the declarative style:<\/p>\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)<\/pre>\n<p>One line? \u00a0One stinking line? \u00a0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.<\/em>\u00a0 Notice a) how the explanation expresses <em>what you want<\/em>, <strong>not<\/strong>\u00a0how you want to get it, and b) the explanation reads very similar to the code.<\/p>\n<p>This is why declarative programming rocks, <strong>right now.<\/strong>\u00a0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \u00a0Your code will become infinitely clearer.<\/p>\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure<\/strong>), and the compiler or runtime can automatically parallelize it and optimize it. \u00a0This is one reason languages like SQL have been so effective- the software\/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.<\/p>\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \u00a0Next up will probably be closures.<\/p>", "datetime": "2011-07-25T14:29:27", "id": "http:\/\/www.robg3d.com\/?p=712", "categories": [], "metadata": {"guid": "7cf25c60-08d2-4be6-8544-0869547c3245", "likes": 0, "is_published": false}}], {}]"
07-31 20:08 SocketClient INFO     Received from service: "true"
07-31 20:08 SocketClient INFO     Returning(as str): 'true'
07-31 20:08 root         INFO     Handling CGI request.
07-31 20:08 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:08 SocketClient INFO     Sending to service: "["publish_content", [{"title": "The Importance of Vision, 1 of 3", "url": "http:\/\/www.robg3d.com\/?p=720", "author": "Rob Galanakis", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \u00a0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href=\"http:\/\/altdevblogaday.com\/2011\/07\/28\/the-importance-of-vision\/\">recent post at AltDevBlogADay<\/a> in three parts. \u00a0View it there in its entirety.<\/p>\n<hr \/>\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.<\/p>\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.<\/p>\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.<\/p>\n<p>Where does this lack of vision come from? What can we do to resolve it?<\/p>\n<hr \/>\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.<\/p>\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.<\/p>\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?<\/p>\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.<\/p>", "datetime": "2011-07-28T04:29:04", "id": "http:\/\/www.robg3d.com\/?p=720", "categories": [], "metadata": {"guid": "5bd65447-2fe8-44f8-a6f1-046c2b4563e0", "likes": 0, "is_published": false}}], {}]"
07-31 20:09 SocketClient INFO     Received from service: "true"
07-31 20:09 SocketClient INFO     Returning(as str): 'true'
07-31 20:09 root         INFO     Handling CGI request.
07-31 20:09 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
07-31 20:09 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Protocol to build a reusable deformation template I: model presentation", "url": "http:\/\/circecharacterworks.wordpress.com\/2011\/07\/30\/protocol-to-build-a-reusable-deformation-template-i-model-presentation\/", "author": "circerigging", "summary": "Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin \/ envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts \/ tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f", "html": "<p>Character and creature rigging is a broad discipline that encompass many fields :<\/p>\n<ul>\n<li>Structure setup for animation .<\/li>\n<li>Skin \/ envelope configuration.<\/li>\n<li>Surface, hair , cloth and rigid body simulation.<\/li>\n<li>Scripts \/ tools writing.<\/li>\n<\/ul>\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.<\/p>\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.<\/p>\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\u00a0 I just think that to handle creature \/character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.<\/p>\n<p>The ability to assign an attribute\u00a0per element is a powerful\u00a0 concept that has yet to find a limitation,\u00a0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.<\/p>\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.<\/p>\n<p><a href=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/packageman.png\"><img alt=\"\" height=\"499\" src=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/packageman.png?w=450&#038;h=499\" title=\"packageMan: a free animation rig by  Javier Solsona\" width=\"450\" \/><\/a><\/p>\n<p>This fully rigged character can be found on <a href=\"http:\/\/www.rigging101.com\/freestuff.htm\"><em><span style=\"color: #ff6600;\">Javier Solsona <\/span><\/em><\/a>&#8216;s website and was modeled\u00a0by Bob White.<\/p>\n<p><a href=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/base_topology.png\"><img alt=\"\" height=\"248\" src=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/base_topology.png?w=450&#038;h=248\" title=\"original topology of this character \" width=\"450\" \/><\/a><\/p>\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.<\/p>\n<p>This means:<\/p>\n<ul>\n<li>less computing power,<\/li>\n<li>less memory<\/li>\n<li>less functionality by default in maya<\/li>\n<li>non existing support program like topoGun or Zbrush .<\/li>\n<\/ul>\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\u00a0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.<\/p>\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .<\/p>\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .<\/p>\n<p>Some triangles on the contrary are well used and help reinforce\u00a0 the shape of this sculpture <em>( on the the belly and crotch for example ) .<\/em><\/p>\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.<\/p>\n<p><a href=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/topo_side_view.png\"><img alt=\"\" height=\"574\" src=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/topo_side_view.png?w=450&#038;h=574\" title=\"\" width=\"450\" \/><\/a><br \/>\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\u00a0 I will the focus on shoulder deformation.<\/p>\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )<\/em> and the socks were left unchanged.<br \/>\n<a href=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/quaterview.png\"><img alt=\"\" height=\"383\" src=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/quaterview.png?w=450&#038;h=383\" title=\"\" width=\"450\" \/><\/a><\/p>\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br \/>\n<a href=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/clean_up_topo1.png\"><img alt=\"\" class=\"alignleft size-full wp-image-713\" height=\"545\" src=\"http:\/\/circecharacterworks.files.wordpress.com\/2011\/07\/clean_up_topo1.png?w=450&#038;h=545\" title=\"\" width=\"450\" \/><\/a><\/p>\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.<\/p>\n<br \/>  <a href=\"http:\/\/feeds.wordpress.com\/1.0\/gocomments\/circecharacterworks.wordpress.com\/692\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/comments\/circecharacterworks.wordpress.com\/692\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/godelicious\/circecharacterworks.wordpress.com\/692\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/delicious\/circecharacterworks.wordpress.com\/692\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/gofacebook\/circecharacterworks.wordpress.com\/692\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/facebook\/circecharacterworks.wordpress.com\/692\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/gotwitter\/circecharacterworks.wordpress.com\/692\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/twitter\/circecharacterworks.wordpress.com\/692\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/gostumble\/circecharacterworks.wordpress.com\/692\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/stumble\/circecharacterworks.wordpress.com\/692\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/godigg\/circecharacterworks.wordpress.com\/692\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/digg\/circecharacterworks.wordpress.com\/692\/\" \/><\/a> <a href=\"http:\/\/feeds.wordpress.com\/1.0\/goreddit\/circecharacterworks.wordpress.com\/692\/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http:\/\/feeds.wordpress.com\/1.0\/reddit\/circecharacterworks.wordpress.com\/692\/\" \/><\/a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http:\/\/stats.wordpress.com\/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" \/>", "datetime": "2011-07-30T09:41:32", "id": "http:\/\/circecharacterworks.wordpress.com\/?p=692", "categories": [], "metadata": {"guid": "b187aab2-bf23-4bba-8cd2-36fca514ccba", "likes": 0, "is_published": false}}], {}]"
07-31 20:09 SocketClient INFO     Received from service: "true"
07-31 20:09 SocketClient INFO     Returning(as str): 'true'
08-07 21:20 root         INFO     Handling CGI request.
08-07 21:20 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:20 SocketClient INFO     Sending to service: "["downloadedcontent_count", [], {}]"
08-07 21:20 SocketClient INFO     Received from service: "900"
08-07 21:20 SocketClient INFO     Returning(as str): '900'
08-07 21:20 root         INFO     Handling CGI request.
08-07 21:20 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:20 SocketClient INFO     Sending to service: "["request_content_slice", [0, 15], {}]"
08-07 21:20 SocketClient INFO     Received from service: "[{"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/08/07/motion-capture-for-a-weather-forecast-billboard/", "title": "motion capture for a weather forecast billboard", "datetime": "2011-08-07T10:32:26", "html": "<p>In 2009 we were able to produce a follow up with the character Leon and zazar.</p>\n<p>This time the target audience was television : a billboard aired before and after the weather forecast.</p>\n<p></p>\n<p>The main constraint with this kind of movie is its shortness : roughly 5\u00a0 seconds worth of content, barely enough time to announce what comes next.</p>\n<p>Our client,\u00a0 owner of\u00a0 bowling playhouse\u00a0 housing a\u00a0 restaurant\u00a0 and dancing room , was open to all kind of idea : it was logical for us this time to picture 4 characters dancing on an extravagant dance floor . <em>( entirely different than the real one )</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/jennifer_tektonik.jpg\"><img alt=\"\" height=\"362\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/jennifer_tektonik.jpg?w=450&#038;h=362\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>Jennifer , the meanest and most detestable character dances on tektonik</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/leon_jazz.jpg\"><img alt=\"\" height=\"361\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/leon_jazz.jpg?w=450&#038;h=361\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>Leon executes an aerial classical jazz dance steps</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/julie_ragga.jpg\"><img alt=\"\" height=\"360\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/julie_ragga.jpg?w=450&#038;h=360\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>Julie breaks a sweat on a ragga tune.</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/zazar_pop_music.jpg\"><img alt=\"\" height=\"357\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/zazar_pop_music.jpg?w=450&#038;h=357\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>Zazar dances on pop_music</em></p>\n<p>Films credit: <em>( 4 * 14 seconds movie )</em><br />\nJL Patriat:<br />\n- Film and artistic director<br />\n- character design<br />\n- shot supervision with dance performer</p>\n<p>e. Lepinay:<br />\n- texturing<br />\n- lightning<br />\n- rendering<br />\n- compositing<br />\n- environment modeling</p>\n<p>C. Bazillou:<br />\n- character and expression modeling<br />\n- character setup<br />\n- skinning<br />\n- cloth and soft body simulation<br />\n-motion capture:<br />\n. data acquisition<br />\n. cleaning<br />\n. secondary animation<br />\n. view dependent surface deformation correction</p>\n<p>For this project where the character assets were already built the main cost was the animation part :</p>\n<p>This was a personal project and we were free to explore other style of animation because the client doesn&#8217;t specifically ask for cartoon animation .</p>\n<p>The use of motion capture was justified because with our limited resources<em> ( two 3d artists )</em> we didn&#8217;t feel comfortable to try and keyframe 1 minute worth of content in less than 10 days.</p>\n<p>Our purpose was not to work faster or cheaper : we wanted to tweak the original performance of several dancer and in the end with the preliminary work involved it was actually slightly more expensive to use this technique .</p>\n<p>Funnily enough , It was our first time working with actors : the previous project involving motion capture were simpler and we were doing the performance ourselves .</p>\n<p>There were 4 type of dance :\u00a0 I made my estimation based on 2 actors <em>( 1 for the female characters and\u00a0 the other for the male characters )</em> and accordingly prepare 2 Velcro suit size .</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/799/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=799&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "In 2009 we were able to produce a follow up with the character Leon and zazar. This time the target audience was television : a billboard aired before and after the weather forecast. The main constraint with this kind of movie is its shortness : roughly 5\u00a0 seconds worth of content, barely enough tim", "id": "http://circecharacterworks.wordpress.com/?p=799", "categories": [], "metadata": {"guid": "5f61d34e-53ef-4fe4-8d7d-51a01c3f334a", "likes": 0, "is_published": false}}, {"author": "Dru Sellers", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/N33E3pgzB1c/", "title": "Thought Questions", "datetime": "2011-08-06T14:24:25", "html": "<p><em>After many weeks of travel I finally have some time to think again. Yay!</em></p>\n<p>Today&#8217;s post was inspired by\u00a0<a href=\"http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html\">http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html</a>.\u00a0The post presents a link to another wonderful site called <a href=\"http://thoughtquestions.com/\">Thought Questions</a> which got me thinking about a programming spin on the same concept.</p>\n<p>\u00a0</p>\n<p>What&#8217;s the difference between your coding today, and your coding 6 mths ago? If its improving, are you on the same trajectory? Or are you growing stagnant?</p>\n<p>Can you be a good developer with no business knowledge? Is it business knowledge if its just a mathmatical formula?</p>\n<p>What&#8217;s the biggest shift you have made in your programming since you started?</p>\n<p>What was the last thing you did just for fun?</p>\n<p>Who was the last person you helped on the internet? How did you help them?</p>\n<p>Do you visualize code in your head? What does it look like? Does it have color? Shape?</p>\n<p>\u00a0</p>\n<p>Anyways, happy saturday.</p>\n<p>\u00a0</p>\n<p>-d</p>\n<p>\u00a0</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/N33E3pgzB1c\" width=\"1\" />", "summary": "After many weeks of travel I finally have some time to think again. Yay! Today&#8217;s post was inspired by\u00a0http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html.\u00a0The post presents a link to another wonderful site called Thought Questions which got me thinking about a programming spin ", "id": "http://codebetter.com/drusellers/?p=148", "categories": [], "metadata": {"guid": "85bb9d97-af29-4fa1-ba96-2f601e37a641", "likes": 0, "is_published": false}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/08/designing-animation-for-speed.html", "title": "Designing Animation For Speed", "datetime": "2011-08-06T12:35:28.806000", "html": "This was cross-posted to <a href=\"http://altdevblogaday.com/2011/08/06/designing-animation-for-speed/\">AltDevBlogADay</a>. Look for a powerlifting corollary sometime soon!<br /><br /><br /><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Everything I ever needed to know about animation, I learned from watching Looney Tunes.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Seriously.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Sure, I went to school. I learned HOW to animate there and from other sources, but none of that taught me what I needed to know about animation as much as watching Bugs outsmart Elmer, Daffy play the second banana, Foghorn Leghorn fumble about, or Wile E. Coyote fall to yet another demise.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Gravity Doesn\u2019t Exist Until You Look Down</h3><div><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote_fallstart1.jpg\"><img alt=\"\" class=\"alignleft size-full wp-image-13545\" height=\"320\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote_fallstart1.jpg\" style=\"border-bottom-width: 0px; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; float: left;\" width=\"240\" /></a>Bugs is the popular one. Daffy is the memorable one (Stuuuuuuupor Duck!). Foghorn, well, I say\u2026&nbsp; I say, he was fun to watch with his contraptions. However, Wile E. Coyote is the one that sticks out the most to me.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Not only is it entertaining to watch poor Wile E. try and try again to catch the Roadrunner (with a seemingly unlimited&nbsp;credit line with the Acme corporation), it is also a very good study of how developing a formula can allow an animator to work efficiently while keeping a high quality bar.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Take the timing of Wile E.'s fall, for instance. Did you know that every time he falls, it happens in the same exact number of frames? He tends to walk/fly/float/propel himself over a ledge, and doesn't fall until he looks down (for Wile, gravity doesn't exist until he does this). He then falls over N frames until you see a puff of smoke and hear a distant \"splat.\"</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">This comedic timing (combined with a happy accident regarding the audio level of his \"splat\") allowed the Looney Tunes animators to build up to this punchline without worrying if the punchline itself would feel right. It also ensured that re-takes weren't going to be needed- once that formula was set, it was followed.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Set Your Pace</h3><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">For game animation, I take the same approach, especially for transition animations. In fact, on our current project, we try to animate all transitions to occur on 6, 12, 18 or 24 frames. Each of these frame counts corresponds with the desired perceived pacing of the character's thought process. For example:</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"Ready Now!\" - 6 frames</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"Get moving and STOP!\" - 12 frames</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"I gotta be ready&nbsp;<em>before&nbsp;</em>I get there\"&nbsp;- 18 frames</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"OK, I'm gonna pick my spot and get ready when I'm there.\" - 24 frames</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">These frame numbers allowed us to&nbsp;build a visual language with these transitions. For example, the faster ones are more immediate and needed for faster gameplay responsiveness (say, for aiming and shooting). Having them all on a 6-frame count holds the player's expectation that if \u201cI've gotta shoot, I'll get there in .2 seconds.\u201d It also allows us to later add interruptible follow-through for an extra 6 or 12 frames without that extra motion feeling out of place.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">In contrast, the 18/24 frame transitions typically denote the end of longer, deliberate movement- the player knows they are moving at a certain speed and when they have reached their destination, the transition will carry that speed to a stop. These extra frames allow us to sell the character's weight at that stop, which in turn creates a mental acceptance by the player that it took longer than the 6/12 frame motions.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Fast Iteration</h3><div><br /></div><div class=\"mceTemp\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /><dl class=\"wp-caption alignright\" id=\"attachment_13568\" style=\"background-color: #f3f3f3; border-bottom-color: rgb(221, 221, 221); border-bottom-left-radius: 3px 3px; border-bottom-right-radius: 3px 3px; border-bottom-style: solid; border-bottom-width: 1px; border-left-color: rgb(221, 221, 221); border-left-style: solid; border-left-width: 1px; border-right-color: rgb(221, 221, 221); border-right-style: solid; border-right-width: 1px; border-top-color: rgb(221, 221, 221); border-top-left-radius: 3px 3px; border-top-right-radius: 3px 3px; border-top-style: solid; border-top-width: 1px; float: right; margin-bottom: 10px; margin-left: 10px; margin-right: 10px; margin-top: 10px; padding-top: 4px; text-align: center; width: 213px;\"><dt class=\"wp-caption-dt\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/08/exposusresheet1.jpg\"><img alt=\"\" class=\"size-full wp-image-13568\" height=\"233\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/08/exposusresheet1.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"203\" /></a></dt><dd class=\"wp-caption-dd\" style=\"font-size: 11px; line-height: 17px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 5px; padding-left: 4px; padding-right: 4px; padding-top: 0px;\">Sweet, sweet consistency</dd></dl></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">The next benefit to the frame counts is that they are easily scalable from one to the other. Personally, I set poses every 3-6 frames. This lets me easily slide the keys around if I need to make timing adjustments after the animations are implemented. These adjustments can also be easily scriptable (for fast tests), so I can adjust the timing of 160 animations very quickly to see if the new length feels right before going ahead and hand-tweaking them.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Since I've spaced out my keys in a uniform way, I can re-time the motions much more efficiently.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Lastly, these frame formulas give us efficient consistency. Since a uniform length exists, once we nail down the first key animation, we can modify it to create other motions in the same pool. For example, If we need to transition from a non-shooting pose to a shooting pose, we\u2019ll work on a key motion that gets across the character\u2019s intent and the player\u2019s feel. Once design deems the look and feel to be good for gameplay, we can create every other transition in that pool much quicker.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Happy Accidents</h3><div><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Much like the audio level on the splat of Wile E. Coyotes's fall (see the book Chuck Redux), coming up with the multiples of 6 formula was actually a happy accident- the Source Engine's default engine blend value is .2 seconds (6 frames!) In order to not disrupt existing gameplay, we started animating to that frame number. After implementing many transitions, it was apparent that not all of them could or should work on 6 frames. The easiest thing to do was scale the motion by 200% and work back from there. Lo and behold, 200% worked great, so we redid all of those motions with twice the frame count.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Since that pacing looked good,&nbsp;we extrapolated that 18 and 24 frames would be logical to try next. It worked, and now we have a (undocumented till now) visual language for our transitions.&nbsp;We've since extended this philosophy to our movement system, and the animators who work on that pump out high quality motions like nobody's business.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">It's Still Creative!</h3><div><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Purist animators out there might be shocked that we take shortcuts in order to produce efficient, high-quality animation at a fast pace. The fact of the matter is Warner Brothers, and even Disney, did the&nbsp;same thing! Read Chuck Redux, or watch this:</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">The key is to not get so married to those formulas that we are unwilling to change them when they no longer work, or get stale. If that happens, we play with new formulas and do more timing tests until we get it right.&nbsp;In the end, the better we can nail down the punchline, the more time we can spend on the fun part of getting there.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote1.jpg\"><img alt=\"\" class=\"aligncenter size-full wp-image-13547\" height=\"320\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote1.jpg\" style=\"border-bottom-width: 0px; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: block; margin-left: auto; margin-right: auto;\" width=\"400\" /></a></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\"><br /></h3><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Feedback!</h3><div><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">I'd love to hear from other animators and designers what their processes for this are, as well! So speak up, tell your friends to read this and rip me to shreds, tell me how awesome I am or somewhere in between. I'm always looking for different techniques and opinions!</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4248341596629159263-38124459084849704?l=strongmanimator.blogspot.com\" width=\"1\" /></div>", "summary": "This was cross-posted to <a href=\"http://altdevblogaday.com/2011/08/06/designing-animation-for-speed/\">AltDevBlogADay</a>. Look for a powerlifting corollary sometime soon!<br /><br /><br /><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-h", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-38124459084849704", "categories": [], "metadata": {"guid": "fe7a6cdc-278b-4844-9482-1883e59c5e3d", "likes": 0, "is_published": false}}, {"author": "Glenn Block", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/PRCEBXQBkPc/", "title": "Integrating MVC routes and Web API routes", "datetime": "2011-08-05T05:55:30", "html": "<p>&nbsp;</p>\n<p>Several folks have been complaining for a while about Action Links not being properly generated when MVC routes are mixed with Service Routes in the same site.\n<p>It turns out there is a solution&#8230;..don&#8217;t use ServiceRoute <img alt=\":-)\" class=\"wp-smiley\" src=\"http://codebetter.com/glennblock/wp-includes/images/smilies/icon_smile.gif\" />  Instead, create a derived route below and use it. [Kudos to <a href=\"http://www.haacked.com\">Phil Haack</a> and <a href=\"http://blogs.msdn.com/b/clemensv/\">Clemens Vasters</a> for this]\n<pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\"><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> WebApiRoute : ServiceRoute\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">{\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     <span style=\"color: #0000ff;\">public</span> AppServiceRoute(<span style=\"color: #0000ff;\">string</span> routePrefix,\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">       ServiceHostFactoryBase serviceHostFactory, Type serviceType)\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     : <span style=\"color: #0000ff;\">base</span>(routePrefix, serviceHostFactory, serviceType)\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     {\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     }\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> VirtualPathData GetVirtualPath(\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">       RequestContext requestContext, RouteValueDictionary values)\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     {\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">       <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">null</span>;\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     }\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">}\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\"></pre>\n</pre>\n<p>The link gen functionality uses the GetVirtualPath method to generate links. If you set it to null you are opting web api routes out of link gen and everything should work. </p>\n<p>Now to register your routes using this model, don&#8217;t use MapServiceRoute. </p>\n<p>Instead, in add to your route table manually this way:\n<pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">var config = <span style=\"color: #0000ff;\">new</span> HttpHostConfiguration() <span style=\"color: #808080;\">///create your config object</span>\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">var factory = <span style=\"color: #0000ff;\">new</span> HttpConfigurableServiceHostFactory(config);\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">routes.Add(<span style=\"color: #0000ff;\">new</span> WebApiRoute(\"<span style=\"color: #8b0000;\">Foo</span>\", factory, <span style=\"color: #0000ff;\">typeof</span>(Foo)));\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\"></pre>\n</pre>\n<p>It&#8217;s a little bit more code, but not too much and hey, it fixes the problem. This will be fixed in the next drop, which YES, we are working on.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/PRCEBXQBkPc\" width=\"1\" />", "summary": "&#160; Several folks have been complaining for a while about Action Links not being properly generated when MVC routes are mixed with Service Routes in the same site. It turns out there is a solution&#8230;..don&#8217;t use ServiceRoute Instead, create a&#160;&#8230; <a href=\"http://codebetter.com/g", "id": "http://codebetter.com/glennblock/2011/08/05/integrating-mvc-routes-and-web-api-routes-2/", "categories": [], "metadata": {"guid": "5986afe5-245b-48e1-8517-a3b717433432", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8501055529", "title": "a cool photo I found from when I moved home. \u00a0I was doing a lot...", "datetime": "2011-08-05T00:04:07", "html": "<img src=\"http://30.media.tumblr.com/tumblr_lpfsmwBIHp1qgg0uyo1_500.jpg\" /><br /><br /><p>a cool photo I found from when I moved home. \u00a0I was doing a lot of art back then!</p>", "summary": "<img src=\"http://30.media.tumblr.com/tumblr_lpfsmwBIHp1qgg0uyo1_500.jpg\" /><br /><br /><p>a cool photo I found from when I moved home. \u00a0I was doing a lot of art back then!</p>", "id": "http://shawnkirsch.tumblr.com/post/8501055529", "categories": [], "metadata": {"guid": "e6c99f00-b581-442d-b585-0fa452166874", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8500670372", "title": "My Old Car\u2026Been looking for this picture for a...", "datetime": "2011-08-04T23:53:43", "html": "<img src=\"http://29.media.tumblr.com/tumblr_lpfs5kPdp31qgg0uyo1_500.jpg\" /><br /><br /><p>My Old Car\u2026Been looking for this picture for a while\u2026</p>", "summary": "<img src=\"http://29.media.tumblr.com/tumblr_lpfs5kPdp31qgg0uyo1_500.jpg\" /><br /><br /><p>My Old Car\u2026Been looking for this picture for a while\u2026</p>", "id": "http://shawnkirsch.tumblr.com/post/8500670372", "categories": [], "metadata": {"guid": "56c29b89-28ad-42f8-83f8-497f2a4daadc", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=737", "title": "Bored People Quit (I did!)", "datetime": "2011-08-04T15:20:16", "html": "<p>If you read one long blog article this year, make it this one: Rands in Repose&#8217;s <a href=\"http://www.randsinrepose.com/archives/2011/07/12/bored_people_quit.html\">Bored People Quit</a>. \u00a0It is one of the most important blog posts I&#8217;ve read in a long time, and right on the money.</p>\n<p>If you&#8217;ve ever worked a shitty professional job (especially programming), and you know you have, you&#8217;ll resonate with what&#8217;s written there. \u00a0I told my last job for well over a year that I was bored and actually tried to quit a number of times, and gave exact action items for how to fix my boredom and what my grievances were. \u00a0Not that any were ever addressed. \u00a0And in a place like that, they couldn&#8217;t realistically be addressed, with so much riding on such an expensive project- they couldn&#8217;t give a shit about almost any individual worker or what I perceive as the long term health of the studio.</p>\n<p>Anyway, go read it, and pass it on to your managers!</p>", "summary": "If you read one long blog article this year, make it this one: Rands in Repose&#8217;s Bored People Quit. \u00a0It is one of the most important blog posts I&#8217;ve read in a long time, and right on the money. If you&#8217;ve ever worked a shitty professional job (especially programming), and you know y", "id": "http://www.robg3d.com/?p=737", "categories": [], "metadata": {"guid": "907acc92-7ccf-4761-9e08-97b9dfe61897", "likes": 0, "is_published": false}}, {"author": "Patrick Smacchia", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/tUxnZk4ANcM/", "title": "A bit more details on compiler Roslyn plans\u2026", "datetime": "2011-08-04T13:42:52", "html": "<p>Have a look at this Microsoft Research session entitled <a href=\"http://research.microsoft.com/apps/video/default.aspx?id=152281\" target=\"_blank\">\u201cRefactoring with Roslyn Circus Comes to Town,\u201d</a> made on July 19th. It is partly about Roslyn and also about code refactoring in general. Very interesting one &#8230; and pleasant to watch!</p>\n<p>Mary Jo Foley reported her thoughts on it <a href=\"http://www.zdnet.com/blog/microsoft/microsoft-moves-forward-with-roslyn-compiler-as-a-service-project/10071\" target=\"_blank\">in a recent blog post</a> as well. It seems Roslyn RTM won&#8217;t meet the VS 2012 schedule, but we should have some bits to play around with, hopefully within the next months.</p>\n<p>I notice that the kings of refactoring in the .NET scene, the R# guys, are not there. Especially taking account that this morning I&#8217;ve done some heavy large scale refactoring with R# that saved my day, and free me some time to watch this session.</p>\n<p>Almost a decade of development with .NET and still excited about what&#8217;s next &#8230; I like it!</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/tUxnZk4ANcM\" width=\"1\" />", "summary": "Have a look at this Microsoft Research session entitled \u201cRefactoring with Roslyn Circus Comes to Town,\u201d made on July 19th. It is partly about Roslyn and also about code refactoring in general. Very interesting one &#8230; and pleasant to watch!&#160;&#8230; <a href=\"http://codebetter.com/patricksmac", "id": "http://codebetter.com/patricksmacchia/?p=363", "categories": [], "metadata": {"guid": "63f1c0eb-56d3-489f-a70a-456887d3c99c", "likes": 0, "is_published": false}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/08/masterclass-live-animation-binding.html", "title": "MasterClass - Live Animation Binding", "datetime": "2011-08-04T12:33:34.076000", "html": "A few folk have mailed to ask when the MasterClass is being presented so I thought I'd do some blatant self promotion and spill the beans...... The MasterClasses are now online only, Autodesk figure they get a bigger audience this way and it stops me looking like an arse doing it live! (well, less of an arse anyway!) It should go live on TheArea under their Siggraph feed on Tuesday 9th. Here's the basic outline, although it got expanded slightly since this into using HIK as an intermediate object, and mapping to raw optical moCap data. Hope you find it useful!<br /><br /><i>\"This Master Class will outline a method of transferring character animations between any source data and a given animation rig using a binder template file. This method was originally designed to enable Motion Capture data to be mapped to our in-house rigging systems whilst allowing for easy manipulation, but quickly evolved into a retargeting system in its own right. In the most basic form it allows for MoCap fbx files to be dropped directly onto your animation rigs. However, expanding the technique allows you to transfer animations between characters even when their skeletal structures and proportions are completely different. Because it relies on a Binder File and isn't code based it gives you the flexibility to manage any skeleton structure, allowing you to add custom bind nodes between any character specific joint and it's relative Rig Controller. Finally because the bind is a preset file it makes it very easy to bulk process animations, casting CharacterA's animation library straight to CharacterB.\"</i><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/1407054789026932542-7910970030129955628?l=markj3d.blogspot.com\" width=\"1\" /></div>", "summary": "A few folk have mailed to ask when the MasterClass is being presented so I thought I'd do some blatant self promotion and spill the beans...... The MasterClasses are now online only, Autodesk figure they get a bigger audience this way and it stops me looking like an arse doing it live! (well, less o", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-7910970030129955628", "categories": [], "metadata": {"guid": "ebebe083-02e7-4f2b-a588-412d3cbfb61f", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/03/you-fed-up-and-deleted-script-editor-history/", "title": "So You F@%$\u2019ed Up and Deleted Script Editor History", "datetime": "2011-08-03T22:17:20", "html": "<!-- Start LikeButtonSetTop --><div style=\"clear: both; height: 2px; width: 100%;\"></div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"></a><a class=\"shareaholic-googleplusone\"></a></div><div style=\"clear: both; height: 2px; width: 100%;\"></div><!-- End LikeButtonSetTop --><p><a href=\"http://www.jonasavrin.com/wp-content/uploads/2010/08/maya2011_thumb.png\" rel=\"lightbox[2652]\"><img alt=\"maya2011_thumb\" class=\"alignleft size-full wp-image-165\" height=\"99\" src=\"http://www.jonasavrin.com/wp-content/uploads/2010/08/maya2011_thumb.png\" title=\"maya2011_thumb\" width=\"76\" /></a>What do you do when you screw up and delete all your history and input code in Maya script editor usually do to a right-click muscle memory FAIL?\u00a0 First of all, DON&#8217;T close Maya!\u00a0 Navigate to your prefs directory, depending on the system you&#8217;re using that is in different locations, and then open up the handy little mel file called &#8220;commandExecuter&#8221;, and that file name may have a hyphen and some numbers behind it depending on how many tabs you have going.\u00a0 Open the corresponding file based on the tab you mistakenly erased in notepad or favorite text editor and then copy the contents back into your script editor.</p>\n<p>This won&#8217;t get you everything back however, sad, I know, but if you can get back to where you were before the melt-down without too much hassle this way then that&#8217;s better than nothing.\u00a0 That&#8217;s why I like using external IDE&#8217;s for longer coding sessions and the script editor for little things that make my life easier in the particular scene I&#8217;m working on.</p>\n<div class=\"shr-publisher-2652\"></div><!-- Start LikeButtonSetBottom --><!-- End LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "What do you do when you screw up and delete all your history and input code in Maya script editor usually do to a right-click muscle memory FAIL?\u00a0 First of all, DON&#8217;T close Maya!\u00a0 Navigate to your prefs directory, depending on the system you&#8217;re using that is in different locations, and t", "id": "http://www.jonasavrin.com/?p=2652", "categories": [], "metadata": {"guid": "33e2880e-e03e-4ab5-944f-68392040d88a", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=733", "title": "The Open Source community can be mean", "datetime": "2011-08-03T01:12:45", "html": "<p>I&#8217;ve talked a bit about my problems with OSS as an outsider. \u00a0Martijn Faassen wrote a great post about his problems with it from the inside: <a href=\"http://faassen.n--tree.net/blog/view/weblog/2011/07/15/0\">How to Handle Ideas</a>. \u00a0It&#8217;s an informative, lucid post about improving the ways the open source community receives ideas and criticisms, written by an insider.</p>\n<p>Even outside of the open source community, it is useful to read and remember his advice and ideas, as they&#8217;re useful ways to handle incoming suggestions and criticisms for any internal project you work on.</p>", "summary": "I&#8217;ve talked a bit about my problems with OSS as an outsider. \u00a0Martijn Faassen wrote a great post about his problems with it from the inside: How to Handle Ideas. \u00a0It&#8217;s an informative, lucid post about improving the ways the open source community receives ideas and criticisms, written by ", "id": "http://www.robg3d.com/?p=733", "categories": [], "metadata": {"guid": "e46784be-0f63-483c-a122-e77abfb0539e", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8415253418", "title": "I forgot to post for a while...", "datetime": "2011-08-03T00:20:40", "html": "<p>I\u2019ve been MIA lately on the blog. \u00a0It\u2019s not that I haven\u2019t been writing, it\u2019s just I\u2019ve been preoccupied. \u00a0Things have been a little on the rough side lately. \u00a0Personal Life, work, outside projects, nothing has been going well. \u00a0I guess you could say I\u2019m in a slump. \u00a0On the bright side, I do have a bunch of posts building up. \u00a0Lately my posts have been longer, more in depth, and essentially more worth reading. (at least it seems) \u00a0</p>\n\n<p>I used to love just spraying text onto the page. \u00a0A free-form thinking, the\u00a0Freudian\u00a0way. \u00a0Sometimes it\u2019s good, I feel emotional posts need to be written that way, but IDK lately I\u2019ve just needed a break. \u00a0I\u2019m going to be posting some things here soon. \u00a0And hopefully it will be before too long. \u00a0On a bright note, I have been working out a lot! \u00a0Finally back in the gym. \u00a0My knee is giving me some trouble, but I\u2019ve really been trying to stretch it out. \u00a0Look forward to some posts soon!</p>", "summary": "<p>I\u2019ve been MIA lately on the blog. \u00a0It\u2019s not that I haven\u2019t been writing, it\u2019s just I\u2019ve been preoccupied. \u00a0Things have been a little on the rough side lately. \u00a0Personal Life, work, outside projects, nothing has been going well. \u00a0I guess you could say I\u2019m in a slump. \u00a0On the bright side, I do have", "id": "http://shawnkirsch.tumblr.com/post/8415253418", "categories": [], "metadata": {"guid": "3f4b47cc-07fb-49d8-ab72-3c2d23c406f5", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/08/02/bowling-city/", "title": "Bowling City", "datetime": "2011-08-02T07:44:58", "html": "<p>In 2007 we were given the opportunity to work on a commercial for a bowling playhouse. This was for us the first time\u00a0 where we was responsible for all the aspect of a production that was to be screened in theater.</p>\n<p>This movie is about a lizard and chameleon that share a common hobby: <em>bowling</em>.</p>\n<p>It was inevitably\u00a0 influenced by the epic rivalry of &#8220;The Dude&#8221; and Jesus in Cohen&#8217;s &#8220;Big lebowsky&#8221; and the craziness and hilarious behavior of the maruko sister in the manhwa &#8220;bowling king&#8221;.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-01.jpg\"><br />\n</a><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-01.jpg\"><img alt=\"\" class=\"size-full wp-image-725 aligncenter\" height=\"347\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-01.jpg?w=450&#038;h=347\" title=\"\" width=\"450\" /></a></p>\n<p>Films credit:</p>\n<p><em>( duration: 1 minute and 40 seconds</em> )<br />\nJL Patriat:</p>\n<ul>\n<li>Film and artistic director</li>\n<li>scenario and character design</li>\n</ul>\n<p>e. Lepinay:</p>\n<ul>\n<li>texturing</li>\n<li>lightning</li>\n<li>rendering</li>\n<li>compositing</li>\n<li>environment modeling</li>\n</ul>\n<p>V. Nathan:</p>\n<ul>\n<li>character animation</li>\n<li>rigid body simulation</li>\n<li>hair grooming and simulation</li>\n<li>beer and smoke VFX</li>\n</ul>\n<p>C. Bazillou:</p>\n<ul>\n<li>character and expression modeling</li>\n<li>character setup</li>\n<li>skinning</li>\n<li>cloth and soft body simulation</li>\n<li>tools and animation utility</li>\n</ul>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-02.jpg\"><img alt=\"\" class=\"aligncenter\" height=\"365\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-02.jpg?w=450&#038;h=365\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>At the beginning Leon savors a glass of beer.</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-03.jpg\"><img alt=\"\" class=\"size-full wp-image-727 aligncenter\" height=\"365\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-03.jpg?w=450&#038;h=365\" title=\"\" width=\"450\" /></a></p>\n<p><em>The camera has stepped back to reveal Zazar : the local star of the club, surrounded by an exuberant group of female supporter.</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-04.jpg\"><img alt=\"\" class=\"size-full wp-image-728 aligncenter\" height=\"356\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-04.jpg?w=450&#038;h=356\" title=\"\" width=\"450\" /></a></p>\n<p><em>Before his turn in the game zazar , full of himself, checks the audience attention.</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-05.jpg\"><img alt=\"\" class=\"aligncenter\" height=\"362\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-05.jpg?w=450&#038;h=362\" title=\"\" width=\"450\" /></a></p>\n<p><em>Most groupie are in awe, one is praying for his success, another has loose consciousness from zazar&#8217;s charming smile.</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-06.jpg\"><img alt=\"\" class=\"size-full wp-image-730 aligncenter\" height=\"360\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-06.jpg?w=450&#038;h=360\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>Striiiiiiiiiiiike !!!!!!!!!!!!!</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-07.jpg\"><img alt=\"\" class=\"size-full wp-image-731 aligncenter\" height=\"359\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-07.jpg?w=450&#038;h=359\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>Leon waits patiently while everyone in his vicinity has loose their heads.</em></p>\n<p>With a new audience , and a more comfortable budget, it was for my friend at Hanuman and me the most ambitious project we have to deal with in character animation:</p>\n<p>In several shot there was up to twelve keyframed characters on screen, various simulation , rendered in realistic manner.</p>\n<p>This was on good experience and we learn lots of thing in the process ,as much as\u00a0 we made mistakes .</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/724/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/724/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/724/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/724/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/724/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/724/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/724/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/724/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/724/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/724/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/724/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/724/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/724/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/724/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=724&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "In 2007 we were given the opportunity to work on a commercial for a bowling playhouse. This was for us the first time\u00a0 where we was responsible for all the aspect of a production that was to be screened in theater. This movie is about a lizard and chameleon that share a common hobby: bowling. [...]<", "id": "http://circecharacterworks.wordpress.com/?p=724", "categories": [], "metadata": {"guid": "f518a810-6068-4d6f-806e-734a9eee2eb7", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=729", "title": "You will create a brave new world", "datetime": "2011-08-02T00:50:07", "html": "<p>Ian Cooper, one of the contributing authors at CodeBetter.com, recently wrote an article called &#8216;<a href=\"http://codebetter.com/iancooper/2011/07/15/why-crud-might-be-what-they-want-but-may-not-be-what-they-need/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+CodeBetter+%28CodeBetter.Com%29\">Why CRUD might be what they want, but may not be what they need</a>&#8216;. \u00a0While this applies mostly to the world of applications, I&#8217;ve been saying the same things about tools and pipeline for a while now. \u00a0The basic argument goes, the people designing/requesting our apps have a history and understanding of the process, and when we build new systems, they ask for optimized versions of that same process. \u00a0But there are very likely ways we can rethink that legacy process in the context of much better technology and software, and change the experience profoundly for the better. \u00a0It is our job, as the people who sit between technology and content development, to do that.</p>\n<p>And the good news, as always, is that if we fuck up, no one dies.</p>\n<p>Go ahead and read the article and see what I mean.</p>", "summary": "Ian Cooper, one of the contributing authors at CodeBetter.com, recently wrote an article called &#8216;Why CRUD might be what they want, but may not be what they need&#8216;. \u00a0While this applies mostly to the world of applications, I&#8217;ve been saying the same things about tools and pipeline for ", "id": "http://www.robg3d.com/?p=729", "categories": [], "metadata": {"guid": "42c44e91-e0ec-4d59-97e1-d3d6e3a545ad", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://rubenhenares.404fs.com/zbrush-sketch-01/", "title": "ZBrush Sketch", "datetime": "2011-08-01T14:02:36", "html": "<p>Having fun with ZBrush and trying to get some skills back during the downtime between projects.</p>\n<p><a href=\"http://rubenhenares.404fs.com/wp-content/uploads/2011/08/zbrushsketch2.jpg\"><img alt=\"\" class=\"alignnone size-medium wp-image-225\" height=\"234\" src=\"http://rubenhenares.404fs.com/wp-content/uploads/2011/08/zbrushsketch2-300x234.jpg\" title=\"zbrushsketch2\" width=\"300\" /></a><br />\n<a href=\"http://rubenhenares.404fs.com/wp-content/uploads/2011/08/zbrushsketch3.jpg\"><img alt=\"\" class=\"alignnone size-medium wp-image-226\" height=\"232\" src=\"http://rubenhenares.404fs.com/wp-content/uploads/2011/08/zbrushsketch3-300x232.jpg\" title=\"zbrushsketch3\" width=\"300\" /></a></p>", "summary": "Having fun with ZBrush and trying to get some skills back during the downtime between projects.", "id": "http://rubenhenares.404fs.com/?p=224", "categories": [], "metadata": {"guid": "b512b2e2-6bd9-4760-9f0c-5ab714854330", "likes": 0, "is_published": false}}]"
08-07 21:20 SocketClient INFO     Returning(as str): '[{"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/08/07/motion-capture-for-a-weather-forecast-billboard/", "title": "motion capture for a weather forecast billboard", "datetime": "2011-08-07T10:32:26", "html": "<p>In 2009 we were able to produce a follow up with the character Leon and zazar.</p>\\n<p>This time the target audience was television : a billboard aired before and after the weather forecast.</p>\\n<p></p>\\n<p>The main constraint with this kind of movie is its shortness : roughly 5\\u00a0 seconds worth of content, barely enough time to announce what comes next.</p>\\n<p>Our client,\\u00a0 owner of\\u00a0 bowling playhouse\\u00a0 housing a\\u00a0 restaurant\\u00a0 and dancing room , was open to all kind of idea : it was logical for us this time to picture 4 characters dancing on an extravagant dance floor . <em>( entirely different than the real one )</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/jennifer_tektonik.jpg\\"><img alt=\\"\\" height=\\"362\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/jennifer_tektonik.jpg?w=450&#038;h=362\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>Jennifer , the meanest and most detestable character dances on tektonik</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/leon_jazz.jpg\\"><img alt=\\"\\" height=\\"361\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/leon_jazz.jpg?w=450&#038;h=361\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>Leon executes an aerial classical jazz dance steps</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/julie_ragga.jpg\\"><img alt=\\"\\" height=\\"360\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/julie_ragga.jpg?w=450&#038;h=360\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>Julie breaks a sweat on a ragga tune.</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/zazar_pop_music.jpg\\"><img alt=\\"\\" height=\\"357\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/zazar_pop_music.jpg?w=450&#038;h=357\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>Zazar dances on pop_music</em></p>\\n<p>Films credit: <em>( 4 * 14 seconds movie )</em><br />\\nJL Patriat:<br />\\n- Film and artistic director<br />\\n- character design<br />\\n- shot supervision with dance performer</p>\\n<p>e. Lepinay:<br />\\n- texturing<br />\\n- lightning<br />\\n- rendering<br />\\n- compositing<br />\\n- environment modeling</p>\\n<p>C. Bazillou:<br />\\n- character and expression modeling<br />\\n- character setup<br />\\n- skinning<br />\\n- cloth and soft body simulation<br />\\n-motion capture:<br />\\n. data acquisition<br />\\n. cleaning<br />\\n. secondary animation<br />\\n. view dependent surface deformation correction</p>\\n<p>For this project where the character assets were already built the main cost was the animation part :</p>\\n<p>This was a personal project and we were free to explore other style of animation because the client doesn&#8217;t specifically ask for cartoon animation .</p>\\n<p>The use of motion capture was justified because with our limited resources<em> ( two 3d artists )</em> we didn&#8217;t feel comfortable to try and keyframe 1 minute worth of content in less than 10 days.</p>\\n<p>Our purpose was not to work faster or cheaper : we wanted to tweak the original performance of several dancer and in the end with the preliminary work involved it was actually slightly more expensive to use this technique .</p>\\n<p>Funnily enough , It was our first time working with actors : the previous project involving motion capture were simpler and we were doing the performance ourselves .</p>\\n<p>There were 4 type of dance :\\u00a0 I made my estimation based on 2 actors <em>( 1 for the female characters and\\u00a0 the other for the male characters )</em> and accordingly prepare 2 Velcro suit size .</p>\\n<br />  <a href=\\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/799/\\" /></a> <img alt=\\"\\" border=\\"0\\" height=\\"1\\" src=\\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=799&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\\" width=\\"1\\" />", "summary": "In 2009 we were able to produce a follow up with the character Leon and zazar. This time the target audience was television : a billboard aired before and after the weather forecast. The main constraint with this kind of movie is its shortness : roughly 5\\u00a0 seconds worth of content, barely enough tim", "id": "http://circecharacterworks.wordpress.com/?p=799", "categories": [], "metadata": {"guid": "5f61d34e-53ef-4fe4-8d7d-51a01c3f334a", "likes": 0, "is_published": false}}, {"author": "Dru Sellers", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/N33E3pgzB1c/", "title": "Thought Questions", "datetime": "2011-08-06T14:24:25", "html": "<p><em>After many weeks of travel I finally have some time to think again. Yay!</em></p>\\n<p>Today&#8217;s post was inspired by\\u00a0<a href=\\"http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html\\">http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html</a>.\\u00a0The post presents a link to another wonderful site called <a href=\\"http://thoughtquestions.com/\\">Thought Questions</a> which got me thinking about a programming spin on the same concept.</p>\\n<p>\\u00a0</p>\\n<p>What&#8217;s the difference between your coding today, and your coding 6 mths ago? If its improving, are you on the same trajectory? Or are you growing stagnant?</p>\\n<p>Can you be a good developer with no business knowledge? Is it business knowledge if its just a mathmatical formula?</p>\\n<p>What&#8217;s the biggest shift you have made in your programming since you started?</p>\\n<p>What was the last thing you did just for fun?</p>\\n<p>Who was the last person you helped on the internet? How did you help them?</p>\\n<p>Do you visualize code in your head? What does it look like? Does it have color? Shape?</p>\\n<p>\\u00a0</p>\\n<p>Anyways, happy saturday.</p>\\n<p>\\u00a0</p>\\n<p>-d</p>\\n<p>\\u00a0</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/N33E3pgzB1c\\" width=\\"1\\" />", "summary": "After many weeks of travel I finally have some time to think again. Yay! Today&#8217;s post was inspired by\\u00a0http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html.\\u00a0The post presents a link to another wonderful site called Thought Questions which got me thinking about a programming spin ", "id": "http://codebetter.com/drusellers/?p=148", "categories": [], "metadata": {"guid": "85bb9d97-af29-4fa1-ba96-2f601e37a641", "likes": 0, "is_published": false}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/08/designing-animation-for-speed.html", "title": "Designing Animation For Speed", "datetime": "2011-08-06T12:35:28.806000", "html": "This was cross-posted to <a href=\\"http://altdevblogaday.com/2011/08/06/designing-animation-for-speed/\\">AltDevBlogADay</a>. Look for a powerlifting corollary sometime soon!<br /><br /><br /><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Everything I ever needed to know about animation, I learned from watching Looney Tunes.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Seriously.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Sure, I went to school. I learned HOW to animate there and from other sources, but none of that taught me what I needed to know about animation as much as watching Bugs outsmart Elmer, Daffy play the second banana, Foghorn Leghorn fumble about, or Wile E. Coyote fall to yet another demise.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">Gravity Doesn\\u2019t Exist Until You Look Down</h3><div><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote_fallstart1.jpg\\"><img alt=\\"\\" class=\\"alignleft size-full wp-image-13545\\" height=\\"320\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote_fallstart1.jpg\\" style=\\"border-bottom-width: 0px; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; float: left;\\" width=\\"240\\" /></a>Bugs is the popular one. Daffy is the memorable one (Stuuuuuuupor Duck!). Foghorn, well, I say\\u2026&nbsp; I say, he was fun to watch with his contraptions. However, Wile E. Coyote is the one that sticks out the most to me.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Not only is it entertaining to watch poor Wile E. try and try again to catch the Roadrunner (with a seemingly unlimited&nbsp;credit line with the Acme corporation), it is also a very good study of how developing a formula can allow an animator to work efficiently while keeping a high quality bar.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Take the timing of Wile E.\'s fall, for instance. Did you know that every time he falls, it happens in the same exact number of frames? He tends to walk/fly/float/propel himself over a ledge, and doesn\'t fall until he looks down (for Wile, gravity doesn\'t exist until he does this). He then falls over N frames until you see a puff of smoke and hear a distant \\"splat.\\"</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">This comedic timing (combined with a happy accident regarding the audio level of his \\"splat\\") allowed the Looney Tunes animators to build up to this punchline without worrying if the punchline itself would feel right. It also ensured that re-takes weren\'t going to be needed- once that formula was set, it was followed.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">Set Your Pace</h3><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">For game animation, I take the same approach, especially for transition animations. In fact, on our current project, we try to animate all transitions to occur on 6, 12, 18 or 24 frames. Each of these frame counts corresponds with the desired perceived pacing of the character\'s thought process. For example:</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">\\"Ready Now!\\" - 6 frames</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">\\"Get moving and STOP!\\" - 12 frames</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">\\"I gotta be ready&nbsp;<em>before&nbsp;</em>I get there\\"&nbsp;- 18 frames</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">\\"OK, I\'m gonna pick my spot and get ready when I\'m there.\\" - 24 frames</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">These frame numbers allowed us to&nbsp;build a visual language with these transitions. For example, the faster ones are more immediate and needed for faster gameplay responsiveness (say, for aiming and shooting). Having them all on a 6-frame count holds the player\'s expectation that if \\u201cI\'ve gotta shoot, I\'ll get there in .2 seconds.\\u201d It also allows us to later add interruptible follow-through for an extra 6 or 12 frames without that extra motion feeling out of place.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">In contrast, the 18/24 frame transitions typically denote the end of longer, deliberate movement- the player knows they are moving at a certain speed and when they have reached their destination, the transition will carry that speed to a stop. These extra frames allow us to sell the character\'s weight at that stop, which in turn creates a mental acceptance by the player that it took longer than the 6/12 frame motions.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">Fast Iteration</h3><div><br /></div><div class=\\"mceTemp\\" style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /><dl class=\\"wp-caption alignright\\" id=\\"attachment_13568\\" style=\\"background-color: #f3f3f3; border-bottom-color: rgb(221, 221, 221); border-bottom-left-radius: 3px 3px; border-bottom-right-radius: 3px 3px; border-bottom-style: solid; border-bottom-width: 1px; border-left-color: rgb(221, 221, 221); border-left-style: solid; border-left-width: 1px; border-right-color: rgb(221, 221, 221); border-right-style: solid; border-right-width: 1px; border-top-color: rgb(221, 221, 221); border-top-left-radius: 3px 3px; border-top-right-radius: 3px 3px; border-top-style: solid; border-top-width: 1px; float: right; margin-bottom: 10px; margin-left: 10px; margin-right: 10px; margin-top: 10px; padding-top: 4px; text-align: center; width: 213px;\\"><dt class=\\"wp-caption-dt\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/exposusresheet1.jpg\\"><img alt=\\"\\" class=\\"size-full wp-image-13568\\" height=\\"233\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/exposusresheet1.jpg\\" style=\\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\\" width=\\"203\\" /></a></dt><dd class=\\"wp-caption-dd\\" style=\\"font-size: 11px; line-height: 17px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 5px; padding-left: 4px; padding-right: 4px; padding-top: 0px;\\">Sweet, sweet consistency</dd></dl></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">The next benefit to the frame counts is that they are easily scalable from one to the other. Personally, I set poses every 3-6 frames. This lets me easily slide the keys around if I need to make timing adjustments after the animations are implemented. These adjustments can also be easily scriptable (for fast tests), so I can adjust the timing of 160 animations very quickly to see if the new length feels right before going ahead and hand-tweaking them.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Since I\'ve spaced out my keys in a uniform way, I can re-time the motions much more efficiently.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Lastly, these frame formulas give us efficient consistency. Since a uniform length exists, once we nail down the first key animation, we can modify it to create other motions in the same pool. For example, If we need to transition from a non-shooting pose to a shooting pose, we\\u2019ll work on a key motion that gets across the character\\u2019s intent and the player\\u2019s feel. Once design deems the look and feel to be good for gameplay, we can create every other transition in that pool much quicker.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">Happy Accidents</h3><div><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Much like the audio level on the splat of Wile E. Coyotes\'s fall (see the book Chuck Redux), coming up with the multiples of 6 formula was actually a happy accident- the Source Engine\'s default engine blend value is .2 seconds (6 frames!) In order to not disrupt existing gameplay, we started animating to that frame number. After implementing many transitions, it was apparent that not all of them could or should work on 6 frames. The easiest thing to do was scale the motion by 200% and work back from there. Lo and behold, 200% worked great, so we redid all of those motions with twice the frame count.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Since that pacing looked good,&nbsp;we extrapolated that 18 and 24 frames would be logical to try next. It worked, and now we have a (undocumented till now) visual language for our transitions.&nbsp;We\'ve since extended this philosophy to our movement system, and the animators who work on that pump out high quality motions like nobody\'s business.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">It\'s Still Creative!</h3><div><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Purist animators out there might be shocked that we take shortcuts in order to produce efficient, high-quality animation at a fast pace. The fact of the matter is Warner Brothers, and even Disney, did the&nbsp;same thing! Read Chuck Redux, or watch this:</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">The key is to not get so married to those formulas that we are unwilling to change them when they no longer work, or get stale. If that happens, we play with new formulas and do more timing tests until we get it right.&nbsp;In the end, the better we can nail down the punchline, the more time we can spend on the fun part of getting there.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote1.jpg\\"><img alt=\\"\\" class=\\"aligncenter size-full wp-image-13547\\" height=\\"320\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote1.jpg\\" style=\\"border-bottom-width: 0px; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: block; margin-left: auto; margin-right: auto;\\" width=\\"400\\" /></a></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\"><br /></h3><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">Feedback!</h3><div><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">I\'d love to hear from other animators and designers what their processes for this are, as well! So speak up, tell your friends to read this and rip me to shreds, tell me how awesome I am or somewhere in between. I\'m always looking for different techniques and opinions!</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/4248341596629159263-38124459084849704?l=strongmanimator.blogspot.com\\" width=\\"1\\" /></div>", "summary": "This was cross-posted to <a href=\\"http://altdevblogaday.com/2011/08/06/designing-animation-for-speed/\\">AltDevBlogADay</a>. Look for a powerlifting corollary sometime soon!<br /><br /><br /><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-h", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-38124459084849704", "categories": [], "metadata": {"guid": "fe7a6cdc-278b-4844-9482-1883e59c5e3d", "likes": 0, "is_published": false}}, {"author": "Glenn Block", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/PRCEBXQBkPc/", "title": "Integrating MVC routes and Web API routes", "datetime": "2011-08-05T05:55:30", "html": "<p>&nbsp;</p>\\n<p>Several folks have been complaining for a while about Action Links not being properly generated when MVC routes are mixed with Service Routes in the same site.\\n<p>It turns out there is a solution&#8230;..don&#8217;t use ServiceRoute <img alt=\\":-)\\" class=\\"wp-smiley\\" src=\\"http://codebetter.com/glennblock/wp-includes/images/smilies/icon_smile.gif\\" />  Instead, create a derived route below and use it. [Kudos to <a href=\\"http://www.haacked.com\\">Phil Haack</a> and <a href=\\"http://blogs.msdn.com/b/clemensv/\\">Clemens Vasters</a> for this]\\n<pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\"><span style=\\"color: #0000ff;\\">public</span> <span style=\\"color: #0000ff;\\">class</span> WebApiRoute : ServiceRoute\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">{\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     <span style=\\"color: #0000ff;\\">public</span> AppServiceRoute(<span style=\\"color: #0000ff;\\">string</span> routePrefix,\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">       ServiceHostFactoryBase serviceHostFactory, Type serviceType)\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     : <span style=\\"color: #0000ff;\\">base</span>(routePrefix, serviceHostFactory, serviceType)\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     {\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     }\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     <span style=\\"color: #0000ff;\\">public</span> <span style=\\"color: #0000ff;\\">override</span> VirtualPathData GetVirtualPath(\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">       RequestContext requestContext, RouteValueDictionary values)\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     {\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">       <span style=\\"color: #0000ff;\\">return</span> <span style=\\"color: #0000ff;\\">null</span>;\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     }\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">}\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\"></pre>\\n</pre>\\n<p>The link gen functionality uses the GetVirtualPath method to generate links. If you set it to null you are opting web api routes out of link gen and everything should work. </p>\\n<p>Now to register your routes using this model, don&#8217;t use MapServiceRoute. </p>\\n<p>Instead, in add to your route table manually this way:\\n<pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">var config = <span style=\\"color: #0000ff;\\">new</span> HttpHostConfiguration() <span style=\\"color: #808080;\\">///create your config object</span>\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">var factory = <span style=\\"color: #0000ff;\\">new</span> HttpConfigurableServiceHostFactory(config);\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">routes.Add(<span style=\\"color: #0000ff;\\">new</span> WebApiRoute(\\"<span style=\\"color: #8b0000;\\">Foo</span>\\", factory, <span style=\\"color: #0000ff;\\">typeof</span>(Foo)));\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\"></pre>\\n</pre>\\n<p>It&#8217;s a little bit more code, but not too much and hey, it fixes the problem. This will be fixed in the next drop, which YES, we are working on.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/PRCEBXQBkPc\\" width=\\"1\\" />", "summary": "&#160; Several folks have been complaining for a while about Action Links not being properly generated when MVC routes are mixed with Service Routes in the same site. It turns out there is a solution&#8230;..don&#8217;t use ServiceRoute Instead, create a&#160;&#8230; <a href=\\"http://codebetter.com/g", "id": "http://codebetter.com/glennblock/2011/08/05/integrating-mvc-routes-and-web-api-routes-2/", "categories": [], "metadata": {"guid": "5986afe5-245b-48e1-8517-a3b717433432", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8501055529", "title": "a cool photo I found from when I moved home. \\u00a0I was doing a lot...", "datetime": "2011-08-05T00:04:07", "html": "<img src=\\"http://30.media.tumblr.com/tumblr_lpfsmwBIHp1qgg0uyo1_500.jpg\\" /><br /><br /><p>a cool photo I found from when I moved home. \\u00a0I was doing a lot of art back then!</p>", "summary": "<img src=\\"http://30.media.tumblr.com/tumblr_lpfsmwBIHp1qgg0uyo1_500.jpg\\" /><br /><br /><p>a cool photo I found from when I moved home. \\u00a0I was doing a lot of art back then!</p>", "id": "http://shawnkirsch.tumblr.com/post/8501055529", "categories": [], "metadata": {"guid": "e6c99f00-b581-442d-b585-0fa452166874", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8500670372", "title": "My Old Car\\u2026Been looking for this picture for a...", "datetime": "2011-08-04T23:53:43", "html": "<img src=\\"http://29.media.tumblr.com/tumblr_lpfs5kPdp31qgg0uyo1_500.jpg\\" /><br /><br /><p>My Old Car\\u2026Been looking for this picture for a while\\u2026</p>", "summary": "<img src=\\"http://29.media.tumblr.com/tumblr_lpfs5kPdp31qgg0uyo1_500.jpg\\" /><br /><br /><p>My Old Car\\u2026Been looking for this picture for a while\\u2026</p>", "id": "http://shawnkirsch.tumblr.com/post/8500670372", "categories": [], "metadata": {"guid": "56c29b89-28ad-42f8-83f8-497f2a4daadc", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=737", "title": "Bored People Quit (I did!)", "datetime": "2011-08-04T15:20:16", "html": "<p>If you read one long blog article this year, make it this one: Rands in Repose&#8217;s <a href=\\"http://www.randsinrepose.com/archives/2011/07/12/bored_people_quit.html\\">Bored People Quit</a>. \\u00a0It is one of the most important blog posts I&#8217;ve read in a long time, and right on the money.</p>\\n<p>If you&#8217;ve ever worked a shitty professional job (especially programming), and you know you have, you&#8217;ll resonate with what&#8217;s written there. \\u00a0I told my last job for well over a year that I was bored and actually tried to quit a number of times, and gave exact action items for how to fix my boredom and what my grievances were. \\u00a0Not that any were ever addressed. \\u00a0And in a place like that, they couldn&#8217;t realistically be addressed, with so much riding on such an expensive project- they couldn&#8217;t give a shit about almost any individual worker or what I perceive as the long term health of the studio.</p>\\n<p>Anyway, go read it, and pass it on to your managers!</p>", "summary": "If you read one long blog article this year, make it this one: Rands in Repose&#8217;s Bored People Quit. \\u00a0It is one of the most important blog posts I&#8217;ve read in a long time, and right on the money. If you&#8217;ve ever worked a shitty professional job (especially programming), and you know y", "id": "http://www.robg3d.com/?p=737", "categories": [], "metadata": {"guid": "907acc92-7ccf-4761-9e08-97b9dfe61897", "likes": 0, "is_published": false}}, {"author": "Patrick Smacchia", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/tUxnZk4ANcM/", "title": "A bit more details on compiler Roslyn plans\\u2026", "datetime": "2011-08-04T13:42:52", "html": "<p>Have a look at this Microsoft Research session entitled <a href=\\"http://research.microsoft.com/apps/video/default.aspx?id=152281\\" target=\\"_blank\\">\\u201cRefactoring with Roslyn Circus Comes to Town,\\u201d</a> made on July 19th. It is partly about Roslyn and also about code refactoring in general. Very interesting one &#8230; and pleasant to watch!</p>\\n<p>Mary Jo Foley reported her thoughts on it <a href=\\"http://www.zdnet.com/blog/microsoft/microsoft-moves-forward-with-roslyn-compiler-as-a-service-project/10071\\" target=\\"_blank\\">in a recent blog post</a> as well. It seems Roslyn RTM won&#8217;t meet the VS 2012 schedule, but we should have some bits to play around with, hopefully within the next months.</p>\\n<p>I notice that the kings of refactoring in the .NET scene, the R# guys, are not there. Especially taking account that this morning I&#8217;ve done some heavy large scale refactoring with R# that saved my day, and free me some time to watch this session.</p>\\n<p>Almost a decade of development with .NET and still excited about what&#8217;s next &#8230; I like it!</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/tUxnZk4ANcM\\" width=\\"1\\" />", "summary": "Have a look at this Microsoft Research session entitled \\u201cRefactoring with Roslyn Circus Comes to Town,\\u201d made on July 19th. It is partly about Roslyn and also about code refactoring in general. Very interesting one &#8230; and pleasant to watch!&#160;&#8230; <a href=\\"http://codebetter.com/patricksmac", "id": "http://codebetter.com/patricksmacchia/?p=363", "categories": [], "metadata": {"guid": "63f1c0eb-56d3-489f-a70a-456887d3c99c", "likes": 0, "is_published": false}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/08/masterclass-live-animation-binding.html", "title": "MasterClass - Live Animation Binding", "datetime": "2011-08-04T12:33:34.076000", "html": "A few folk have mailed to ask when the MasterClass is being presented so I thought I\'d do some blatant self promotion and spill the beans...... The MasterClasses are now online only, Autodesk figure they get a bigger audience this way and it stops me looking like an arse doing it live! (well, less of an arse anyway!) It should go live on TheArea under their Siggraph feed on Tuesday 9th. Here\'s the basic outline, although it got expanded slightly since this into using HIK as an intermediate object, and mapping to raw optical moCap data. Hope you find it useful!<br /><br /><i>\\"This Master Class will outline a method of transferring character animations between any source data and a given animation rig using a binder template file. This method was originally designed to enable Motion Capture data to be mapped to our in-house rigging systems whilst allowing for easy manipulation, but quickly evolved into a retargeting system in its own right. In the most basic form it allows for MoCap fbx files to be dropped directly onto your animation rigs. However, expanding the technique allows you to transfer animations between characters even when their skeletal structures and proportions are completely different. Because it relies on a Binder File and isn\'t code based it gives you the flexibility to manage any skeleton structure, allowing you to add custom bind nodes between any character specific joint and it\'s relative Rig Controller. Finally because the bind is a preset file it makes it very easy to bulk process animations, casting CharacterA\'s animation library straight to CharacterB.\\"</i><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/1407054789026932542-7910970030129955628?l=markj3d.blogspot.com\\" width=\\"1\\" /></div>", "summary": "A few folk have mailed to ask when the MasterClass is being presented so I thought I\'d do some blatant self promotion and spill the beans...... The MasterClasses are now online only, Autodesk figure they get a bigger audience this way and it stops me looking like an arse doing it live! (well, less o", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-7910970030129955628", "categories": [], "metadata": {"guid": "ebebe083-02e7-4f2b-a588-412d3cbfb61f", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/03/you-fed-up-and-deleted-script-editor-history/", "title": "So You F@%$\\u2019ed Up and Deleted Script Editor History", "datetime": "2011-08-03T22:17:20", "html": "<!-- Start LikeButtonSetTop --><div style=\\"clear: both; height: 2px; width: 100%;\\"></div><div class=\\"shareaholic-like-buttonset\\" style=\\"float: right; height: 30px;\\"><a class=\\"shareaholic-fblike\\"></a><a class=\\"shareaholic-googleplusone\\"></a></div><div style=\\"clear: both; height: 2px; width: 100%;\\"></div><!-- End LikeButtonSetTop --><p><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2010/08/maya2011_thumb.png\\" rel=\\"lightbox[2652]\\"><img alt=\\"maya2011_thumb\\" class=\\"alignleft size-full wp-image-165\\" height=\\"99\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2010/08/maya2011_thumb.png\\" title=\\"maya2011_thumb\\" width=\\"76\\" /></a>What do you do when you screw up and delete all your history and input code in Maya script editor usually do to a right-click muscle memory FAIL?\\u00a0 First of all, DON&#8217;T close Maya!\\u00a0 Navigate to your prefs directory, depending on the system you&#8217;re using that is in different locations, and then open up the handy little mel file called &#8220;commandExecuter&#8221;, and that file name may have a hyphen and some numbers behind it depending on how many tabs you have going.\\u00a0 Open the corresponding file based on the tab you mistakenly erased in notepad or favorite text editor and then copy the contents back into your script editor.</p>\\n<p>This won&#8217;t get you everything back however, sad, I know, but if you can get back to where you were before the melt-down without too much hassle this way then that&#8217;s better than nothing.\\u00a0 That&#8217;s why I like using external IDE&#8217;s for longer coding sessions and the script editor for little things that make my life easier in the particular scene I&#8217;m working on.</p>\\n<div class=\\"shr-publisher-2652\\"></div><!-- Start LikeButtonSetBottom --><!-- End LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "What do you do when you screw up and delete all your history and input code in Maya script editor usually do to a right-click muscle memory FAIL?\\u00a0 First of all, DON&#8217;T close Maya!\\u00a0 Navigate to your prefs directory, depending on the system you&#8217;re using that is in different locations, and t", "id": "http://www.jonasavrin.com/?p=2652", "categories": [], "metadata": {"guid": "33e2880e-e03e-4ab5-944f-68392040d88a", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=733", "title": "The Open Source community can be mean", "datetime": "2011-08-03T01:12:45", "html": "<p>I&#8217;ve talked a bit about my problems with OSS as an outsider. \\u00a0Martijn Faassen wrote a great post about his problems with it from the inside: <a href=\\"http://faassen.n--tree.net/blog/view/weblog/2011/07/15/0\\">How to Handle Ideas</a>. \\u00a0It&#8217;s an informative, lucid post about improving the ways the open source community receives ideas and criticisms, written by an insider.</p>\\n<p>Even outside of the open source community, it is useful to read and remember his advice and ideas, as they&#8217;re useful ways to handle incoming suggestions and criticisms for any internal project you work on.</p>", "summary": "I&#8217;ve talked a bit about my problems with OSS as an outsider. \\u00a0Martijn Faassen wrote a great post about his problems with it from the inside: How to Handle Ideas. \\u00a0It&#8217;s an informative, lucid post about improving the ways the open source community receives ideas and criticisms, written by ", "id": "http://www.robg3d.com/?p=733", "categories": [], "metadata": {"guid": "e46784be-0f63-483c-a122-e77abfb0539e", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8415253418", "title": "I forgot to post for a while...", "datetime": "2011-08-03T00:20:40", "html": "<p>I\\u2019ve been MIA lately on the blog. \\u00a0It\\u2019s not that I haven\\u2019t been writing, it\\u2019s just I\\u2019ve been preoccupied. \\u00a0Things have been a little on the rough side lately. \\u00a0Personal Life, work, outside projects, nothing has been going well. \\u00a0I guess you could say I\\u2019m in a slump. \\u00a0On the bright side, I do have a bunch of posts building up. \\u00a0Lately my posts have been longer, more in depth, and essentially more worth reading. (at least it seems) \\u00a0</p>\\n\\n<p>I used to love just spraying text onto the page. \\u00a0A free-form thinking, the\\u00a0Freudian\\u00a0way. \\u00a0Sometimes it\\u2019s good, I feel emotional posts need to be written that way, but IDK lately I\\u2019ve just needed a break. \\u00a0I\\u2019m going to be posting some things here soon. \\u00a0And hopefully it will be before too long. \\u00a0On a bright note, I have been working out a lot! \\u00a0Finally back in the gym. \\u00a0My knee is giving me some trouble, but I\\u2019ve really been trying to stretch it out. \\u00a0Look forward to some posts soon!</p>", "summary": "<p>I\\u2019ve been MIA lately on the blog. \\u00a0It\\u2019s not that I haven\\u2019t been writing, it\\u2019s just I\\u2019ve been preoccupied. \\u00a0Things have been a little on the rough side lately. \\u00a0Personal Life, work, outside projects, nothing has been going well. \\u00a0I guess you could say I\\u2019m in a slump. \\u00a0On the bright side, I do have", "id": "http://shawnkirsch.tumblr.com/post/8415253418", "categories": [], "metadata": {"guid": "3f4b47cc-07fb-49d8-ab72-3c2d23c406f5", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/08/02/bowling-city/", "title": "Bowling City", "datetime": "2011-08-02T07:44:58", "html": "<p>In 2007 we were given the opportunity to work on a commercial for a bowling playhouse. This was for us the first time\\u00a0 where we was responsible for all the aspect of a production that was to be screened in theater.</p>\\n<p>This movie is about a lizard and chameleon that share a common hobby: <em>bowling</em>.</p>\\n<p>It was inevitably\\u00a0 influenced by the epic rivalry of &#8220;The Dude&#8221; and Jesus in Cohen&#8217;s &#8220;Big lebowsky&#8221; and the craziness and hilarious behavior of the maruko sister in the manhwa &#8220;bowling king&#8221;.</p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-01.jpg\\"><br />\\n</a><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-01.jpg\\"><img alt=\\"\\" class=\\"size-full wp-image-725 aligncenter\\" height=\\"347\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-01.jpg?w=450&#038;h=347\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p>Films credit:</p>\\n<p><em>( duration: 1 minute and 40 seconds</em> )<br />\\nJL Patriat:</p>\\n<ul>\\n<li>Film and artistic director</li>\\n<li>scenario and character design</li>\\n</ul>\\n<p>e. Lepinay:</p>\\n<ul>\\n<li>texturing</li>\\n<li>lightning</li>\\n<li>rendering</li>\\n<li>compositing</li>\\n<li>environment modeling</li>\\n</ul>\\n<p>V. Nathan:</p>\\n<ul>\\n<li>character animation</li>\\n<li>rigid body simulation</li>\\n<li>hair grooming and simulation</li>\\n<li>beer and smoke VFX</li>\\n</ul>\\n<p>C. Bazillou:</p>\\n<ul>\\n<li>character and expression modeling</li>\\n<li>character setup</li>\\n<li>skinning</li>\\n<li>cloth and soft body simulation</li>\\n<li>tools and animation utility</li>\\n</ul>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-02.jpg\\"><img alt=\\"\\" class=\\"aligncenter\\" height=\\"365\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-02.jpg?w=450&#038;h=365\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>At the beginning Leon savors a glass of beer.</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-03.jpg\\"><img alt=\\"\\" class=\\"size-full wp-image-727 aligncenter\\" height=\\"365\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-03.jpg?w=450&#038;h=365\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p><em>The camera has stepped back to reveal Zazar : the local star of the club, surrounded by an exuberant group of female supporter.</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-04.jpg\\"><img alt=\\"\\" class=\\"size-full wp-image-728 aligncenter\\" height=\\"356\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-04.jpg?w=450&#038;h=356\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p><em>Before his turn in the game zazar , full of himself, checks the audience attention.</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-05.jpg\\"><img alt=\\"\\" class=\\"aligncenter\\" height=\\"362\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-05.jpg?w=450&#038;h=362\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p><em>Most groupie are in awe, one is praying for his success, another has loose consciousness from zazar&#8217;s charming smile.</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-06.jpg\\"><img alt=\\"\\" class=\\"size-full wp-image-730 aligncenter\\" height=\\"360\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-06.jpg?w=450&#038;h=360\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>Striiiiiiiiiiiike !!!!!!!!!!!!!</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-07.jpg\\"><img alt=\\"\\" class=\\"size-full wp-image-731 aligncenter\\" height=\\"359\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/bowlingfilm-07.jpg?w=450&#038;h=359\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>Leon waits patiently while everyone in his vicinity has loose their heads.</em></p>\\n<p>With a new audience , and a more comfortable budget, it was for my friend at Hanuman and me the most ambitious project we have to deal with in character animation:</p>\\n<p>In several shot there was up to twelve keyframed characters on screen, various simulation , rendered in realistic manner.</p>\\n<p>This was on good experience and we learn lots of thing in the process ,as much as\\u00a0 we made mistakes .</p>\\n<br />  <a href=\\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/724/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/724/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/724/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/724/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/724/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/724/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/724/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/724/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/724/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/724/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/724/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/724/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/724/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/724/\\" /></a> <img alt=\\"\\" border=\\"0\\" height=\\"1\\" src=\\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=724&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\\" width=\\"1\\" />", "summary": "In 2007 we were given the opportunity to work on a commercial for a bowling playhouse. This was for us the first time\\u00a0 where we was responsible for all the aspect of a production that was to be screened in theater. This movie is about a lizard and chameleon that share a common hobby: bowling. [...]<", "id": "http://circecharacterworks.wordpress.com/?p=724", "categories": [], "metadata": {"guid": "f518a810-6068-4d6f-806e-734a9eee2eb7", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=729", "title": "You will create a brave new world", "datetime": "2011-08-02T00:50:07", "html": "<p>Ian Cooper, one of the contributing authors at CodeBetter.com, recently wrote an article called &#8216;<a href=\\"http://codebetter.com/iancooper/2011/07/15/why-crud-might-be-what-they-want-but-may-not-be-what-they-need/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+CodeBetter+%28CodeBetter.Com%29\\">Why CRUD might be what they want, but may not be what they need</a>&#8216;. \\u00a0While this applies mostly to the world of applications, I&#8217;ve been saying the same things about tools and pipeline for a while now. \\u00a0The basic argument goes, the people designing/requesting our apps have a history and understanding of the process, and when we build new systems, they ask for optimized versions of that same process. \\u00a0But there are very likely ways we can rethink that legacy process in the context of much better technology and software, and change the experience profoundly for the better. \\u00a0It is our job, as the people who sit between technology and content development, to do that.</p>\\n<p>And the good news, as always, is that if we fuck up, no one dies.</p>\\n<p>Go ahead and read the article and see what I mean.</p>", "summary": "Ian Cooper, one of the contributing authors at CodeBetter.com, recently wrote an article called &#8216;Why CRUD might be what they want, but may not be what they need&#8216;. \\u00a0While this applies mostly to the world of applications, I&#8217;ve been saying the same things about tools and pipeline for ", "id": "http://www.robg3d.com/?p=729", "categories": [], "metadata": {"guid": "42c44e91-e0ec-4d59-97e1-d3d6e3a545ad", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://rubenhenares.404fs.com/zbrush-sketch-01/", "title": "ZBrush Sketch", "datetime": "2011-08-01T14:02:36", "html": "<p>Having fun with ZBrush and trying to get some skills back during the downtime between projects.</p>\\n<p><a href=\\"http://rubenhenares.404fs.com/wp-content/uploads/2011/08/zbrushsketch2.jpg\\"><img alt=\\"\\" class=\\"alignnone size-medium wp-image-225\\" height=\\"234\\" src=\\"http://rubenhenares.404fs.com/wp-content/uploads/2011/08/zbrushsketch2-300x234.jpg\\" title=\\"zbrushsketch2\\" width=\\"300\\" /></a><br />\\n<a href=\\"http://rubenhenares.404fs.com/wp-content/uploads/2011/08/zbrushsketch3.jpg\\"><img alt=\\"\\" class=\\"alignnone size-medium wp-image-226\\" height=\\"232\\" src=\\"http://rubenhenares.404fs.com/wp-content/uploads/2011/08/zbrushsketch3-300x232.jpg\\" title=\\"zbrushsketch3\\" width=\\"300\\" /></a></p>", "summary": "Having fun with ZBrush and trying to get some skills back during the downtime between projects.", "id": "http://rubenhenares.404fs.com/?p=224", "categories": [], "metadata": {"guid": "b512b2e2-6bd9-4760-9f0c-5ab714854330", "likes": 0, "is_published": false}}]'
08-07 21:20 root         INFO     Handling CGI request.
08-07 21:20 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:20 SocketClient INFO     Sending to service: "["request_content_slice", [15, 15], {}]"
08-07 21:20 SocketClient INFO     Received from service: "[{"author": "Dave Ferner", "url": "http://www.supermono-studios.com/2011/08/forever-drive/", "title": "Forever Drive!!!!!!!!!!!", "datetime": "2011-08-01T04:51:20", "html": "<p>Right&#8230;.big update! We&#8217;ve been a bit quiet on the blog, because we&#8217;ve been really busy making an awesome game for you people. IT IS NEARLY FINISHED. Check it out.</p>\n<p>First thing to note: we changed the name, from Drive Forever to <b><i><u>Forever Drive</u></i></b>. Long (and boring) legal story. Here&#8217;s a logo.</p>\n<div class=\"wp-caption aligncenter\" id=\"attachment_812\" style=\"width: 469px;\"><a href=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_itLives.JPG\"><img alt=\"\" class=\"size-full wp-image-812\" height=\"300\" src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_itLives.JPG\" title=\"Forever Drive Alpha Version running on 3GS\" width=\"450\" /></a><p class=\"wp-caption-text\">You'll be seeing this screen a lot...</p></div>\n<p>So. For those who don&#8217;t know &#8211; Forever Drive is our new game, an arcadey futuristic racer, set in a massive online city. You can build your own tracks and share them with the world, or just zoom through the city in pimped-out, customizable cars. It&#8217;s sort of like Outrun-meets-SimCity, in the future, online. We honestly couldn&#8217;t be more excited!</p>\n<p>Right. So what does the game look like? How about something like&#8230;.this?</p>\n<div class=\"wp-caption aligncenter\" id=\"attachment_812\" style=\"width: 469px;\"><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_014.png\"><img alt=\"\" class=\"size-full wp-image-812\" height=\"300\" src=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_014.png\" title=\"Forever Drive screenshot\" width=\"450\" /></a><p class=\"wp-caption-text\">I AM DRIVING A CAR IN THE FUTURE!</p></div>\n<p>One thing to note. These are real, dude! Straight screenshots from the game &#8211; no photoshop trickery. These are all taken from the alpha version running on iPad 1 and iPhone 4, and it also runs on an iPhone 3GS really rather nicely thank you very much.</p>\n<div class=\"wp-caption aligncenter\" id=\"attachment_812\" style=\"width: 469px;\"><a href=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_013.png\"><img alt=\"\" class=\"size-full wp-image-812\" height=\"300\" src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_013.png\" title=\"Forever Drive screenshot\" width=\"450\" /></a><p class=\"wp-caption-text\">Neeeeeow! Shazam!</p></div>\n<p>Er &#8211; here&#8217;s some more!</p>\n<div class=\"wp-caption aligncenter\" id=\"attachment_812\" style=\"width: 469px;\"></p>\n<table>\n<tr>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_000.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_000t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_001.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_001t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_002.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_002t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n</tr>\n<tr>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_003.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_003t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_004.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_004t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_005.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_005t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n</tr>\n<tr>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_006.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_006t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_007.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_007t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_008.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_008t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n</tr>\n<tr>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_009.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_009t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_010.png\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_010t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n<td><a href=\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_011.jpg\" target=\"_blank\"><img src=\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_011t.jpg\" style=\"padding: 0px; margin-bottom: 2px;\" /><a></a></td>\n</tr>\n</table>\n<p><p class=\"wp-caption-text\">Forever Drive! In Action!</p></div>\n<p>As you can see, we&#8217;ve got kind of a lot done since last time you saw it. We&#8217;re now at the beta test stage. There&#8217;s still a little polishing and balancing to do, plus some bug fixes and sound design, but we&#8217;re very close. Pretty soon we should have some kind of video trailer out, and then you can <i>really</i> see it in action<br />\n <img alt=\":-)\" class=\"wp-smiley\" src=\"http://www.supermono-studios.com/wp-includes/images/smilies/icon_smile.gif\" /> </p>", "summary": "Right&#8230;.big update! We&#8217;ve been a bit quiet on the blog, because we&#8217;ve been really busy making an awesome game for you people. IT IS NEARLY FINISHED. Check it out. First thing to note: we changed the name, from Drive Forever to Forever Drive. Long (and boring) legal story. Here&#8217", "id": "http://www.supermono-studios.com/?p=918", "categories": [], "metadata": {"guid": "8b3b4775-679d-4f17-a133-4e6705072b46", "likes": 0, "is_published": false}}, {"author": "Kyle Baley", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/RqEWm4m1hf4/", "title": "Using AppEngine (and GWT) in a CI environment", "datetime": "2011-08-01T01:12:58", "html": "<p>These days, I don\u2019t much like being ahead of, behind, askance of, or otherwise deviated from the curve. It used to fit well with my \u201cblogging as a nervous tic\u201d phase of early 2008 when I would apparently post about every single compiler error I encountered and how it fit in with the grand scheme of things. But now, I prefer my technology much more Google-able. Does wonders for my productivity. In light of that, this post will fall into the category of \u201cinteresting to people searching for a solution to a specific problem.\u201d</p>\n<p>And so it was that I went and tried to set up a CI process for our brand spankin\u2019 new AppEngine app. (<em>Note to you fetishists: I didn\u2019t mean that \u201cspankin\u2019\u201d part literally. I don\u2019t pretend to understand the euphemisms I use; I just use \u2018em.</em>)</p>\n<p>It\u2019s essentially the same process we\u2019re using for our main <a href=\"http://getbookedin.com\">BookedIN</a> application, which also runs on AppEngine:</p>\n<p><strong><em>Compile and test configuration</em></strong><br />In this configuration, we just compile the app and run the unit tests.</p>\n<p><strong><em>Run stable UI tests<br /></em></strong>This configuration performs the following steps:</p>\n<ol>\n<li>GWT compile the application. I.e. do all the magic that converts Java into JavaScript</li>\n<li>Launch GWT hosted mode</li>\n<li>Launch the UI tests</li>\n</ol>\n<p>The first two steps are performed with Ant. The last is in Rake because the UI tests are done in Capybara. We launch hosted mode first because it\u2019s orders of magnitude faster to run UI tests against a local hosted mode version than it is against a deployed version, especially because we clear out the datastore before each scenario.</p>\n<p>Let me add some foreshadowing here. In order to launch hosted mode, we use the following Ant target:</p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">target</span> <span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"devmode\"</span> <span style=\"color: #ff0000;\">depends</span><span style=\"color: #0000ff;\">=\"\"</span> <span style=\"color: #ff0000;\">description</span><span style=\"color: #0000ff;\">=\"Run development mode\"</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:</span>     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">java</span> <span style=\"color: #ff0000;\">fork</span><span style=\"color: #0000ff;\">=\"true\"</span> <span style=\"color: #ff0000;\">classname</span><span style=\"color: #0000ff;\">=\"com.google.gwt.dev.DevMode\"</span> </pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:</span>         <span style=\"color: #ff0000;\">dir</span><span style=\"color: #0000ff;\">=\"${basedir}/war\"</span> <span style=\"color: #ff0000;\">spawn</span><span style=\"color: #0000ff;\">=\"true\"</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">classpath</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">pathelement</span> <span style=\"color: #ff0000;\">location</span><span style=\"color: #0000ff;\">=\"src\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">path</span> <span style=\"color: #ff0000;\">refid</span><span style=\"color: #0000ff;\">=\"project.class.path\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">path</span> <span style=\"color: #ff0000;\">refid</span><span style=\"color: #0000ff;\">=\"tools.class.path\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:</span>         <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">classpath</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">jvmarg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"-Xmx512M\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  10:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">jvmarg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"-javaagent:${appengine.folder}/lib/agent/appengine-agent.jar\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  11:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">jvmarg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"-Duser.dir=${basedir}/WAR\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  12:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">line</span><span style=\"color: #0000ff;\">=\"-war\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  13:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"${basedir}/war\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  14:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">line</span><span style=\"color: #0000ff;\">=\"-logLevel\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  15:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"INFO\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  16:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"-server\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  17:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"com.google.appengine.tools.development.gwt.AppEngineLauncher\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  18:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"net.bookedin.bam.BAM\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  19:</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">java</span><span style=\"color: #0000ff;\">&gt;</span>    </pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  20:</span> <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">target</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF--></div>\n</div>\n<p>Note that this is running dev mode using the AppEngine agent. So it\u2019s mimicking AppEngine behind the scenes\u2026somehow.</p>\n<p>The key to this target is where it says: spawn=\u201dtrue\u201d. This allows TeamCity to launch DevMode, then continue about its business. I.e. it doesn\u2019t wait until DevMode is finished.</p>\n<p><strong><em>Run flaky UI tests</em></strong><br />We have this one in here just because I got tired of seeing three or four failing tests every single time and 95% of the time, it was because of a PayPal sandbox issue. Having these \u201csometimes they work, sometimes they don\u2019t\u201d tests in a separate project means I can take the ones that fail in the previous configuration that much more seriously. All this configuration does is run UI tests that are tagged as @flaky.</p>\n<p><strong><em>Kill DevMode<br /></em></strong>We have this as a separate configuration because we want it to run always. If it\u2019s set up as a separate step in one of the previous configurations, TeamCity won\u2019t run it if any of the UI tests fail. As a separate configuration, it can be set to run after any build of \u201cRun flaky UI tests\u201d regardless of whether that build succeeded or failed.</p>\n<p><strong>The new app\u2026</strong></p>\n<p>\u2026is in AppEngine also but not in GWT (for reasons <a href=\"http://codebetter.com/kylebaley/2011/07/07/deciding-on-technology-it-depends-or-how-to-gwt-off/\">outlined elsewhere</a>). Which I thought meant this would be easier. Alack, this is not true.</p>\n<p>There is a corresponding \u201cdev mode\u201d in AppEngine. But it can\u2019t be launched and then forgotten like it can in GWT. Here\u2019s the target we originally had for it:</p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">target</span> <span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"runserver\"</span> <span style=\"color: #ff0000;\">description</span><span style=\"color: #0000ff;\">=\"Starts the development server.\"</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:</span>     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">java</span> <span style=\"color: #ff0000;\">classname</span><span style=\"color: #0000ff;\">=\"com.google.appengine.tools.development.DevAppServerMain\"</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:</span>           <span style=\"color: #ff0000;\">classpath</span><span style=\"color: #0000ff;\">=\"${appengine.tools.classpath}\"</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:</span>           <span style=\"color: #ff0000;\">fork</span><span style=\"color: #0000ff;\">=\"true\"</span> <span style=\"color: #ff0000;\">failonerror</span><span style=\"color: #0000ff;\">=\"true\"</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:</span>       <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">jvmarg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"-javaagent:${appengine.folder}/lib/agent/appengine-agent.jar\"</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:</span>       <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"--address=localhost\"</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:</span>       <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"--port=8080\"</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:</span>       <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"war\"</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">java</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  10:</span> <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">target</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF--></div>\n</div>\n<p>Same idea as the previous one but with a different class name. And unfortunately, you can\u2019t add spawn=\u201dtrue\u201d to this one. Something in DevAppServerMain doesn\u2019t like spawn=\u201dtrue\u201d and complains. So if you run this target, it sits there and waits until you forcibly stop the server, either with Ctrl-C or something like the following (in another command window):</p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">target</span> <span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"stopserver\"</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:</span>     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">property</span> <span style=\"color: #ff0000;\">environment</span><span style=\"color: #0000ff;\">=\"env\"</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:</span>     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">exec</span> <span style=\"color: #ff0000;\">executable</span><span style=\"color: #0000ff;\">=\"${env.JAVA_HOME}/bin/jps\"</span> <span style=\"color: #ff0000;\">output</span><span style=\"color: #0000ff;\">=\"pid.out.file\"</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:</span>     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">loadfile</span> <span style=\"color: #ff0000;\">srcfile</span><span style=\"color: #0000ff;\">=\"pid.out.file\"</span> <span style=\"color: #ff0000;\">property</span><span style=\"color: #0000ff;\">=\"pid.out\"</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:</span>       <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">filterchain</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">linecontains</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:</span>           <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">contains</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"DevMode\"</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:</span>         <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">linecontains</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:</span>         <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tokenfilter</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  10:</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">deletecharacters</span> <span style=\"color: #ff0000;\">chars</span><span style=\"color: #0000ff;\">=\"DevMode\"</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  11:</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">trim</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  12:</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">ignoreblank</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  13:</span>         <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">tokenfilter</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  14:</span>           <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">tailfilter</span> <span style=\"color: #ff0000;\">lines</span><span style=\"color: #0000ff;\">=\"1\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  15:</span>       <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">filterchain</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  16:</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">loadfile</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  17:</span>&nbsp; </pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  18:</span>     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">echo</span><span style=\"color: #0000ff;\">&gt;</span>Killing appengine java process with PID - \"${pid.out}\"<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">echo</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  19:</span>&nbsp; </pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  20:</span>       <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">exec</span> <span style=\"color: #ff0000;\">executable</span><span style=\"color: #0000ff;\">=\"taskkill\"</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  21:</span>           <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"/f\"</span> <span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  22:</span>           <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">=\"/fi\"</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  23:</span>           <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">arg</span> <span style=\"color: #ff0000;\">value</span><span style=\"color: #0000ff;\">='\"PID eq ${pid.out}\"'</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  24:</span>       <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">exec</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  25:</span>&nbsp; </pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  26:</span>     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">delete</span> <span style=\"color: #ff0000;\">file</span><span style=\"color: #0000ff;\">=\"pid.out.file\"</span><span style=\"color: #0000ff;\">/&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  27:</span> <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">target</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF--></div>\n</div>\n<p>Side note: Both of these were modified from a comment thread on an <a href=\"http://code.google.com/p/googleappengine/issues/detail?id=2093\">open issue with AppEngine</a>, whereby the default \u201crunserver\u201d command leaves a stray java.exe process running after you kill it.</p>\n<p>This method works pretty well for local development. But won\u2019t for a CI configuration that\u2019s relying on the \u201crunserver\u201d target to give up control so it can \u201crun UI tests\u201d.</p>\n<p>\u201cNo matter,\u201d says I, \u201csurely someone else has discovered just how much money and time is saved through the practices of UI testing and CI and is doing the same on an AppEngine application.\u201d</p>\n<p>If you just chuckled to yourself at my apparent na\u00efvet\u00e9, then same on you! I remain convinced that such a person does exist. He or she just doesn\u2019t like to brag is all\u2026</p>\n<p>A <a href=\"https://groups.google.com/forum/#!msg/google-appengine-java/FbFgHt-5mMY/q4Z78GjokQIJ\">post to the AppEngine Google Group</a> led to my eventual solution which came in the usual manner: it occurred to me during the process of typing out my question and/or one of my responses.</p>\n<p>The basis for the solution is: the process works for GWT DevMode with an AppEngine agent; so run the app in GWT DevMode with an AppEngine agent.</p>\n<p>Setting up a minimal GWT environment for the app was simple:</p>\n<ol>\n<li>Add gwt-dev.jar to my classpath (just for the purpose of testing; it\u2019s not included when we deploy the app)</li>\n<li>Create a stub .gwt.xml file</li>\n<li>Use the same Ant target above to launch the app in DevMode</li>\n</ol>\n<p>The stub .gwt.xml file is an almost empty XML file:</p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:</span> <span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #800000;\">xml</span> <span style=\"color: #ff0000;\">version</span><span style=\"color: #0000ff;\">=\"1.0\"</span> <span style=\"color: #ff0000;\">encoding</span><span style=\"color: #0000ff;\">=\"UTF-8\"</span>?<span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">module</span> <span style=\"color: #ff0000;\">rename-to</span><span style=\"color: #0000ff;\">=\"gunton\"</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:</span> <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">module</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<p><!--CRLF--></div>\n</div>\n<p>DevMode complains if this file is missing. The location is defined in the final argument of the &lt;java&gt; task in the Ant target.</p>\n<p>That\u2019s it. We can now launch our AppEngine app in a CI environment and it won\u2019t wait for the user to forcibly close dev mode. We can use a similar \u201ckill dev mode\u201d target to stop it when the UI tests are done. Our one remaining issue is that \u201ckill dev mode\u201d target. At any given time, we may have up to two DevModes running on the CI server: one for the GWT app and one for the AppEngine app. When we go to kill them, we can\u2019t distinguish one from the other\u2026</p>\n<p>\u2026which leads to one final footnote. We\u2019re using Windows. If you are using Linux on your CI server, much of this would be moot, as was suggested in the thread. From my understanding, you can more easily run a process in the background, in which case, you can go with the original \u201crunserver\u201d target. Which also makes it easier to figure out which process to kill when the UI tests have finished.</p>\n<p>Kyle the PID off.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/RqEWm4m1hf4\" width=\"1\" />", "summary": "These days, I don\u2019t much like being ahead of, behind, askance of, or otherwise deviated from the curve. It used to fit well with my \u201cblogging as a nervous tic\u201d phase of early 2008 when I would apparently post about&#160;&#8230; <a href=\"http://codebetter.com/kylebaley/2011/07/31/using-appengine-and-", "id": "http://codebetter.com/kylebaley/2011/07/31/using-appengine-and-gwt-in-a-ci-environment/", "categories": [], "metadata": {"guid": "443f498a-6273-4c6e-9bed-4e69fea11dd9", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=727", "title": "Yeah, we don\u2019t run in debug", "datetime": "2011-08-01T00:27:23", "html": "<p>Raymond Chen over at <a href=\"http://blogs.msdn.com/b/oldnewthing\">The Old New Thing</a>\u00a0had a few blog posts recently about debug/release build behavior. \u00a0I have never figured out why, but it seems an incredibly common standard practice to not run in debug because there are too many errors.</p>\n<p><a href=\"http://blogs.msdn.com/b/oldnewthing/archive/2011/07/18/10187351.aspx\">The danger of making the chk build stricter is that nobody will run it</a>: \u00a0Here, Raymond mentions how a MSFT team didn&#8217;t support running its app in debug mode because it broke into the debugger too much. \u00a0<a href=\"http://blogs.msdn.com/b/oldnewthing/archive/2011/07/29/10190885.aspx\">Hey, let&#8217;s report errors only when nothing is at stake!</a>: \u00a0Raymond talks about programming different behavior into debug and release builds- specifically, to crash in debug but swallow in release.</p>\n<p>Perhaps because I haven&#8217;t been around too long, I just cannot understand how so many otherwise smart people can have such, such bad ideas. \u00a0And how common this particular issue is.</p>\n<p>The issue was especially bad when I was forbidden to use exceptions. \u00a0I wanted to put in asserts since I wasn&#8217;t allowed to use exceptions, except that no one else used the debug build, so when people broke these asserts, they never knew. \u00a0And then when people&#8217;s changes broke some new (and pretty fundamental) asserts, I was told &#8216;oh, we don&#8217;t run in debug.&#8217;</p>\n<p>Wait, what? \u00a0You have absolutely no way to ensure valid state, or even keep track of state at all, other than in logs that make debugging far more difficult than it should be (because the problem that should have asserted or crashed will only manifest itself much later and it is unlikely you can determine where the state got messed up by just looking through the log, at least without adding a bunch more logging).</p>\n<p>Does your studio do this (not run in debug because there are too many exceptions or asserts)? \u00a0If so, you may need to smack sense into people. \u00a0This is a god awful and unforgivable practice when you are using any program- programs with persistent state can corrupt that persistent state, and programs without state can return unexpected results. \u00a0These sort of decisions are indicative of a myopic or insular culture that is in serious need of a rude exposure and shake up.</p>", "summary": "Raymond Chen over at The Old New Thing\u00a0had a few blog posts recently about debug/release build behavior. \u00a0I have never figured out why, but it seems an incredibly common standard practice to not run in debug because there are too many errors. The danger of making the chk build stricter is that nobod", "id": "http://www.robg3d.com/?p=727", "categories": [], "metadata": {"guid": "637cd37e-14a4-4edb-9c3b-337464e38c8f", "likes": 0, "is_published": false}}, {"author": "Rick", "url": "http://www.rsart.co.uk/2011/07/31/what-new-artists-need-in-a-c-v-and-portfolio/", "title": "What new artists need in a C.V. and portfolio", "datetime": "2011-07-31T21:30:04", "html": "<p>It&#8217;s summer 2011, and lots of students will be finishing their degrees and will be applying for jobs. Dare to be Digital is just around the corner, and I often meet artists there who are asking for advice on how to prepare their portfolio and CV, so I thought I should take this opportunity to pull together a few thoughts that might be useful.</p>\n<p><strong>The C.V./Resume</strong><br />\nThe biggest mistake I see on a C.V. or covering letter for an artist is the lack of a link to a portfolio. I&#8217;d guess that about 25% of junior artist applications that I&#8217;ve seen do not have a portfolio link in their C.V. or cover letter. Your portfolio link should be part of your contact details. </p>\n<ul>\n<li>No portfolio that people can easily see? This is pretty much an automatic rejection.</li>\n<li>Check your spelling and grammar! Now, as anyone who has read this site frequently, has worked with me or has talked to me on instant messanger, you&#8217;ll know that I&#8217;ve got no reason to talk, but I&#8217;d spell check my C.V. twice.</li>\n<li>With word-processing software you have to try pretty hard to get a spelling mistake into a document unless you are good at ignoring squiggly red lines, so there really is no excuse. Proof read your documents several times, and get someone else to read them if you can. </li>\n<li>Employers can tolerate a spelling mistake or two, but that&#8217;s a black mark. If you don&#8217;t have the ability to check and polish your CV and covering letter, are you going to be the same person on the job?</li>\n<li>You shouldn&#8217;t attach a photo to your C.V.</li>\n</ul>\n<p>So what should you actually have in your C.V., and how long should it be? </p>\n<p>You need your contact details, your employment history and your academic qualifications, any other relevant experience, and I&#8217;d say that the entire document should run to no more than 2 pages. As someone just starting you won&#8217;t have much in the way of employment history that is relevant to the video games industry, but I&#8217;d still list your previous employment. That being said, you don&#8217;t need to list all your duties &#8211; if you worked in a bar you don&#8217;t need to list that you sold drinks, collected glasses and washed glasses.</p>\n<p>Finally, a matter that is ofter overlooked is the visual style &#8211; keep it classic. Your C.V. should be dark text on a white background, with no more than a few fonts. Georgia and Ariel are good, Comic Sans is not.</p>\n<p><strong>The Portfolio</strong><br />\nHaving an online portfolio is vital for an artist, and there is no excuse not to have one. You portfolio websites sole purpose is to showcase you as an artist to hopefully get you a job, and as such there are a few very simple things to keep in mind.</p>\n<ul>\n<li>You don&#8217;t need to learn HTML or CSS, and you don&#8217;t need to learn a new authoring package just to create websites, just grab a free site from WordPress, Tumbler or Carbonmade and get images uploaded. </li>\n<li>Add some contact details, spellcheck everything and get some other people to have a look at it.\n</li>\n<li>I&#8217;d recommend 6-10 good pieces of work, with several images for each including texture flats and wireframe overlays so that a prospective employer can get an idea of your both your artistic and technical abilities.\n</li>\n<li>Every image should have your name and/or website address on it, but don&#8217;t obscure the image with huge watermarks.\n</li>\n<li>The content of your portfolio should reflect the kind of art that interests you since a wide mix of art can be confusing to a potential employer &#8211; &#8220;Does this person want to make World of Warcraft characters or GTA environments?&#8221;\n</li>\n</ul>\n<p>My next suggestion can be controversial &#8211; the content of your portfolio should not be your coursework from your university course (certainly not the earlier years), unless that work is really good. The work you produce at college is often homework, or a collaborative project and as such the goal of that work was to teach techniques. By all mean, use those techniques to create new work, or revisit older work, but the first pass of a dumpster you created in 2 days for a deadline generally isn&#8217;t going to be good for a portfolio &#8211; spend a week reworking and polishing that asset. Creating a dumpster in 2 days for a deadline is what you&#8217;d be doing when you get a job.</p>\n<p>A final point &#8211; lots of students measure themselves against other students rather than against artists who are working in the games industry, and this is a mistake. There are no shortage of assets available online on various game art forums for you to compare your work against and to learn from.</p>\n<p><strong>Images or a video &#8211; the importance of a showreel</strong><br />\nSome artists get caught up on producing a video for employers to download, this isn&#8217;t applicable to all artists.</p>\n<ul>\n<li>Character and Environment artists &#8211; you probably don&#8217;t need a reel. A good selection of images trumps a video.\n</li>\n<li>Animators &#8211; you need a video reel. Screengrabs are useless.\n</li>\n<li>Riggers &#8211; you need a reel, and ideally you&#8217;ll be providing some scripts for downloading.\n</li>\n</ul>\n<p><strong>Other useful skills</strong><br />\nKnowledge of a game engine pipeline &#8211; exporting models and getting them running in an actual game will give you a better understanding of the job.</p>\n<p>The are plenty of games engines out there, all with pros and cons, but I&#8217;d recommend the Unreal engine due to the amount of support for it. Go to <a href=\"http://udk.com/download\" target=\"_blank\" title=\"http://udk.com/download\">http://udk.com/download</a>, download the Unreal Development Kit and read some tutorials.</p>\n<p>Good luck!</p>", "summary": "It&#8217;s summer 2011, and lots of students will be finishing their degrees and will be applying for jobs. Dare to be Digital is just around the corner, and I often meet artists there who are asking for advice on how to prepare their portfolio and CV, so I thought I should take this opportunity to ", "id": "http://www.rsart.co.uk/?p=406", "categories": [], "metadata": {"guid": "9e160308-0d52-4477-a32f-6aa4dece2f59", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/30/protocol-to-build-a-reusable-deformation-template-i-model-presentation/", "title": "Protocol to build a reusable deformation template I: model presentation", "datetime": "2011-07-30T09:41:32", "html": "<p>Character and creature rigging is a broad discipline that encompass many fields :</p>\n<ul>\n<li>Structure setup for animation .</li>\n<li>Skin / envelope configuration.</li>\n<li>Surface, hair , cloth and rigid body simulation.</li>\n<li>Scripts / tools writing.</li>\n</ul>\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.</p>\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.</p>\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\u00a0 I just think that to handle creature /character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.</p>\n<p>The ability to assign an attribute\u00a0per element is a powerful\u00a0 concept that has yet to find a limitation,\u00a0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.</p>\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png\"><img alt=\"\" height=\"499\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png?w=450&#038;h=499\" title=\"packageMan: a free animation rig by  Javier Solsona\" width=\"450\" /></a></p>\n<p>This fully rigged character can be found on <a href=\"http://www.rigging101.com/freestuff.htm\"><em><span style=\"color: #ff6600;\">Javier Solsona </span></em></a>&#8216;s website and was modeled\u00a0by Bob White.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png\"><img alt=\"\" height=\"248\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png?w=450&#038;h=248\" title=\"original topology of this character \" width=\"450\" /></a></p>\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.</p>\n<p>This means:</p>\n<ul>\n<li>less computing power,</li>\n<li>less memory</li>\n<li>less functionality by default in maya</li>\n<li>non existing support program like topoGun or Zbrush .</li>\n</ul>\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\u00a0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.</p>\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .</p>\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .</p>\n<p>Some triangles on the contrary are well used and help reinforce\u00a0 the shape of this sculpture <em>( on the the belly and crotch for example ) .</em></p>\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.</p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png\"><img alt=\"\" height=\"574\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png?w=450&#038;h=574\" title=\"\" width=\"450\" /></a><br />\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\u00a0 I will the focus on shoulder deformation.</p>\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )</em> and the socks were left unchanged.<br />\n<a href=\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png\"><img alt=\"\" height=\"383\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png?w=450&#038;h=383\" title=\"\" width=\"450\" /></a></p>\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br />\n<a href=\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png\"><img alt=\"\" class=\"alignleft size-full wp-image-713\" height=\"545\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png?w=450&#038;h=545\" title=\"\" width=\"450\" /></a></p>\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/692/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/692/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/692/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin / envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts / tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f", "id": "http://circecharacterworks.wordpress.com/?p=692", "categories": ["circerigging"], "metadata": {"guid": "b187aab2-bf23-4bba-8cd2-36fca514ccba", "likes": 0, "is_published": true}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=724", "title": "The Importance of Vision, 3 of 3", "datetime": "2011-07-30T04:31:25", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0<a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a>\u00a0in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these problems are simply lucky. I suspect that such people are in a fragile situation, and taking away a key player or two would destroy the precarious dynamic that doesn&#8217;t birth these problems. If you are at a studio without these problems, ask yourself this: is your setup one that you can describe, export, advocate for, reproduce? How would you do it, without saying &#8220;just hire better people?&#8221; It is this &#8220;coincidence as a solution&#8221; that propogates the problems at less lucky studios.</p>\n<p>Let&#8217;s create real solutions.</p>\n<p>We need to create roles and departments that can provide studios with a cohesive tools vision. We need to fill these director-level roles with uniquely qualified individuals who are experienced in art and design, and are excellent programmers. We need to mature our views on tools as an industry, and start looking for concrete solutions for our endemic tools issues rather than relying on chance.<br />\nWe&#8217;re not going to find these people or do these things overnight. We need to, first, decide on this path as our goal. Not just you, but your studio&#8217;s management, and there&#8217;s no formula helpful formula I can give to convince them. Just nonstop advocacy, education, and reflection.</p>\n<p>Then, start discussing what the application of these ideas would mean at your studio. And who is going to fill these key roles? There are people you already have at your studio who just need a little bit of training. Put your tech artists on your programming teams for a bit, or your programmers working on game design or art. See how quickly you&#8217;ll find someone with the unique set of skills for a Tools Director position.</p>\n<p>We need people who understand how people work and content flows across a project. \u00a0We need people who are able to guide its formulation/improvement/reconsideration. \u00a0This is vision. \u00a0And the lack of vision in tools development is a deadly disease we must remedy if we are to improve the state of our tools across the industry.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0recent post at AltDevBlogADay\u00a0in three parts. \u00a0View it there in its entirety. Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these", "id": "http://www.robg3d.com/?p=724", "categories": [], "metadata": {"guid": "e3ca9c4a-a6ad-4ade-aaaa-55c1e0d17b8f", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=722", "title": "The Importance of Vision, 2 of 3", "datetime": "2011-07-29T04:29:13", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0<a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a>\u00a0in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>\n<p>No longer can this vital role be left to a hodepodge of other people. Your Art/Technical/Creative Directors, your Lead Programmers/Artists/Designers, can no longer be the people expected to provide the vision for studio&#8217;s Tools and Pipeline.</p>\n<p>The person who fills this role needs to be someone with enough experience creating art that they can embed with Artists. Someone who can program well enough to have the title of Programmer. Someone flexible enough that they can deal with the needs of Designers. Someone charismatic enough that they can fight and win the battle against the inevitable skepticism, fear, and opposition a change like this would bring.</p>\n<p>These people are few and far between, and every one of them I know is happily employed. We&#8217;re asking for a unique set of passions and skills, a set that isn&#8217;t common in the games industry especially (who gets into games to write tools?!). We need to start training our tools developers (tech artists, tools programmers) to aspire to have these passions and skills.</p>\n<p>This won&#8217;t happen magically. Unless our studios can promise that these aspirations will be fulfilled, few people will bother, and I cannot blame them. Many studios have made the commitment to having killer tools. Almost as many have failed. And almost as many as that have failed to realize lack of a cohesive vision as a primary factor.</p>\n<p>It isn&#8217;t surprising that resources get moved from tools dev, that schedules cannot be stuck to, that they cannot attract senior developers. Without a cohesive tools vision, how are resources supposed to be properly allocated? Resources become a fragile compromise between competing departments, rather than brokered by a separate party without allegiances. How is a schedule supposed to be followed, when the people doing the work are not the ones who feel the repercussions? And it is no surprise that it is difficult to attract senior talent with strong programming skills necessary to develop great tools to these positions. If there is no career path- and, let&#8217;s face it, most studios have no career path for tools developers- they&#8217;re going to go into game programming, or the general software industry (which is, for the most part, some form of tools development in a different environment).</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\u00a0recent post at AltDevBlogADay\u00a0in three parts. \u00a0View it there in its entirety. So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows ", "id": "http://www.robg3d.com/?p=722", "categories": [], "metadata": {"guid": "ec73746a-1101-46af-8d12-6a3c94b7f875", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=720", "title": "The Importance of Vision, 1 of 3", "datetime": "2011-07-28T04:29:04", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href=\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\">recent post at AltDevBlogADay</a> in three parts. \u00a0View it there in its entirety.</p>\n<hr />\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.</p>\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.</p>\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.</p>\n<p>Where does this lack of vision come from? What can we do to resolve it?</p>\n<hr />\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.</p>\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.</p>\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?</p>\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \u00a0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we", "id": "http://www.robg3d.com/?p=720", "categories": ["Rob Galanakis"], "metadata": {"guid": "5bd65447-2fe8-44f8-a6f1-046c2b4563e0", "likes": 0, "is_published": true}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=712", "title": "WTFunctional: Be Declarative", "datetime": "2011-07-25T14:29:27", "html": "<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.</p>\n<p>First up is demonstrating that <strong>functional programming is declarative</strong>: it makes your code more expressive and optimized.</p>\n<p>Most programmers are used to seeing this:</p>\n<pre>list = []\nfor i = 0 to 10 do\n  if i % 2 == 0:\n    list.append(i)\n//list is now [0,2,4,6,8,10]</pre>\n<p>Less familiar would be:</p>\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)</pre>\n<p>The first focuses on the <em>how</em>: increment <em>i</em> from 0 to 10, and append every even item and 0 to a list. \u00a0This is an <strong>imperative style</strong>. \u00a0The second focuses on the <em>what</em>: \u00a0for each item from 0 to 10, select all even items. \u00a0This is a <strong>declarative style</strong>, which is an aspect of functional programming. \u00a0In this trivial case, the difference is, well, trivial. \u00a0But the key differences are:</p>\n<ol>\n<li>\u00a0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).</li>\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.</li>\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated/iterated over, not a concrete type like a list/array/etc.</li>\n</ol>\n<p>These differences create three key benefits:</p>\n<ol>\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.</li>\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative</em>\u00a0part of it. \u00a0We&#8217;ll see how to read a more complex statement next.</li>\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators</em>- it really depends on what is expedient for the statement.</li>\n</ol>\n<p>Let&#8217;s try out a more concrete example. \u00a0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \u00a0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.</p>\n<pre>dateAndItemsMap = dict()\nfor row in myTable.rows:\n\u00a0 \u00a0 if row.isActive:\n\u00a0 \u00a0 \u00a0 \u00a0 if row.date not in dateAndItemsMap:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date] = list()\n\u00a0 \u00a0 \u00a0 \u00a0 dateAndItemsMap[row.date].append(new MyObject(row))\nsortedDates = dateAndItemsMap.values()\nsortedDates.sort()\nitemsSortedByDateThenId = list()\nfor date in sortedDates:\n\u00a0 \u00a0 items = dateAndItemsMap[date]\n\u00a0 \u00a0 items.sort(lamba obj: obj.id)\n\u00a0 \u00a0 itemsSortedByDateThenId.extend(items)</pre>\n<p>Wow, that&#8217;s a lot of code! \u00a0And not at all clear when reading it. \u00a0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \u00a0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.</em>\u00a0 That&#8217;s a mouthful, and I think that was pretty brief.</p>\n<p>Let&#8217;s compare this to the declarative style:</p>\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)</pre>\n<p>One line? \u00a0One stinking line? \u00a0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.</em>\u00a0 Notice a) how the explanation expresses <em>what you want</em>, <strong>not</strong>\u00a0how you want to get it, and b) the explanation reads very similar to the code.</p>\n<p>This is why declarative programming rocks, <strong>right now.</strong>\u00a0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \u00a0Your code will become infinitely clearer.</p>\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure</strong>), and the compiler or runtime can automatically parallelize it and optimize it. \u00a0This is one reason languages like SQL have been so effective- the software/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.</p>\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \u00a0Next up will probably be closures.</p>", "summary": "Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ", "id": "http://www.robg3d.com/?p=712", "categories": ["Rob Galanakis"], "metadata": {"guid": "7cf25c60-08d2-4be6-8544-0869547c3245", "likes": 0, "is_published": true}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/25/exportlayer-v1-3-for-modo-501/", "title": "ExportLayer v1.3 for modo 501", "datetime": "2011-07-25T09:29:54", "html": "<p>It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light.</p>\n<p>Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;<em>UCX_$ParentMeshName</em>&#8221; style names it&#8217;s enough to just name the collision hulls as &#8220;<em>UCX</em>&#8220;, the script will fix it during export. Just make sure that the collisions are children of the main mesh.</p>\n<p>FBX files can be saved with fake Revit signature which makes it possible to link the produced FBX file in 3ds Max 2011 (File Link Manager).</p>\n<p><strong>IMPORTANT</strong>: Modo 501 SP3 (and possibly earlier 501 versions) have a nasty bug where displaced SDS geometry is frozen without any deformations. The workaround is similarly ugly: I initiate an incorrect file save which makes an error window pop up which forces some kind of an internal update after which the freeze command works properly. So when you see an error popup saying</p>\n<blockquote><p>Scene save was unsuccessful &#8212; Not Found File &#8220;C:&#8221; not written.</p></blockquote>\n<p>well, it&#8217;s &#8220;normal&#8221;&#8230; just click OK and wait for the script to finish.<br />\nAlso, freezing a PSDS surface messes up morphmaps. The workaround for that slows down the export process considerably.<br />\nTo avoid freezing altogether use the <em>NOFREEZE</em> parameter.</p>\n<p><strong>Arguments:</strong><br />\n<em>FBX; LWO; OBJ; COLLADA</em>: They define the output format. Default is FBX.<br />\n<em>SILENTSAVE</em>: The file will be saved next to the original file. No dialog will be displayed.<br />\n<em>NOQUADS</em>: Triangulates the object the exported object.</p>\n<p><em>FBXREVIT</em>: Saves an FBX file and makes it look like it came from Autodesk Revit.<br />\n- In this mode NOQUADS and SILENTSAVE are automatically enabled.<br />\n- 3ds Max will only recognize an UV if it&#8217;s used by at least one image in the shader tree.</p>\n<p>NOFREEZE: The geometry will not be frozen.<!-- PHP 5.x --></p>", "summary": "It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light. Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;UCX_$ParentMeshName&#8221; style nam", "id": "http://www.zspline.net/blog/?p=1340", "categories": [], "metadata": {"guid": "9ae35466-c6cf-4cb8-a070-c147ede632af", "likes": 0, "is_published": false}}, {"author": "Rick", "url": "http://www.rsart.co.uk/2011/07/23/toggle-debug-print-in-maxscript/", "title": "Toggle debug print in Maxscript", "datetime": "2011-07-23T23:44:45", "html": "<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.</p>\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:</p>\n<p><code>if debugprint == true then print \"My debug stuff\"</code></p>\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:</p>\n<p><code>fn debugPrint printStr =<br />\n(<br />\n    if debugPrintVal == true do<br />\n        (<br />\n            Print printStr<br />\n        )<br />\n)<br />\n</code></p>\n<p>So, instead of using  :</p>\n<p><code>if debugprint == true then print \"My debug stuff\"</code></p>\n<p>We can now used the much cleaner version:</p>\n<p><code>debugprint \"My debug stuff\"</code></p>", "summary": "Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O", "id": "http://www.rsart.co.uk/?p=407", "categories": ["Rick"], "metadata": {"guid": "eae874f4-a637-4d6e-bd62-c057f2045c60", "likes": 0, "is_published": true}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=708", "title": "Learning a programming language by reading a manual is like learning a language by reading a dictionary", "datetime": "2011-07-23T03:58:13", "html": "<p>A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords.</p>\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with people, or libraries.</p>\n<p>Be wary of anyone who says they know more than a dozen languages. \u00a0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.</p>\n<p>You can learn to speak a language without learning how to communicate in that language. \u00a0In the same way, you can create a program in a language without communicating effectively.</p>\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \u00a0Sophisticated use of a programming language allows and requires the same. \u00a0We should understand when to be sophisticated and when to be crude, and always seek to educate.</p>\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \u00a0Consider what Ebonix is to English, or a scripting language is to C++. \u00a0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.</p>\n<p>You cannot learn how to speak a language by reading a dictionary. \u00a0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \u00a0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.</p>\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.</p>", "summary": "A verbal language is more than its grammar and vocabulary. \u00a0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \u00a0You cannot learn this through words, you learn this through interacting with", "id": "http://www.robg3d.com/?p=708", "categories": ["Rob Galanakis"], "metadata": {"guid": "8663e9bd-e78d-4c2d-816e-4f33d05827a9", "likes": 0, "is_published": true}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/7930189393", "title": "Highlight an Excel Cell Using Python", "datetime": "2011-07-22T11:55:00", "html": "<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style = xlwt.easyxf(\u2018pattern: pattern solid, fore-colour red\u2019)</li>\n<li>\n</li><li>for x in range(inputSheet.nrows):</li>\n<li>\u00a0 \u00a0 for y in range(inputSheet.ncols):</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 if(inputSheet.cell(x,y).value):</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0cellValue = inputSheet.cell(x,y).value</li>\n<li>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0outputSheet.write(x,y, cellValue)</li>\n<li>\n</li><li>outputSheet.write(5,5, \u201crewritten cell\u201d, style)</li>\n<li>\n</li><li>\n</li><li>outputBook.save(\u201ctest.xls\u201d)</li>\n\n</ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \u00a0Good for validation purposes.</p>\n<ol></ol>", "summary": "<ol><li>\n</li><li>import xlrd, xlwt</li>\n<li>\n</li><li>inputBook = xlrd.open_workbook(\u2018test.xls\u2019)</li>\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\n<li>\n</li><li>outputBook = xlwt.Workbook()</li>\n<li>outputSheet = outputBook.add_sheet(\u201csheet 1\u201d, cell_overwrite_ok=True)</li>\n<li>\n</li><li>style ", "id": "http://shawnkirsch.tumblr.com/post/7930189393", "categories": ["Unknown Author"], "metadata": {"guid": "9a86dd70-2b83-49dc-a151-fac566245d11", "likes": 0, "is_published": true}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/07/power-animator.html", "title": "Power Animator", "datetime": "2011-07-22T10:34:31.240000", "html": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http://altdevblogaday.com/\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exerting one's strength: one is pushing down, the other is pulling up.\u201d</span> \u2013 Booker T. Washington</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">For today\u2019s post, I\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold's Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.</div><div class=\"MsoNormal\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s1600/csi.png\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"640\" src=\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s640/csi.png\" width=\"233\" /></a></div><div class=\"MsoNormal\">On that day at Gold's Gym, I was benching and curling, because THAT'S WHAT MEN DO (that's how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">She continued on with her squats while I performed my \"superior\" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since \"clearly squats are supposed to be bad for your knees!\" I reply \"I\u2019m gonna do some curls!\" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">She ignored me. She was deadlifting, and that was serious business for her.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Later on that night Jessica turned to me and asked \"So, what are your fitness goals?\" I replied \"To get bigger and stronger, of course.\" She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Then she said it:</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><br /></div><table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: right; margin-left: 1em; text-align: right;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s1600/LooneyTunes_Gossamer_Model_Sheet.jpg\" style=\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"256\" src=\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s320/LooneyTunes_Gossamer_Model_Sheet.jpg\" width=\"320\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">This is apparently what I looked like, hair and all.</td></tr></tbody></table><div class=\"MsoNormal\">\"You know you have chicken legs, right? You're shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that.\"</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">I was disheartened, totally bummed out, but more importantly, I was <i>confused</i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men's Health! They HAD to be right!<br /><br />More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Jessica and I didn't go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That's when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Training in a vacuum that way had stunted my growth in a literal sense- I wasn't getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I've gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">So I guess getting strength training advice from a girl isn\u2019t so bad after all. <span style=\"font-family: Wingdings;\">J</span></div><div class=\"MsoNormal\"><br />I invite you to read my parallel story about animation on AltDevBlogADay (<a href=\"http://altdevblogaday.com/2011/07/22/power-animator/\">http://altdevblogaday.com/2011/07/22/power-animator/</a>)</div><div style=\"line-height: 14.25pt;\"><br /></div><div class=\"MsoNormal\"><br /></div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com\" width=\"1\" /></div>", "summary": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http://altdevblogaday.com/\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exer", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526", "categories": [], "metadata": {"guid": "17f41b91-dcb0-4a6b-aae1-6f12c4364bc6", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=784", "title": "more on OO rigging and animator tools", "datetime": "2011-07-21T22:47:08", "html": "<p>Following on from the <a href=\"http://www.macaronikazoo.com/?p=752\" title=\"object oriented rigging in Skeleton Builder\">previous post</a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.</p>\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.</p>\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \u00a0The next step is to create an <a href=\"http://www.macaronikazoo.com/?p=726\" title=\"A more thorough Interface class\">interface class</a> which defines two methods &#8211; switchToFk and switchToIk. \u00a0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \u00a0Our code ends up looking something like this:</p>\n<pre class=\"brush:py\">import typeFactories\nimport baseRigPrimitive\nclass IkFkSwitchable(object):\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\n  def switchToFk( self ):\n    '''this method should implement the logic to switch to FK mode'''\n    pass\n  def switchToIk( self ):\n    '''this method should implement the logic to switch to IK mode'''\n    pass\n\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\n  #the code to implement this rig part goes here\n  ...\n  def switchToFk( self ):\n    #implementation of this method goes below...\n    ...\n  def switchToIk( self ):\n    #implementation of this method goes below...\n    ...</pre>\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:</p>\n<pre class=\"brush:py\">import rigPrimitives\nimport maya.cmds as cmd\nfrom baseMelUI import *\n\ndef getSelectedSwitchableParts():\n  '''\n  returns a list of all RigPart instances that have at least one of their members\n  selected\n  '''\n  selectedSwitchableParts = []\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\n  for rigPart in selectedRigParts:\n    if isinstance( rigPart, IkFkSwitchable ):\n      selectedSwitchableParts.append( rigPart )\n\n  return selectedSwitchableParts\n\nclass UserToolLayout(MelHLayout):\n  def __init__( self, parent ):\n    MelHLayout.__init__( self, parent )\n    self.UI_fkButton = MelButton( self, l=\"switch to FK\", c=self.on_pressFk )\n    self.UI_ikButton = MelButton( self, l=\"switch to IK\", c=self.on_pressIk )\n\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\n    #method when the scene selection changes.  So this will update the UI when the user\n    #changes the selection\n    self.setSelectionChangeCB( self.on_selectionChange )\n    self.on_selectionChange()  #call this to init the UI\n\n    #make sure to call this so the form layout gets setup properly\n    self.layout()\n\n  ### EVENT HANDLERS ###\n  def on_selectionChange( self, *a ):\n    #need to explicitly cast here because of a bug in setEnabled\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\n  def on_pressFk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToFk()\n  def on_pressIk( self, *a ):\n    for rigPart in getSelectedSwitchableParts():\n      rigPart.switchToIk()\n\nclass UserToolWindow(BaseMelWindow):\n  WINDOW_NAME = \"ikFkSwitcherTool\"\n  WINDOW_TITLE = \"Ik Fk switcher tool\"\n  DEFAULT_SIZE = 300, 45\n  DEFAULT_MENU = None\n\n  def __init__( self ):\n    UserToolLayout( self )\n    self.show()\n\nUserToolWindow()</pre>\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.</p>\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.</p>\n<p>Anyway hopefully you get the idea.</p>", "summary": "Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.", "id": "http://www.macaronikazoo.com/?p=784", "categories": ["hamish"], "metadata": {"guid": "78b71ec9-df92-4860-b8df-1eb4fc668c04", "likes": 0, "is_published": true}}]"
08-07 21:20 SocketClient INFO     Returning(as str): '[{"author": "Dave Ferner", "url": "http://www.supermono-studios.com/2011/08/forever-drive/", "title": "Forever Drive!!!!!!!!!!!", "datetime": "2011-08-01T04:51:20", "html": "<p>Right&#8230;.big update! We&#8217;ve been a bit quiet on the blog, because we&#8217;ve been really busy making an awesome game for you people. IT IS NEARLY FINISHED. Check it out.</p>\\n<p>First thing to note: we changed the name, from Drive Forever to <b><i><u>Forever Drive</u></i></b>. Long (and boring) legal story. Here&#8217;s a logo.</p>\\n<div class=\\"wp-caption aligncenter\\" id=\\"attachment_812\\" style=\\"width: 469px;\\"><a href=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_itLives.JPG\\"><img alt=\\"\\" class=\\"size-full wp-image-812\\" height=\\"300\\" src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_itLives.JPG\\" title=\\"Forever Drive Alpha Version running on 3GS\\" width=\\"450\\" /></a><p class=\\"wp-caption-text\\">You\'ll be seeing this screen a lot...</p></div>\\n<p>So. For those who don&#8217;t know &#8211; Forever Drive is our new game, an arcadey futuristic racer, set in a massive online city. You can build your own tracks and share them with the world, or just zoom through the city in pimped-out, customizable cars. It&#8217;s sort of like Outrun-meets-SimCity, in the future, online. We honestly couldn&#8217;t be more excited!</p>\\n<p>Right. So what does the game look like? How about something like&#8230;.this?</p>\\n<div class=\\"wp-caption aligncenter\\" id=\\"attachment_812\\" style=\\"width: 469px;\\"><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_014.png\\"><img alt=\\"\\" class=\\"size-full wp-image-812\\" height=\\"300\\" src=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_014.png\\" title=\\"Forever Drive screenshot\\" width=\\"450\\" /></a><p class=\\"wp-caption-text\\">I AM DRIVING A CAR IN THE FUTURE!</p></div>\\n<p>One thing to note. These are real, dude! Straight screenshots from the game &#8211; no photoshop trickery. These are all taken from the alpha version running on iPad 1 and iPhone 4, and it also runs on an iPhone 3GS really rather nicely thank you very much.</p>\\n<div class=\\"wp-caption aligncenter\\" id=\\"attachment_812\\" style=\\"width: 469px;\\"><a href=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_013.png\\"><img alt=\\"\\" class=\\"size-full wp-image-812\\" height=\\"300\\" src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_013.png\\" title=\\"Forever Drive screenshot\\" width=\\"450\\" /></a><p class=\\"wp-caption-text\\">Neeeeeow! Shazam!</p></div>\\n<p>Er &#8211; here&#8217;s some more!</p>\\n<div class=\\"wp-caption aligncenter\\" id=\\"attachment_812\\" style=\\"width: 469px;\\"></p>\\n<table>\\n<tr>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_000.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_000t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_001.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_001t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_002.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_002t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n</tr>\\n<tr>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_003.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_003t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_004.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_004t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_005.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_005t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n</tr>\\n<tr>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_006.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_006t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_007.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_007t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_008.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_008t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n</tr>\\n<tr>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_009.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_009t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_010.png\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_010t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n<td><a href=\\"http://www.supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_011.jpg\\" target=\\"_blank\\"><img src=\\"http://supermono-studios.com/wp-content/uploads/2011/07/foreverDrive_screenshot_011t.jpg\\" style=\\"padding: 0px; margin-bottom: 2px;\\" /><a></a></td>\\n</tr>\\n</table>\\n<p><p class=\\"wp-caption-text\\">Forever Drive! In Action!</p></div>\\n<p>As you can see, we&#8217;ve got kind of a lot done since last time you saw it. We&#8217;re now at the beta test stage. There&#8217;s still a little polishing and balancing to do, plus some bug fixes and sound design, but we&#8217;re very close. Pretty soon we should have some kind of video trailer out, and then you can <i>really</i> see it in action<br />\\n <img alt=\\":-)\\" class=\\"wp-smiley\\" src=\\"http://www.supermono-studios.com/wp-includes/images/smilies/icon_smile.gif\\" /> </p>", "summary": "Right&#8230;.big update! We&#8217;ve been a bit quiet on the blog, because we&#8217;ve been really busy making an awesome game for you people. IT IS NEARLY FINISHED. Check it out. First thing to note: we changed the name, from Drive Forever to Forever Drive. Long (and boring) legal story. Here&#8217", "id": "http://www.supermono-studios.com/?p=918", "categories": [], "metadata": {"guid": "8b3b4775-679d-4f17-a133-4e6705072b46", "likes": 0, "is_published": false}}, {"author": "Kyle Baley", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/RqEWm4m1hf4/", "title": "Using AppEngine (and GWT) in a CI environment", "datetime": "2011-08-01T01:12:58", "html": "<p>These days, I don\\u2019t much like being ahead of, behind, askance of, or otherwise deviated from the curve. It used to fit well with my \\u201cblogging as a nervous tic\\u201d phase of early 2008 when I would apparently post about every single compiler error I encountered and how it fit in with the grand scheme of things. But now, I prefer my technology much more Google-able. Does wonders for my productivity. In light of that, this post will fall into the category of \\u201cinteresting to people searching for a solution to a specific problem.\\u201d</p>\\n<p>And so it was that I went and tried to set up a CI process for our brand spankin\\u2019 new AppEngine app. (<em>Note to you fetishists: I didn\\u2019t mean that \\u201cspankin\\u2019\\u201d part literally. I don\\u2019t pretend to understand the euphemisms I use; I just use \\u2018em.</em>)</p>\\n<p>It\\u2019s essentially the same process we\\u2019re using for our main <a href=\\"http://getbookedin.com\\">BookedIN</a> application, which also runs on AppEngine:</p>\\n<p><strong><em>Compile and test configuration</em></strong><br />In this configuration, we just compile the app and run the unit tests.</p>\\n<p><strong><em>Run stable UI tests<br /></em></strong>This configuration performs the following steps:</p>\\n<ol>\\n<li>GWT compile the application. I.e. do all the magic that converts Java into JavaScript</li>\\n<li>Launch GWT hosted mode</li>\\n<li>Launch the UI tests</li>\\n</ol>\\n<p>The first two steps are performed with Ant. The last is in Rake because the UI tests are done in Capybara. We launch hosted mode first because it\\u2019s orders of magnitude faster to run UI tests against a local hosted mode version than it is against a deployed version, especially because we clear out the datastore before each scenario.</p>\\n<p>Let me add some foreshadowing here. In order to launch hosted mode, we use the following Ant target:</p>\\n<div style=\\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: \'Courier New\', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\\">\\n<div style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\">\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   1:</span> <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">target</span> <span style=\\"color: #ff0000;\\">name</span><span style=\\"color: #0000ff;\\">=\\"devmode\\"</span> <span style=\\"color: #ff0000;\\">depends</span><span style=\\"color: #0000ff;\\">=\\"\\"</span> <span style=\\"color: #ff0000;\\">description</span><span style=\\"color: #0000ff;\\">=\\"Run development mode\\"</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   2:</span>     <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">java</span> <span style=\\"color: #ff0000;\\">fork</span><span style=\\"color: #0000ff;\\">=\\"true\\"</span> <span style=\\"color: #ff0000;\\">classname</span><span style=\\"color: #0000ff;\\">=\\"com.google.gwt.dev.DevMode\\"</span> </pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   3:</span>         <span style=\\"color: #ff0000;\\">dir</span><span style=\\"color: #0000ff;\\">=\\"${basedir}/war\\"</span> <span style=\\"color: #ff0000;\\">spawn</span><span style=\\"color: #0000ff;\\">=\\"true\\"</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   4:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">classpath</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   5:</span>             <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">pathelement</span> <span style=\\"color: #ff0000;\\">location</span><span style=\\"color: #0000ff;\\">=\\"src\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   6:</span>             <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">path</span> <span style=\\"color: #ff0000;\\">refid</span><span style=\\"color: #0000ff;\\">=\\"project.class.path\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   7:</span>             <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">path</span> <span style=\\"color: #ff0000;\\">refid</span><span style=\\"color: #0000ff;\\">=\\"tools.class.path\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   8:</span>         <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">classpath</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   9:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">jvmarg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"-Xmx512M\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  10:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">jvmarg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"-javaagent:${appengine.folder}/lib/agent/appengine-agent.jar\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  11:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">jvmarg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"-Duser.dir=${basedir}/WAR\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  12:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">line</span><span style=\\"color: #0000ff;\\">=\\"-war\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  13:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"${basedir}/war\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  14:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">line</span><span style=\\"color: #0000ff;\\">=\\"-logLevel\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  15:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"INFO\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  16:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"-server\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  17:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"com.google.appengine.tools.development.gwt.AppEngineLauncher\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  18:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"net.bookedin.bam.BAM\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  19:</span>     <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">java</span><span style=\\"color: #0000ff;\\">&gt;</span>    </pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  20:</span> <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">target</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF--></div>\\n</div>\\n<p>Note that this is running dev mode using the AppEngine agent. So it\\u2019s mimicking AppEngine behind the scenes\\u2026somehow.</p>\\n<p>The key to this target is where it says: spawn=\\u201dtrue\\u201d. This allows TeamCity to launch DevMode, then continue about its business. I.e. it doesn\\u2019t wait until DevMode is finished.</p>\\n<p><strong><em>Run flaky UI tests</em></strong><br />We have this one in here just because I got tired of seeing three or four failing tests every single time and 95% of the time, it was because of a PayPal sandbox issue. Having these \\u201csometimes they work, sometimes they don\\u2019t\\u201d tests in a separate project means I can take the ones that fail in the previous configuration that much more seriously. All this configuration does is run UI tests that are tagged as @flaky.</p>\\n<p><strong><em>Kill DevMode<br /></em></strong>We have this as a separate configuration because we want it to run always. If it\\u2019s set up as a separate step in one of the previous configurations, TeamCity won\\u2019t run it if any of the UI tests fail. As a separate configuration, it can be set to run after any build of \\u201cRun flaky UI tests\\u201d regardless of whether that build succeeded or failed.</p>\\n<p><strong>The new app\\u2026</strong></p>\\n<p>\\u2026is in AppEngine also but not in GWT (for reasons <a href=\\"http://codebetter.com/kylebaley/2011/07/07/deciding-on-technology-it-depends-or-how-to-gwt-off/\\">outlined elsewhere</a>). Which I thought meant this would be easier. Alack, this is not true.</p>\\n<p>There is a corresponding \\u201cdev mode\\u201d in AppEngine. But it can\\u2019t be launched and then forgotten like it can in GWT. Here\\u2019s the target we originally had for it:</p>\\n<div style=\\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: \'Courier New\', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\\">\\n<div style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\">\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   1:</span> <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">target</span> <span style=\\"color: #ff0000;\\">name</span><span style=\\"color: #0000ff;\\">=\\"runserver\\"</span> <span style=\\"color: #ff0000;\\">description</span><span style=\\"color: #0000ff;\\">=\\"Starts the development server.\\"</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   2:</span>     <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">java</span> <span style=\\"color: #ff0000;\\">classname</span><span style=\\"color: #0000ff;\\">=\\"com.google.appengine.tools.development.DevAppServerMain\\"</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   3:</span>           <span style=\\"color: #ff0000;\\">classpath</span><span style=\\"color: #0000ff;\\">=\\"${appengine.tools.classpath}\\"</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   4:</span>           <span style=\\"color: #ff0000;\\">fork</span><span style=\\"color: #0000ff;\\">=\\"true\\"</span> <span style=\\"color: #ff0000;\\">failonerror</span><span style=\\"color: #0000ff;\\">=\\"true\\"</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   5:</span>       <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">jvmarg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"-javaagent:${appengine.folder}/lib/agent/appengine-agent.jar\\"</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   6:</span>       <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"--address=localhost\\"</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   7:</span>       <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"--port=8080\\"</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   8:</span>       <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"war\\"</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   9:</span>     <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">java</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  10:</span> <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">target</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF--></div>\\n</div>\\n<p>Same idea as the previous one but with a different class name. And unfortunately, you can\\u2019t add spawn=\\u201dtrue\\u201d to this one. Something in DevAppServerMain doesn\\u2019t like spawn=\\u201dtrue\\u201d and complains. So if you run this target, it sits there and waits until you forcibly stop the server, either with Ctrl-C or something like the following (in another command window):</p>\\n<div style=\\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: \'Courier New\', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\\">\\n<div style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\">\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   1:</span> <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">target</span> <span style=\\"color: #ff0000;\\">name</span><span style=\\"color: #0000ff;\\">=\\"stopserver\\"</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   2:</span>     <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">property</span> <span style=\\"color: #ff0000;\\">environment</span><span style=\\"color: #0000ff;\\">=\\"env\\"</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   3:</span>     <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">exec</span> <span style=\\"color: #ff0000;\\">executable</span><span style=\\"color: #0000ff;\\">=\\"${env.JAVA_HOME}/bin/jps\\"</span> <span style=\\"color: #ff0000;\\">output</span><span style=\\"color: #0000ff;\\">=\\"pid.out.file\\"</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   4:</span>     <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">loadfile</span> <span style=\\"color: #ff0000;\\">srcfile</span><span style=\\"color: #0000ff;\\">=\\"pid.out.file\\"</span> <span style=\\"color: #ff0000;\\">property</span><span style=\\"color: #0000ff;\\">=\\"pid.out\\"</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   5:</span>       <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">filterchain</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   6:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">linecontains</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   7:</span>           <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">contains</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"DevMode\\"</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   8:</span>         <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">linecontains</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   9:</span>         <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">tokenfilter</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  10:</span>             <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">deletecharacters</span> <span style=\\"color: #ff0000;\\">chars</span><span style=\\"color: #0000ff;\\">=\\"DevMode\\"</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  11:</span>             <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">trim</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  12:</span>             <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">ignoreblank</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  13:</span>         <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">tokenfilter</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  14:</span>           <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">tailfilter</span> <span style=\\"color: #ff0000;\\">lines</span><span style=\\"color: #0000ff;\\">=\\"1\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  15:</span>       <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">filterchain</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  16:</span>     <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">loadfile</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  17:</span>&nbsp; </pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  18:</span>     <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">echo</span><span style=\\"color: #0000ff;\\">&gt;</span>Killing appengine java process with PID - \\"${pid.out}\\"<span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">echo</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  19:</span>&nbsp; </pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  20:</span>       <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">exec</span> <span style=\\"color: #ff0000;\\">executable</span><span style=\\"color: #0000ff;\\">=\\"taskkill\\"</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  21:</span>           <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"/f\\"</span> <span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  22:</span>           <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\\"/fi\\"</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  23:</span>           <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">arg</span> <span style=\\"color: #ff0000;\\">value</span><span style=\\"color: #0000ff;\\">=\'\\"PID eq ${pid.out}\\"\'</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  24:</span>       <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">exec</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  25:</span>&nbsp; </pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  26:</span>     <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">delete</span> <span style=\\"color: #ff0000;\\">file</span><span style=\\"color: #0000ff;\\">=\\"pid.out.file\\"</span><span style=\\"color: #0000ff;\\">/&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  27:</span> <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">target</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF--></div>\\n</div>\\n<p>Side note: Both of these were modified from a comment thread on an <a href=\\"http://code.google.com/p/googleappengine/issues/detail?id=2093\\">open issue with AppEngine</a>, whereby the default \\u201crunserver\\u201d command leaves a stray java.exe process running after you kill it.</p>\\n<p>This method works pretty well for local development. But won\\u2019t for a CI configuration that\\u2019s relying on the \\u201crunserver\\u201d target to give up control so it can \\u201crun UI tests\\u201d.</p>\\n<p>\\u201cNo matter,\\u201d says I, \\u201csurely someone else has discovered just how much money and time is saved through the practices of UI testing and CI and is doing the same on an AppEngine application.\\u201d</p>\\n<p>If you just chuckled to yourself at my apparent na\\u00efvet\\u00e9, then same on you! I remain convinced that such a person does exist. He or she just doesn\\u2019t like to brag is all\\u2026</p>\\n<p>A <a href=\\"https://groups.google.com/forum/#!msg/google-appengine-java/FbFgHt-5mMY/q4Z78GjokQIJ\\">post to the AppEngine Google Group</a> led to my eventual solution which came in the usual manner: it occurred to me during the process of typing out my question and/or one of my responses.</p>\\n<p>The basis for the solution is: the process works for GWT DevMode with an AppEngine agent; so run the app in GWT DevMode with an AppEngine agent.</p>\\n<p>Setting up a minimal GWT environment for the app was simple:</p>\\n<ol>\\n<li>Add gwt-dev.jar to my classpath (just for the purpose of testing; it\\u2019s not included when we deploy the app)</li>\\n<li>Create a stub .gwt.xml file</li>\\n<li>Use the same Ant target above to launch the app in DevMode</li>\\n</ol>\\n<p>The stub .gwt.xml file is an almost empty XML file:</p>\\n<div style=\\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: \'Courier New\', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\\">\\n<div style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\">\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   1:</span> <span style=\\"color: #0000ff;\\">&lt;?</span><span style=\\"color: #800000;\\">xml</span> <span style=\\"color: #ff0000;\\">version</span><span style=\\"color: #0000ff;\\">=\\"1.0\\"</span> <span style=\\"color: #ff0000;\\">encoding</span><span style=\\"color: #0000ff;\\">=\\"UTF-8\\"</span>?<span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   2:</span> <span style=\\"color: #0000ff;\\">&lt;</span><span style=\\"color: #800000;\\">module</span> <span style=\\"color: #ff0000;\\">rename-to</span><span style=\\"color: #0000ff;\\">=\\"gunton\\"</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   3:</span> <span style=\\"color: #0000ff;\\">&lt;/</span><span style=\\"color: #800000;\\">module</span><span style=\\"color: #0000ff;\\">&gt;</span></pre>\\n<p><!--CRLF--></div>\\n</div>\\n<p>DevMode complains if this file is missing. The location is defined in the final argument of the &lt;java&gt; task in the Ant target.</p>\\n<p>That\\u2019s it. We can now launch our AppEngine app in a CI environment and it won\\u2019t wait for the user to forcibly close dev mode. We can use a similar \\u201ckill dev mode\\u201d target to stop it when the UI tests are done. Our one remaining issue is that \\u201ckill dev mode\\u201d target. At any given time, we may have up to two DevModes running on the CI server: one for the GWT app and one for the AppEngine app. When we go to kill them, we can\\u2019t distinguish one from the other\\u2026</p>\\n<p>\\u2026which leads to one final footnote. We\\u2019re using Windows. If you are using Linux on your CI server, much of this would be moot, as was suggested in the thread. From my understanding, you can more easily run a process in the background, in which case, you can go with the original \\u201crunserver\\u201d target. Which also makes it easier to figure out which process to kill when the UI tests have finished.</p>\\n<p>Kyle the PID off.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/RqEWm4m1hf4\\" width=\\"1\\" />", "summary": "These days, I don\\u2019t much like being ahead of, behind, askance of, or otherwise deviated from the curve. It used to fit well with my \\u201cblogging as a nervous tic\\u201d phase of early 2008 when I would apparently post about&#160;&#8230; <a href=\\"http://codebetter.com/kylebaley/2011/07/31/using-appengine-and-", "id": "http://codebetter.com/kylebaley/2011/07/31/using-appengine-and-gwt-in-a-ci-environment/", "categories": [], "metadata": {"guid": "443f498a-6273-4c6e-9bed-4e69fea11dd9", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=727", "title": "Yeah, we don\\u2019t run in debug", "datetime": "2011-08-01T00:27:23", "html": "<p>Raymond Chen over at <a href=\\"http://blogs.msdn.com/b/oldnewthing\\">The Old New Thing</a>\\u00a0had a few blog posts recently about debug/release build behavior. \\u00a0I have never figured out why, but it seems an incredibly common standard practice to not run in debug because there are too many errors.</p>\\n<p><a href=\\"http://blogs.msdn.com/b/oldnewthing/archive/2011/07/18/10187351.aspx\\">The danger of making the chk build stricter is that nobody will run it</a>: \\u00a0Here, Raymond mentions how a MSFT team didn&#8217;t support running its app in debug mode because it broke into the debugger too much. \\u00a0<a href=\\"http://blogs.msdn.com/b/oldnewthing/archive/2011/07/29/10190885.aspx\\">Hey, let&#8217;s report errors only when nothing is at stake!</a>: \\u00a0Raymond talks about programming different behavior into debug and release builds- specifically, to crash in debug but swallow in release.</p>\\n<p>Perhaps because I haven&#8217;t been around too long, I just cannot understand how so many otherwise smart people can have such, such bad ideas. \\u00a0And how common this particular issue is.</p>\\n<p>The issue was especially bad when I was forbidden to use exceptions. \\u00a0I wanted to put in asserts since I wasn&#8217;t allowed to use exceptions, except that no one else used the debug build, so when people broke these asserts, they never knew. \\u00a0And then when people&#8217;s changes broke some new (and pretty fundamental) asserts, I was told &#8216;oh, we don&#8217;t run in debug.&#8217;</p>\\n<p>Wait, what? \\u00a0You have absolutely no way to ensure valid state, or even keep track of state at all, other than in logs that make debugging far more difficult than it should be (because the problem that should have asserted or crashed will only manifest itself much later and it is unlikely you can determine where the state got messed up by just looking through the log, at least without adding a bunch more logging).</p>\\n<p>Does your studio do this (not run in debug because there are too many exceptions or asserts)? \\u00a0If so, you may need to smack sense into people. \\u00a0This is a god awful and unforgivable practice when you are using any program- programs with persistent state can corrupt that persistent state, and programs without state can return unexpected results. \\u00a0These sort of decisions are indicative of a myopic or insular culture that is in serious need of a rude exposure and shake up.</p>", "summary": "Raymond Chen over at The Old New Thing\\u00a0had a few blog posts recently about debug/release build behavior. \\u00a0I have never figured out why, but it seems an incredibly common standard practice to not run in debug because there are too many errors. The danger of making the chk build stricter is that nobod", "id": "http://www.robg3d.com/?p=727", "categories": [], "metadata": {"guid": "637cd37e-14a4-4edb-9c3b-337464e38c8f", "likes": 0, "is_published": false}}, {"author": "Rick", "url": "http://www.rsart.co.uk/2011/07/31/what-new-artists-need-in-a-c-v-and-portfolio/", "title": "What new artists need in a C.V. and portfolio", "datetime": "2011-07-31T21:30:04", "html": "<p>It&#8217;s summer 2011, and lots of students will be finishing their degrees and will be applying for jobs. Dare to be Digital is just around the corner, and I often meet artists there who are asking for advice on how to prepare their portfolio and CV, so I thought I should take this opportunity to pull together a few thoughts that might be useful.</p>\\n<p><strong>The C.V./Resume</strong><br />\\nThe biggest mistake I see on a C.V. or covering letter for an artist is the lack of a link to a portfolio. I&#8217;d guess that about 25% of junior artist applications that I&#8217;ve seen do not have a portfolio link in their C.V. or cover letter. Your portfolio link should be part of your contact details. </p>\\n<ul>\\n<li>No portfolio that people can easily see? This is pretty much an automatic rejection.</li>\\n<li>Check your spelling and grammar! Now, as anyone who has read this site frequently, has worked with me or has talked to me on instant messanger, you&#8217;ll know that I&#8217;ve got no reason to talk, but I&#8217;d spell check my C.V. twice.</li>\\n<li>With word-processing software you have to try pretty hard to get a spelling mistake into a document unless you are good at ignoring squiggly red lines, so there really is no excuse. Proof read your documents several times, and get someone else to read them if you can. </li>\\n<li>Employers can tolerate a spelling mistake or two, but that&#8217;s a black mark. If you don&#8217;t have the ability to check and polish your CV and covering letter, are you going to be the same person on the job?</li>\\n<li>You shouldn&#8217;t attach a photo to your C.V.</li>\\n</ul>\\n<p>So what should you actually have in your C.V., and how long should it be? </p>\\n<p>You need your contact details, your employment history and your academic qualifications, any other relevant experience, and I&#8217;d say that the entire document should run to no more than 2 pages. As someone just starting you won&#8217;t have much in the way of employment history that is relevant to the video games industry, but I&#8217;d still list your previous employment. That being said, you don&#8217;t need to list all your duties &#8211; if you worked in a bar you don&#8217;t need to list that you sold drinks, collected glasses and washed glasses.</p>\\n<p>Finally, a matter that is ofter overlooked is the visual style &#8211; keep it classic. Your C.V. should be dark text on a white background, with no more than a few fonts. Georgia and Ariel are good, Comic Sans is not.</p>\\n<p><strong>The Portfolio</strong><br />\\nHaving an online portfolio is vital for an artist, and there is no excuse not to have one. You portfolio websites sole purpose is to showcase you as an artist to hopefully get you a job, and as such there are a few very simple things to keep in mind.</p>\\n<ul>\\n<li>You don&#8217;t need to learn HTML or CSS, and you don&#8217;t need to learn a new authoring package just to create websites, just grab a free site from WordPress, Tumbler or Carbonmade and get images uploaded. </li>\\n<li>Add some contact details, spellcheck everything and get some other people to have a look at it.\\n</li>\\n<li>I&#8217;d recommend 6-10 good pieces of work, with several images for each including texture flats and wireframe overlays so that a prospective employer can get an idea of your both your artistic and technical abilities.\\n</li>\\n<li>Every image should have your name and/or website address on it, but don&#8217;t obscure the image with huge watermarks.\\n</li>\\n<li>The content of your portfolio should reflect the kind of art that interests you since a wide mix of art can be confusing to a potential employer &#8211; &#8220;Does this person want to make World of Warcraft characters or GTA environments?&#8221;\\n</li>\\n</ul>\\n<p>My next suggestion can be controversial &#8211; the content of your portfolio should not be your coursework from your university course (certainly not the earlier years), unless that work is really good. The work you produce at college is often homework, or a collaborative project and as such the goal of that work was to teach techniques. By all mean, use those techniques to create new work, or revisit older work, but the first pass of a dumpster you created in 2 days for a deadline generally isn&#8217;t going to be good for a portfolio &#8211; spend a week reworking and polishing that asset. Creating a dumpster in 2 days for a deadline is what you&#8217;d be doing when you get a job.</p>\\n<p>A final point &#8211; lots of students measure themselves against other students rather than against artists who are working in the games industry, and this is a mistake. There are no shortage of assets available online on various game art forums for you to compare your work against and to learn from.</p>\\n<p><strong>Images or a video &#8211; the importance of a showreel</strong><br />\\nSome artists get caught up on producing a video for employers to download, this isn&#8217;t applicable to all artists.</p>\\n<ul>\\n<li>Character and Environment artists &#8211; you probably don&#8217;t need a reel. A good selection of images trumps a video.\\n</li>\\n<li>Animators &#8211; you need a video reel. Screengrabs are useless.\\n</li>\\n<li>Riggers &#8211; you need a reel, and ideally you&#8217;ll be providing some scripts for downloading.\\n</li>\\n</ul>\\n<p><strong>Other useful skills</strong><br />\\nKnowledge of a game engine pipeline &#8211; exporting models and getting them running in an actual game will give you a better understanding of the job.</p>\\n<p>The are plenty of games engines out there, all with pros and cons, but I&#8217;d recommend the Unreal engine due to the amount of support for it. Go to <a href=\\"http://udk.com/download\\" target=\\"_blank\\" title=\\"http://udk.com/download\\">http://udk.com/download</a>, download the Unreal Development Kit and read some tutorials.</p>\\n<p>Good luck!</p>", "summary": "It&#8217;s summer 2011, and lots of students will be finishing their degrees and will be applying for jobs. Dare to be Digital is just around the corner, and I often meet artists there who are asking for advice on how to prepare their portfolio and CV, so I thought I should take this opportunity to ", "id": "http://www.rsart.co.uk/?p=406", "categories": [], "metadata": {"guid": "9e160308-0d52-4477-a32f-6aa4dece2f59", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/30/protocol-to-build-a-reusable-deformation-template-i-model-presentation/", "title": "Protocol to build a reusable deformation template I: model presentation", "datetime": "2011-07-30T09:41:32", "html": "<p>Character and creature rigging is a broad discipline that encompass many fields :</p>\\n<ul>\\n<li>Structure setup for animation .</li>\\n<li>Skin / envelope configuration.</li>\\n<li>Surface, hair , cloth and rigid body simulation.</li>\\n<li>Scripts / tools writing.</li>\\n</ul>\\n<p>Throughout my previous posts , the acute reader may have noticed my inclination for character deformation.</p>\\n<p>For this part of my work , as a goal , I would like to take more time defining the behavior of an articulation and its associate body region with a set of specialized tools.</p>\\n<p>The current tools like skincluster, curve deformer , lattice are precious and versatile ,\\u00a0 I just think that to handle creature /character work more efficiently we need to free ourselves from weight painting , spreadsheet , and vertex tweaking.</p>\\n<p>The ability to assign an attribute\\u00a0per element is a powerful\\u00a0 concept that has yet to find a limitation,\\u00a0 I want to reserve it to more complex phenomenon like , jiggling, wrinkle etc.</p>\\n<p>In order to illustrate my process and prepare these tools , I will use the geometry of a free animation rig : PackageMan.</p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png\\"><img alt=\\"\\" height=\\"499\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/packageman.png?w=450&#038;h=499\\" title=\\"packageMan: a free animation rig by  Javier Solsona\\" width=\\"450\\" /></a></p>\\n<p>This fully rigged character can be found on <a href=\\"http://www.rigging101.com/freestuff.htm\\"><em><span style=\\"color: #ff6600;\\">Javier Solsona </span></em></a>&#8216;s website and was modeled\\u00a0by Bob White.</p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png\\"><img alt=\\"\\" height=\\"248\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/base_topology.png?w=450&#038;h=248\\" title=\\"original topology of this character \\" width=\\"450\\" /></a></p>\\n<p>Before reading the following opinion and observation one must keep in mind that this material was made in 2004, with fast animation rig as its main purpose.</p>\\n<p>This means:</p>\\n<ul>\\n<li>less computing power,</li>\\n<li>less memory</li>\\n<li>less functionality by default in maya</li>\\n<li>non existing support program like topoGun or Zbrush .</li>\\n</ul>\\n<p>Overall the strongest point of this character is its personality : a Vin diesel like skinny character\\u00a0 wearing a pair of socks and a speedo is by definition hilarious and is a good subject for cartoon animation.</p>\\n<p>The first weak point that can be seen is the inconsistent topology : in the the above image we can see lots a triangles in sensible area like the shoulder or face .</p>\\n<p>This introduces spikes, pinches and lots of irregularities on this character surface that are not part of the intended design .</p>\\n<p>Some triangles on the contrary are well used and help reinforce\\u00a0 the shape of this sculpture <em>( on the the belly and crotch for example ) .</em></p>\\n<p>The face seems also to have receive less attention : especially the nose and ears which are not on par with the rest of the body in terms of readability and execution.</p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png\\"><img alt=\\"\\" height=\\"574\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/topo_side_view.png?w=450&#038;h=574\\" title=\\"\\" width=\\"450\\" /></a><br />\\nOn this side view we can see the modification to the nose, ears and eyeglasses for this project where\\u00a0 I will the focus on shoulder deformation.</p>\\n<p>I really enjoyed working on these parts. The crotch area was tone down to allow a future cloth simulation <em>( mainly for wrinkles )</em> and the socks were left unchanged.<br />\\n<a href=\\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png\\"><img alt=\\"\\" height=\\"383\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/quaterview.png?w=450&#038;h=383\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p>In this quater side view , on the right we can see the modification done on the neck and trapezius. The speedo was removed, and the shoulder region was pictured a little bit more realistic.<br />\\n<a href=\\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png\\"><img alt=\\"\\" class=\\"alignleft size-full wp-image-713\\" height=\\"545\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/clean_up_topo1.png?w=450&#038;h=545\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p>I am merely an average modeler, this works on this character is by no means a way to prove some kind of superiority or technical prowess : its a preliminary work to test and evaluate idea and techniques that will be covered in future post.</p>\\n<br />  <a href=\\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/692/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/692/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/692/\\" /></a> <img alt=\\"\\" border=\\"0\\" height=\\"1\\" src=\\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=692&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\\" width=\\"1\\" />", "summary": "Character and creature rigging is a broad discipline that encompass many fields : Structure setup for animation . Skin / envelope configuration. Surface, hair , cloth and rigid body simulation. Scripts / tools writing. Throughout my previous posts , the acute reader may have noticed my inclination f", "id": "http://circecharacterworks.wordpress.com/?p=692", "categories": ["circerigging"], "metadata": {"guid": "b187aab2-bf23-4bba-8cd2-36fca514ccba", "likes": 0, "is_published": true}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=724", "title": "The Importance of Vision, 3 of 3", "datetime": "2011-07-30T04:31:25", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\\u00a0<a href=\\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\\">recent post at AltDevBlogADay</a>\\u00a0in three parts. \\u00a0View it there in its entirety.</p>\\n<hr />\\n<p>Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these problems are simply lucky. I suspect that such people are in a fragile situation, and taking away a key player or two would destroy the precarious dynamic that doesn&#8217;t birth these problems. If you are at a studio without these problems, ask yourself this: is your setup one that you can describe, export, advocate for, reproduce? How would you do it, without saying &#8220;just hire better people?&#8221; It is this &#8220;coincidence as a solution&#8221; that propogates the problems at less lucky studios.</p>\\n<p>Let&#8217;s create real solutions.</p>\\n<p>We need to create roles and departments that can provide studios with a cohesive tools vision. We need to fill these director-level roles with uniquely qualified individuals who are experienced in art and design, and are excellent programmers. We need to mature our views on tools as an industry, and start looking for concrete solutions for our endemic tools issues rather than relying on chance.<br />\\nWe&#8217;re not going to find these people or do these things overnight. We need to, first, decide on this path as our goal. Not just you, but your studio&#8217;s management, and there&#8217;s no formula helpful formula I can give to convince them. Just nonstop advocacy, education, and reflection.</p>\\n<p>Then, start discussing what the application of these ideas would mean at your studio. And who is going to fill these key roles? There are people you already have at your studio who just need a little bit of training. Put your tech artists on your programming teams for a bit, or your programmers working on game design or art. See how quickly you&#8217;ll find someone with the unique set of skills for a Tools Director position.</p>\\n<p>We need people who understand how people work and content flows across a project. \\u00a0We need people who are able to guide its formulation/improvement/reconsideration. \\u00a0This is vision. \\u00a0And the lack of vision in tools development is a deadly disease we must remedy if we are to improve the state of our tools across the industry.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\\u00a0recent post at AltDevBlogADay\\u00a0in three parts. \\u00a0View it there in its entirety. Not every studio has these problems (I know because I&#8217;ve argued with you about this). And I dare say that studios that don&#8217;t have these", "id": "http://www.robg3d.com/?p=724", "categories": [], "metadata": {"guid": "e3ca9c4a-a6ad-4ade-aaaa-55c1e0d17b8f", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=722", "title": "The Importance of Vision, 2 of 3", "datetime": "2011-07-29T04:29:13", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my\\u00a0<a href=\\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\\">recent post at AltDevBlogADay</a>\\u00a0in three parts. \\u00a0View it there in its entirety.</p>\\n<hr />\\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \\u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>\\n<p>No longer can this vital role be left to a hodepodge of other people. Your Art/Technical/Creative Directors, your Lead Programmers/Artists/Designers, can no longer be the people expected to provide the vision for studio&#8217;s Tools and Pipeline.</p>\\n<p>The person who fills this role needs to be someone with enough experience creating art that they can embed with Artists. Someone who can program well enough to have the title of Programmer. Someone flexible enough that they can deal with the needs of Designers. Someone charismatic enough that they can fight and win the battle against the inevitable skepticism, fear, and opposition a change like this would bring.</p>\\n<p>These people are few and far between, and every one of them I know is happily employed. We&#8217;re asking for a unique set of passions and skills, a set that isn&#8217;t common in the games industry especially (who gets into games to write tools?!). We need to start training our tools developers (tech artists, tools programmers) to aspire to have these passions and skills.</p>\\n<p>This won&#8217;t happen magically. Unless our studios can promise that these aspirations will be fulfilled, few people will bother, and I cannot blame them. Many studios have made the commitment to having killer tools. Almost as many have failed. And almost as many as that have failed to realize lack of a cohesive vision as a primary factor.</p>\\n<p>It isn&#8217;t surprising that resources get moved from tools dev, that schedules cannot be stuck to, that they cannot attract senior developers. Without a cohesive tools vision, how are resources supposed to be properly allocated? Resources become a fragile compromise between competing departments, rather than brokered by a separate party without allegiances. How is a schedule supposed to be followed, when the people doing the work are not the ones who feel the repercussions? And it is no surprise that it is difficult to attract senior talent with strong programming skills necessary to develop great tools to these positions. If there is no career path- and, let&#8217;s face it, most studios have no career path for tools developers- they&#8217;re going to go into game programming, or the general software industry (which is, for the most part, some form of tools development in a different environment).</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my\\u00a0recent post at AltDevBlogADay\\u00a0in three parts. \\u00a0View it there in its entirety. So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows ", "id": "http://www.robg3d.com/?p=722", "categories": [], "metadata": {"guid": "ec73746a-1101-46af-8d12-6a3c94b7f875", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=720", "title": "The Importance of Vision, 1 of 3", "datetime": "2011-07-28T04:29:04", "html": "<p>As a small break while I finish my vacation, I&#8217;m going to publish my <a href=\\"http://altdevblogaday.com/2011/07/28/the-importance-of-vision/\\">recent post at AltDevBlogADay</a> in three parts. \\u00a0View it there in its entirety.</p>\\n<hr />\\n<p>Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we have Art Directors in charge of the aesthetic, Technical Directors in charge of the technology decisions, and Creative Directors in charge of the overall game. Their chief responsibility is to guide the creation of a project that achieves their vision. The most successful directors are able to articulate a clear vision to the team, get buy in from its merits and his success, and motivate the team to execute with excellence. A project without a director&#8217;s vision is uninspired and unsuccessful.</p>\\n<p>It is no surprise, then, that even though we talk about tools and pipeline as its own niche- and even acknowledging it as its own niche is a big step- we have such uninspired and unsuccessful tools and pipeline at so many places in the industry. We seem to have a mild deficiency of vision in our small community of tools programmers and tech artists, and an absolute famine of vision and representation at the director level.</p>\\n<p>This situation is unfortunate and understandable, but underlies all tools problems at any studio. Fixing it is the vital component in fixing the broken tools cultures many people report. Without anyone articulating a vision, without anyone to be a seed and bastion of culture and ideas, we are doomed to not just repeat the tools mistakes of yesterday, but to be hopelessly blind towards their causes and solutions.</p>\\n<p>Where does this lack of vision come from? What can we do to resolve it?</p>\\n<hr />\\n<p>The lack of vision stems from the team structures most studios have. Who is responsible for tools as a whole, tools as a concept, at your studio? Usually, no one and everyone. We have Tech Art Directors that have clever teams that often lack the programming skills or relationships to build large tool, studio-wide toolsets. We have Lead Tools Programmers that are too far removed from, or have never experienced, actual content development. We have Lead Artists that design tools and processes for their team, that do not take into account other teams or pipelines and are uninspired technically.</p>\\n<p>There is no one who understands how every content creator works, who also has the technical understanding and abilities to design sophisticated technologies and ideas. No one who understands how content and data flow from concept art and pen and paper into our art and design tools, into the game and onto the release disk.</p>\\n<p>Without this person, what sort of tools and pipelines would you expect? If there were no Art Director or someone who had final say and responsibility for a cohesive art style across the entire game, how different would characters and environment look in a single game? If there were no Creative Director who had final say over design, how many incohesive features would our games have? If there were no Technical Director to organize the programming team, how many ways would our programming teams come up with so solve the same problems?</p>\\n<p>So how come with Tools and Pipeline we don&#8217;t think the same way? There is no Tools Director, so we end up with disparate tools and workflows that fail to leverage each other or provide a cohesive experience. The norm for the tools situation is to look like the type of situation we find in studios with weak leadership at the Director level. A mess. \\u00a0We need a person who understands how everyone at the studio works, and to take ownership of it and provide a vision for improving it.</p>", "summary": "As a small break while I finish my vacation, I&#8217;m going to publish my recent post at AltDevBlogADay in three parts. \\u00a0View it there in its entirety. Every ambitious creative endeavor has at its helm a single individual who is responsible for providing the vision for its development. In games, we", "id": "http://www.robg3d.com/?p=720", "categories": ["Rob Galanakis"], "metadata": {"guid": "5bd65447-2fe8-44f8-a6f1-046c2b4563e0", "likes": 0, "is_published": true}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=712", "title": "WTFunctional: Be Declarative", "datetime": "2011-07-25T14:29:27", "html": "<p>Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \\u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your daily programming activities.</p>\\n<p>First up is demonstrating that <strong>functional programming is declarative</strong>: it makes your code more expressive and optimized.</p>\\n<p>Most programmers are used to seeing this:</p>\\n<pre>list = []\\nfor i = 0 to 10 do\\n  if i % 2 == 0:\\n    list.append(i)\\n//list is now [0,2,4,6,8,10]</pre>\\n<p>Less familiar would be:</p>\\n<pre>list = range(0, 10).filter(lambda i: i % 2 == 0)</pre>\\n<p>The first focuses on the <em>how</em>: increment <em>i</em> from 0 to 10, and append every even item and 0 to a list. \\u00a0This is an <strong>imperative style</strong>. \\u00a0The second focuses on the <em>what</em>: \\u00a0for each item from 0 to 10, select all even items. \\u00a0This is a <strong>declarative style</strong>, which is an aspect of functional programming. \\u00a0In this trivial case, the difference is, well, trivial. \\u00a0But the key differences are:</p>\\n<ol>\\n<li>\\u00a0The declarative style does not specify the enumeration mechanism- it uses the &#8216;range&#8217; function, rather than incrementing explicitly (as a regular foreach loop does).</li>\\n<li>The declarative style does not specify the filtering mechanism- it uses a &#8216;filter&#8217; function, rather than an explicit &#8216;if&#8217; statement.</li>\\n<li>The declarative style does not specify the storage mechanism- it usually just returns any type that can be enumerated/iterated over, not a concrete type like a list/array/etc.</li>\\n</ol>\\n<p>These differences create three key benefits:</p>\\n<ol>\\n<li>The abstracted enumeration mechanism means the enumeration mechanism can be optimized, and doesn&#8217;t have to be considered by the user.</li>\\n<li>The abstracted filtering means the filtering can be optimized because its implementation is hidden from the user, and its intention is more explicit- this is the <em>declarative</em>\\u00a0part of it. \\u00a0We&#8217;ll see how to read a more complex statement next.</li>\\n<li>The abstracted storage mechanism grows out of the other two abstractions- there may not be a storage mechanism at all, but possibly just <em>generators</em>- it really depends on what is expedient for the statement.</li>\\n</ol>\\n<p>Let&#8217;s try out a more concrete example. \\u00a0In this case, we&#8217;ll be doing some complex enumeration- grouping, sorting, and projejcting. \\u00a0We want to get a collection of MyObject from active table rows that are ordered by date and then by ID.</p>\\n<pre>dateAndItemsMap = dict()\\nfor row in myTable.rows:\\n\\u00a0 \\u00a0 if row.isActive:\\n\\u00a0 \\u00a0 \\u00a0 \\u00a0 if row.date not in dateAndItemsMap:\\n\\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 dateAndItemsMap[row.date] = list()\\n\\u00a0 \\u00a0 \\u00a0 \\u00a0 dateAndItemsMap[row.date].append(new MyObject(row))\\nsortedDates = dateAndItemsMap.values()\\nsortedDates.sort()\\nitemsSortedByDateThenId = list()\\nfor date in sortedDates:\\n\\u00a0 \\u00a0 items = dateAndItemsMap[date]\\n\\u00a0 \\u00a0 items.sort(lamba obj: obj.id)\\n\\u00a0 \\u00a0 itemsSortedByDateThenId.extend(items)</pre>\\n<p>Wow, that&#8217;s a lot of code! \\u00a0And not at all clear when reading it. \\u00a0Let&#8217;s read it: <em>Create a dictionary, and for each row, if it is active, make sure the map has a list for the row&#8217;s date, and append a new MyObject to the list at row.date in the map. \\u00a0Then sort the keys, then iterate over the sorted keys, get the sorted list value, and keep extending the result list.</em>\\u00a0 That&#8217;s a mouthful, and I think that was pretty brief.</p>\\n<p>Let&#8217;s compare this to the declarative style:</p>\\n<pre>myTable.rows.filter(lambda r: r.isActive).select(lambda r: MyObject(r)).order_by(lambda o: o.date).then_by(lambda o: o.id)</pre>\\n<p>One line? \\u00a0One stinking line? \\u00a0Let&#8217;s read it: <em>For each row that is active, select a new MyObject, and order those by dates, and then by id.</em>\\u00a0 Notice a) how the explanation expresses <em>what you want</em>, <strong>not</strong>\\u00a0how you want to get it, and b) the explanation reads very similar to the code.</p>\\n<p>This is why declarative programming rocks, <strong>right now.</strong>\\u00a0 It is worth its weight in gold to learn how to use LINQ in C#, itertools in python, or whatever declarative querying mechanism your language hopefully has. \\u00a0Your code will become infinitely clearer.</p>\\n<p>The reason to be declarative will be even more awesome in the future, is when we can &#8216;prove&#8217; software to be side-effect free (<strong>pure</strong>), and the compiler or runtime can automatically parallelize it and optimize it. \\u00a0This is one reason languages like SQL have been so effective- the software/hardware can actually reorder or adjust your query to optimize it, and those algorithms or optimizations can change because the language itself has no notion of how the algorithms for JOIN, GROUP_BY, etc. are implemented.</p>\\n<p>That makes sense, I hope, and it is just one benefit of learning about functional programming. \\u00a0Next up will probably be closures.</p>", "summary": "Functional programming is one of the most important developments in programming, but one that has been understandably slow to be adopted and understood by many programmers and tech artists. \\u00a0Over a few posts, I&#8217;m going to try to go into the how and why of using a more functional style in your ", "id": "http://www.robg3d.com/?p=712", "categories": ["Rob Galanakis"], "metadata": {"guid": "7cf25c60-08d2-4be6-8544-0869547c3245", "likes": 0, "is_published": true}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/25/exportlayer-v1-3-for-modo-501/", "title": "ExportLayer v1.3 for modo 501", "datetime": "2011-07-25T09:29:54", "html": "<p>It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light.</p>\\n<p>Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;<em>UCX_$ParentMeshName</em>&#8221; style names it&#8217;s enough to just name the collision hulls as &#8220;<em>UCX</em>&#8220;, the script will fix it during export. Just make sure that the collisions are children of the main mesh.</p>\\n<p>FBX files can be saved with fake Revit signature which makes it possible to link the produced FBX file in 3ds Max 2011 (File Link Manager).</p>\\n<p><strong>IMPORTANT</strong>: Modo 501 SP3 (and possibly earlier 501 versions) have a nasty bug where displaced SDS geometry is frozen without any deformations. The workaround is similarly ugly: I initiate an incorrect file save which makes an error window pop up which forces some kind of an internal update after which the freeze command works properly. So when you see an error popup saying</p>\\n<blockquote><p>Scene save was unsuccessful &#8212; Not Found File &#8220;C:&#8221; not written.</p></blockquote>\\n<p>well, it&#8217;s &#8220;normal&#8221;&#8230; just click OK and wait for the script to finish.<br />\\nAlso, freezing a PSDS surface messes up morphmaps. The workaround for that slows down the export process considerably.<br />\\nTo avoid freezing altogether use the <em>NOFREEZE</em> parameter.</p>\\n<p><strong>Arguments:</strong><br />\\n<em>FBX; LWO; OBJ; COLLADA</em>: They define the output format. Default is FBX.<br />\\n<em>SILENTSAVE</em>: The file will be saved next to the original file. No dialog will be displayed.<br />\\n<em>NOQUADS</em>: Triangulates the object the exported object.</p>\\n<p><em>FBXREVIT</em>: Saves an FBX file and makes it look like it came from Autodesk Revit.<br />\\n- In this mode NOQUADS and SILENTSAVE are automatically enabled.<br />\\n- 3ds Max will only recognize an UV if it&#8217;s used by at least one image in the shader tree.</p>\\n<p>NOFREEZE: The geometry will not be frozen.<!-- PHP 5.x --></p>", "summary": "It exports the selected layer to a file, using the the name of the layer as the filename. It will not export the default camera and the default distant light. Supports &#8220;lazy Unreal collision object naming&#8221;. This means that instead of the proper &#8220;UCX_$ParentMeshName&#8221; style nam", "id": "http://www.zspline.net/blog/?p=1340", "categories": [], "metadata": {"guid": "9ae35466-c6cf-4cb8-a070-c147ede632af", "likes": 0, "is_published": false}}, {"author": "Rick", "url": "http://www.rsart.co.uk/2011/07/23/toggle-debug-print-in-maxscript/", "title": "Toggle debug print in Maxscript", "datetime": "2011-07-23T23:44:45", "html": "<p>Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). Often you&#8217;ll only want to turn toggle on the debug logging when you&#8217;ve got an issue.</p>\\n<p>A while ago I started using a more clever system by setting a variable debugprint = true at the top of my scripts. Then when I was using the debug spew I&#8217;d use:</p>\\n<p><code>if debugprint == true then print \\"My debug stuff\\"</code></p>\\n<p>Matt (who I work with) came up with a much more elegant solution. Much like my debugprint = true variable he created  debugPrintVal, and instead of querying the state of it for every print, he simple used a new function, debugPrint:</p>\\n<p><code>fn debugPrint printStr =<br />\\n(<br />\\n    if debugPrintVal == true do<br />\\n        (<br />\\n            Print printStr<br />\\n        )<br />\\n)<br />\\n</code></p>\\n<p>So, instead of using  :</p>\\n<p><code>if debugprint == true then print \\"My debug stuff\\"</code></p>\\n<p>We can now used the much cleaner version:</p>\\n<p><code>debugprint \\"My debug stuff\\"</code></p>", "summary": "Printing out a debug spew is very useful when scripting, but often you end up with tons of print statements littering your code. Printing debug is often one of the slowest things in max (or any language, instead of just doing the actual work you are sending signal through hardware, but I digress). O", "id": "http://www.rsart.co.uk/?p=407", "categories": ["Rick"], "metadata": {"guid": "eae874f4-a637-4d6e-bd62-c057f2045c60", "likes": 0, "is_published": true}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=708", "title": "Learning a programming language by reading a manual is like learning a language by reading a dictionary", "datetime": "2011-07-23T03:58:13", "html": "<p>A verbal language is more than its grammar and vocabulary. \\u00a0A programming language is much more than its syntax and keywords.</p>\\n<p>Mastering a language gives you new insights into how people think and changes the way you think. \\u00a0You cannot learn this through words, you learn this through interacting with people, or libraries.</p>\\n<p>Be wary of anyone who says they know more than a dozen languages. \\u00a0Knowing how to program or speak in a dozen languages is easy, understanding how to think in a dozen languages is a very rare talent and I imagine those people are talking about much more interesting things than how many languages they can speak or program in.</p>\\n<p>You can learn to speak a language without learning how to communicate in that language. \\u00a0In the same way, you can create a program in a language without communicating effectively.</p>\\n<p>Sophisticated use of verbal language allows precision in expression but requires education to understand. \\u00a0Sophisticated use of a programming language allows and requires the same. \\u00a0We should understand when to be sophisticated and when to be crude, and always seek to educate.</p>\\n<p>Do not confuse expert use of an &#8216;informal&#8217; language as crude use of a &#8216;formal&#8217; language. \\u00a0Consider what Ebonix is to English, or a scripting language is to C++. \\u00a0&#8217;Informal&#8217; languages have the same merits as &#8216;formal&#8217; ones.</p>\\n<p>You cannot learn how to speak a language by reading a dictionary. \\u00a0You cannot learn how to program in a language by reading the manual. These represent translating an expression rather than generating an expression. \\u00a0If translating were sufficient, there&#8217;d be no merits or use of learning additional languages.</p>\\n<p>When you can create your thoughts in a language, so that you cannot meaningfully distinguish between a secondary and native language, you have truly learned a language.</p>", "summary": "A verbal language is more than its grammar and vocabulary. \\u00a0A programming language is much more than its syntax and keywords. Mastering a language gives you new insights into how people think and changes the way you think. \\u00a0You cannot learn this through words, you learn this through interacting with", "id": "http://www.robg3d.com/?p=708", "categories": ["Rob Galanakis"], "metadata": {"guid": "8663e9bd-e78d-4c2d-816e-4f33d05827a9", "likes": 0, "is_published": true}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/7930189393", "title": "Highlight an Excel Cell Using Python", "datetime": "2011-07-22T11:55:00", "html": "<ol><li>\\n</li><li>import xlrd, xlwt</li>\\n<li>\\n</li><li>inputBook = xlrd.open_workbook(\\u2018test.xls\\u2019)</li>\\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\\n<li>\\n</li><li>outputBook = xlwt.Workbook()</li>\\n<li>outputSheet = outputBook.add_sheet(\\u201csheet 1\\u201d, cell_overwrite_ok=True)</li>\\n<li>\\n</li><li>style = xlwt.easyxf(\\u2018pattern: pattern solid, fore-colour red\\u2019)</li>\\n<li>\\n</li><li>for x in range(inputSheet.nrows):</li>\\n<li>\\u00a0 \\u00a0 for y in range(inputSheet.ncols):</li>\\n<li>\\u00a0 \\u00a0 \\u00a0 \\u00a0 if(inputSheet.cell(x,y).value):</li>\\n<li>\\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0cellValue = inputSheet.cell(x,y).value</li>\\n<li>\\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0 \\u00a0outputSheet.write(x,y, cellValue)</li>\\n<li>\\n</li><li>outputSheet.write(5,5, \\u201crewritten cell\\u201d, style)</li>\\n<li>\\n</li><li>\\n</li><li>outputBook.save(\\u201ctest.xls\\u201d)</li>\\n\\n</ol><p>This code opens a excel file, and recopies all the contents into a new excel file, and allows you to add highlighted cells to it. \\u00a0Good for validation purposes.</p>\\n<ol></ol>", "summary": "<ol><li>\\n</li><li>import xlrd, xlwt</li>\\n<li>\\n</li><li>inputBook = xlrd.open_workbook(\\u2018test.xls\\u2019)</li>\\n<li>inputSheet = inputBook.sheet_by_index(0)</li>\\n<li>\\n</li><li>outputBook = xlwt.Workbook()</li>\\n<li>outputSheet = outputBook.add_sheet(\\u201csheet 1\\u201d, cell_overwrite_ok=True)</li>\\n<li>\\n</li><li>style ", "id": "http://shawnkirsch.tumblr.com/post/7930189393", "categories": ["Unknown Author"], "metadata": {"guid": "9a86dd70-2b83-49dc-a151-fac566245d11", "likes": 0, "is_published": true}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/07/power-animator.html", "title": "Power Animator", "datetime": "2011-07-22T10:34:31.240000", "html": "<div class=\\"MsoNormal\\"><i>(ed. note: If you\\u2019ve made your way here from <a href=\\"http://altdevblogaday.com/\\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\"><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\">\\u201cThere are two ways of exerting one\'s strength: one is pushing down, the other is pulling up.\\u201d</span> \\u2013 Booker T. Washington</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">For today\\u2019s post, I\\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. </div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold\'s Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><a href=\\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s1600/csi.png\\" style=\\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\\"><img border=\\"0\\" height=\\"640\\" src=\\"http://4.bp.blogspot.com/-aadhzdWfFRc/TikWFRpl6OI/AAAAAAAAAHM/cBt6rKypXJk/s640/csi.png\\" width=\\"233\\" /></a></div><div class=\\"MsoNormal\\">On that day at Gold\'s Gym, I was benching and curling, because THAT\'S WHAT MEN DO (that\'s how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">She continued on with her squats while I performed my \\"superior\\" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since \\"clearly squats are supposed to be bad for your knees!\\" I reply \\"I\\u2019m gonna do some curls!\\" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">She ignored me. She was deadlifting, and that was serious business for her.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Later on that night Jessica turned to me and asked \\"So, what are your fitness goals?\\" I replied \\"To get bigger and stronger, of course.\\" She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Then she said it:</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\"><br /></div><table cellpadding=\\"0\\" cellspacing=\\"0\\" class=\\"tr-caption-container\\" style=\\"float: right; margin-left: 1em; text-align: right;\\"><tbody><tr><td style=\\"text-align: center;\\"><a href=\\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s1600/LooneyTunes_Gossamer_Model_Sheet.jpg\\" style=\\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\\"><img border=\\"0\\" height=\\"256\\" src=\\"http://1.bp.blogspot.com/-gZFL6TlSblo/TikCFdsWowI/AAAAAAAAAHI/qNPzUJtCKV4/s320/LooneyTunes_Gossamer_Model_Sheet.jpg\\" width=\\"320\\" /></a></td></tr><tr><td class=\\"tr-caption\\" style=\\"text-align: center;\\">This is apparently what I looked like, hair and all.</td></tr></tbody></table><div class=\\"MsoNormal\\">\\"You know you have chicken legs, right? You\'re shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that.\\"</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">I was disheartened, totally bummed out, but more importantly, I was <i>confused</i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men\'s Health! They HAD to be right!<br /><br />More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!</i></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Jessica and I didn\'t go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That\'s when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Training in a vacuum that way had stunted my growth in a literal sense- I wasn\'t getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I\'ve gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. </div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">So I guess getting strength training advice from a girl isn\\u2019t so bad after all. <span style=\\"font-family: Wingdings;\\">J</span></div><div class=\\"MsoNormal\\"><br />I invite you to read my parallel story about animation on AltDevBlogADay (<a href=\\"http://altdevblogaday.com/2011/07/22/power-animator/\\">http://altdevblogaday.com/2011/07/22/power-animator/</a>)</div><div style=\\"line-height: 14.25pt;\\"><br /></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com\\" width=\\"1\\" /></div>", "summary": "<div class=\\"MsoNormal\\"><i>(ed. note: If you\\u2019ve made your way here from <a href=\\"http://altdevblogaday.com/\\">http://altdevblogaday.com</a>, welcome!)</i></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\"><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\">\\u201cThere are two ways of exer", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526", "categories": [], "metadata": {"guid": "17f41b91-dcb0-4a6b-aae1-6f12c4364bc6", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=784", "title": "more on OO rigging and animator tools", "datetime": "2011-07-21T22:47:08", "html": "<p>Following on from the <a href=\\"http://www.macaronikazoo.com/?p=752\\" title=\\"object oriented rigging in Skeleton Builder\\">previous post</a> I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts.</p>\\n<p>Now there are a bunch of different ways you can do this&#8230;  This is just one way that seems (to me) like a good combination of rigor and ease of coding.</p>\\n<p>In Skeleton Builder, each rig part is encapsulated in a class that derives from RigPart. \\u00a0The next step is to create an <a href=\\"http://www.macaronikazoo.com/?p=726\\" title=\\"A more thorough Interface class\\">interface class</a> which defines two methods &#8211; switchToFk and switchToIk. \\u00a0Our rig part class will inherit from both RigPart and this interface class and will implement these two methods. \\u00a0Our code ends up looking something like this:</p>\\n<pre class=\\"brush:py\\">import typeFactories\\nimport baseRigPrimitive\\nclass IkFkSwitchable(object):\\n  __metaclass__ = typeFactories.interfaceTypeFactory( baseRigPrimitive.RigPart.__metaclass__ )\\n  def switchToFk( self ):\\n    \'\'\'this method should implement the logic to switch to FK mode\'\'\'\\n    pass\\n  def switchToIk( self ):\\n    \'\'\'this method should implement the logic to switch to IK mode\'\'\'\\n    pass\\n\\nclass Leg(baseRigPrimitive.RigPart, IkFkSwitchable):\\n  #the code to implement this rig part goes here\\n  ...\\n  def switchToFk( self ):\\n    #implementation of this method goes below...\\n    ...\\n  def switchToIk( self ):\\n    #implementation of this method goes below...\\n    ...</pre>\\n<p>As you can see here, the Leg rig part class implements the logic for switchToFk and switchToIk (otherwise an exception gets thrown).  Now we can write a simple UI with a &#8220;switch to Fk&#8221; button and a &#8220;switch to Ik&#8221; button, something like this:</p>\\n<pre class=\\"brush:py\\">import rigPrimitives\\nimport maya.cmds as cmd\\nfrom baseMelUI import *\\n\\ndef getSelectedSwitchableParts():\\n  \'\'\'\\n  returns a list of all RigPart instances that have at least one of their members\\n  selected\\n  \'\'\'\\n  selectedSwitchableParts = []\\n  selectedRigParts = rigPrimitives.getPartsFromObjects( cmd.ls( sl=True ) )\\n  for rigPart in selectedRigParts:\\n    if isinstance( rigPart, IkFkSwitchable ):\\n      selectedSwitchableParts.append( rigPart )\\n\\n  return selectedSwitchableParts\\n\\nclass UserToolLayout(MelHLayout):\\n  def __init__( self, parent ):\\n    MelHLayout.__init__( self, parent )\\n    self.UI_fkButton = MelButton( self, l=\\"switch to FK\\", c=self.on_pressFk )\\n    self.UI_ikButton = MelButton( self, l=\\"switch to IK\\", c=self.on_pressIk )\\n\\n    #this useful method sets up a scriptjob parented to the uI that triggers the given\\n    #method when the scene selection changes.  So this will update the UI when the user\\n    #changes the selection\\n    self.setSelectionChangeCB( self.on_selectionChange )\\n    self.on_selectionChange()  #call this to init the UI\\n\\n    #make sure to call this so the form layout gets setup properly\\n    self.layout()\\n\\n  ### EVENT HANDLERS ###\\n  def on_selectionChange( self, *a ):\\n    #need to explicitly cast here because of a bug in setEnabled\\n    selectedSwitchableParts = bool( getSelectedSwitchableParts() )\\n    self.UI_fkButton.setEnabled( selectedSwitchableParts )\\n    self.UI_ikButton.setEnabled( selectedSwitchableParts )\\n  def on_pressFk( self, *a ):\\n    for rigPart in getSelectedSwitchableParts():\\n      rigPart.switchToFk()\\n  def on_pressIk( self, *a ):\\n    for rigPart in getSelectedSwitchableParts():\\n      rigPart.switchToIk()\\n\\nclass UserToolWindow(BaseMelWindow):\\n  WINDOW_NAME = \\"ikFkSwitcherTool\\"\\n  WINDOW_TITLE = \\"Ik Fk switcher tool\\"\\n  DEFAULT_SIZE = 300, 45\\n  DEFAULT_MENU = None\\n\\n  def __init__( self ):\\n    UserToolLayout( self )\\n    self.show()\\n\\nUserToolWindow()</pre>\\n<p>So this super simple little tool will update itself on selection change.  It will let the user know whether the selected rig part can be switched from Fk to Ik or vice-versa.</p>\\n<p>Obviously you could make this a hell of a lot smarter.  For example, you could inspect the rig parts, see which interfaces they implement and display the appropriate UI.  You could also do things like have the IkFkSwitchable interface class define a getIkFkMode() method which would return whether the rig part is in Fk or Ik mode.  This way you could only enable the appropriate button to make it even more obvious to the user the range of available actions.</p>\\n<p>Anyway hopefully you get the idea.</p>", "summary": "Following on from the previous post I thought I&#8217;d talk a bit about how you could implement a tool which would display a bunch of actions that are supported by the currently selected rig parts. Now there are a bunch of different ways you can do this&#8230; This is just one way that seems (to [.", "id": "http://www.macaronikazoo.com/?p=784", "categories": ["hamish"], "metadata": {"guid": "78b71ec9-df92-4860-b8df-1eb4fc668c04", "likes": 0, "is_published": true}}]'
08-07 21:20 root         INFO     Handling CGI request.
08-07 21:20 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:20 SocketClient INFO     Sending to service: "["request_content_slice", [30, 15], {}]"
08-07 21:20 SocketClient INFO     Received from service: "[{"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/20/toward-a-quasi-time-independant-twist-node/", "title": "Toward a quasi time independant  twist node", "datetime": "2011-07-20T08:32:05", "html": "<p>This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.</p>\n<p><img alt=\"\" height=\"483\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/orient_constraint_torsion1.gif?w=408&#038;h=483\" title=\"orient_constraint_torsion\" width=\"408\" /></p>\n<p><em>(Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 )</em></p>\n<p>After writing a <em><span style=\"color: #ff6600;\"><a href=\"http://circecharacterworks.wordpress.com/2011/07/06/a-journey-in-the-realm-of-corrective-shapes-ii/\">quaternion based aim constraint</a>\u00a0</span></em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.</p>\n<p></p>\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.</p>\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.</p>\n<p>1)<em> From <span style=\"color: #ff6600;\">pi</span>e to <span style=\"color: #ff6600;\">pi</span>e ( with a thick French accent )</em> :</p>\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.</p>\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.</p>\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):</p>\n<pre class=\"brush: python; wrap-lines: false;\">\nimport maya.cmds as cmds\n\nrefLoc = cmds.spaceLocator( n='referenceLoc1')[0]\nstartLoc = cmds.spaceLocator( n='StartLoc1')[0]\nEndLoc = cmds.spaceLocator( n='EndLoc1')[0]\n\ncmds.parent( [startLoc ,EndLoc] , refLoc )\ncmds.setAttr( startLoc + '.t', 10.0, 0, 0, type='double3' )\ncmds.setAttr( EndLoc + '.t', 10.0, 2.0, 0, type='double3' )\n\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( refLoc + '.angle',e=True,keyable=True  )\n\n#Use locator position  as vector\nangleReader = cmds.createNode( 'angleBetween' )\ncmds.connectAttr( startLoc + '.translate', angleReader + '.vector1' )\ncmds.connectAttr( EndLoc + '.translate', angleReader + '.vector2' )\n\nnullPos = [(0,0,0),(0,0,0)]\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='starCurve1')\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), 'starCurveShape1' )\n\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n='endCurve1')\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), 'endCurveShape1' )\n\ncmds.parent( [startCurve ,endCurve] , refLoc )\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\ncmds.setAttr( cvShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( startLoc + '.translate' , cvShape1 + '.controlPoints[1]', f=True )\ncmds.setAttr(  endShape1 + '.controlPoints[0]', 0,0,0,type='double3' )\ncmds.connectAttr( EndLoc + '.translate' , endShape1 + '.controlPoints[0]', f=True )\n\ncmds.connectAttr( angleReader + '.angle',  refLoc + '.angle', f=True  )\n\n#Don't let depency node lives in the wild polluting the outliner: group them in container\nasset = cmds.container( type='dagContainer',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\n\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\ncmds.setAttr( asset + '.angle',e=True,keyable=True  )\n\ncmds.connectAttr(  refLoc + '.angle',  asset + '.angle' , f=True  )\n#dont forget to rename The hyperLayout node associate with this container\nlayout = cmds.listConnections(  asset , t='hyperLayout' )[0]\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\n\n#kindly prefix the element in the container\nNodeList =  cmds.container(asset, q=True, nl=True)\nfor node in NodeList :\n    cmds.rename( node,asset + '_' + node, ignoreShape=True)\n</pre>\n<p><img alt=\"\" class=\"aligncenter\" height=\"451\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/vector_angle.gif?w=393&#038;h=451\" title=\"angle range beetween 2 vectors\" width=\"393\" /></p>\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.</p>\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )</em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\u00a0 in a clock wise manner.</p>\n<p>2) History and time as a 4th dimension:</p>\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\u00a0 host a wealth of research papers:</p>\n<ul>\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href=\"http://www.chrisevans3d.com/reference.htm\"><span style=\"color: #ff6600;\"><em>http://www.chrisevans3d.com/reference.htm</em></span></a></li>\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href=\"http://kesen.realtimerendering.com/\"><span style=\"color: #ff6600;\"><em>http://kesen.realtimerendering.com/</em></span></a></li>\n</ul>\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.</p>\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.</p>\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .</p>\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),</em> and not interactive.</p>\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href=\"http://www.strarup.net/maya/plugins/lagNode/\"><span style=\"color: #ff6600;\"><em>Alex V. U. Strarup</em></span></a> was talking about a lag node inspired by maya framecache node.</p>\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).</p>\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\u00a0 an MPlug and MDGContext.</p>\n<p>This is what make it possible to <span style=\"color: #ff6600;\"><em>&#8216;ghost&#8217;</em></span> an animated object in maya among many other things.</p>\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br />\n<em>(a little excerpt from Antitrust movie )</em></p>\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style=\"color: #ff6600;\">setDependentsDirty</span>()\u00a0 method\u00a0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):</em></p>\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.</p>\n<p>I took advantage of this property to determine a twist direction:</p>\n<ul>\n<li>Inside a compute method ,the value of separate output buffer is first readen</li>\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.</li>\n<li>Finally\u00a0 if the input and buffer values are not identical we store the twist input value into the output attribute.</li>\n</ul>\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.</p>\n<p><img alt=\"\" height=\"471\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/vector_direction.gif?w=435&#038;h=471\" title=\"\" width=\"435\" /></p>\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) </em>we can use their\u00a0 cross product to create a perpendicular vector that will act as a twist axis.</p>\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\u00a0 the reference vector <em>about</em> the twist axis <em>by</em> 90.0 degrees.</p>\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.</p>\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .</p>\n<p>In his article <span style=\"color: #ff6600;\"><em>(<a href=\"http://www.3dfiggins.com/writeups/forearmTwist/\">\u00a0http://www.3dfiggins.com/writeups/forearmTwist/</a> )</em></span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:</p>\n<ul>\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.</li>\n<li>As a manual process, the result can be less accurate or lacks consistency.</li>\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.</li>\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.</li>\n</ul>\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.</p>\n<p>Part of the remaining works was\u00a0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.</p>\n<p>3)<em> Angle <span style=\"color: #ff6600;\">accumulation</span> versus number of <span style=\"color: #ff6600;\">revolution</span>:</em></p>\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\u00a0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.</p>\n<p><img alt=\"\" height=\"395\" src=\"http://circecharacterworks.files.wordpress.com/2011/07/clock_circle.gif?w=395&#038;h=395\" title=\"\" width=\"395\" /></p>\n<p>First it was important to translate the past and current rotation vector into a more consistent\u00a0 value : a normalized value <em>U</em> that represent a percentage of a circle perimeter.</p>\n<p>One way to figure this circle purpose is to think of it\u00a0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.</p>\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\u00a0the separation line increases and its band can start to turn and wrap\u00a0 several times around this cylinder.</p>\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution</em> and a parametric value U.</p>\n<pre class=\"brush: python; wrap-lines: false;\">\n# Procedure to compute the number of revolution along on unit circle\n\n#Case A: positive rotation direction:\n### current rotation is in most case greater than past rotation\n### when this is false we can increment the number of revolution\n\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\nif past_rotation &gt; current_rotation :\n   currentRevolution += 1.0\n\n#Case B: negative rotation direction:\n### current rotation is in most case lower than past rotation\n### when this is false we can decrement the number of revolution\n\nif past_rotation &lt; current_rotation :\n   currentRevolution -= 1.0\n\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\ncurrentRevolution_outputHandle.setClean()\n</pre>\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\u00a0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].</p>\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .</p>\n<p>4)<em> Counter measure for a <span style=\"color: #ff6600;\">previous value dependent</span> node</em>:</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/575/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/575/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/575/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "This post is about\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\u00a0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\u00a0 I was often confronted with twist popping out of control w", "id": "http://circecharacterworks.wordpress.com/?p=575", "categories": ["circerigging"], "metadata": {"guid": "6cc70911-ba01-4409-b2bb-128dee5d7817", "likes": 0, "is_published": true}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=81", "title": "instantiate an asset by name", "datetime": "2011-07-20T01:17:18", "html": "<p>More Unity learning&#8230;</p>\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):</p>\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.</p>\n<p>Then use the following code (Boo):</p>\n<pre class=\"brush:py\">obj as GameObject\nins as GameObject\n\n# let's grab the asset\nobj=Resources.Load(\"tile_flat01\", GameObject)\n# add a texture to the asset\nobj.renderer.material.mainTexture=Resources.Load(\"cobbleTex\", Texture2D)\n# instantiate it\nins=Instantiate(obj)</pre>\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.</p>\n<p>edit: seems I have to find a Unity icon for my blog</p>", "summary": "More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82", "id": "http://blarg.robertkist.com/?p=81", "categories": [], "metadata": {"guid": "3ed9e97a-8998-4ff4-80dd-57108af42b7d", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=701", "title": "Compliments to the chef!", "datetime": "2011-07-20T00:44:10", "html": "<p>My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \u00a0One time, a food critic dined there, and enjoyed his <em>paella</em>\u00a0so much that he went into the back to compliment the chef. \u00a0He saw the two and congratulated the dishwasher-who didn&#8217;t speak a lick of English- on a dish well made.</p>", "summary": "My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \u00a0One time, a food critic dined there, and enjoyed his paella\u00a0so much that he went into the back to compliment the chef. \u00a0He saw", "id": "http://www.robg3d.com/?p=701", "categories": [], "metadata": {"guid": "5e9b13e5-d329-4e9f-a441-c7a19ee854fd", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=350", "title": "Rigging for the masses!", "datetime": "2011-07-19T22:14:43", "html": "<p>Last weekend I&#8217;ve been giving a conference about rigging in <a href=\"http://www.campus-party.es/2011/index.html\" target=\"_blank\" title=\"Campus Party\">Campus Party</a>. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In spanish.<br />\n<em><br />\nEl pasado fin de semana estuve en <a href=\"http://www.campus-party.es/2011/index.html\" target=\"_blank\" title=\"Campus Party\">Campus Party</a>, en Valencia, dando una charla. Mi objetivo era hacer que la gente ajena al 3D entendiese en qu\u00e9 consiste la figura del &#8216;rigger&#8217; y c\u00f3mo se encaja dentro de una producci\u00f3n. La organizaci\u00f3n ha subido esta conferencia (as\u00ed como todas las dem\u00e1s) a Youtube, as\u00ed que se puede ver completa. En espa\u00f1ol.</em></p>\n<p></p>\n<p>&#8212;&#8212;&#8212; <strong>\u00a1AUTOBOMBO EXTRA!</strong> &#8212;&#8212;&#8212;</p>\n<p><em>Hace unos meses, Abel, del <em>podcast</em> &#8216;Houston, tenemos un programa&#8217;, me hizo una entrevista para su programa. Se puede escuchar y descargar desde <a href=\"http://www.houstontenemosunprograma.com/2011/05/setup-de-personajes-con-iker-j-de-los.html\" target=\"_blank\" title=\"aqu\u00ed\">aqu\u00ed</a>.</p>\n<p></em></p>", "summary": "Last weekend I&#8217;ve been giving a conference about rigging in Campus Party. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In span", "id": "http://somosposmodernos.com/blog/?p=350", "categories": [], "metadata": {"guid": "d2a10086-f592-4166-b969-68cc2beb0b4b", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/19/gavit-dev-diary-14/", "title": "Gavit Dev Diary #14", "datetime": "2011-07-19T15:15:27", "html": "<p>It&#8217;s been a while since the last developer diary. Unfortunately the project suffered a serious setback on the programming side: I trusted the wrong person and got screwed. I lost a couple of hundred bucks but more importantly so much time was wasted that the planned animated short (showcasing the features of Gavit) can not be finished in time. I&#8217;ll have to come up with some other way to effectively present my achievements to potential employers.</p>\n<p><del>So if you are an experienced unreal programmer (or you know one who might be interested) <a href=\"http://www.zspline.net/blog/contact/\" target=\"_blank\">please let me know</a>.</del></p>\n<p><strong>UPDATE</strong>: Never mind, the good people at <a href=\"http://www.digitalconfectioners.com/\" target=\"_blank\">Digital Confectioners</a> took over the project. :)</p>\n<p>Other aspects of the project did advance though: I reported half a dozen modo bugs and implemented a few workarounds for them in my export script. I extended my MetaSL shader library with a few extra nodes and further refined the whole workflow.</p>\n<p>But these &#8220;under the hood&#8221; improvements are boring so let&#8217;s see something more visual.</p>\n<p>This is Mr Elegant, our first proper (non-test-dummy) character:</p>\n<div class=\"wp-caption aligncenter\" style=\"width: 170px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant01.png\" rel=\"lightbox\" title=\"mrelegant01.png\"><img alt=\"\" class=\"thumb \" height=\"134\" id=\"thumb607\" src=\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant01.png\" width=\"160\" /></a>\n<p class=\"wp-caption-text\">Mr Elegant (ingame)</p>\n</div>\n<p class=\"thickbox\" title=\"mrelegant01.png\">It was modeled by <a href=\"http://www.joshstoker.com/\" target=\"_blank\">Josh Stoker</a> in ZBrush then it was sent to modo using the excellent GoZ functionality. I used convexity/concavity tracing to generate the base diffuse color map:</p>\n<div class=\"wp-caption aligncenter\" style=\"width: 143px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant02.png\" rel=\"lightbox\" title=\"mrelegant02.png\"><img alt=\"\" class=\"thumb \" height=\"160\" id=\"thumb608\" src=\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant02.png\" width=\"133\" /></a>\n<p class=\"wp-caption-text\">The diffuse color.</p>\n</div>\n<p>Earlier I wrote about the theory behind <a href=\"http://www.zspline.net/blog/2011/05/22/gavit-dev-diary-13/\" target=\"_blank\">character colorization</a> and here I implemented it. The black/red/green areas are defined as vertex colors on the SDS cage of the high definition mesh then baked down to the low polygon object:</p>\n<div class=\"wp-caption aligncenter\" style=\"width: 143px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant03.png\" rel=\"lightbox\" title=\"mrelegant03.png\"><img alt=\"\" class=\"thumb \" height=\"160\" id=\"thumb609\" src=\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant03.png\" width=\"133\" /></a>\n<p class=\"wp-caption-text\">Vertex colors on the high polygon mesh.</p>\n</div>\n<p>This texture along with the extra UV map defining color zones, allow me to separately recolor the skin, the facial hair, the tie, the shirt, the handkerchief, the jacket, the hands, the pants, the shoes, the front of the shoe and the sole.</p>\n<p>I combined the &#8220;specular&#8221; and &#8220;specular power&#8221; maps into one texture so the final shader uses 4 texture samplers and 99 instructions (although that will go up a bit as soon as the mesh gets skinned).<!-- PHP 5.x --></p>", "summary": "It&#8217;s been a while since the last developer diary. Unfortunately the project suffered a serious setback on the programming side: I trusted the wrong person and got screwed. I lost a couple of hundred bucks but more importantly so much time was wasted that the planned animated short (showcasing ", "id": "http://www.zspline.net/blog/?p=1333", "categories": [], "metadata": {"guid": "15b2a405-d225-4d5c-9dcc-d617f27e5ab4", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://www.chrisevans3d.com/pub_blog/?p=673", "title": "SIGGRAPH 2011", "datetime": "2011-07-19T07:32:42", "html": "<p>I am giving three small talks at SIGGRAPH, drop me a line if you will be in Vancouver.</p>\n<h2><a href=\"http://www.siggraph.org/s2011/content/Rigging-Characters-CryENGINE-0\" target=\"_blank\">Rigging Characters for CryENGINE</a></h2>\n<p>How to rig, skin, and export a character for CryENGINE 3. Topics include  physics setup, building characters from many skinned meshes, and  creating Character Definitions and Character Parameter files. These  rigging basics are applicable to most run-time game engines.</p>\n<h2><a href=\"http://www.siggraph.org/s2011/content/introduction-python-scripting-0\" target=\"_blank\">Introduction to Python Scripting</a></h2>\n<p>In this introduction to Python, a powerful scripting language used by  many 3D applications, attendees learn the basics and explore small  example scenarios gleaned from actual game and film productions. The  sessions are taught in a way that should empower attendees to  immediately begin creating time-saving python scripts and applications.</p>\n<h2><a href=\"http://www.siggraph.org/s2011/content/World-Creation-CryENGINE-0\" target=\"_blank\">World Creation in CryENGINE</a></h2>\n<p>Have you ever wanted to make a videogame? This session shows how to  build a small level in the freely available CryENGINE 3 SDK. Topics  include: world building and tools (FlowGraph, CryENGINE&#8217;s visual  scripting language, and Trackview, the camera sequencing and directing  tools). In less than an hour, attendees create their own playable video  games.</p>", "summary": "I am giving three small talks at SIGGRAPH, drop me a line if you will be in Vancouver.\nRigging Characters for CryENGINE\nHow to rig, skin, and export a character for CryENGINE 3. Topics include  physics setup, building characters from many skinned meshes, and  creating Character Definitions and Chara", "id": "http://www.chrisevans3d.com/pub_blog/?p=673", "categories": [], "metadata": {"guid": "6dc7f8a3-ffd1-4f59-8c05-d5b4c6460f8a", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=698", "title": "Cloud Based Pipelines?", "datetime": "2011-07-19T00:37:28", "html": "<p>Originally posted on <a href=\"http://altdevblogaday.com/2011/07/16/cloud-based-pipelines/\">AltDevBlogADay</a>:</p>\n<p>The rest of software is moving into The Cloud, how come we aren&#8217;t doing the same with our tools and pipeline?</p>\n<p>I love the cloud. \u00a0Yes, I know it&#8217;s a buzz word for not quite revolutionary concepts, but I love it anyway. \u00a0I love it for the practical benefit I get, and I love it for the technological possibilities it brings. \u00a0It doesn&#8217;t just mean using web apps- it means using amazing applications that run in any browser on any platform, it means not worrying about storing data locally, it means a rich and expanding personal experience based on the connections between your data and everyone else&#8217;s.</p>\n<p>And then I think about most of the pipelines I&#8217;ve seen and I wonder: what have we missed? \u00a0Very often, we are building some of the most incredible and expensive games ever with incredibly shitty sets of tools. \u00a0Why do we have essentially the same pipelines as we&#8217;ve had for the same 10+ years? (I recently<a href=\"http://www.robg3d.com/?p=542\"> finished a case study</a> of Dark Angel&#8217;s pipeline, from 2001, which is remarkably similar to some I&#8217;ve seen recently). \u00a0Game production has changed, but pipelines have not. \u00a0We&#8217;re releasing games that get downloaded content (or are continuously updated like an MMO), and the amount of content is ballooning. \u00a0Yet we&#8217;re still using essentially the same technologies and strategies as we were in 2001. \u00a0There&#8217;s something to learn by looking at Cloud technologies and concepts, buzzword or not.</p>\n<p><strong>Can game pipelines, too, move into the cloud?</strong></p>\n<p>The one essential aspect of the cloud is its basis in service-based architectures. \u00a0For the sake of simplicity and those unfamiliar, let&#8217;s say a service is a local or remote process that has some set of exposed methods that can be called by a client through a common protocol (JSON, XMLRPC, etc.). \u00a0All other aspects of cloud technologies require this serviced based architecture. \u00a0You couldn&#8217;t have the characteristic web apps if there was no service behind them. \u00a0You couldn&#8217;t run the same or similar page on any platform and device if the work was happening on the client instead of the service. \u00a0You couldn&#8217;t have a backend that automatically scales if the real work was happening in a Rich Client App (RCA) instead of in a service.</p>\n<p>Could we build our pipelines with the same service-based approach (if not the always-there distributed-ness), and would we get similar results?</p>\n<pre lang=\"txt\">,--.::::::::::::::::::::::::::::::::::::\n    )::::::::::::::::::::::::::::::::..\n  _'-. _:::::::::::::::::::::::::::..\n (    ) ),--.::::::::::::::::::::::.\n             )-._::::::::::::::::::..\n_________________) ::::::::::::::...</pre>\n<p>Yes, we can. \u00a0But let&#8217;s consider what a service-based pipeline architecture would look like. \u00a0The biggest change is moving nearly all functionality out of DCC apps, which are RCA&#8217;s, and into libraries that can be consumed by the services. \u00a0This is what I&#8217;ve been doing for years, but I understand it may be a new thing for many people- but I guarantee you can do it and you&#8217;ll be better off because of it, not having to deal with buggy and monolithic DCC apps. \u00a0These libraries/services can use headless apps behind the scenes if necessary, to do rendering or some processing or whatever (mayabatch.exe or whatever). \u00a0Avoid it if you can, but you could do it.</p>\n<p>The DCC and its UI&#8217;s, then, become very simple shells which just call methods on the service, and contain very little functionality of their own. \u00a0The service does the processing and calls back to the client (and if the function can be done asynchronously, the user keeps working while the work happens in the background). \u00a0The service can communicate to other remote and local services to do the work it needs to do.</p>\n<p>Conceptually it is simple, but I promise you, the implementation will be complex. \u00a0So the benefits better be worth it.</p>\n<p>And they would be. \u00a0The first thing you get is better abstraction between systems and components. \u00a0We remove ourselves from the hacks and workarounds of programming in a DCC, and can instead concentrate on working in a sensible development environment and not have to worry about debugging in app or having to make sure all our libraries work under whatever half-assed and old implementation of python Autodesk provides. \u00a0This results in being more deliberate about design decisions- not having a hundred pipeline modules available to you is actually a good thing, it forces you to get your dependencies under control, and you give more consideration to your APIs (I <a href=\"http://www.robg3d.com/?p=385\">blogged about</a> how server/client systems can be a useful exercise in abstraction).</p>\n<p>These abstractions also give greater scalability. \u00a0No problem moving your code between versions of your DCC, machine architectures, python/.NET versions, etc. \u00a0It doesn&#8217;t have the ball and chain of DCC apps, because you&#8217;ve taken it all out of the DCC apps. \u00a0Compare this flexibility in scalability to something like render farms- they usually have a very specific functionality and required software and added more functionality takes lots of engineering time. \u00a0By having &#8216;normal&#8217; code that can be run on any machine, you can distribute your processing to a farm that can tackle anything, and doesn&#8217;t require as complex systems or specialized skills to manage. \u00a0This is the distributed processing capacity of cloud computing (in fact you could probably deploy this code to a cloud provider, if you had good server-fu).</p>\n<p>These abstractions also lead to language neutrality. \u00a0That&#8217;s right, I said it. \u00a0I didn&#8217;t say it is a good idea, just that it&#8217;s possible. \u00a0Just the same way the Twitter API has been wrapped in three dozen languages, your services should have an API using a common protocol like JSON, and many services and clients can communicate together. \u00a0You&#8217;re not stuck using COM or marshalling data or any other number of bullshit techniques I&#8217;ve seen people do to glue things together. \u00a0Your client can be anything- a DCC, a web app, a mobile app- you could even run it via email if you so desired, with zero change to the pipeline itself- only the client code you need to call it. \u00a0And don&#8217;t forget hosting a web page in a library like Qt or .NET could also run the service.</p>\n<p>This is software engineering as we tech artists and pipeline engineers should have been doing all along.</p>\n<pre lang=\"txt\"> _______________\n| | _________ |o|\n| |___________| |\n|     _____     |\n| DD |     |   V|\n|____|_____|____|</pre>\n<p>Let&#8217;s take a simple pipeline, like a character mesh exporter that includes an automatic LoD creator. \u00a0In Maya (or Max, or XSI, whatever), the user just hits &#8216;export selected&#8217;, and it can transfer the mesh data and the Maya filename/mesh name to the Local Service.&#8217; \u00a0It can transfer the mesh data directly as a json object, or it can save it to an fbx file first and transfer the name of the fbx file, whatever- the point is that it isn&#8217;t data <em>in</em>\u00a0the DCC, it&#8217;s data <em>from</em>\u00a0the DCC.</p>\n<p>At that point, Maya&#8217;s work is done and the user can go back to working while everything else happens in the background in other processes and machines. \u00a0Awesome! \u00a0Most (all?) DCC&#8217;s are still very single threaded so trying to do any real work in background threads is not practical (or stable&#8230;).</p>\n<p>The Local Service sends the mesh data to some Remote Services to request the generation of some crunched and optimized LoD meshes. \u00a0The Local Service can call an Asset Management Service with the scene filename/mesh name, to get the export path of the final mesh file. \u00a0The Local Service can then do whatever it needs to do to &#8216;export&#8217; the content: call some exe files, serialize it, whatever, it just needs to save the exported file to where the Asset Management Service said it should be.</p>\n<p>The Remote Services can call back to the Local Service as they finish processing the LoD&#8217;s, and the Local Service can save them where they&#8217;re supposed to go as well. \u00a0All of this without the user having to wait or intervene for anything, and without bogging down his box with expensive, CPU hungry operations.</p>\n<pre lang=\"txt\">  __________\n/_________/ |\n|         | |\n| |====|  | |\n| |====|  | |\n|   ___   | |\n|  | @ |  | |\n|   ---   | |\n|_________|./</pre>\n<p>Is this complex? \u00a0Yes. \u00a0Is it possible for a technically competent team to do? \u00a0Absolutely not. \u00a0Pipelines are the bastard child of game technology, and it show- we have been doing the same crappy things for a decade. \u00a0If we want to minimize ballooning costs of content development, develop robust pipelines capable of supporting games after ship with updates and DLC, and, let&#8217;s face it, work on some inspiring and exciting new technology, we&#8217;ll take pipelines to the cloud.</p>", "summary": "Originally posted on AltDevBlogADay: The rest of software is moving into The Cloud, how come we aren&#8217;t doing the same with our tools and pipeline? I love the cloud. \u00a0Yes, I know it&#8217;s a buzz word for not quite revolutionary concepts, but I love it anyway. \u00a0I love it for the practical bene", "id": "http://www.robg3d.com/?p=698", "categories": ["Rob Galanakis"], "metadata": {"guid": "06e15c51-d76f-465b-b68a-35e1f95a998f", "likes": 0, "is_published": true}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=780", "title": "yay for g+", "datetime": "2011-07-18T03:25:20", "html": "<p>Never managed to get into facebook. Within hours of signing up I had friend requests from all sorts of crazy people that I either barely knew, or knew but certainly wasn&#8217;t keen or comfortable sharing various aspects of my life with etc&#8230; I&#8217;m sure the story is familiar. So it just didn&#8217;t take with me.</p>\n<p>Anyhoo, g+ seems like its solved all of these problems in a way that makes complete sense. And its google. I manage all my photos with picasa because its just bloody easy. And I LOVE gReader. So anyway, hopefully it&#8217;ll be awesome. If you&#8217;re not using it, try it out. Look for <a href=\"https://plus.google.com/108847499546939618060/posts\" target=\"_blank\">macaronikazoo</a>!</p>", "summary": "Never managed to get into facebook. Within hours of signing up I had friend requests from all sorts of crazy people that I either barely knew, or knew but certainly wasn&#8217;t keen or comfortable sharing various aspects of my life with etc&#8230; I&#8217;m sure the story is familiar. So it just di", "id": "http://www.macaronikazoo.com/?p=780", "categories": [], "metadata": {"guid": "18b29e5c-bde8-4d40-a2c9-07e4bf37b7d9", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=685", "title": "I\u2019m on Google+", "datetime": "2011-07-17T20:55:19", "html": "<p>I&#8217;m on Google+, and it is the FIRST social networking site I&#8217;ve ever actively participated in. It seems pretty awesome so far, have I been missing this on Facebook all these years?</p>\n<p>Fine me here: https://plus.google.com/u/0/112207898076601628221/posts//p/pub</p>", "summary": "I&#8217;m on Google+, and it is the FIRST social networking site I&#8217;ve ever actively participated in. It seems pretty awesome so far, have I been missing this on Facebook all these years? Fine me here: https://plus.google.com/u/0/112207898076601628221/posts//p/pub", "id": "http://www.robg3d.com/?p=685", "categories": [], "metadata": {"guid": "5789492d-3749-4f6f-9672-af17a67f88a8", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=752", "title": "object oriented rigging in Skeleton Builder", "datetime": "2011-07-17T15:47:03", "html": "<p>Skeleton builder is a neat framework for writing rigging code, but its also a useful tool for writing runtime tools as well. \u00a0I figured I&#8217;d go over an example of this because its not terribly obvious until you actually get in there and write some code. And even then, its not terribly obvious until you read all the code written in baseRigPrimitive&#8230;</p>\n<p>Writing a tool to do seamless Ik/Fk switching on an arbitrary rig is basically impossible. \u00a0After all, your particular limb setup might be a simple biped leg, a 5 jointed spider type leg, or a quadruped leg or any other crazy scenario. \u00a0Writing a single function to deal with all these possibilities, especially when you factor in the different ways these rigs could be implemented is basically impossible.</p>\n<p>But writing the logic to do the switch for any of them in isolation is generally dead easy. \u00a0This is the sort of problem that object oriented programming was invented to solve. \u00a0In Skeleton Builder the way I solve these problems is like this.</p>\n<p>In Skeleton Builder you write rig primitives. Each rig primitive is written to rig a particular sub-section of a skeleton and the code to do so is implemented in its own class. \u00a0So using the above examples I would have 3 classes: BipedLegRig, SpiderLegRig and QuadrupedLegRig. \u00a0Now on each one of these classes, lets define a switchToIk() method and a switchToFk() method. \u00a0So the switching logic for each rig type can be implemented independently on each of these classes.</p>\n<p>Your code will look something like this:</p>\n<pre class=\"brush:py\">import rigPrimitives\n\nclass SpiderLegRig(rigPrimitives.RigPart):\n  #this class variable defines the alias' for the controls. controls are accessed using these alias'\n  CONTROL_NAMES = 'legControl', 'fkThigh', 'fkKnee', 'fkAnkle'\n\n  def _build( self, skeletonPart, **kw ):\n    #the code to build the actual rig goes here\n    ...\n\n    #this is the list of nodes that will get connected to the alias' defined\n    #in the CONTROL_NAMES class variable\n    controls = ikControl, fk0, fk1, fk2\n    namedNodes = ()\n\n    return controls, namedNodes\n  def switchToIk( self ):\n\n    #this code grabs the actual control nodes based on their alias'\n    legControl = self.getControl( 'legControl' )\n    fkThigh = self.getControl( 'fkThigh' )\n    fkKnee = self.getControl( 'fkKnee' )\n    fkAnkle = self.getControl( 'fkAnkle' )\n\n    #logic to switch from Fk to Ik goes below\n    ...\n  def switchToFk( self ):\n    #logic to switch from Ik to Fk goes below\n    ...</pre>\n<p>Then calling this switch method is as simple as doing something like this:</p>\n<pre class=\"brush:py\">from maya import cmds\n\nselectedControls = cmds.ls( sl=True )\nif selectedControls:\n  rigPart = rigPrimitives.RigPart.InitFromItem( selectedControls[0] )\n  rigPart.switchToFk()</pre>\n<p>And voila. So now you can write a single UI that lets users switch between Ik and Fk for ANY part of the rig simply by running the above code.</p>\n<p>I&#8217;ll write up another post with another example of a useful runtime tool that I&#8217;ve written that would be very difficult to do without a nice object oriented rigging framework to leverage.</p>", "summary": "Skeleton builder is a neat framework for writing rigging code, but its also a useful tool for writing runtime tools as well. \u00a0I figured I&#8217;d go over an example of this because its not terribly obvious until you actually get in there and write some code. And even then, its not terribly obvious u", "id": "http://www.macaronikazoo.com/?p=752", "categories": [], "metadata": {"guid": "bc24336d-9e40-4ac0-be25-433a8b3f08f5", "likes": 0, "is_published": false}}, {"author": "Peter van Ooijen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/IOooyM5QxII/", "title": "Pimping the content of a (Monotouch) iPhone app with a webview", "datetime": "2011-07-17T12:40:15", "html": "<p>At first sight iOS offers a rich set of UI elements containing things like navigation- tool- and tab-bars, buttons,&nbsp; spinners and scrolling views. When it comes to presenting text content there is the textview. Which does offer scrolling and automatic links for Utl\u2019s and phone numbers&nbsp; but dos not have a lot of possibilities to make the content look really good. The main reason is that all text in the view is displayed in one and the same font. No way to even just emphasize a single word in bold.</p>\n<h2>Back to HTML</h2>\n<p>For the remainder of this story I assume you are somewhat familiar with basic HTML and <a href=\"http://monotouch.net/\">Monotouch</a>&nbsp; or other iOS tools and will do a fast drive through. </p>\n<p>To make your content look better you need a WebView. At first sight this component seems intended to display online web-based content. Feeding it with local offline content, straight from code is just as easy. You can drop and size an UIWebView anywhere on a View (or instantiate one from code)&nbsp; and make it accessible to the code via an outlet. The webview has a method LoadHtmlString to feed it with content.</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 15pt;\">\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\">myWebView.LoadHtmlString(MyMarkup, <span style=\"color: blue;\">null</span>);</p>\n</div>\n<p><!--EndFragment--></div>\n<p><!--EndFragment-->\n<p>MyMarkup is the string containing Html content for the view. I will describe the basic possibilities for this content in a HTMLbuilder demo class which uses a stringbuilder to assemble the markup.</p>\n<p>Initialization in the constructor:</p>\n<ul>\n<li>Initializes the stringbuilder</li>\n<li>Create the &lt;head&gt; of the page</li>\n<li>Create a&nbsp; css-style sheet for the basic look of the \u201cpage\u201d</li>\n<li>Write the opening &lt;body&gt; tag</li>\n</ul>\n<p>After that the various methods build the content. These here are just some examples, just to get the idea. The assumptions made here</p>\n<ul>\n<li>All pages have the same fixed font set in the stylesheet.</li>\n<li>All images are in the Images folder</li>\n<li>All inline images have the same size</li>\n</ul>\n<p>I leave it up to your own imagination where, what and how to fix.</p>\n<p>The Markup property (when necessary) writes the page closing tags and returns the html for the \u201cpage\u201d. This result is fed straightly to the webview\u2019s LoadHtmlString method.</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> <span style=\"color: #2b91af;\">HTMLbuilder</span></p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> <span style=\"color: #2b91af;\">StringBuilder</span> html;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">bool</span> closed = <span style=\"color: blue;\">false</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> HTMLbuilder ()</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = <span style=\"color: blue;\">new</span> <span style=\"color: #2b91af;\">StringBuilder</span> ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;html&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;head&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;style type = \\&#8221;text/css\\&#8221;&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;body {font-family:helvetica;font-size:15;}&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;/style&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;/head&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: #a31515;\">&#8220;&lt;body&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">string</span> Markup</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">get</span></p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">if</span> (!closed)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; closed = <span style=\"color: blue;\">true</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\"color: #a31515;\">&#8220;&lt;/body&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\"color: #a31515;\">&#8220;&lt;/html&gt;&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> html.ToString();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> Append(<span style=\"color: blue;\">string</span> content)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(content);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> AppendBold(<span style=\"color: blue;\">string</span> content)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\"color: blue;\">string</span>.Format(<span style=\"color: #a31515;\">&#8220;&lt;b&gt;{0}&lt;/b&gt;&#8221;</span>, content));</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> AddParagraph(<span style=\"color: blue;\">string</span> tekst)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\"color: blue;\">string</span>.Format (<span style=\"color: #a31515;\">&#8220;&lt;p&gt;{0}&lt;/p&gt;&#8221;</span>, tekst));</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">string</span> ImagePath (<span style=\"color: blue;\">string</span> image)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> NSBundle.MainBundle.PathForResource (<span style=\"color: blue;\">string</span>.Format (<span style=\"color: #a31515;\">&#8220;Images/{0}&#8221;</span>, image), <span style=\"color: #a31515;\">&#8220;png&#8221;</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">string</span> InlineImage(<span style=\"color: blue;\">string</span> image)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">string</span>.Format(<span style=\"color: #a31515;\">&#8220;&lt;img src=\\&#8221;file:{0}\\&#8221; width=\\&#8221;22\\&#8221; height=\\&#8221;22\\&#8221; valign=\\&#8221;bottom\\&#8221;&gt;&#8221;</span>, ImagePath(image));</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> AddButton(<span style=\"color: blue;\">string</span> image, <span style=\"color: blue;\">string</span> urlpart)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">var</span> url = <span style=\"color: blue;\">string</span>.Format (<span style=\"color: #a31515;\">&#8220;&lt;a href=\\&#8221;{1}\\&#8221;&gt;&lt;img src=\\&#8221;file:{0}\\&#8221;&gt;&lt;/a&gt;&#8221;</span>, ImagePath(image), urlpart);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddParagraph (url);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment-->\n<p>The images and buttons require some explanation. A webview expects its resources, like an image, somewhere relative to it\u2019s URL. The Url is passed in the second parameter of the LoadHtmlString method. Here we are working local, inside the iPhone, there is no URL for that, as a second parameter I passed null. The ImagePath method translates the path of an image, which is a&nbsp; folder in the application, to a path reachable by the webview. The resulting url is fed to an &lt;img&gt; in the InLineImage or AddButton method.</p>\n<h2>Start surfing</h2>\n<p>The webview is also a great place for the user to start surfing the web. In the HTMLBuilder the AddButton method creates a clickable image which will take the user to an url outside the app. Like the company website. Clicking this button will fire up Mobile Safari which takes the user out of the app and into the site. The image turns into a linkbutton by embedding it in plain &lt;a&gt; tags. </p>\n<p>To steer this behavior the webview uses a WebViewDelegate</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> <span style=\"color: #2b91af;\">WebViewDelegate</span> : UIWebViewDelegate</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> WebViewDelegate ()</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">bool</span> ShouldStartLoad (UIWebView webView, MonoTouch.Foundation.NSUrlRequest request, UIWebViewNavigationType navigationType)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">if</span> (request.Url.Scheme.StartsWith (<span style=\"color: #a31515;\">&#8220;http&#8221;</span>)) {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UIApplication.SharedApplication.OpenUrl (request.Url);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">false</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">true</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment-->\n<p>The delegate checks the Url. When it is a http request it fires up the browser using SharedApplication.OpenUrl. Else the WebView is free to proceed.</p>\n<p>The delegate is set in the ViewDidLoad</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ViewDidLoad ()</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; WebViewDelegate = <span style=\"color: blue;\">new</span> WebViewDelegate ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = WebViewDelegate;</p>\n</div>\n<p><!--EndFragment-->\n<p>&nbsp;</p>\n<p>It is advised to remove the delegate when unloading</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ViewDidUnload ()</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = <span style=\"color: blue;\">null</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">base</span>.ViewDidUnload ();</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment--><br />\n<h2>More than HTML</h2>\n<p>So far we have seen the basics of pimping the content using HTML. The possibilities here are almost endless and Mobile Safari does work with HTML5. </p>\n<p>What HTML does not give you are specific iPhone features like gestures and the possibility to hook your own app code (behind<img alt=\"Smile\" class=\"wlEmoticon wlEmoticon-smile\" src=\"http://codebetter.com/petervanooijen/files/2011/07/wlEmoticon-smile.png\" style=\"border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none;\" />) in the page. The good thing is that the webview is a view like all other views, accessible to all&nbsp; your coding skills. As a demo I will add swiping to a webview. When the users swipes left or right the content of the webview is updated. Not by the browser, but my own code.</p>\n<p> The hard thing is that gesture-recognizers are not under quite the same control as the view, they have a different life cycle. Setting them up requires some fiddling. Doing that wrong will lead to a complete crash of the app.</p>\n<p>The methods handling the swipes are marked with an Export attribute.</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\">[Export(<span style=\"color: #a31515;\">\"SwipeLeft\"</span>)]</p>\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> SwipeLeftAction (UISwipeGestureRecognizer recognizer)</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; myWebview.LoadHtmlString(MyMarkup.prevPage(), <span style=\"color: blue;\">null</span>);</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">[Export(<span style=\"color: #a31515;\">\"SwipeRight\"</span>)]</p>\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> SwipeRightAction (UISwipeGestureRecognizer recognizer)</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.NextPage(), <span style=\"color: blue;\">null</span>);</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p>After a swipe the content is updated to my taste.</p>\n<p>Both the handlers should also be added as static properties of the view</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> Selector SwipeLeft {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">get</span> { <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">new</span> Selector (<span style=\"color: #a31515;\">&#8220;SwipeLeft&#8221;</span>); }</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> Selector SwipeRight {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">get</span> { <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">new</span> Selector (<span style=\"color: #a31515;\">&#8220;SwipeRight&#8221;</span>); }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment-->\n<p>Wiring up is done in the ViewDidLoad. Here it is absolutely essential to check whether the view already responds to the recognizer</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">if</span> (!View.RespondsToSelector (SwipeRight)) {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; var swipeRight = <span style=\"color: blue;\">new</span> UISwipeGestureRecognizer ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; swipeRight.AddTarget (<span style=\"color: blue;\">this</span>, SwipeRight);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; swipeRight.Direction = UISwipeGestureRecognizerDirection.Right;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; swipeRight.Delegate = <span style=\"color: blue;\">new</span> UIGestureRecognizerDelegate ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeRight);</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment-->\n<p>What the gesture recognizer will respond to should be self explanatory. The complexity of the wiring does show iOS is behind the scenes somewhat more complicated that the Monotouch framework can hide. </p>\n<h2></h2>\n<h2>Summing up</h2>\n<p>All of this leads to this result</p>\n<div style=\"font-family: consolas; background: white; color: black; font-size: 11pt;\">\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">partial</span> <span style=\"color: blue;\">class</span> <span style=\"color: #2b91af;\">MyPageWithWebView</span> : UIViewController</p>\n<p style=\"margin: 0px;\">{</p>\n<p style=\"margin: 0px;\"><span style=\"color: blue;\">&nbsp;&nbsp;&nbsp; #region</span> Constructors</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">#endregion</span></p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">private</span> WebViewDelegate WebViewDelegate;</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ViewDidLoad ()</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebViewDelegate = <span style=\"color: blue;\">new</span> WebViewDelegate ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = WebViewDelegate;</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">if</span> (!View.RespondsToSelector (SwipeRight)) {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var swipeRight = <span style=\"color: blue;\">new</span> UISwipeGestureRecognizer ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.AddTarget (<span style=\"color: blue;\">this</span>, SwipeRight);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.Direction = UISwipeGestureRecognizerDirection.Right;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.Delegate = <span style=\"color: blue;\">new</span> UIGestureRecognizerDelegate ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeRight);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">if</span> (!View.RespondsToSelector (SwipeLeft)) {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var swipeLeft = <span style=\"color: blue;\">new</span> UISwipeGestureRecognizer ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.AddTarget (<span style=\"color: blue;\">this</span>, SwipeLeft);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.Direction = UISwipeGestureRecognizerDirection.Left;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.Delegate = <span style=\"color: blue;\">new</span> UIGestureRecognizerDelegate ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeLeft);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">base</span>.ViewDidLoad ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">override</span> <span style=\"color: blue;\">void</span> ViewDidUnload ()</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = <span style=\"color: blue;\">null</span>;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">base</span>.ViewDidUnload ();</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; [Export(<span style=\"color: #a31515;\">\"SwipeLeft\"</span>)]</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> SwipeLeftAction (UISwipeGestureRecognizer recognizer)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.prevPage(), <span style=\"color: blue;\">null</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; [Export(<span style=\"color: #a31515;\">\"SwipeRight\"</span>)]</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> SwipeRightAction (UISwipeGestureRecognizer recognizer)</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.NextPage(), <span style=\"color: blue;\">null</span>);</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> Selector SwipeLeft {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">get</span> { <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">new</span> Selector (<span style=\"color: #a31515;\">&#8220;SwipeLeft&#8221;</span>); }</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> Selector SwipeRight {</p>\n<p style=\"margin: 0px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">get</span> { <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">new</span> Selector (<span style=\"color: #a31515;\">&#8220;SwipeRight&#8221;</span>); }</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n<p style=\"margin: 0px;\">}</p>\n<p style=\"margin: 0px;\">&nbsp;</p>\n</div>\n<p><!--EndFragment-->\n<p>Now I have the possibilities of pimping my content using HTML without giving up the power of C# code. </p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/IOooyM5QxII\" width=\"1\" />", "summary": "At first sight iOS offers a rich set of UI elements containing things like navigation- tool- and tab-bars, buttons,&#160; spinners and scrolling views. When it comes to presenting text content there is the textview. Which does offer scrolling and automatic&#160;&#8230; <a href=\"http://codebetter.com", "id": "http://codebetter.com/petervanooijen/2011/07/17/pimping-the-content-of-a-monotouch-iphone-app-with-a-webview/", "categories": [], "metadata": {"guid": "8e353e2f-8e72-4285-996c-23f4ee32a93a", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=584", "title": "Game Studio Takeover Nightmare Impossible", "datetime": "2011-07-17T02:29:31", "html": "<p>There&#8217;s a sub-genre of reality television that contains shows where experts come into a failing business and implement changes to fix things. \u00a0Three of the most well known are Gordon Ramsey&#8217;s Kitchen Nightmares, Robert Irvine&#8217;s Restaurant Impossible, and Tabatha&#8217;s Salon Takeover (totally awesome show, btw). \u00a0I&#8217;ve wondered what it&#8217;d be like to get a games industry version of one of these experts into a studio to see what she could do. \u00a0Fortunately, the programs all follow a very obvious (and repetitive) pattern to find and fix the problems- so you can really just do it yourself (most problems the experts find are obvious anyway- the people in charge are just ignorant or in denial).</p>\n<p>Follow these steps at your studio and imagine how things would go down.</p>\n<p><strong>Part 1: The initial personnel observation</strong><br />\nThe experts observe how things run without interferring. \u00a0They sit down to eat, watch hidden cameras, whatever.</p>\n<ol>\n<li>How do the employees get along? \u00a0Are they friendly to each other, do they enjoy work, do they hang out, do they do work?</li>\n<li>How does management interact with the employees?</li>\n<li>How many employees and managers are there, and what&#8217;s the ratio?</li>\n<li>Is there anything else fishy (nepotism, unqualified people, etc.)?</li>\n</ol>\n<p><strong>Part 2: The facilities inspection</strong><br />\nThe experts tour the facilities and inspect how things look, especially cleanliness.</p>\n<ol>\n<li>Do people have the right computer equipment and licenses?</li>\n<li>Are the bathrooms and structure in good shape? \u00a0AC working well?</li>\n<li>Are the employees treated well physically? \u00a0Are there drinks and food available?</li>\n<li>Where&#8217;s the studio located and where would people rather have it?</li>\n</ol>\n<p><strong>Part 3: The tragedy and shutdown</strong><br />\nThe expert does some minor changes and does a more formal observation, providing minor interventions. \u00a0Involves some sort of disaster. \u00a0Place eventually closes up and the expert begins to work his or her magic.</p>\n<ol>\n<li>What tools and processes go right? \u00a0What are the worst? \u00a0How far to which side is every tool and process in the middle?</li>\n<li>Do you have managers who crack under pressure, or do really obviously wrong things?</li>\n<li>Are there people seriously misbehaving? \u00a0Are there people seriously crunching?</li>\n<li>And the biggest question is: does the studio&#8217;s project suck, and what are the major problems with the game (is it not fun, has it taken way too long)?</li>\n</ol>\n<p><strong>Part 4: The personnel rebuilding</strong><br />\nRelationships are worked on, especially between employees and management. \u00a0Lots of training is provided.</p>\n<ol>\n<li>What training opportunities exist at your studio? \u00a0Are people encouraged to look outside for education? \u00a0Is ample opportunity provided internally?</li>\n<li>What are your employees biggest grievances? \u00a0What has changed the most in the past few years and how do your veterans feel about it?</li>\n<li>How are you dealing with your poor performers and rewarding your best?</li>\n<li>Figure out why the project/game is in the state it&#8217;s in, and put a plan in action to fix it and make sure it doesn&#8217;t keep happening.</li>\n</ol>\n<p><strong>Part 5: The facilities rebuild unveil</strong><br />\nNew and improved facilities are unveiled to the team.</p>\n<ol>\n<li>Your studio should be feeding you. \u00a0There&#8217;s no reason, financial or otherwise, not to provide developers with at least lunch every day.</li>\n<li>You should have enough bathrooms and they should be clean.</li>\n</ol>\n<p><strong>Part 6: First day reopening</strong><br />\nThe business runs for a day, usually with much better results (and generally a couple hiccups).<br />\nWith the grievances solved, or at least in the open and being worked on, studio culture should be improved and you can concentrate on building a great product.</p>\n<p><strong>Part 7: Checkin later</strong><br />\nExpert comes back to check up on how things have come along.<br />\nInevitably, some managers will devolve back into madness; or perhaps things were too far along to stop the studio&#8217;s shutdown or crappy project. \u00a0If you see this happening, you should leave.</p>\n<hr />\n<p>I wonder how something like this would fare in the games industry, and who the hell we could find to do it.</p>", "summary": "There&#8217;s a sub-genre of reality television that contains shows where experts come into a failing business and implement changes to fix things. \u00a0Three of the most well known are Gordon Ramsey&#8217;s Kitchen Nightmares, Robert Irvine&#8217;s Restaurant Impossible, and Tabatha&#8217;s Salon Takeo", "id": "http://www.robg3d.com/?p=584", "categories": ["Rob Galanakis"], "metadata": {"guid": "905cfadb-5cd4-44b1-95aa-619257392bde", "likes": 0, "is_published": true}}, {"author": "Rigging Dojo", "url": "http://www.riggingDojo.com/2011/07/16/leave-a-message/", "title": "Leave a message", "datetime": "2011-07-16T05:51:06", "html": "<p>Have we improved your work, helped you find a job or you just like what we are sharing and teaching?<br />\nMaybe you don&#8217;t like us and think we are terrible sock monsters ?</p>\n<p>Either way, take a second and comment on this post.<br />\nWe look forward to hearing from you.</p>\n<p>Thanks!</p>\n<p>Josh, Brad and Chad</p>\n<p><em><span style=\"color: #c0c0c0;\">*not responsible for lost socks</span></em></p>", "summary": "Have we improved your work, helped you find a job or you just like what we are sharing and teaching? Maybe you don&#8217;t like us and think we are terrible sock monsters ? Either way, take a second and comment on this post. We look forward to hearing from you. Thanks! Josh, Brad and Chad [...]", "id": "http://www.riggingDojo.com/?p=903", "categories": [], "metadata": {"guid": "6a14c947-65f0-4eb7-90e4-9826be683a72", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/07/15/resume-updated-demo-to-follow/", "title": "Resume Updated, Demo to Follow", "datetime": "2011-07-16T00:29:04", "html": "<!-- Start LikeButtonSetTop --><!-- End LikeButtonSetTop --><p>I did something productive today on my day off!\u00a0 Whilst staying at home avoiding &#8216;Carmageddon&#8217;, I spent hours revising my resume.\u00a0 Finally it is finished&#8230;\u00a0 oh, except for that mistake&#8230;\u00a0 <img alt=\";-)\" class=\"wp-smiley\" src=\"http://www.jonasavrin.com/wp-includes/images/smilies/icon_wink.gif\" /> \u00a0 View it at the normal <a href=\"http://www.jonasavrin.com/resume/\" title=\"Resum\u00e9\">location</a>.</p>\n<div class=\"shr-publisher-2646\"></div><!-- Start LikeButtonSetBottom --><!-- End LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "I did something productive today on my day off!\u00a0 Whilst staying at home avoiding &#8216;Carmageddon&#8217;, I spent hours revising my resume.\u00a0 Finally it is finished&#8230;\u00a0 oh, except for that mistake&#8230;\u00a0 \u00a0 View it at the normal location. &#038;nbsp", "id": "http://www.jonasavrin.com/?p=2646", "categories": [], "metadata": {"guid": "e390d8ff-6dbb-431f-ac9e-fd794ea3bddf", "likes": 0, "is_published": false}}, {"author": "Jeremy Miller", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/cgg4_cZpJAk/", "title": "FubuMVC Webinar Next Week", "datetime": "2011-07-15T14:11:57", "html": "<p><a href=\"http://twitter.com/#!/mkmurray\">Mike Murray</a> is giving a webinar introduction to FubuMVC next week as part of JP\u2019s Develop with Passion series.&nbsp; <a href=\"https://www1.gotomeeting.com/register/131448736\">Sign up here</a>.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/cgg4_cZpJAk\" width=\"1\" />", "summary": "Mike Murray is giving a webinar introduction to FubuMVC next week as part of JP\u2019s Develop with Passion series.&#160; Sign up here.", "id": "http://codebetter.com/jeremymiller/2011/07/15/fubumvc-webinar-next-week/", "categories": [], "metadata": {"guid": "124c0acd-dc31-4e72-ac32-b192f4b8ec74", "likes": 0, "is_published": false}}]"
08-07 21:20 SocketClient INFO     Returning(as str): '[{"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/07/20/toward-a-quasi-time-independant-twist-node/", "title": "Toward a quasi time independant  twist node", "datetime": "2011-07-20T08:32:05", "html": "<p>This post is about\\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint.</p>\\n<p><img alt=\\"\\" height=\\"483\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/orient_constraint_torsion1.gif?w=408&#038;h=483\\" title=\\"orient_constraint_torsion\\" width=\\"408\\" /></p>\\n<p><em>(Above: notice the\\u00a0 flipping glitch when the torsion goes above 180.0 )</em></p>\\n<p>After writing a <em><span style=\\"color: #ff6600;\\"><a href=\\"http://circecharacterworks.wordpress.com/2011/07/06/a-journey-in-the-realm-of-corrective-shapes-ii/\\">quaternion based aim constraint</a>\\u00a0</span></em> I was often confronted with twist popping out of control when the amount of torsion in a limb was too severe.</p>\\n<p></p>\\n<p>After several trials and errors I was able to find an intermediate solution for deformation purposes.</p>\\n<p>Part of the answer were lying in maya API MDataBlock structure and the ability for developer to read the content of an outputValue Handle previously filled in the same compute method.</p>\\n<p>1)<em> From <span style=\\"color: #ff6600;\\">pi</span>e to <span style=\\"color: #ff6600;\\">pi</span>e ( with a thick French accent )</em> :</p>\\n<p>The default flipping behavior can be explained with some basic trigonometry knowledge that can be learn and found easily.</p>\\n<p>What was important for me to grasp was the valid range or domain of the trigonometric functions. These elements can be found in vector math, rotation matrix, and can really be considered as fundamental concepts.</p>\\n<p>The following code can replicate the functionality of the Protractor helper object in 3dsmax ( with the addition of an exposed angle parameter ):</p>\\n<pre class=\\"brush: python; wrap-lines: false;\\">\\nimport maya.cmds as cmds\\n\\nrefLoc = cmds.spaceLocator( n=\'referenceLoc1\')[0]\\nstartLoc = cmds.spaceLocator( n=\'StartLoc1\')[0]\\nEndLoc = cmds.spaceLocator( n=\'EndLoc1\')[0]\\n\\ncmds.parent( [startLoc ,EndLoc] , refLoc )\\ncmds.setAttr( startLoc + \'.t\', 10.0, 0, 0, type=\'double3\' )\\ncmds.setAttr( EndLoc + \'.t\', 10.0, 2.0, 0, type=\'double3\' )\\n\\ncmds.addAttr( refLoc, ln=&quot;angle&quot;,at=&quot;double&quot; )\\ncmds.setAttr( refLoc + \'.angle\',e=True,keyable=True  )\\n\\n#Use locator position  as vector\\nangleReader = cmds.createNode( \'angleBetween\' )\\ncmds.connectAttr( startLoc + \'.translate\', angleReader + \'.vector1\' )\\ncmds.connectAttr( EndLoc + \'.translate\', angleReader + \'.vector2\' )\\n\\nnullPos = [(0,0,0),(0,0,0)]\\nstartCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n=\'starCurve1\')\\ncvShape1 = cmds.rename( (cmds.listRelatives(startCurve,s=True,ni=True)[0]), \'starCurveShape1\' )\\n\\nendCurve = cmds.curve( d=1, p=nullPos,k=(0,1) ,n=\'endCurve1\')\\nendShape1 = cmds.rename( (cmds.listRelatives(endCurve,s=True,ni=True)[0]), \'endCurveShape1\' )\\n\\ncmds.parent( [startCurve ,endCurve] , refLoc )\\n#Who needs a cluster for visual purpose simple curve? plug position value directly ...\\ncmds.setAttr( cvShape1 + \'.controlPoints[0]\', 0,0,0,type=\'double3\' )\\ncmds.connectAttr( startLoc + \'.translate\' , cvShape1 + \'.controlPoints[1]\', f=True )\\ncmds.setAttr(  endShape1 + \'.controlPoints[0]\', 0,0,0,type=\'double3\' )\\ncmds.connectAttr( EndLoc + \'.translate\' , endShape1 + \'.controlPoints[0]\', f=True )\\n\\ncmds.connectAttr( angleReader + \'.angle\',  refLoc + \'.angle\', f=True  )\\n\\n#Don\'t let depency node lives in the wild polluting the outliner: group them in container\\nasset = cmds.container( type=\'dagContainer\',ind=[&quot;inputs&quot;,&quot;outputs&quot;] , includeHierarchyBelow=True, includeTransform=True, force=True, addNode=[refLoc],n=( &quot;angleReader_Asset1&quot; ))\\ncmds.setAttr( ( asset  + &quot;.viewMode&quot; ), 0 )\\n\\ncmds.addAttr( asset, ln=&quot;angle&quot;,at=&quot;double&quot; )\\ncmds.setAttr( asset + \'.angle\',e=True,keyable=True  )\\n\\ncmds.connectAttr(  refLoc + \'.angle\',  asset + \'.angle\' , f=True  )\\n#dont forget to rename The hyperLayout node associate with this container\\nlayout = cmds.listConnections(  asset , t=\'hyperLayout\' )[0]\\ncmds.rename(layout, asset  + &quot;_Layout&quot; )\\n\\n#kindly prefix the element in the container\\nNodeList =  cmds.container(asset, q=True, nl=True)\\nfor node in NodeList :\\n    cmds.rename( node,asset + \'_\' + node, ignoreShape=True)\\n</pre>\\n<p><img alt=\\"\\" class=\\"aligncenter\\" height=\\"451\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/vector_angle.gif?w=393&#038;h=451\\" title=\\"angle range beetween 2 vectors\\" width=\\"393\\" /></p>\\n<p>What is interesting to see in the image above is that the angle between the two lines never goes beyond 180.0 degrees , nor below 0.0.</p>\\n<p>To determine a direction for this rotation we use the sign of the Y value of the purple locator<em>( we can find the same logic in the atan2 function in python )</em> .Hence a positive rotation revolves counter clock wise , and a negative rotation\\u00a0 in a clock wise manner.</p>\\n<p>2) History and time as a 4th dimension:</p>\\n<p>After refreshing my knowledge in trigonometry and vector math I was kind of stuck and didn&#8217;t know where to start: It was a good opportunity to browse two website which\\u00a0 host a wealth of research papers:</p>\\n<ul>\\n<li>Chris Evans&#8217;s page dealing with Muscles and Skin Deformation : <a href=\\"http://www.chrisevans3d.com/reference.htm\\"><span style=\\"color: #ff6600;\\"><em>http://www.chrisevans3d.com/reference.htm</em></span></a></li>\\n<li>Ke-Sen Huang&#8217;s home page which hosts lots of siggraph paper : <a href=\\"http://kesen.realtimerendering.com/\\"><span style=\\"color: #ff6600;\\"><em>http://kesen.realtimerendering.com/</em></span></a></li>\\n</ul>\\n<p>Most of the papers were impossible to understand straight ahead when it comes to equations and mathematical notation.What was inspiring was the pseudo code and the overall ideas presented.</p>\\n<p>One of them is pretty common in the world of simulation : querying a variable at a different time to solve a problem.</p>\\n<p>Applied to a character a simulation can be used for soft body dynamic, cloth, hair or complex skin depiction .</p>\\n<p>The only drawback of a simulation is that it is history dependent <em>( to see the result at frame 100 you must compute all the frame since the beginning ),</em> and not interactive.</p>\\n<p>Luckily I have found on cgtalk a thread that was going to be a good starting point. <a href=\\"http://www.strarup.net/maya/plugins/lagNode/\\"><span style=\\"color: #ff6600;\\"><em>Alex V. U. Strarup</em></span></a> was talking about a lag node inspired by maya framecache node.</p>\\n<p>Maya framecache node is able to read the value of a numerical input stream at a different time frame, and was a good candidate, but was useless in my case because this numerical value must be already processed ( like in a regular animation curve or an SDK ).</p>\\n<p>We can replicate this feature in mel with the -time flag of the getAttr command, or in the maya API with the combination of\\u00a0 an MPlug and MDGContext.</p>\\n<p>This is what make it possible to <span style=\\"color: #ff6600;\\"><em>&#8216;ghost&#8217;</em></span> an animated object in maya among many other things.</p>\\n<p>3) &#8220;The answer was not in the box, but in the band&#8221;:<br />\\n<em>(a little excerpt from Antitrust movie )</em></p>\\n<p>As I was trying to to sample a value at a different time in a custom python dependency node with MPxNode.getInternalValueInContext () , I was intrigued by the information provided for the <em><span style=\\"color: #ff6600;\\">setDependentsDirty</span>()\\u00a0 method\\u00a0 in the maya API reference ( method whose sole purpose is to define relationship between attributes in a node ):</em></p>\\n<p>&#8220;If you want to know the value of a plug, use MDataBlock.outputValue() because it will not result in computation (and thus recursion)&#8221;.</p>\\n<p>I took advantage of this property to determine a twist direction:</p>\\n<ul>\\n<li>Inside a compute method ,the value of separate output buffer is first readen</li>\\n<li>Then this output buffer and a twist input value are processed in a dedicated procedure.</li>\\n<li>Finally\\u00a0 if the input and buffer values are not identical we store the twist input value into the output attribute.</li>\\n</ul>\\n<p>As the input value is changed and trigger a new evaluation , we can rinse and repeat the same operations.</p>\\n<p><img alt=\\"\\" height=\\"471\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/vector_direction.gif?w=435&#038;h=471\\" title=\\"\\" width=\\"435\\" /></p>\\n<p>As we have seen earlier the angle between two vectors is always positive, to determine the direction of a rotation that will transform a reference vector into a target vector <em>( traveling along the shortest path ) </em>we can use their\\u00a0 cross product to create a perpendicular vector that will act as a twist axis.</p>\\n<p>The same operation is done between the reference vector and this twist axis creating a vector that is the same result as rotating\\u00a0 the reference vector <em>about</em> the twist axis <em>by</em> 90.0 degrees.</p>\\n<p>In the last step , if the angle between this &#8220;directional vector&#8221; and the target vector is greater than 90.0 our direction is negative.</p>\\n<p>This method has yet a major flaw : if a limb is twisted more than 180 degrees between two evaluations ( situation that can arise when an attribute value is modified manually, or when a joint is assuming its preferred angle ), this system cannot track reliably a rotation direction anymore .</p>\\n<p>In his article <span style=\\"color: #ff6600;\\"><em>(<a href=\\"http://www.3dfiggins.com/writeups/forearmTwist/\\">\\u00a0http://www.3dfiggins.com/writeups/forearmTwist/</a> )</em></span> Kiel Figgins talks about a manual animatable twist solution, with many relevant argument. At first this solution seems to be less of a hassle to deal with twisting limbs, it just, in my opinion, lacks scalability:</p>\\n<ul>\\n<li>Everywhere on the body , each region can twist and interact with their neighborhood.</li>\\n<li>As a manual process, the result can be less accurate or lacks consistency.</li>\\n<li>Apart from some specific case , where the twist of a limb is part of the character performance , twist visualization is not essential to animation.</li>\\n<li>In my eyes , the role of an animator is to concentrate his skill and talent on timing, silhouette, and acting of a character . His time may be better used in animating secondary object to control jiggling, shaping and bending region, breaking joints etc.. than rotating twist bones to solve deformation issues.</li>\\n</ul>\\n<p>It was disappointing to realize that this method was not robust enough, to be used on an animation rig, however as a deformation tool it is pretty solid.</p>\\n<p>Part of the remaining works was\\u00a0 therefore to stabilize this tool and define a set of procedure to automates twist extraction and propagation on a deformation rig.</p>\\n<p>3)<em> Angle <span style=\\"color: #ff6600;\\">accumulation</span> versus number of <span style=\\"color: #ff6600;\\">revolution</span>:</em></p>\\n<p>One method to compute the twist value in my node was to add or remove the angle value found between the past and current rotation vector in a buffer attribute.\\u00a0 As I was concerned that due to numerical accuracy this value may drift from the current rotation value, i start investigating a more stable solution.</p>\\n<p><img alt=\\"\\" height=\\"395\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/07/clock_circle.gif?w=395&#038;h=395\\" title=\\"\\" width=\\"395\\" /></p>\\n<p>First it was important to translate the past and current rotation vector into a more consistent\\u00a0 value : a normalized value <em>U</em> that represent a percentage of a circle perimeter.</p>\\n<p>One way to figure this circle purpose is to think of it\\u00a0 as an audio tape that comes out of the upper point of the separation line and then roll up on a cylinder when its extremity is pulled by the current rotation vector.</p>\\n<p>As a user continue to twist a limb in the same direction, the length of the tape exiting from\\u00a0the separation line increases and its band can start to turn and wrap\\u00a0 several times around this cylinder.</p>\\n<p>The amount of torsion in a limb is thus constructed from this twist history or<em> number of revolution</em> and a parametric value U.</p>\\n<pre class=\\"brush: python; wrap-lines: false;\\">\\n# Procedure to compute the number of revolution along on unit circle\\n\\n#Case A: positive rotation direction:\\n### current rotation is in most case greater than past rotation\\n### when this is false we can increment the number of revolution\\n\\ncurrentRevolution = currentRevolution_outputHandle.asFloat()\\nif past_rotation &gt; current_rotation :\\n   currentRevolution += 1.0\\n\\n#Case B: negative rotation direction:\\n### current rotation is in most case lower than past rotation\\n### when this is false we can decrement the number of revolution\\n\\nif past_rotation &lt; current_rotation :\\n   currentRevolution -= 1.0\\n\\ncurrentRevolution_outputHandle.setFloat(currentRevolution)\\ncurrentRevolution_outputHandle.setClean()\\n</pre>\\n<p>One interesting point that is not covered by the above pseudo code is the range for the number of revolution:\\u00a0 [ +n.0, 1.0, 0.0, -0.0, -1.0, -n.0 ].</p>\\n<p>As we approach zero, when the sign of a revolution is about to change , this value don&#8217;t jump immediately to 1.0 or -1.0, but instead pass trough the value 0.0 or -0.0 .</p>\\n<p>4)<em> Counter measure for a <span style=\\"color: #ff6600;\\">previous value dependent</span> node</em>:</p>\\n<br />  <a href=\\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/575/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/575/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/575/\\" /></a> <img alt=\\"\\" border=\\"0\\" height=\\"1\\" src=\\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=575&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\\" width=\\"1\\" />", "summary": "This post is about\\u00a0 two dependency nodes created to cope with the math limitation behind regular orientation constraint. (Above: notice the\\u00a0 flipping glitch when the torsion goes above 180.0 ) After writing a quaternion based aim constraint\\u00a0 I was often confronted with twist popping out of control w", "id": "http://circecharacterworks.wordpress.com/?p=575", "categories": ["circerigging"], "metadata": {"guid": "6cc70911-ba01-4409-b2bb-128dee5d7817", "likes": 0, "is_published": true}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=81", "title": "instantiate an asset by name", "datetime": "2011-07-20T01:17:18", "html": "<p>More Unity learning&#8230;</p>\\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):</p>\\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.</p>\\n<p>Then use the following code (Boo):</p>\\n<pre class=\\"brush:py\\">obj as GameObject\\nins as GameObject\\n\\n# let\'s grab the asset\\nobj=Resources.Load(\\"tile_flat01\\", GameObject)\\n# add a texture to the asset\\nobj.renderer.material.mainTexture=Resources.Load(\\"cobbleTex\\", Texture2D)\\n# instantiate it\\nins=Instantiate(obj)</pre>\\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.</p>\\n<p>edit: seems I have to find a Unity icon for my blog</p>", "summary": "More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82", "id": "http://blarg.robertkist.com/?p=81", "categories": [], "metadata": {"guid": "3ed9e97a-8998-4ff4-80dd-57108af42b7d", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=701", "title": "Compliments to the chef!", "datetime": "2011-07-20T00:44:10", "html": "<p>My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \\u00a0One time, a food critic dined there, and enjoyed his <em>paella</em>\\u00a0so much that he went into the back to compliment the chef. \\u00a0He saw the two and congratulated the dishwasher-who didn&#8217;t speak a lick of English- on a dish well made.</p>", "summary": "My mother tells a story that when she was in her early 20&#8242;s, she was the (only) chef in a small Spanish restaurant, in a tiny kitchen with a Mexican dishwasher. \\u00a0One time, a food critic dined there, and enjoyed his paella\\u00a0so much that he went into the back to compliment the chef. \\u00a0He saw", "id": "http://www.robg3d.com/?p=701", "categories": [], "metadata": {"guid": "5e9b13e5-d329-4e9f-a441-c7a19ee854fd", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=350", "title": "Rigging for the masses!", "datetime": "2011-07-19T22:14:43", "html": "<p>Last weekend I&#8217;ve been giving a conference about rigging in <a href=\\"http://www.campus-party.es/2011/index.html\\" target=\\"_blank\\" title=\\"Campus Party\\">Campus Party</a>. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In spanish.<br />\\n<em><br />\\nEl pasado fin de semana estuve en <a href=\\"http://www.campus-party.es/2011/index.html\\" target=\\"_blank\\" title=\\"Campus Party\\">Campus Party</a>, en Valencia, dando una charla. Mi objetivo era hacer que la gente ajena al 3D entendiese en qu\\u00e9 consiste la figura del &#8216;rigger&#8217; y c\\u00f3mo se encaja dentro de una producci\\u00f3n. La organizaci\\u00f3n ha subido esta conferencia (as\\u00ed como todas las dem\\u00e1s) a Youtube, as\\u00ed que se puede ver completa. En espa\\u00f1ol.</em></p>\\n<p></p>\\n<p>&#8212;&#8212;&#8212; <strong>\\u00a1AUTOBOMBO EXTRA!</strong> &#8212;&#8212;&#8212;</p>\\n<p><em>Hace unos meses, Abel, del <em>podcast</em> &#8216;Houston, tenemos un programa&#8217;, me hizo una entrevista para su programa. Se puede escuchar y descargar desde <a href=\\"http://www.houstontenemosunprograma.com/2011/05/setup-de-personajes-con-iker-j-de-los.html\\" target=\\"_blank\\" title=\\"aqu\\u00ed\\">aqu\\u00ed</a>.</p>\\n<p></em></p>", "summary": "Last weekend I&#8217;ve been giving a conference about rigging in Campus Party. My goal was making non-3D related people to understand what a rigger does in its day by day work. Folks uploaded the speech (as well as all the other talks) to Youtube, so here you can see the whole presentation. In span", "id": "http://somosposmodernos.com/blog/?p=350", "categories": [], "metadata": {"guid": "d2a10086-f592-4166-b969-68cc2beb0b4b", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/07/19/gavit-dev-diary-14/", "title": "Gavit Dev Diary #14", "datetime": "2011-07-19T15:15:27", "html": "<p>It&#8217;s been a while since the last developer diary. Unfortunately the project suffered a serious setback on the programming side: I trusted the wrong person and got screwed. I lost a couple of hundred bucks but more importantly so much time was wasted that the planned animated short (showcasing the features of Gavit) can not be finished in time. I&#8217;ll have to come up with some other way to effectively present my achievements to potential employers.</p>\\n<p><del>So if you are an experienced unreal programmer (or you know one who might be interested) <a href=\\"http://www.zspline.net/blog/contact/\\" target=\\"_blank\\">please let me know</a>.</del></p>\\n<p><strong>UPDATE</strong>: Never mind, the good people at <a href=\\"http://www.digitalconfectioners.com/\\" target=\\"_blank\\">Digital Confectioners</a> took over the project. :)</p>\\n<p>Other aspects of the project did advance though: I reported half a dozen modo bugs and implemented a few workarounds for them in my export script. I extended my MetaSL shader library with a few extra nodes and further refined the whole workflow.</p>\\n<p>But these &#8220;under the hood&#8221; improvements are boring so let&#8217;s see something more visual.</p>\\n<p>This is Mr Elegant, our first proper (non-test-dummy) character:</p>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 170px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant01.png\\" rel=\\"lightbox\\" title=\\"mrelegant01.png\\"><img alt=\\"\\" class=\\"thumb \\" height=\\"134\\" id=\\"thumb607\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant01.png\\" width=\\"160\\" /></a>\\n<p class=\\"wp-caption-text\\">Mr Elegant (ingame)</p>\\n</div>\\n<p class=\\"thickbox\\" title=\\"mrelegant01.png\\">It was modeled by <a href=\\"http://www.joshstoker.com/\\" target=\\"_blank\\">Josh Stoker</a> in ZBrush then it was sent to modo using the excellent GoZ functionality. I used convexity/concavity tracing to generate the base diffuse color map:</p>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 143px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant02.png\\" rel=\\"lightbox\\" title=\\"mrelegant02.png\\"><img alt=\\"\\" class=\\"thumb \\" height=\\"160\\" id=\\"thumb608\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant02.png\\" width=\\"133\\" /></a>\\n<p class=\\"wp-caption-text\\">The diffuse color.</p>\\n</div>\\n<p>Earlier I wrote about the theory behind <a href=\\"http://www.zspline.net/blog/2011/05/22/gavit-dev-diary-13/\\" target=\\"_blank\\">character colorization</a> and here I implemented it. The black/red/green areas are defined as vertex colors on the SDS cage of the high definition mesh then baked down to the low polygon object:</p>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 143px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/mrelegant03.png\\" rel=\\"lightbox\\" title=\\"mrelegant03.png\\"><img alt=\\"\\" class=\\"thumb \\" height=\\"160\\" id=\\"thumb609\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/thumbs/thumbs_mrelegant03.png\\" width=\\"133\\" /></a>\\n<p class=\\"wp-caption-text\\">Vertex colors on the high polygon mesh.</p>\\n</div>\\n<p>This texture along with the extra UV map defining color zones, allow me to separately recolor the skin, the facial hair, the tie, the shirt, the handkerchief, the jacket, the hands, the pants, the shoes, the front of the shoe and the sole.</p>\\n<p>I combined the &#8220;specular&#8221; and &#8220;specular power&#8221; maps into one texture so the final shader uses 4 texture samplers and 99 instructions (although that will go up a bit as soon as the mesh gets skinned).<!-- PHP 5.x --></p>", "summary": "It&#8217;s been a while since the last developer diary. Unfortunately the project suffered a serious setback on the programming side: I trusted the wrong person and got screwed. I lost a couple of hundred bucks but more importantly so much time was wasted that the planned animated short (showcasing ", "id": "http://www.zspline.net/blog/?p=1333", "categories": [], "metadata": {"guid": "15b2a405-d225-4d5c-9dcc-d617f27e5ab4", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://www.chrisevans3d.com/pub_blog/?p=673", "title": "SIGGRAPH 2011", "datetime": "2011-07-19T07:32:42", "html": "<p>I am giving three small talks at SIGGRAPH, drop me a line if you will be in Vancouver.</p>\\n<h2><a href=\\"http://www.siggraph.org/s2011/content/Rigging-Characters-CryENGINE-0\\" target=\\"_blank\\">Rigging Characters for CryENGINE</a></h2>\\n<p>How to rig, skin, and export a character for CryENGINE 3. Topics include  physics setup, building characters from many skinned meshes, and  creating Character Definitions and Character Parameter files. These  rigging basics are applicable to most run-time game engines.</p>\\n<h2><a href=\\"http://www.siggraph.org/s2011/content/introduction-python-scripting-0\\" target=\\"_blank\\">Introduction to Python Scripting</a></h2>\\n<p>In this introduction to Python, a powerful scripting language used by  many 3D applications, attendees learn the basics and explore small  example scenarios gleaned from actual game and film productions. The  sessions are taught in a way that should empower attendees to  immediately begin creating time-saving python scripts and applications.</p>\\n<h2><a href=\\"http://www.siggraph.org/s2011/content/World-Creation-CryENGINE-0\\" target=\\"_blank\\">World Creation in CryENGINE</a></h2>\\n<p>Have you ever wanted to make a videogame? This session shows how to  build a small level in the freely available CryENGINE 3 SDK. Topics  include: world building and tools (FlowGraph, CryENGINE&#8217;s visual  scripting language, and Trackview, the camera sequencing and directing  tools). In less than an hour, attendees create their own playable video  games.</p>", "summary": "I am giving three small talks at SIGGRAPH, drop me a line if you will be in Vancouver.\\nRigging Characters for CryENGINE\\nHow to rig, skin, and export a character for CryENGINE 3. Topics include  physics setup, building characters from many skinned meshes, and  creating Character Definitions and Chara", "id": "http://www.chrisevans3d.com/pub_blog/?p=673", "categories": [], "metadata": {"guid": "6dc7f8a3-ffd1-4f59-8c05-d5b4c6460f8a", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=698", "title": "Cloud Based Pipelines?", "datetime": "2011-07-19T00:37:28", "html": "<p>Originally posted on <a href=\\"http://altdevblogaday.com/2011/07/16/cloud-based-pipelines/\\">AltDevBlogADay</a>:</p>\\n<p>The rest of software is moving into The Cloud, how come we aren&#8217;t doing the same with our tools and pipeline?</p>\\n<p>I love the cloud. \\u00a0Yes, I know it&#8217;s a buzz word for not quite revolutionary concepts, but I love it anyway. \\u00a0I love it for the practical benefit I get, and I love it for the technological possibilities it brings. \\u00a0It doesn&#8217;t just mean using web apps- it means using amazing applications that run in any browser on any platform, it means not worrying about storing data locally, it means a rich and expanding personal experience based on the connections between your data and everyone else&#8217;s.</p>\\n<p>And then I think about most of the pipelines I&#8217;ve seen and I wonder: what have we missed? \\u00a0Very often, we are building some of the most incredible and expensive games ever with incredibly shitty sets of tools. \\u00a0Why do we have essentially the same pipelines as we&#8217;ve had for the same 10+ years? (I recently<a href=\\"http://www.robg3d.com/?p=542\\"> finished a case study</a> of Dark Angel&#8217;s pipeline, from 2001, which is remarkably similar to some I&#8217;ve seen recently). \\u00a0Game production has changed, but pipelines have not. \\u00a0We&#8217;re releasing games that get downloaded content (or are continuously updated like an MMO), and the amount of content is ballooning. \\u00a0Yet we&#8217;re still using essentially the same technologies and strategies as we were in 2001. \\u00a0There&#8217;s something to learn by looking at Cloud technologies and concepts, buzzword or not.</p>\\n<p><strong>Can game pipelines, too, move into the cloud?</strong></p>\\n<p>The one essential aspect of the cloud is its basis in service-based architectures. \\u00a0For the sake of simplicity and those unfamiliar, let&#8217;s say a service is a local or remote process that has some set of exposed methods that can be called by a client through a common protocol (JSON, XMLRPC, etc.). \\u00a0All other aspects of cloud technologies require this serviced based architecture. \\u00a0You couldn&#8217;t have the characteristic web apps if there was no service behind them. \\u00a0You couldn&#8217;t run the same or similar page on any platform and device if the work was happening on the client instead of the service. \\u00a0You couldn&#8217;t have a backend that automatically scales if the real work was happening in a Rich Client App (RCA) instead of in a service.</p>\\n<p>Could we build our pipelines with the same service-based approach (if not the always-there distributed-ness), and would we get similar results?</p>\\n<pre lang=\\"txt\\">,--.::::::::::::::::::::::::::::::::::::\\n    )::::::::::::::::::::::::::::::::..\\n  _\'-. _:::::::::::::::::::::::::::..\\n (    ) ),--.::::::::::::::::::::::.\\n             )-._::::::::::::::::::..\\n_________________) ::::::::::::::...</pre>\\n<p>Yes, we can. \\u00a0But let&#8217;s consider what a service-based pipeline architecture would look like. \\u00a0The biggest change is moving nearly all functionality out of DCC apps, which are RCA&#8217;s, and into libraries that can be consumed by the services. \\u00a0This is what I&#8217;ve been doing for years, but I understand it may be a new thing for many people- but I guarantee you can do it and you&#8217;ll be better off because of it, not having to deal with buggy and monolithic DCC apps. \\u00a0These libraries/services can use headless apps behind the scenes if necessary, to do rendering or some processing or whatever (mayabatch.exe or whatever). \\u00a0Avoid it if you can, but you could do it.</p>\\n<p>The DCC and its UI&#8217;s, then, become very simple shells which just call methods on the service, and contain very little functionality of their own. \\u00a0The service does the processing and calls back to the client (and if the function can be done asynchronously, the user keeps working while the work happens in the background). \\u00a0The service can communicate to other remote and local services to do the work it needs to do.</p>\\n<p>Conceptually it is simple, but I promise you, the implementation will be complex. \\u00a0So the benefits better be worth it.</p>\\n<p>And they would be. \\u00a0The first thing you get is better abstraction between systems and components. \\u00a0We remove ourselves from the hacks and workarounds of programming in a DCC, and can instead concentrate on working in a sensible development environment and not have to worry about debugging in app or having to make sure all our libraries work under whatever half-assed and old implementation of python Autodesk provides. \\u00a0This results in being more deliberate about design decisions- not having a hundred pipeline modules available to you is actually a good thing, it forces you to get your dependencies under control, and you give more consideration to your APIs (I <a href=\\"http://www.robg3d.com/?p=385\\">blogged about</a> how server/client systems can be a useful exercise in abstraction).</p>\\n<p>These abstractions also give greater scalability. \\u00a0No problem moving your code between versions of your DCC, machine architectures, python/.NET versions, etc. \\u00a0It doesn&#8217;t have the ball and chain of DCC apps, because you&#8217;ve taken it all out of the DCC apps. \\u00a0Compare this flexibility in scalability to something like render farms- they usually have a very specific functionality and required software and added more functionality takes lots of engineering time. \\u00a0By having &#8216;normal&#8217; code that can be run on any machine, you can distribute your processing to a farm that can tackle anything, and doesn&#8217;t require as complex systems or specialized skills to manage. \\u00a0This is the distributed processing capacity of cloud computing (in fact you could probably deploy this code to a cloud provider, if you had good server-fu).</p>\\n<p>These abstractions also lead to language neutrality. \\u00a0That&#8217;s right, I said it. \\u00a0I didn&#8217;t say it is a good idea, just that it&#8217;s possible. \\u00a0Just the same way the Twitter API has been wrapped in three dozen languages, your services should have an API using a common protocol like JSON, and many services and clients can communicate together. \\u00a0You&#8217;re not stuck using COM or marshalling data or any other number of bullshit techniques I&#8217;ve seen people do to glue things together. \\u00a0Your client can be anything- a DCC, a web app, a mobile app- you could even run it via email if you so desired, with zero change to the pipeline itself- only the client code you need to call it. \\u00a0And don&#8217;t forget hosting a web page in a library like Qt or .NET could also run the service.</p>\\n<p>This is software engineering as we tech artists and pipeline engineers should have been doing all along.</p>\\n<pre lang=\\"txt\\"> _______________\\n| | _________ |o|\\n| |___________| |\\n|     _____     |\\n| DD |     |   V|\\n|____|_____|____|</pre>\\n<p>Let&#8217;s take a simple pipeline, like a character mesh exporter that includes an automatic LoD creator. \\u00a0In Maya (or Max, or XSI, whatever), the user just hits &#8216;export selected&#8217;, and it can transfer the mesh data and the Maya filename/mesh name to the Local Service.&#8217; \\u00a0It can transfer the mesh data directly as a json object, or it can save it to an fbx file first and transfer the name of the fbx file, whatever- the point is that it isn&#8217;t data <em>in</em>\\u00a0the DCC, it&#8217;s data <em>from</em>\\u00a0the DCC.</p>\\n<p>At that point, Maya&#8217;s work is done and the user can go back to working while everything else happens in the background in other processes and machines. \\u00a0Awesome! \\u00a0Most (all?) DCC&#8217;s are still very single threaded so trying to do any real work in background threads is not practical (or stable&#8230;).</p>\\n<p>The Local Service sends the mesh data to some Remote Services to request the generation of some crunched and optimized LoD meshes. \\u00a0The Local Service can call an Asset Management Service with the scene filename/mesh name, to get the export path of the final mesh file. \\u00a0The Local Service can then do whatever it needs to do to &#8216;export&#8217; the content: call some exe files, serialize it, whatever, it just needs to save the exported file to where the Asset Management Service said it should be.</p>\\n<p>The Remote Services can call back to the Local Service as they finish processing the LoD&#8217;s, and the Local Service can save them where they&#8217;re supposed to go as well. \\u00a0All of this without the user having to wait or intervene for anything, and without bogging down his box with expensive, CPU hungry operations.</p>\\n<pre lang=\\"txt\\">  __________\\n/_________/ |\\n|         | |\\n| |====|  | |\\n| |====|  | |\\n|   ___   | |\\n|  | @ |  | |\\n|   ---   | |\\n|_________|./</pre>\\n<p>Is this complex? \\u00a0Yes. \\u00a0Is it possible for a technically competent team to do? \\u00a0Absolutely not. \\u00a0Pipelines are the bastard child of game technology, and it show- we have been doing the same crappy things for a decade. \\u00a0If we want to minimize ballooning costs of content development, develop robust pipelines capable of supporting games after ship with updates and DLC, and, let&#8217;s face it, work on some inspiring and exciting new technology, we&#8217;ll take pipelines to the cloud.</p>", "summary": "Originally posted on AltDevBlogADay: The rest of software is moving into The Cloud, how come we aren&#8217;t doing the same with our tools and pipeline? I love the cloud. \\u00a0Yes, I know it&#8217;s a buzz word for not quite revolutionary concepts, but I love it anyway. \\u00a0I love it for the practical bene", "id": "http://www.robg3d.com/?p=698", "categories": ["Rob Galanakis"], "metadata": {"guid": "06e15c51-d76f-465b-b68a-35e1f95a998f", "likes": 0, "is_published": true}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=780", "title": "yay for g+", "datetime": "2011-07-18T03:25:20", "html": "<p>Never managed to get into facebook. Within hours of signing up I had friend requests from all sorts of crazy people that I either barely knew, or knew but certainly wasn&#8217;t keen or comfortable sharing various aspects of my life with etc&#8230; I&#8217;m sure the story is familiar. So it just didn&#8217;t take with me.</p>\\n<p>Anyhoo, g+ seems like its solved all of these problems in a way that makes complete sense. And its google. I manage all my photos with picasa because its just bloody easy. And I LOVE gReader. So anyway, hopefully it&#8217;ll be awesome. If you&#8217;re not using it, try it out. Look for <a href=\\"https://plus.google.com/108847499546939618060/posts\\" target=\\"_blank\\">macaronikazoo</a>!</p>", "summary": "Never managed to get into facebook. Within hours of signing up I had friend requests from all sorts of crazy people that I either barely knew, or knew but certainly wasn&#8217;t keen or comfortable sharing various aspects of my life with etc&#8230; I&#8217;m sure the story is familiar. So it just di", "id": "http://www.macaronikazoo.com/?p=780", "categories": [], "metadata": {"guid": "18b29e5c-bde8-4d40-a2c9-07e4bf37b7d9", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=685", "title": "I\\u2019m on Google+", "datetime": "2011-07-17T20:55:19", "html": "<p>I&#8217;m on Google+, and it is the FIRST social networking site I&#8217;ve ever actively participated in. It seems pretty awesome so far, have I been missing this on Facebook all these years?</p>\\n<p>Fine me here: https://plus.google.com/u/0/112207898076601628221/posts//p/pub</p>", "summary": "I&#8217;m on Google+, and it is the FIRST social networking site I&#8217;ve ever actively participated in. It seems pretty awesome so far, have I been missing this on Facebook all these years? Fine me here: https://plus.google.com/u/0/112207898076601628221/posts//p/pub", "id": "http://www.robg3d.com/?p=685", "categories": [], "metadata": {"guid": "5789492d-3749-4f6f-9672-af17a67f88a8", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=752", "title": "object oriented rigging in Skeleton Builder", "datetime": "2011-07-17T15:47:03", "html": "<p>Skeleton builder is a neat framework for writing rigging code, but its also a useful tool for writing runtime tools as well. \\u00a0I figured I&#8217;d go over an example of this because its not terribly obvious until you actually get in there and write some code. And even then, its not terribly obvious until you read all the code written in baseRigPrimitive&#8230;</p>\\n<p>Writing a tool to do seamless Ik/Fk switching on an arbitrary rig is basically impossible. \\u00a0After all, your particular limb setup might be a simple biped leg, a 5 jointed spider type leg, or a quadruped leg or any other crazy scenario. \\u00a0Writing a single function to deal with all these possibilities, especially when you factor in the different ways these rigs could be implemented is basically impossible.</p>\\n<p>But writing the logic to do the switch for any of them in isolation is generally dead easy. \\u00a0This is the sort of problem that object oriented programming was invented to solve. \\u00a0In Skeleton Builder the way I solve these problems is like this.</p>\\n<p>In Skeleton Builder you write rig primitives. Each rig primitive is written to rig a particular sub-section of a skeleton and the code to do so is implemented in its own class. \\u00a0So using the above examples I would have 3 classes: BipedLegRig, SpiderLegRig and QuadrupedLegRig. \\u00a0Now on each one of these classes, lets define a switchToIk() method and a switchToFk() method. \\u00a0So the switching logic for each rig type can be implemented independently on each of these classes.</p>\\n<p>Your code will look something like this:</p>\\n<pre class=\\"brush:py\\">import rigPrimitives\\n\\nclass SpiderLegRig(rigPrimitives.RigPart):\\n  #this class variable defines the alias\' for the controls. controls are accessed using these alias\'\\n  CONTROL_NAMES = \'legControl\', \'fkThigh\', \'fkKnee\', \'fkAnkle\'\\n\\n  def _build( self, skeletonPart, **kw ):\\n    #the code to build the actual rig goes here\\n    ...\\n\\n    #this is the list of nodes that will get connected to the alias\' defined\\n    #in the CONTROL_NAMES class variable\\n    controls = ikControl, fk0, fk1, fk2\\n    namedNodes = ()\\n\\n    return controls, namedNodes\\n  def switchToIk( self ):\\n\\n    #this code grabs the actual control nodes based on their alias\'\\n    legControl = self.getControl( \'legControl\' )\\n    fkThigh = self.getControl( \'fkThigh\' )\\n    fkKnee = self.getControl( \'fkKnee\' )\\n    fkAnkle = self.getControl( \'fkAnkle\' )\\n\\n    #logic to switch from Fk to Ik goes below\\n    ...\\n  def switchToFk( self ):\\n    #logic to switch from Ik to Fk goes below\\n    ...</pre>\\n<p>Then calling this switch method is as simple as doing something like this:</p>\\n<pre class=\\"brush:py\\">from maya import cmds\\n\\nselectedControls = cmds.ls( sl=True )\\nif selectedControls:\\n  rigPart = rigPrimitives.RigPart.InitFromItem( selectedControls[0] )\\n  rigPart.switchToFk()</pre>\\n<p>And voila. So now you can write a single UI that lets users switch between Ik and Fk for ANY part of the rig simply by running the above code.</p>\\n<p>I&#8217;ll write up another post with another example of a useful runtime tool that I&#8217;ve written that would be very difficult to do without a nice object oriented rigging framework to leverage.</p>", "summary": "Skeleton builder is a neat framework for writing rigging code, but its also a useful tool for writing runtime tools as well. \\u00a0I figured I&#8217;d go over an example of this because its not terribly obvious until you actually get in there and write some code. And even then, its not terribly obvious u", "id": "http://www.macaronikazoo.com/?p=752", "categories": [], "metadata": {"guid": "bc24336d-9e40-4ac0-be25-433a8b3f08f5", "likes": 0, "is_published": false}}, {"author": "Peter van Ooijen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/IOooyM5QxII/", "title": "Pimping the content of a (Monotouch) iPhone app with a webview", "datetime": "2011-07-17T12:40:15", "html": "<p>At first sight iOS offers a rich set of UI elements containing things like navigation- tool- and tab-bars, buttons,&nbsp; spinners and scrolling views. When it comes to presenting text content there is the textview. Which does offer scrolling and automatic links for Utl\\u2019s and phone numbers&nbsp; but dos not have a lot of possibilities to make the content look really good. The main reason is that all text in the view is displayed in one and the same font. No way to even just emphasize a single word in bold.</p>\\n<h2>Back to HTML</h2>\\n<p>For the remainder of this story I assume you are somewhat familiar with basic HTML and <a href=\\"http://monotouch.net/\\">Monotouch</a>&nbsp; or other iOS tools and will do a fast drive through. </p>\\n<p>To make your content look better you need a WebView. At first sight this component seems intended to display online web-based content. Feeding it with local offline content, straight from code is just as easy. You can drop and size an UIWebView anywhere on a View (or instantiate one from code)&nbsp; and make it accessible to the code via an outlet. The webview has a method LoadHtmlString to feed it with content.</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 15pt;\\">\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\">myWebView.LoadHtmlString(MyMarkup, <span style=\\"color: blue;\\">null</span>);</p>\\n</div>\\n<p><!--EndFragment--></div>\\n<p><!--EndFragment-->\\n<p>MyMarkup is the string containing Html content for the view. I will describe the basic possibilities for this content in a HTMLbuilder demo class which uses a stringbuilder to assemble the markup.</p>\\n<p>Initialization in the constructor:</p>\\n<ul>\\n<li>Initializes the stringbuilder</li>\\n<li>Create the &lt;head&gt; of the page</li>\\n<li>Create a&nbsp; css-style sheet for the basic look of the \\u201cpage\\u201d</li>\\n<li>Write the opening &lt;body&gt; tag</li>\\n</ul>\\n<p>After that the various methods build the content. These here are just some examples, just to get the idea. The assumptions made here</p>\\n<ul>\\n<li>All pages have the same fixed font set in the stylesheet.</li>\\n<li>All images are in the Images folder</li>\\n<li>All inline images have the same size</li>\\n</ul>\\n<p>I leave it up to your own imagination where, what and how to fix.</p>\\n<p>The Markup property (when necessary) writes the page closing tags and returns the html for the \\u201cpage\\u201d. This result is fed straightly to the webview\\u2019s LoadHtmlString method.</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">class</span> <span style=\\"color: #2b91af;\\">HTMLbuilder</span></p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">private</span> <span style=\\"color: #2b91af;\\">StringBuilder</span> html;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">private</span> <span style=\\"color: blue;\\">bool</span> closed = <span style=\\"color: blue;\\">false</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> HTMLbuilder ()</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = <span style=\\"color: blue;\\">new</span> <span style=\\"color: #2b91af;\\">StringBuilder</span> ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;html&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;head&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;style type = \\\\&#8221;text/css\\\\&#8221;&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;body {font-family:helvetica;font-size:15;}&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;/style&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;/head&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: #a31515;\\">&#8220;&lt;body&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">string</span> Markup</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">get</span></p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">if</span> (!closed)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; closed = <span style=\\"color: blue;\\">true</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\\"color: #a31515;\\">&#8220;&lt;/body&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\\"color: #a31515;\\">&#8220;&lt;/html&gt;&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">return</span> html.ToString();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> Append(<span style=\\"color: blue;\\">string</span> content)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(content);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> AppendBold(<span style=\\"color: blue;\\">string</span> content)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append(<span style=\\"color: blue;\\">string</span>.Format(<span style=\\"color: #a31515;\\">&#8220;&lt;b&gt;{0}&lt;/b&gt;&#8221;</span>, content));</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> AddParagraph(<span style=\\"color: blue;\\">string</span> tekst)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html.Append (<span style=\\"color: blue;\\">string</span>.Format (<span style=\\"color: #a31515;\\">&#8220;&lt;p&gt;{0}&lt;/p&gt;&#8221;</span>, tekst));</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">private</span> <span style=\\"color: blue;\\">string</span> ImagePath (<span style=\\"color: blue;\\">string</span> image)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">return</span> NSBundle.MainBundle.PathForResource (<span style=\\"color: blue;\\">string</span>.Format (<span style=\\"color: #a31515;\\">&#8220;Images/{0}&#8221;</span>, image), <span style=\\"color: #a31515;\\">&#8220;png&#8221;</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">string</span> InlineImage(<span style=\\"color: blue;\\">string</span> image)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">string</span>.Format(<span style=\\"color: #a31515;\\">&#8220;&lt;img src=\\\\&#8221;file:{0}\\\\&#8221; width=\\\\&#8221;22\\\\&#8221; height=\\\\&#8221;22\\\\&#8221; valign=\\\\&#8221;bottom\\\\&#8221;&gt;&#8221;</span>, ImagePath(image));</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">private</span> <span style=\\"color: blue;\\">void</span> AddButton(<span style=\\"color: blue;\\">string</span> image, <span style=\\"color: blue;\\">string</span> urlpart)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">var</span> url = <span style=\\"color: blue;\\">string</span>.Format (<span style=\\"color: #a31515;\\">&#8220;&lt;a href=\\\\&#8221;{1}\\\\&#8221;&gt;&lt;img src=\\\\&#8221;file:{0}\\\\&#8221;&gt;&lt;/a&gt;&#8221;</span>, ImagePath(image), urlpart);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddParagraph (url);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>The images and buttons require some explanation. A webview expects its resources, like an image, somewhere relative to it\\u2019s URL. The Url is passed in the second parameter of the LoadHtmlString method. Here we are working local, inside the iPhone, there is no URL for that, as a second parameter I passed null. The ImagePath method translates the path of an image, which is a&nbsp; folder in the application, to a path reachable by the webview. The resulting url is fed to an &lt;img&gt; in the InLineImage or AddButton method.</p>\\n<h2>Start surfing</h2>\\n<p>The webview is also a great place for the user to start surfing the web. In the HTMLBuilder the AddButton method creates a clickable image which will take the user to an url outside the app. Like the company website. Clicking this button will fire up Mobile Safari which takes the user out of the app and into the site. The image turns into a linkbutton by embedding it in plain &lt;a&gt; tags. </p>\\n<p>To steer this behavior the webview uses a WebViewDelegate</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">class</span> <span style=\\"color: #2b91af;\\">WebViewDelegate</span> : UIWebViewDelegate</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> WebViewDelegate ()</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">override</span> <span style=\\"color: blue;\\">bool</span> ShouldStartLoad (UIWebView webView, MonoTouch.Foundation.NSUrlRequest request, UIWebViewNavigationType navigationType)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">if</span> (request.Url.Scheme.StartsWith (<span style=\\"color: #a31515;\\">&#8220;http&#8221;</span>)) {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UIApplication.SharedApplication.OpenUrl (request.Url);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">false</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">true</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>The delegate checks the Url. When it is a http request it fires up the browser using SharedApplication.OpenUrl. Else the WebView is free to proceed.</p>\\n<p>The delegate is set in the ViewDidLoad</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">override</span> <span style=\\"color: blue;\\">void</span> ViewDidLoad ()</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; WebViewDelegate = <span style=\\"color: blue;\\">new</span> WebViewDelegate ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = WebViewDelegate;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>&nbsp;</p>\\n<p>It is advised to remove the delegate when unloading</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">override</span> <span style=\\"color: blue;\\">void</span> ViewDidUnload ()</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = <span style=\\"color: blue;\\">null</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">base</span>.ViewDidUnload ();</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment--><br />\\n<h2>More than HTML</h2>\\n<p>So far we have seen the basics of pimping the content using HTML. The possibilities here are almost endless and Mobile Safari does work with HTML5. </p>\\n<p>What HTML does not give you are specific iPhone features like gestures and the possibility to hook your own app code (behind<img alt=\\"Smile\\" class=\\"wlEmoticon wlEmoticon-smile\\" src=\\"http://codebetter.com/petervanooijen/files/2011/07/wlEmoticon-smile.png\\" style=\\"border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none;\\" />) in the page. The good thing is that the webview is a view like all other views, accessible to all&nbsp; your coding skills. As a demo I will add swiping to a webview. When the users swipes left or right the content of the webview is updated. Not by the browser, but my own code.</p>\\n<p> The hard thing is that gesture-recognizers are not under quite the same control as the view, they have a different life cycle. Setting them up requires some fiddling. Doing that wrong will lead to a complete crash of the app.</p>\\n<p>The methods handling the swipes are marked with an Export attribute.</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\">[Export(<span style=\\"color: #a31515;\\">\\"SwipeLeft\\"</span>)]</p>\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> SwipeLeftAction (UISwipeGestureRecognizer recognizer)</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; myWebview.LoadHtmlString(MyMarkup.prevPage(), <span style=\\"color: blue;\\">null</span>);</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">[Export(<span style=\\"color: #a31515;\\">\\"SwipeRight\\"</span>)]</p>\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> SwipeRightAction (UISwipeGestureRecognizer recognizer)</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.NextPage(), <span style=\\"color: blue;\\">null</span>);</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p>After a swipe the content is updated to my taste.</p>\\n<p>Both the handlers should also be added as static properties of the view</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">static</span> Selector SwipeLeft {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">get</span> { <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">new</span> Selector (<span style=\\"color: #a31515;\\">&#8220;SwipeLeft&#8221;</span>); }</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">static</span> Selector SwipeRight {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">get</span> { <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">new</span> Selector (<span style=\\"color: #a31515;\\">&#8220;SwipeRight&#8221;</span>); }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>Wiring up is done in the ViewDidLoad. Here it is absolutely essential to check whether the view already responds to the recognizer</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">if</span> (!View.RespondsToSelector (SwipeRight)) {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; var swipeRight = <span style=\\"color: blue;\\">new</span> UISwipeGestureRecognizer ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; swipeRight.AddTarget (<span style=\\"color: blue;\\">this</span>, SwipeRight);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; swipeRight.Direction = UISwipeGestureRecognizerDirection.Right;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; swipeRight.Delegate = <span style=\\"color: blue;\\">new</span> UIGestureRecognizerDelegate ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeRight);</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>What the gesture recognizer will respond to should be self explanatory. The complexity of the wiring does show iOS is behind the scenes somewhat more complicated that the Monotouch framework can hide. </p>\\n<h2></h2>\\n<h2>Summing up</h2>\\n<p>All of this leads to this result</p>\\n<div style=\\"font-family: consolas; background: white; color: black; font-size: 11pt;\\">\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">partial</span> <span style=\\"color: blue;\\">class</span> <span style=\\"color: #2b91af;\\">MyPageWithWebView</span> : UIViewController</p>\\n<p style=\\"margin: 0px;\\">{</p>\\n<p style=\\"margin: 0px;\\"><span style=\\"color: blue;\\">&nbsp;&nbsp;&nbsp; #region</span> Constructors</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">#endregion</span></p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">private</span> WebViewDelegate WebViewDelegate;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">override</span> <span style=\\"color: blue;\\">void</span> ViewDidLoad ()</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebViewDelegate = <span style=\\"color: blue;\\">new</span> WebViewDelegate ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = WebViewDelegate;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">if</span> (!View.RespondsToSelector (SwipeRight)) {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var swipeRight = <span style=\\"color: blue;\\">new</span> UISwipeGestureRecognizer ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.AddTarget (<span style=\\"color: blue;\\">this</span>, SwipeRight);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.Direction = UISwipeGestureRecognizerDirection.Right;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeRight.Delegate = <span style=\\"color: blue;\\">new</span> UIGestureRecognizerDelegate ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeRight);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">if</span> (!View.RespondsToSelector (SwipeLeft)) {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var swipeLeft = <span style=\\"color: blue;\\">new</span> UISwipeGestureRecognizer ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.AddTarget (<span style=\\"color: blue;\\">this</span>, SwipeLeft);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.Direction = UISwipeGestureRecognizerDirection.Left;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swipeLeft.Delegate = <span style=\\"color: blue;\\">new</span> UIGestureRecognizerDelegate ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; View.AddGestureRecognizer (swipeLeft);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">base</span>.ViewDidLoad ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">override</span> <span style=\\"color: blue;\\">void</span> ViewDidUnload ()</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.WeakDelegate = <span style=\\"color: blue;\\">null</span>;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">base</span>.ViewDidUnload ();</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; [Export(<span style=\\"color: #a31515;\\">\\"SwipeLeft\\"</span>)]</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> SwipeLeftAction (UISwipeGestureRecognizer recognizer)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.prevPage(), <span style=\\"color: blue;\\">null</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; [Export(<span style=\\"color: #a31515;\\">\\"SwipeRight\\"</span>)]</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">void</span> SwipeRightAction (UISwipeGestureRecognizer recognizer)</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myWebView.LoadHtmlString(MyMarkup.NextPage(), <span style=\\"color: blue;\\">null</span>);</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">static</span> Selector SwipeLeft {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">get</span> { <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">new</span> Selector (<span style=\\"color: #a31515;\\">&#8220;SwipeLeft&#8221;</span>); }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">public</span> <span style=\\"color: blue;\\">static</span> Selector SwipeRight {</p>\\n<p style=\\"margin: 0px;\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\\"color: blue;\\">get</span> { <span style=\\"color: blue;\\">return</span> <span style=\\"color: blue;\\">new</span> Selector (<span style=\\"color: #a31515;\\">&#8220;SwipeRight&#8221;</span>); }</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n<p style=\\"margin: 0px;\\">}</p>\\n<p style=\\"margin: 0px;\\">&nbsp;</p>\\n</div>\\n<p><!--EndFragment-->\\n<p>Now I have the possibilities of pimping my content using HTML without giving up the power of C# code. </p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/IOooyM5QxII\\" width=\\"1\\" />", "summary": "At first sight iOS offers a rich set of UI elements containing things like navigation- tool- and tab-bars, buttons,&#160; spinners and scrolling views. When it comes to presenting text content there is the textview. Which does offer scrolling and automatic&#160;&#8230; <a href=\\"http://codebetter.com", "id": "http://codebetter.com/petervanooijen/2011/07/17/pimping-the-content-of-a-monotouch-iphone-app-with-a-webview/", "categories": [], "metadata": {"guid": "8e353e2f-8e72-4285-996c-23f4ee32a93a", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=584", "title": "Game Studio Takeover Nightmare Impossible", "datetime": "2011-07-17T02:29:31", "html": "<p>There&#8217;s a sub-genre of reality television that contains shows where experts come into a failing business and implement changes to fix things. \\u00a0Three of the most well known are Gordon Ramsey&#8217;s Kitchen Nightmares, Robert Irvine&#8217;s Restaurant Impossible, and Tabatha&#8217;s Salon Takeover (totally awesome show, btw). \\u00a0I&#8217;ve wondered what it&#8217;d be like to get a games industry version of one of these experts into a studio to see what she could do. \\u00a0Fortunately, the programs all follow a very obvious (and repetitive) pattern to find and fix the problems- so you can really just do it yourself (most problems the experts find are obvious anyway- the people in charge are just ignorant or in denial).</p>\\n<p>Follow these steps at your studio and imagine how things would go down.</p>\\n<p><strong>Part 1: The initial personnel observation</strong><br />\\nThe experts observe how things run without interferring. \\u00a0They sit down to eat, watch hidden cameras, whatever.</p>\\n<ol>\\n<li>How do the employees get along? \\u00a0Are they friendly to each other, do they enjoy work, do they hang out, do they do work?</li>\\n<li>How does management interact with the employees?</li>\\n<li>How many employees and managers are there, and what&#8217;s the ratio?</li>\\n<li>Is there anything else fishy (nepotism, unqualified people, etc.)?</li>\\n</ol>\\n<p><strong>Part 2: The facilities inspection</strong><br />\\nThe experts tour the facilities and inspect how things look, especially cleanliness.</p>\\n<ol>\\n<li>Do people have the right computer equipment and licenses?</li>\\n<li>Are the bathrooms and structure in good shape? \\u00a0AC working well?</li>\\n<li>Are the employees treated well physically? \\u00a0Are there drinks and food available?</li>\\n<li>Where&#8217;s the studio located and where would people rather have it?</li>\\n</ol>\\n<p><strong>Part 3: The tragedy and shutdown</strong><br />\\nThe expert does some minor changes and does a more formal observation, providing minor interventions. \\u00a0Involves some sort of disaster. \\u00a0Place eventually closes up and the expert begins to work his or her magic.</p>\\n<ol>\\n<li>What tools and processes go right? \\u00a0What are the worst? \\u00a0How far to which side is every tool and process in the middle?</li>\\n<li>Do you have managers who crack under pressure, or do really obviously wrong things?</li>\\n<li>Are there people seriously misbehaving? \\u00a0Are there people seriously crunching?</li>\\n<li>And the biggest question is: does the studio&#8217;s project suck, and what are the major problems with the game (is it not fun, has it taken way too long)?</li>\\n</ol>\\n<p><strong>Part 4: The personnel rebuilding</strong><br />\\nRelationships are worked on, especially between employees and management. \\u00a0Lots of training is provided.</p>\\n<ol>\\n<li>What training opportunities exist at your studio? \\u00a0Are people encouraged to look outside for education? \\u00a0Is ample opportunity provided internally?</li>\\n<li>What are your employees biggest grievances? \\u00a0What has changed the most in the past few years and how do your veterans feel about it?</li>\\n<li>How are you dealing with your poor performers and rewarding your best?</li>\\n<li>Figure out why the project/game is in the state it&#8217;s in, and put a plan in action to fix it and make sure it doesn&#8217;t keep happening.</li>\\n</ol>\\n<p><strong>Part 5: The facilities rebuild unveil</strong><br />\\nNew and improved facilities are unveiled to the team.</p>\\n<ol>\\n<li>Your studio should be feeding you. \\u00a0There&#8217;s no reason, financial or otherwise, not to provide developers with at least lunch every day.</li>\\n<li>You should have enough bathrooms and they should be clean.</li>\\n</ol>\\n<p><strong>Part 6: First day reopening</strong><br />\\nThe business runs for a day, usually with much better results (and generally a couple hiccups).<br />\\nWith the grievances solved, or at least in the open and being worked on, studio culture should be improved and you can concentrate on building a great product.</p>\\n<p><strong>Part 7: Checkin later</strong><br />\\nExpert comes back to check up on how things have come along.<br />\\nInevitably, some managers will devolve back into madness; or perhaps things were too far along to stop the studio&#8217;s shutdown or crappy project. \\u00a0If you see this happening, you should leave.</p>\\n<hr />\\n<p>I wonder how something like this would fare in the games industry, and who the hell we could find to do it.</p>", "summary": "There&#8217;s a sub-genre of reality television that contains shows where experts come into a failing business and implement changes to fix things. \\u00a0Three of the most well known are Gordon Ramsey&#8217;s Kitchen Nightmares, Robert Irvine&#8217;s Restaurant Impossible, and Tabatha&#8217;s Salon Takeo", "id": "http://www.robg3d.com/?p=584", "categories": ["Rob Galanakis"], "metadata": {"guid": "905cfadb-5cd4-44b1-95aa-619257392bde", "likes": 0, "is_published": true}}, {"author": "Rigging Dojo", "url": "http://www.riggingDojo.com/2011/07/16/leave-a-message/", "title": "Leave a message", "datetime": "2011-07-16T05:51:06", "html": "<p>Have we improved your work, helped you find a job or you just like what we are sharing and teaching?<br />\\nMaybe you don&#8217;t like us and think we are terrible sock monsters ?</p>\\n<p>Either way, take a second and comment on this post.<br />\\nWe look forward to hearing from you.</p>\\n<p>Thanks!</p>\\n<p>Josh, Brad and Chad</p>\\n<p><em><span style=\\"color: #c0c0c0;\\">*not responsible for lost socks</span></em></p>", "summary": "Have we improved your work, helped you find a job or you just like what we are sharing and teaching? Maybe you don&#8217;t like us and think we are terrible sock monsters ? Either way, take a second and comment on this post. We look forward to hearing from you. Thanks! Josh, Brad and Chad [...]", "id": "http://www.riggingDojo.com/?p=903", "categories": [], "metadata": {"guid": "6a14c947-65f0-4eb7-90e4-9826be683a72", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/07/15/resume-updated-demo-to-follow/", "title": "Resume Updated, Demo to Follow", "datetime": "2011-07-16T00:29:04", "html": "<!-- Start LikeButtonSetTop --><!-- End LikeButtonSetTop --><p>I did something productive today on my day off!\\u00a0 Whilst staying at home avoiding &#8216;Carmageddon&#8217;, I spent hours revising my resume.\\u00a0 Finally it is finished&#8230;\\u00a0 oh, except for that mistake&#8230;\\u00a0 <img alt=\\";-)\\" class=\\"wp-smiley\\" src=\\"http://www.jonasavrin.com/wp-includes/images/smilies/icon_wink.gif\\" /> \\u00a0 View it at the normal <a href=\\"http://www.jonasavrin.com/resume/\\" title=\\"Resum\\u00e9\\">location</a>.</p>\\n<div class=\\"shr-publisher-2646\\"></div><!-- Start LikeButtonSetBottom --><!-- End LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "I did something productive today on my day off!\\u00a0 Whilst staying at home avoiding &#8216;Carmageddon&#8217;, I spent hours revising my resume.\\u00a0 Finally it is finished&#8230;\\u00a0 oh, except for that mistake&#8230;\\u00a0 \\u00a0 View it at the normal location. &#038;nbsp", "id": "http://www.jonasavrin.com/?p=2646", "categories": [], "metadata": {"guid": "e390d8ff-6dbb-431f-ac9e-fd794ea3bddf", "likes": 0, "is_published": false}}, {"author": "Jeremy Miller", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/cgg4_cZpJAk/", "title": "FubuMVC Webinar Next Week", "datetime": "2011-07-15T14:11:57", "html": "<p><a href=\\"http://twitter.com/#!/mkmurray\\">Mike Murray</a> is giving a webinar introduction to FubuMVC next week as part of JP\\u2019s Develop with Passion series.&nbsp; <a href=\\"https://www1.gotomeeting.com/register/131448736\\">Sign up here</a>.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/cgg4_cZpJAk\\" width=\\"1\\" />", "summary": "Mike Murray is giving a webinar introduction to FubuMVC next week as part of JP\\u2019s Develop with Passion series.&#160; Sign up here.", "id": "http://codebetter.com/jeremymiller/2011/07/15/fubumvc-webinar-next-week/", "categories": [], "metadata": {"guid": "124c0acd-dc31-4e72-ac32-b192f4b8ec74", "likes": 0, "is_published": false}}]'
08-07 21:20 root         INFO     Handling CGI request.
08-07 21:20 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:20 SocketClient INFO     Sending to service: "["publish_content", [{"title": "SIGGRAPH 2011", "url": "http:\/\/www.chrisevans3d.com\/pub_blog\/?p=673", "author": "admin", "summary": "I am giving three small talks at SIGGRAPH, drop me a line if you will be in Vancouver.\nRigging Characters for CryENGINE\nHow to rig, skin, and export a character for CryENGINE 3. Topics include  physics setup, building characters from many skinned meshes, and  creating Character Definitions and Chara", "html": "<p>I am giving three small talks at SIGGRAPH, drop me a line if you will be in Vancouver.<\/p>\n<h2><a href=\"http:\/\/www.siggraph.org\/s2011\/content\/Rigging-Characters-CryENGINE-0\" target=\"_blank\">Rigging Characters for CryENGINE<\/a><\/h2>\n<p>How to rig, skin, and export a character for CryENGINE 3. Topics include  physics setup, building characters from many skinned meshes, and  creating Character Definitions and Character Parameter files. These  rigging basics are applicable to most run-time game engines.<\/p>\n<h2><a href=\"http:\/\/www.siggraph.org\/s2011\/content\/introduction-python-scripting-0\" target=\"_blank\">Introduction to Python Scripting<\/a><\/h2>\n<p>In this introduction to Python, a powerful scripting language used by  many 3D applications, attendees learn the basics and explore small  example scenarios gleaned from actual game and film productions. The  sessions are taught in a way that should empower attendees to  immediately begin creating time-saving python scripts and applications.<\/p>\n<h2><a href=\"http:\/\/www.siggraph.org\/s2011\/content\/World-Creation-CryENGINE-0\" target=\"_blank\">World Creation in CryENGINE<\/a><\/h2>\n<p>Have you ever wanted to make a videogame? This session shows how to  build a small level in the freely available CryENGINE 3 SDK. Topics  include: world building and tools (FlowGraph, CryENGINE&#8217;s visual  scripting language, and Trackview, the camera sequencing and directing  tools). In less than an hour, attendees create their own playable video  games.<\/p>", "datetime": "2011-07-19T07:32:42", "id": "http:\/\/www.chrisevans3d.com\/pub_blog\/?p=673", "categories": [], "metadata": {"guid": "6dc7f8a3-ffd1-4f59-8c05-d5b4c6460f8a", "likes": 0, "is_published": false}}], {}]"
08-07 21:20 SocketClient INFO     Received from service: "true"
08-07 21:20 SocketClient INFO     Returning(as str): 'true'
08-07 21:20 root         INFO     Handling CGI request.
08-07 21:20 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:20 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Gavit Dev Diary #14", "url": "http:\/\/www.zspline.net\/blog\/2011\/07\/19\/gavit-dev-diary-14\/", "author": "Zoltan", "summary": "It&#8217;s been a while since the last developer diary. Unfortunately the project suffered a serious setback on the programming side: I trusted the wrong person and got screwed. I lost a couple of hundred bucks but more importantly so much time was wasted that the planned animated short (showcasing ", "html": "<p>It&#8217;s been a while since the last developer diary. Unfortunately the project suffered a serious setback on the programming side: I trusted the wrong person and got screwed. I lost a couple of hundred bucks but more importantly so much time was wasted that the planned animated short (showcasing the features of Gavit) can not be finished in time. I&#8217;ll have to come up with some other way to effectively present my achievements to potential employers.<\/p>\n<p><del>So if you are an experienced unreal programmer (or you know one who might be interested) <a href=\"http:\/\/www.zspline.net\/blog\/contact\/\" target=\"_blank\">please let me know<\/a>.<\/del><\/p>\n<p><strong>UPDATE<\/strong>: Never mind, the good people at <a href=\"http:\/\/www.digitalconfectioners.com\/\" target=\"_blank\">Digital Confectioners<\/a> took over the project. :)<\/p>\n<p>Other aspects of the project did advance though: I reported half a dozen modo bugs and implemented a few workarounds for them in my export script. I extended my MetaSL shader library with a few extra nodes and further refined the whole workflow.<\/p>\n<p>But these &#8220;under the hood&#8221; improvements are boring so let&#8217;s see something more visual.<\/p>\n<p>This is Mr Elegant, our first proper (non-test-dummy) character:<\/p>\n<div class=\"wp-caption aligncenter\" style=\"width: 170px;\"><a href=\"http:\/\/www.zspline.net\/blog\/wp-content\/gallery\/gavit\/mrelegant01.png\" rel=\"lightbox\" title=\"mrelegant01.png\"><img alt=\"\" class=\"thumb \" height=\"134\" id=\"thumb607\" src=\"http:\/\/www.zspline.net\/blog\/wp-content\/gallery\/gavit\/thumbs\/thumbs_mrelegant01.png\" width=\"160\" \/><\/a>\n<p class=\"wp-caption-text\">Mr Elegant (ingame)<\/p>\n<\/div>\n<p class=\"thickbox\" title=\"mrelegant01.png\">It was modeled by <a href=\"http:\/\/www.joshstoker.com\/\" target=\"_blank\">Josh Stoker<\/a> in ZBrush then it was sent to modo using the excellent GoZ functionality. I used convexity\/concavity tracing to generate the base diffuse color map:<\/p>\n<div class=\"wp-caption aligncenter\" style=\"width: 143px;\"><a href=\"http:\/\/www.zspline.net\/blog\/wp-content\/gallery\/gavit\/mrelegant02.png\" rel=\"lightbox\" title=\"mrelegant02.png\"><img alt=\"\" class=\"thumb \" height=\"160\" id=\"thumb608\" src=\"http:\/\/www.zspline.net\/blog\/wp-content\/gallery\/gavit\/thumbs\/thumbs_mrelegant02.png\" width=\"133\" \/><\/a>\n<p class=\"wp-caption-text\">The diffuse color.<\/p>\n<\/div>\n<p>Earlier I wrote about the theory behind <a href=\"http:\/\/www.zspline.net\/blog\/2011\/05\/22\/gavit-dev-diary-13\/\" target=\"_blank\">character colorization<\/a> and here I implemented it. The black\/red\/green areas are defined as vertex colors on the SDS cage of the high definition mesh then baked down to the low polygon object:<\/p>\n<div class=\"wp-caption aligncenter\" style=\"width: 143px;\"><a href=\"http:\/\/www.zspline.net\/blog\/wp-content\/gallery\/gavit\/mrelegant03.png\" rel=\"lightbox\" title=\"mrelegant03.png\"><img alt=\"\" class=\"thumb \" height=\"160\" id=\"thumb609\" src=\"http:\/\/www.zspline.net\/blog\/wp-content\/gallery\/gavit\/thumbs\/thumbs_mrelegant03.png\" width=\"133\" \/><\/a>\n<p class=\"wp-caption-text\">Vertex colors on the high polygon mesh.<\/p>\n<\/div>\n<p>This texture along with the extra UV map defining color zones, allow me to separately recolor the skin, the facial hair, the tie, the shirt, the handkerchief, the jacket, the hands, the pants, the shoes, the front of the shoe and the sole.<\/p>\n<p>I combined the &#8220;specular&#8221; and &#8220;specular power&#8221; maps into one texture so the final shader uses 4 texture samplers and 99 instructions (although that will go up a bit as soon as the mesh gets skinned).<!-- PHP 5.x --><\/p>", "datetime": "2011-07-19T15:15:27", "id": "http:\/\/www.zspline.net\/blog\/?p=1333", "categories": [], "metadata": {"guid": "15b2a405-d225-4d5c-9dcc-d617f27e5ab4", "likes": 0, "is_published": false}}], {}]"
08-07 21:21 SocketClient INFO     Received from service: "true"
08-07 21:21 SocketClient INFO     Returning(as str): 'true'
08-07 21:21 root         INFO     Handling CGI request.
08-07 21:21 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:21 SocketClient INFO     Sending to service: "["publish_content", [{"title": "instantiate an asset by name", "url": "http:\/\/blarg.robertkist.com\/?p=81", "author": "Robert", "summary": "More Unity learning&#8230; One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version): Make a folder &#8220;resources&#82", "html": "<p>More Unity learning&#8230;<\/p>\n<p>One of the problems I faced with my Unity tile engine was instantiating a given tile without having to assign it to the script in the Unity editor. After much trial and error, here&#8217;s how to do it (works with the free Unity version):<\/p>\n<p>Make a folder &#8220;resources&#8221; inside the assets folder and put your assets (e.g. FBX, TGA, etc) files there.<\/p>\n<p>Then use the following code (Boo):<\/p>\n<pre class=\"brush:py\">obj as GameObject\nins as GameObject\n\n# let's grab the asset\nobj=Resources.Load(\"tile_flat01\", GameObject)\n# add a texture to the asset\nobj.renderer.material.mainTexture=Resources.Load(\"cobbleTex\", Texture2D)\n# instantiate it\nins=Instantiate(obj)<\/pre>\n<p>With this code I can just fetch the tile names from an XML and load them as needed and I don&#8217;t have to assign anything manually in the Unity editor any more.<\/p>\n<p>edit: seems I have to find a Unity icon for my blog<\/p>", "datetime": "2011-07-20T01:17:18", "id": "http:\/\/blarg.robertkist.com\/?p=81", "categories": [], "metadata": {"guid": "3ed9e97a-8998-4ff4-80dd-57108af42b7d", "likes": 0, "is_published": false}}], {}]"
08-07 21:21 SocketClient INFO     Received from service: "true"
08-07 21:21 SocketClient INFO     Returning(as str): 'true'
08-07 21:21 root         INFO     Handling CGI request.
08-07 21:21 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:21 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Power Animator", "url": "http:\/\/strongmanimator.blogspot.com\/2011\/07\/power-animator.html", "author": "anim8d (noreply@blogger.com)", "summary": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http:\/\/altdevblogaday.com\/\">http:\/\/altdevblogaday.com<\/a>, welcome!)<\/i><\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exer", "html": "<div class=\"MsoNormal\"><i>(ed. note: If you\u2019ve made your way here from <a href=\"http:\/\/altdevblogaday.com\/\">http:\/\/altdevblogaday.com<\/a>, welcome!)<\/i><\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">\u201cThere are two ways of exerting one's strength: one is pushing down, the other is pulling up.\u201d<\/span> \u2013 Booker T. Washington<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">If there was ever a quote that equally embodies my life as an animator and as a powerlifter, this is it. Aside from the literal translation regarding weightlifting, I feel that this quote also demonstrates how we can excel in our areas of interest by seeking out and nurturing an encouraging an environment of constructive feedback.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">For today\u2019s post, I\u2019m going to tell parallel stories based on my experiences as an animator and a powerlifter, and show how opening myself up to external feedback has helped me grow throughout my careers in both. <\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">2005, Champaign,  Illinois. My then girlfriend (now wife) Jessica and I were working out at the local Gold's Gym together for the first time. We had been dating for 6 months or so, but until this point, we had different gym memberships. We talked about weightlifting quite a lot (she was an amateur bodybuilder at the time), but we rarely lifted together, and that was about to change.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http:\/\/4.bp.blogspot.com\/-aadhzdWfFRc\/TikWFRpl6OI\/AAAAAAAAAHM\/cBt6rKypXJk\/s1600\/csi.png\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"640\" src=\"http:\/\/4.bp.blogspot.com\/-aadhzdWfFRc\/TikWFRpl6OI\/AAAAAAAAAHM\/cBt6rKypXJk\/s640\/csi.png\" width=\"233\" \/><\/a><\/div><div class=\"MsoNormal\">On that day at Gold's Gym, I was benching and curling, because THAT'S WHAT MEN DO (that's how my mind worked back then). I saw Jessica go over to the Olympic lifting platform and start warming up for squats. I told her, in my all-knowing way, that those would hurt her knees and to be careful. She looked at me with the look that I now know is reserved for idiocy and when the dog poops on the carpet. At the time, I took it for confusion, as though I had just unleashed upon her this knowledge that she was sorely lacking.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">She continued on with her squats while I performed my \"superior\" bench sets. After I was done, I went over to the squat rack to load up a bar. Jessica comes over and asks what I am doing, since \"clearly squats are supposed to be bad for your knees!\" I reply \"I\u2019m gonna do some curls!\" I get the same look as before. She stays over on the platform and starts loading up a bar on the ground, and then starts lifting it! I have no idea what she is doing but it MUST be bad for her back, and I tell her as much.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">She ignored me. She was deadlifting, and that was serious business for her.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Later on that night Jessica turned to me and asked \"So, what are your fitness goals?\" I replied \"To get bigger and stronger, of course.\" She proceeded to ask me how I was planning on getting stronger if all I ever did was bench, curl, and use the nautilus machines for my legs. I made some excuse about how I used to squat in college and my knees were all messed up from it.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Then she said it:<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\"><br \/><\/div><table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: right; margin-left: 1em; text-align: right;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http:\/\/1.bp.blogspot.com\/-gZFL6TlSblo\/TikCFdsWowI\/AAAAAAAAAHI\/qNPzUJtCKV4\/s1600\/LooneyTunes_Gossamer_Model_Sheet.jpg\" style=\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"256\" src=\"http:\/\/1.bp.blogspot.com\/-gZFL6TlSblo\/TikCFdsWowI\/AAAAAAAAAHI\/qNPzUJtCKV4\/s320\/LooneyTunes_Gossamer_Model_Sheet.jpg\" width=\"320\" \/><\/a><\/td><\/tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">This is apparently what I looked like, hair and all.<\/td><\/tr><\/tbody><\/table><div class=\"MsoNormal\">\"You know you have chicken legs, right? You're shaped like a light bulb ready to tip over. And what the hell is with curling in the squat rack? Frat boys do that.\"<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">I was disheartened, totally bummed out, but more importantly, I was <i>confused<\/i>. How could this happen? I spent YEARS in the gym, doing everything anyone ever told me was the right thing to do. I read websites and Men's Health! They HAD to be right!<br \/><br \/>More importantly, <i>HOW IS A GIRL TELLING ME I AM WRONG ABOUT WEIGHTLIFTING? GAAHH!!<\/i><\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Jessica and I didn't go to the gym together for a few days after that. My ego was a bit... shattered. I wish I could say that I had resources to turn to, but as I looked around, I realized I had none. No books, no expertise to draw on. That's when it hit me- Jessica was my doorway to proper strength training. She knew more about it than anyone I knew, and she could prove her knowledge worked.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Training in a vacuum that way had stunted my growth in a literal sense- I wasn't getting any bigger, faster or stronger. I was living in a viscous cycle of train -&gt; get frustrated -&gt; try something above my strength -&gt; get hurt -&gt; recover -&gt; repeat, and I needed it to end.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">That summer, I asked Jessica to design me a program that would improve my strength and help me shed my chicken legs. She did one better and show me how to design that program, reading through books and teaching me different training techniques and calorie intakes. Over that summer I gained 20 pounds, most if not all of which was muscle in my legs. Since then I've gone on to compete in both powerlifting and strongman competitions, and will continue to do so till they have to scrape me off of the platform. <\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">So I guess getting strength training advice from a girl isn\u2019t so bad after all. <span style=\"font-family: Wingdings;\">J<\/span><\/div><div class=\"MsoNormal\"><br \/>I invite you to read my parallel story about animation on AltDevBlogADay (<a href=\"http:\/\/altdevblogaday.com\/2011\/07\/22\/power-animator\/\">http:\/\/altdevblogaday.com\/2011\/07\/22\/power-animator\/<\/a>)<\/div><div style=\"line-height: 14.25pt;\"><br \/><\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/4248341596629159263-354100910313363526?l=strongmanimator.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-07-22T10:34:31.240000", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-354100910313363526", "categories": [], "metadata": {"guid": "17f41b91-dcb0-4a6b-aae1-6f12c4364bc6", "likes": 0, "is_published": false}}], {}]"
08-07 21:21 SocketClient INFO     Received from service: "true"
08-07 21:21 SocketClient INFO     Returning(as str): 'true'
08-07 21:21 root         INFO     Handling CGI request.
08-07 21:21 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:21 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Yeah, we don\u2019t run in debug", "url": "http:\/\/www.robg3d.com\/?p=727", "author": "Rob Galanakis", "summary": "Raymond Chen over at The Old New Thing\u00a0had a few blog posts recently about debug\/release build behavior. \u00a0I have never figured out why, but it seems an incredibly common standard practice to not run in debug because there are too many errors. The danger of making the chk build stricter is that nobod", "html": "<p>Raymond Chen over at <a href=\"http:\/\/blogs.msdn.com\/b\/oldnewthing\">The Old New Thing<\/a>\u00a0had a few blog posts recently about debug\/release build behavior. \u00a0I have never figured out why, but it seems an incredibly common standard practice to not run in debug because there are too many errors.<\/p>\n<p><a href=\"http:\/\/blogs.msdn.com\/b\/oldnewthing\/archive\/2011\/07\/18\/10187351.aspx\">The danger of making the chk build stricter is that nobody will run it<\/a>: \u00a0Here, Raymond mentions how a MSFT team didn&#8217;t support running its app in debug mode because it broke into the debugger too much. \u00a0<a href=\"http:\/\/blogs.msdn.com\/b\/oldnewthing\/archive\/2011\/07\/29\/10190885.aspx\">Hey, let&#8217;s report errors only when nothing is at stake!<\/a>: \u00a0Raymond talks about programming different behavior into debug and release builds- specifically, to crash in debug but swallow in release.<\/p>\n<p>Perhaps because I haven&#8217;t been around too long, I just cannot understand how so many otherwise smart people can have such, such bad ideas. \u00a0And how common this particular issue is.<\/p>\n<p>The issue was especially bad when I was forbidden to use exceptions. \u00a0I wanted to put in asserts since I wasn&#8217;t allowed to use exceptions, except that no one else used the debug build, so when people broke these asserts, they never knew. \u00a0And then when people&#8217;s changes broke some new (and pretty fundamental) asserts, I was told &#8216;oh, we don&#8217;t run in debug.&#8217;<\/p>\n<p>Wait, what? \u00a0You have absolutely no way to ensure valid state, or even keep track of state at all, other than in logs that make debugging far more difficult than it should be (because the problem that should have asserted or crashed will only manifest itself much later and it is unlikely you can determine where the state got messed up by just looking through the log, at least without adding a bunch more logging).<\/p>\n<p>Does your studio do this (not run in debug because there are too many exceptions or asserts)? \u00a0If so, you may need to smack sense into people. \u00a0This is a god awful and unforgivable practice when you are using any program- programs with persistent state can corrupt that persistent state, and programs without state can return unexpected results. \u00a0These sort of decisions are indicative of a myopic or insular culture that is in serious need of a rude exposure and shake up.<\/p>", "datetime": "2011-08-01T00:27:23", "id": "http:\/\/www.robg3d.com\/?p=727", "categories": [], "metadata": {"guid": "637cd37e-14a4-4edb-9c3b-337464e38c8f", "likes": 0, "is_published": false}}], {}]"
08-07 21:21 SocketClient INFO     Received from service: "true"
08-07 21:21 SocketClient INFO     Returning(as str): 'true'
08-07 21:21 root         INFO     Handling CGI request.
08-07 21:21 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:21 SocketClient INFO     Sending to service: "["publish_content", [{"title": "You will create a brave new world", "url": "http:\/\/www.robg3d.com\/?p=729", "author": "Rob Galanakis", "summary": "Ian Cooper, one of the contributing authors at CodeBetter.com, recently wrote an article called &#8216;Why CRUD might be what they want, but may not be what they need&#8216;. \u00a0While this applies mostly to the world of applications, I&#8217;ve been saying the same things about tools and pipeline for ", "html": "<p>Ian Cooper, one of the contributing authors at CodeBetter.com, recently wrote an article called &#8216;<a href=\"http:\/\/codebetter.com\/iancooper\/2011\/07\/15\/why-crud-might-be-what-they-want-but-may-not-be-what-they-need\/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+CodeBetter+%28CodeBetter.Com%29\">Why CRUD might be what they want, but may not be what they need<\/a>&#8216;. \u00a0While this applies mostly to the world of applications, I&#8217;ve been saying the same things about tools and pipeline for a while now. \u00a0The basic argument goes, the people designing\/requesting our apps have a history and understanding of the process, and when we build new systems, they ask for optimized versions of that same process. \u00a0But there are very likely ways we can rethink that legacy process in the context of much better technology and software, and change the experience profoundly for the better. \u00a0It is our job, as the people who sit between technology and content development, to do that.<\/p>\n<p>And the good news, as always, is that if we fuck up, no one dies.<\/p>\n<p>Go ahead and read the article and see what I mean.<\/p>", "datetime": "2011-08-02T00:50:07", "id": "http:\/\/www.robg3d.com\/?p=729", "categories": [], "metadata": {"guid": "42c44e91-e0ec-4d59-97e1-d3d6e3a545ad", "likes": 0, "is_published": false}}], {}]"
08-07 21:21 SocketClient INFO     Received from service: "true"
08-07 21:21 SocketClient INFO     Returning(as str): 'true'
08-07 21:21 root         INFO     Handling CGI request.
08-07 21:21 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:21 SocketClient INFO     Sending to service: "["publish_content", [{"title": "The Open Source community can be mean", "url": "http:\/\/www.robg3d.com\/?p=733", "author": "Rob Galanakis", "summary": "I&#8217;ve talked a bit about my problems with OSS as an outsider. \u00a0Martijn Faassen wrote a great post about his problems with it from the inside: How to Handle Ideas. \u00a0It&#8217;s an informative, lucid post about improving the ways the open source community receives ideas and criticisms, written by ", "html": "<p>I&#8217;ve talked a bit about my problems with OSS as an outsider. \u00a0Martijn Faassen wrote a great post about his problems with it from the inside: <a href=\"http:\/\/faassen.n--tree.net\/blog\/view\/weblog\/2011\/07\/15\/0\">How to Handle Ideas<\/a>. \u00a0It&#8217;s an informative, lucid post about improving the ways the open source community receives ideas and criticisms, written by an insider.<\/p>\n<p>Even outside of the open source community, it is useful to read and remember his advice and ideas, as they&#8217;re useful ways to handle incoming suggestions and criticisms for any internal project you work on.<\/p>", "datetime": "2011-08-03T01:12:45", "id": "http:\/\/www.robg3d.com\/?p=733", "categories": [], "metadata": {"guid": "e46784be-0f63-483c-a122-e77abfb0539e", "likes": 0, "is_published": false}}], {}]"
08-07 21:21 SocketClient INFO     Received from service: "true"
08-07 21:21 SocketClient INFO     Returning(as str): 'true'
08-07 21:22 root         INFO     Handling CGI request.
08-07 21:22 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:22 SocketClient INFO     Sending to service: "["publish_content", [{"title": "So You F@%$\u2019ed Up and Deleted Script Editor History", "url": "http:\/\/www.jonasavrin.com\/2011\/08\/03\/you-fed-up-and-deleted-script-editor-history\/", "author": "Jonas Avrin", "summary": "What do you do when you screw up and delete all your history and input code in Maya script editor usually do to a right-click muscle memory FAIL?\u00a0 First of all, DON&#8217;T close Maya!\u00a0 Navigate to your prefs directory, depending on the system you&#8217;re using that is in different locations, and t", "html": "<!-- Start LikeButtonSetTop --><div style=\"clear: both; height: 2px; width: 100%;\"><\/div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"><\/a><a class=\"shareaholic-googleplusone\"><\/a><\/div><div style=\"clear: both; height: 2px; width: 100%;\"><\/div><!-- End LikeButtonSetTop --><p><a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2010\/08\/maya2011_thumb.png\" rel=\"lightbox[2652]\"><img alt=\"maya2011_thumb\" class=\"alignleft size-full wp-image-165\" height=\"99\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2010\/08\/maya2011_thumb.png\" title=\"maya2011_thumb\" width=\"76\" \/><\/a>What do you do when you screw up and delete all your history and input code in Maya script editor usually do to a right-click muscle memory FAIL?\u00a0 First of all, DON&#8217;T close Maya!\u00a0 Navigate to your prefs directory, depending on the system you&#8217;re using that is in different locations, and then open up the handy little mel file called &#8220;commandExecuter&#8221;, and that file name may have a hyphen and some numbers behind it depending on how many tabs you have going.\u00a0 Open the corresponding file based on the tab you mistakenly erased in notepad or favorite text editor and then copy the contents back into your script editor.<\/p>\n<p>This won&#8217;t get you everything back however, sad, I know, but if you can get back to where you were before the melt-down without too much hassle this way then that&#8217;s better than nothing.\u00a0 That&#8217;s why I like using external IDE&#8217;s for longer coding sessions and the script editor for little things that make my life easier in the particular scene I&#8217;m working on.<\/p>\n<div class=\"shr-publisher-2652\"><\/div><!-- Start LikeButtonSetBottom --><!-- End LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http:\/\/static.evernote.com\/article-clipper-remember.png\" \/>\n\t\t\t\t<\/a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;<\/div>\n<\/div>", "datetime": "2011-08-03T22:17:20", "id": "http:\/\/www.jonasavrin.com\/?p=2652", "categories": [], "metadata": {"guid": "33e2880e-e03e-4ab5-944f-68392040d88a", "likes": 0, "is_published": false}}], {}]"
08-07 21:22 SocketClient INFO     Received from service: "true"
08-07 21:22 SocketClient INFO     Returning(as str): 'true'
08-07 21:22 root         INFO     Handling CGI request.
08-07 21:22 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:22 SocketClient INFO     Sending to service: "["publish_content", [{"title": "MasterClass - Live Animation Binding", "url": "http:\/\/markj3d.blogspot.com\/2011\/08\/masterclass-live-animation-binding.html", "author": "Mark Jackson (markj3d@gmail.com)", "summary": "A few folk have mailed to ask when the MasterClass is being presented so I thought I'd do some blatant self promotion and spill the beans...... The MasterClasses are now online only, Autodesk figure they get a bigger audience this way and it stops me looking like an arse doing it live! (well, less o", "html": "A few folk have mailed to ask when the MasterClass is being presented so I thought I'd do some blatant self promotion and spill the beans...... The MasterClasses are now online only, Autodesk figure they get a bigger audience this way and it stops me looking like an arse doing it live! (well, less of an arse anyway!) It should go live on TheArea under their Siggraph feed on Tuesday 9th. Here's the basic outline, although it got expanded slightly since this into using HIK as an intermediate object, and mapping to raw optical moCap data. Hope you find it useful!<br \/><br \/><i>\"This Master Class will outline a method of transferring character animations between any source data and a given animation rig using a binder template file. This method was originally designed to enable Motion Capture data to be mapped to our in-house rigging systems whilst allowing for easy manipulation, but quickly evolved into a retargeting system in its own right. In the most basic form it allows for MoCap fbx files to be dropped directly onto your animation rigs. However, expanding the technique allows you to transfer animations between characters even when their skeletal structures and proportions are completely different. Because it relies on a Binder File and isn't code based it gives you the flexibility to manage any skeleton structure, allowing you to add custom bind nodes between any character specific joint and it's relative Rig Controller. Finally because the bind is a preset file it makes it very easy to bulk process animations, casting CharacterA's animation library straight to CharacterB.\"<\/i><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/1407054789026932542-7910970030129955628?l=markj3d.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-08-04T12:33:34.076000", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-7910970030129955628", "categories": [], "metadata": {"guid": "ebebe083-02e7-4f2b-a588-412d3cbfb61f", "likes": 0, "is_published": false}}], {}]"
08-07 21:22 SocketClient INFO     Received from service: "true"
08-07 21:22 SocketClient INFO     Returning(as str): 'true'
08-07 21:22 root         INFO     Handling CGI request.
08-07 21:22 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:22 SocketClient INFO     Sending to service: "["publish_content", [{"title": "A bit more details on compiler Roslyn plans\u2026", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/tUxnZk4ANcM\/", "author": "Patrick Smacchia", "summary": "Have a look at this Microsoft Research session entitled \u201cRefactoring with Roslyn Circus Comes to Town,\u201d made on July 19th. It is partly about Roslyn and also about code refactoring in general. Very interesting one &#8230; and pleasant to watch!&#160;&#8230; <a href=\"http:\/\/codebetter.com\/patricksmac", "html": "<p>Have a look at this Microsoft Research session entitled <a href=\"http:\/\/research.microsoft.com\/apps\/video\/default.aspx?id=152281\" target=\"_blank\">\u201cRefactoring with Roslyn Circus Comes to Town,\u201d<\/a> made on July 19th. It is partly about Roslyn and also about code refactoring in general. Very interesting one &#8230; and pleasant to watch!<\/p>\n<p>Mary Jo Foley reported her thoughts on it <a href=\"http:\/\/www.zdnet.com\/blog\/microsoft\/microsoft-moves-forward-with-roslyn-compiler-as-a-service-project\/10071\" target=\"_blank\">in a recent blog post<\/a> as well. It seems Roslyn RTM won&#8217;t meet the VS 2012 schedule, but we should have some bits to play around with, hopefully within the next months.<\/p>\n<p>I notice that the kings of refactoring in the .NET scene, the R# guys, are not there. Especially taking account that this morning I&#8217;ve done some heavy large scale refactoring with R# that saved my day, and free me some time to watch this session.<\/p>\n<p>Almost a decade of development with .NET and still excited about what&#8217;s next &#8230; I like it!<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/tUxnZk4ANcM\" width=\"1\" \/>", "datetime": "2011-08-04T13:42:52", "id": "http:\/\/codebetter.com\/patricksmacchia\/?p=363", "categories": [], "metadata": {"guid": "63f1c0eb-56d3-489f-a70a-456887d3c99c", "likes": 0, "is_published": false}}], {}]"
08-07 21:22 SocketClient INFO     Received from service: "true"
08-07 21:22 SocketClient INFO     Returning(as str): 'true'
08-07 21:22 root         INFO     Handling CGI request.
08-07 21:22 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:22 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Bored People Quit (I did!)", "url": "http:\/\/www.robg3d.com\/?p=737", "author": "Rob Galanakis", "summary": "If you read one long blog article this year, make it this one: Rands in Repose&#8217;s Bored People Quit. \u00a0It is one of the most important blog posts I&#8217;ve read in a long time, and right on the money. If you&#8217;ve ever worked a shitty professional job (especially programming), and you know y", "html": "<p>If you read one long blog article this year, make it this one: Rands in Repose&#8217;s <a href=\"http:\/\/www.randsinrepose.com\/archives\/2011\/07\/12\/bored_people_quit.html\">Bored People Quit<\/a>. \u00a0It is one of the most important blog posts I&#8217;ve read in a long time, and right on the money.<\/p>\n<p>If you&#8217;ve ever worked a shitty professional job (especially programming), and you know you have, you&#8217;ll resonate with what&#8217;s written there. \u00a0I told my last job for well over a year that I was bored and actually tried to quit a number of times, and gave exact action items for how to fix my boredom and what my grievances were. \u00a0Not that any were ever addressed. \u00a0And in a place like that, they couldn&#8217;t realistically be addressed, with so much riding on such an expensive project- they couldn&#8217;t give a shit about almost any individual worker or what I perceive as the long term health of the studio.<\/p>\n<p>Anyway, go read it, and pass it on to your managers!<\/p>", "datetime": "2011-08-04T15:20:16", "id": "http:\/\/www.robg3d.com\/?p=737", "categories": [], "metadata": {"guid": "907acc92-7ccf-4761-9e08-97b9dfe61897", "likes": 0, "is_published": false}}], {}]"
08-07 21:22 SocketClient INFO     Received from service: "true"
08-07 21:22 SocketClient INFO     Returning(as str): 'true'
08-07 21:22 root         INFO     Handling CGI request.
08-07 21:22 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:22 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Designing Animation For Speed", "url": "http:\/\/strongmanimator.blogspot.com\/2011\/08\/designing-animation-for-speed.html", "author": "anim8d (noreply@blogger.com)", "summary": "This was cross-posted to <a href=\"http:\/\/altdevblogaday.com\/2011\/08\/06\/designing-animation-for-speed\/\">AltDevBlogADay<\/a>. Look for a powerlifting corollary sometime soon!<br \/><br \/><br \/><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-h", "html": "This was cross-posted to <a href=\"http:\/\/altdevblogaday.com\/2011\/08\/06\/designing-animation-for-speed\/\">AltDevBlogADay<\/a>. Look for a powerlifting corollary sometime soon!<br \/><br \/><br \/><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Everything I ever needed to know about animation, I learned from watching Looney Tunes.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Seriously.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Sure, I went to school. I learned HOW to animate there and from other sources, but none of that taught me what I needed to know about animation as much as watching Bugs outsmart Elmer, Daffy play the second banana, Foghorn Leghorn fumble about, or Wile E. Coyote fall to yet another demise.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Gravity Doesn\u2019t Exist Until You Look Down<\/h3><div><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/08\/WileECoyote_fallstart1.jpg\"><img alt=\"\" class=\"alignleft size-full wp-image-13545\" height=\"320\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/08\/WileECoyote_fallstart1.jpg\" style=\"border-bottom-width: 0px; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; float: left;\" width=\"240\" \/><\/a>Bugs is the popular one. Daffy is the memorable one (Stuuuuuuupor Duck!). Foghorn, well, I say\u2026&nbsp; I say, he was fun to watch with his contraptions. However, Wile E. Coyote is the one that sticks out the most to me.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Not only is it entertaining to watch poor Wile E. try and try again to catch the Roadrunner (with a seemingly unlimited&nbsp;credit line with the Acme corporation), it is also a very good study of how developing a formula can allow an animator to work efficiently while keeping a high quality bar.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Take the timing of Wile E.'s fall, for instance. Did you know that every time he falls, it happens in the same exact number of frames? He tends to walk\/fly\/float\/propel himself over a ledge, and doesn't fall until he looks down (for Wile, gravity doesn't exist until he does this). He then falls over N frames until you see a puff of smoke and hear a distant \"splat.\"<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">This comedic timing (combined with a happy accident regarding the audio level of his \"splat\") allowed the Looney Tunes animators to build up to this punchline without worrying if the punchline itself would feel right. It also ensured that re-takes weren't going to be needed- once that formula was set, it was followed.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Set Your Pace<\/h3><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">For game animation, I take the same approach, especially for transition animations. In fact, on our current project, we try to animate all transitions to occur on 6, 12, 18 or 24 frames. Each of these frame counts corresponds with the desired perceived pacing of the character's thought process. For example:<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"Ready Now!\" - 6 frames<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"Get moving and STOP!\" - 12 frames<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"I gotta be ready&nbsp;<em>before&nbsp;<\/em>I get there\"&nbsp;- 18 frames<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"OK, I'm gonna pick my spot and get ready when I'm there.\" - 24 frames<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">These frame numbers allowed us to&nbsp;build a visual language with these transitions. For example, the faster ones are more immediate and needed for faster gameplay responsiveness (say, for aiming and shooting). Having them all on a 6-frame count holds the player's expectation that if \u201cI've gotta shoot, I'll get there in .2 seconds.\u201d It also allows us to later add interruptible follow-through for an extra 6 or 12 frames without that extra motion feeling out of place.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">In contrast, the 18\/24 frame transitions typically denote the end of longer, deliberate movement- the player knows they are moving at a certain speed and when they have reached their destination, the transition will carry that speed to a stop. These extra frames allow us to sell the character's weight at that stop, which in turn creates a mental acceptance by the player that it took longer than the 6\/12 frame motions.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Fast Iteration<\/h3><div><br \/><\/div><div class=\"mceTemp\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><dl class=\"wp-caption alignright\" id=\"attachment_13568\" style=\"background-color: #f3f3f3; border-bottom-color: rgb(221, 221, 221); border-bottom-left-radius: 3px 3px; border-bottom-right-radius: 3px 3px; border-bottom-style: solid; border-bottom-width: 1px; border-left-color: rgb(221, 221, 221); border-left-style: solid; border-left-width: 1px; border-right-color: rgb(221, 221, 221); border-right-style: solid; border-right-width: 1px; border-top-color: rgb(221, 221, 221); border-top-left-radius: 3px 3px; border-top-right-radius: 3px 3px; border-top-style: solid; border-top-width: 1px; float: right; margin-bottom: 10px; margin-left: 10px; margin-right: 10px; margin-top: 10px; padding-top: 4px; text-align: center; width: 213px;\"><dt class=\"wp-caption-dt\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/08\/exposusresheet1.jpg\"><img alt=\"\" class=\"size-full wp-image-13568\" height=\"233\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/08\/exposusresheet1.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"203\" \/><\/a><\/dt><dd class=\"wp-caption-dd\" style=\"font-size: 11px; line-height: 17px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 5px; padding-left: 4px; padding-right: 4px; padding-top: 0px;\">Sweet, sweet consistency<\/dd><\/dl><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">The next benefit to the frame counts is that they are easily scalable from one to the other. Personally, I set poses every 3-6 frames. This lets me easily slide the keys around if I need to make timing adjustments after the animations are implemented. These adjustments can also be easily scriptable (for fast tests), so I can adjust the timing of 160 animations very quickly to see if the new length feels right before going ahead and hand-tweaking them.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Since I've spaced out my keys in a uniform way, I can re-time the motions much more efficiently.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Lastly, these frame formulas give us efficient consistency. Since a uniform length exists, once we nail down the first key animation, we can modify it to create other motions in the same pool. For example, If we need to transition from a non-shooting pose to a shooting pose, we\u2019ll work on a key motion that gets across the character\u2019s intent and the player\u2019s feel. Once design deems the look and feel to be good for gameplay, we can create every other transition in that pool much quicker.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Happy Accidents<\/h3><div><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Much like the audio level on the splat of Wile E. Coyotes's fall (see the book Chuck Redux), coming up with the multiples of 6 formula was actually a happy accident- the Source Engine's default engine blend value is .2 seconds (6 frames!) In order to not disrupt existing gameplay, we started animating to that frame number. After implementing many transitions, it was apparent that not all of them could or should work on 6 frames. The easiest thing to do was scale the motion by 200% and work back from there. Lo and behold, 200% worked great, so we redid all of those motions with twice the frame count.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Since that pacing looked good,&nbsp;we extrapolated that 18 and 24 frames would be logical to try next. It worked, and now we have a (undocumented till now) visual language for our transitions.&nbsp;We've since extended this philosophy to our movement system, and the animators who work on that pump out high quality motions like nobody's business.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">It's Still Creative!<\/h3><div><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Purist animators out there might be shocked that we take shortcuts in order to produce efficient, high-quality animation at a fast pace. The fact of the matter is Warner Brothers, and even Disney, did the&nbsp;same thing! Read Chuck Redux, or watch this:<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div class=\"separator\" style=\"clear: both; text-align: center;\"><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">The key is to not get so married to those formulas that we are unwilling to change them when they no longer work, or get stale. If that happens, we play with new formulas and do more timing tests until we get it right.&nbsp;In the end, the better we can nail down the punchline, the more time we can spend on the fun part of getting there.<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/08\/WileECoyote1.jpg\"><img alt=\"\" class=\"aligncenter size-full wp-image-13547\" height=\"320\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/08\/WileECoyote1.jpg\" style=\"border-bottom-width: 0px; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: block; margin-left: auto; margin-right: auto;\" width=\"400\" \/><\/a><\/div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\"><br \/><\/h3><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Feedback!<\/h3><div><br \/><\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">I'd love to hear from other animators and designers what their processes for this are, as well! So speak up, tell your friends to read this and rip me to shreds, tell me how awesome I am or somewhere in between. I'm always looking for different techniques and opinions!<\/div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br \/><\/div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/4248341596629159263-38124459084849704?l=strongmanimator.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-08-06T12:35:28.806000", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-38124459084849704", "categories": [], "metadata": {"guid": "fe7a6cdc-278b-4844-9482-1883e59c5e3d", "likes": 0, "is_published": false}}], {}]"
08-07 21:22 SocketClient INFO     Received from service: "true"
08-07 21:22 SocketClient INFO     Returning(as str): 'true'
08-07 21:23 root         INFO     Handling CGI request.
08-07 21:23 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:23 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Thought Questions", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/N33E3pgzB1c\/", "author": "Dru Sellers", "summary": "After many weeks of travel I finally have some time to think again. Yay! Today&#8217;s post was inspired by\u00a0http:\/\/wakeuptiger.blogspot.com\/2011\/08\/questions-worth-asking.html.\u00a0The post presents a link to another wonderful site called Thought Questions which got me thinking about a programming spin ", "html": "<p><em>After many weeks of travel I finally have some time to think again. Yay!<\/em><\/p>\n<p>Today&#8217;s post was inspired by\u00a0<a href=\"http:\/\/wakeuptiger.blogspot.com\/2011\/08\/questions-worth-asking.html\">http:\/\/wakeuptiger.blogspot.com\/2011\/08\/questions-worth-asking.html<\/a>.\u00a0The post presents a link to another wonderful site called <a href=\"http:\/\/thoughtquestions.com\/\">Thought Questions<\/a> which got me thinking about a programming spin on the same concept.<\/p>\n<p>\u00a0<\/p>\n<p>What&#8217;s the difference between your coding today, and your coding 6 mths ago? If its improving, are you on the same trajectory? Or are you growing stagnant?<\/p>\n<p>Can you be a good developer with no business knowledge? Is it business knowledge if its just a mathmatical formula?<\/p>\n<p>What&#8217;s the biggest shift you have made in your programming since you started?<\/p>\n<p>What was the last thing you did just for fun?<\/p>\n<p>Who was the last person you helped on the internet? How did you help them?<\/p>\n<p>Do you visualize code in your head? What does it look like? Does it have color? Shape?<\/p>\n<p>\u00a0<\/p>\n<p>Anyways, happy saturday.<\/p>\n<p>\u00a0<\/p>\n<p>-d<\/p>\n<p>\u00a0<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/N33E3pgzB1c\" width=\"1\" \/>", "datetime": "2011-08-06T14:24:25", "id": "http:\/\/codebetter.com\/drusellers\/?p=148", "categories": [], "metadata": {"guid": "85bb9d97-af29-4fa1-ba96-2f601e37a641", "likes": 0, "is_published": false}}], {}]"
08-07 21:24 SocketClient INFO     Received from service: "true"
08-07 21:24 SocketClient INFO     Returning(as str): 'true'
08-07 21:24 root         INFO     Handling CGI request.
08-07 21:24 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
08-07 21:24 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Thought Questions", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/N33E3pgzB1c\/", "author": "Dru Sellers", "summary": "After many weeks of travel I finally have some time to think again. Yay! Today&#8217;s post was inspired by\u00a0http:\/\/wakeuptiger.blogspot.com\/2011\/08\/questions-worth-asking.html.\u00a0The post presents a link to another wonderful site called Thought Questions which got me thinking about a programming spin ", "html": "<p><em>After many weeks of travel I finally have some time to think again. Yay!<\/em><\/p>\n<p>Today&#8217;s post was inspired by\u00a0<a href=\"http:\/\/wakeuptiger.blogspot.com\/2011\/08\/questions-worth-asking.html\">http:\/\/wakeuptiger.blogspot.com\/2011\/08\/questions-worth-asking.html<\/a>.\u00a0The post presents a link to another wonderful site called <a href=\"http:\/\/thoughtquestions.com\/\">Thought Questions<\/a> which got me thinking about a programming spin on the same concept.<\/p>\n<p>\u00a0<\/p>\n<p>What&#8217;s the difference between your coding today, and your coding 6 mths ago? If its improving, are you on the same trajectory? Or are you growing stagnant?<\/p>\n<p>Can you be a good developer with no business knowledge? Is it business knowledge if its just a mathmatical formula?<\/p>\n<p>What&#8217;s the biggest shift you have made in your programming since you started?<\/p>\n<p>What was the last thing you did just for fun?<\/p>\n<p>Who was the last person you helped on the internet? How did you help them?<\/p>\n<p>Do you visualize code in your head? What does it look like? Does it have color? Shape?<\/p>\n<p>\u00a0<\/p>\n<p>Anyways, happy saturday.<\/p>\n<p>\u00a0<\/p>\n<p>-d<\/p>\n<p>\u00a0<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/N33E3pgzB1c\" width=\"1\" \/>", "datetime": "2011-08-06T14:24:25", "id": "http:\/\/codebetter.com\/drusellers\/?p=148", "categories": [], "metadata": {"guid": "85bb9d97-af29-4fa1-ba96-2f601e37a641", "likes": 0, "is_published": false}}], {}]"
08-07 21:24 SocketClient INFO     Received from service: "false"
08-07 21:24 SocketClient INFO     Returning(as str): 'false'
09-10 23:29 root         INFO     Handling CGI request.
09-10 23:29 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:29 SocketClient INFO     Sending to service: "["downloadedcontent_count", [], {}]"
09-10 23:30 SocketClient INFO     Received from service: "950"
09-10 23:30 SocketClient INFO     Returning(as str): '950'
09-10 23:30 root         INFO     Handling CGI request.
09-10 23:30 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:30 SocketClient INFO     Sending to service: "["request_content_slice", [0, 15], {}]"
09-10 23:30 SocketClient INFO     Received from service: "[{"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/09/08/coast-to-coast-blue-sky-here-i-come/", "title": "Coast to Coast!  Blue Sky here I come!", "datetime": "2011-09-08T18:27:29", "html": "<div class=\"wp-caption aligncenter\" id=\"attachment_2890\" style=\"width: 310px;\"><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup.jpg\" rel=\"lightbox[2889]\"><img alt=\"Scrat Continental Crackup\" class=\"size-medium wp-image-2890 \" height=\"127\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup-300x127.jpg\" title=\"scrat_cont_crackup\" width=\"300\" /></a><p class=\"wp-caption-text\">How I've felt for so long about working in VFX/Anim industry.</p></div>\n<div class=\"wp-caption aligncenter\" id=\"attachment_2891\" style=\"width: 310px;\"><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift.jpg\" rel=\"lightbox[2889]\"><img alt=\"Ice Age: Continental Drift\" class=\"size-medium wp-image-2891 \" height=\"127\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift-300x127.jpg\" title=\"ice_age_continental_drift\" width=\"300\" /></a><p class=\"wp-caption-text\">My first project</p></div>\n<p>Done! \u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \u00a0It&#8217;s everything I could ask for in an employer and more.</p>\n<p>Don&#8217;t think that it&#8217;s going to stop me from being active on my blog though, quite the opposite! \u00a0Well, maybe the first month or two starting now there will be a pause, but after that it will increase. \u00a0I&#8217;m super excited to learn and share knowledge with people and stay really connected and dedicated to innovating personal and industry wide workflows, tech, and of course animation. \u00a0Technical animation and tech art to be specific is what I&#8217;ll be working on in the coming months, same as usual.</p>\n<p>Thanks to everyone that&#8217;s been involved in the process of landing this, you know who you are! \u00a0I don&#8217;t think they know yet what a valuable asset they just\u00a0acquired but soon they will find out just how serious I am about the work I do and how inspired I can be!</p>\n<div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "Done! \u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \u00a0It&#8217;s everything I could ask for in an employer and more. Don&#8217;t think that it", "id": "http://www.jonasavrin.com/?p=2889", "categories": [], "metadata": {"guid": "af6033e3-25e1-4153-9754-83f7548bd986", "likes": 0, "is_published": false}}, {"author": "Artur Le\u00e3o", "url": "http://dimensao3.com/al/?p=556", "title": "iDev Listener \u2013 Another video", "datetime": "2011-09-06T19:28:55", "html": "<div class=\"alignleft\"><p><a href=\"http://dimensao3.com/al/?p=556\"><em>Click here to view the embedded video.</em></a></p></div>\n<p>Another video&#8230; just doing some major advertising to my Autodesk cover&#8230;. well AUTODESK I need a new workstation you know&#8230;. <img alt=\":P\" class=\"wp-smiley\" src=\"http://dimensao3.com/wptest/wp-includes/images/smilies/icon_razz.gif\" /> </p>\n<p>Remember, still early development, it has some lag on my laptop but it works fine on my workstation at work.</p>", "summary": "Another video&#8230; just doing some major advertising to my Autodesk cover&#8230;. well AUTODESK I need a new workstation you know&#8230;. Remember, still early development, it has some lag on my laptop but it works fine on my workstation at work.", "id": "http://dimensao3.com/al/?p=556", "categories": [], "metadata": {"guid": "18265d1a-2d29-4bfb-8e3f-ffe7eeedd513", "likes": 0, "is_published": false}}, {"author": "Brendan Tompkins", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/PGrLOMBEy_4/", "title": "CodeBetter.Com wants to send you to Redmond!", "datetime": "2011-09-06T13:22:48", "html": "<p>In March, we sent the <a href=\"http://codebetter.com/2011/03/21/visual-studio-live-las-vegas-giveaway/\" title=\"VSLive!\">Code Junkie to Las Vegas, to attend Visual Studio Live!</a>, and now it&#8217;s your turn!</p>\n<p>As a thank you for continuing to help support CodeBetter.Com/Devlicio.us and our community of friends here, we\u2019ve arranged (thanks to the generous support from Visual Studio Live!)\u00a0to give away one conference pass to\u00a0<a href=\"http://vslive.com/events/redmond-2011/home.aspx\">Visual Studio Live! in Redmond!</a>\u00a0(October 17th &#8211; 21st, 2011) \u00a0That&#8217;s REDMOND people!</p>\n<p>The value of the pass we\u2019re giving you to for a giveaway is $1,895. \u00a0It\u2019s a 5-day package with an excellent\u00a0<a href=\"http://vslive.com/events/redmond-2011/speakers/speaker-list.aspx\">speaker lineup</a>\u00a0(Ted Neward, Rocky Lhotka, Billy Hollis, Miguel Castro Jason Bock and others!) \u00a0that includes the following:</p>\n<ul>\n<li>All Visual Studio Live! Sessions and Keynotes</li>\n<li>Pre-conference workshops</li>\n<li>Post-conference workshops</li>\n<li>Reception</li>\n<li>Networking Events</li>\n<li>Lunch (October 17-21)</li>\n<li>Coffee and Morning Pastries</li>\n</ul>\n<p>On top of the attendance covered, we\u2019re going to give the winner\u00a0$500 to help offset travel and hotel costs and throw in some CodeBetter.com/Devlicio.us schwag to giveaway to boot!</p>\n<h2>What do I have to do to enter?</h2>\n<p>Not much! \u00a0All you need to do is comment/trackback/tweet this and you\u2019re eligible. \u00a0We\u2019ll pick a winner and announce the final recipient this Tuesday, September 20th at 12:00 EST.</p>\n<p>Good luck, and again thanks for all of the support!</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/PGrLOMBEy_4\" width=\"1\" />", "summary": "In March, we sent the Code Junkie to Las Vegas, to attend Visual Studio Live!, and now it&#8217;s your turn! As a thank you for continuing to help support CodeBetter.Com/Devlicio.us and our community of friends here, we\u2019ve arranged (thanks to&#160;&#8230; <a href=\"http://codebetter.com/2011/09/06/co", "id": "http://codebetter.com/?p=202", "categories": [], "metadata": {"guid": "498b09a0-378e-4eec-a546-98fc8c7faac6", "likes": 0, "is_published": false}}, {"author": "Artur Le\u00e3o", "url": "http://dimensao3.com/al/?p=552", "title": "iDev Listener \u2013 Control objects with iPhone", "datetime": "2011-09-06T10:18:10", "html": "<div class=\"alignleft\"><p><a href=\"http://dimensao3.com/al/?p=552\"><em>Click here to view the embedded video.</em></a></p></div>\n<p>Hey guys, I had something on my mind for some time now and yesterday I decided to create a proof of concept and it worked!<br />\nThe video is nothing special, I&#8217;ll try posting one later where you see the iPhone and viewport at the same time but I can tell you something, it&#8217;s REALLY cool to control the camera with the iPhone<br />\nAs I&#8217;ve said before, this is only a proof of concept and I&#8217;ll start working on the movements and later on on capturing and keyframing the data, but that&#8217;s later on.</p>\n<p>In the video it&#8217;s a bit (a lot) slow, but that&#8217;s because my laptop is shit and the screen capture software didn&#8217;t help, also outputing to the listener makes it even slower.</p>\n<p>Hope you like it, cheers!</p>\n<p>Oh yeah&#8230; for 3dsmax of course <img alt=\":D\" class=\"wp-smiley\" src=\"http://dimensao3.com/wptest/wp-includes/images/smilies/icon_biggrin.gif\" /> </p>", "summary": "Hey guys, I had something on my mind for some time now and yesterday I decided to create a proof of concept and it worked! The video is nothing special, I&#8217;ll try posting one later where you see the iPhone and viewport at the same time but I can tell you something, it&#8217;s REALLY cool [...]", "id": "http://dimensao3.com/al/?p=552", "categories": [], "metadata": {"guid": "528a8a68-8643-4391-bd39-23021e6b3170", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=764", "title": "Python software metrics- my first useful OS project?", "datetime": "2011-09-06T03:59:48", "html": "<p>I&#8217;ve tried to open-source code quite a few times, but the projects have been niche enough that they haven&#8217;t been very useful. \u00a0Well, I <em>finally</em>\u00a0have something universally useful.</p>\n<p>I&#8217;ve take an interest in code metrics recently (as documented on this blog) and I have been quite upset to learn that there are few good tools for measuring them in Python code. \u00a0PyLint and PyChecker and the like are not what I&#8217;m talking about- I want dependency graphs, measure of cyclomatic complexity, automatic coverage analysis, etc.</p>\n<p>So basically what I&#8217;m doing is creating a framework that wraps a bunch of existing functionality into an easy-to-use system, and expands or refactors it where necessary. \u00a0My goal is to make it a &#8216;drop in&#8217; system to it will be trivial to get thorough code metrics for your codebase (similar to how simple it is to do in Visual Studio).</p>\n<p>Right now I&#8217;ve created a SLOC (Source Lines of Code) generater, a wrapper for nose and coverage, and hooked it up to pygenie to measure Cyclomatic Complexity- which is unfortunately going to need a significant refactoring, so I won&#8217;t be able to fork it directly. \u00a0I&#8217;ll be hooking it up into our automated test framework at work this week as well for some battle testing. \u00a0I&#8217;m 100% sure there&#8217;s a good deal of extensibility and configuration adjustments I&#8217;ll need to make to support alternative setups. \u00a0Next up will be automatic generation of dependency graphs (which doesn&#8217;t look easy at all, unfortunately). \u00a0And writing tests (this is the first project that I didn&#8217;t sort-of-TDD in a while). \u00a0Oh, and getting it into Google Code.</p>\n<p>Is this something you guys can see hooking into your codebases? \u00a0Do you see the value of and want to find out metrics of your codebases?</p>\n<p>Oh and it&#8217;s tentatively called &#8216;pynocle&#8217;, if you have a better name I&#8217;d love to hear it.</p>", "summary": "I&#8217;ve tried to open-source code quite a few times, but the projects have been niche enough that they haven&#8217;t been very useful. \u00a0Well, I finally\u00a0have something universally useful. I&#8217;ve take an interest in code metrics recently (as documented on this blog) and I have been quite upset ", "id": "http://www.robg3d.com/?p=764", "categories": [], "metadata": {"guid": "f9380a24-09be-4116-9149-6105d90d8609", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/09/05/character-td-demo-the-kaylee-rig/", "title": "Character TD Demo \u2013 The Kaylee Rig (Sticky)", "datetime": "2011-09-05T20:00:31", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\"clear: both; height: 3px; width: 100%;\"></div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"></a><a class=\"shareaholic-googleplusone\"></a></div><div style=\"clear: both; height: 3px; width: 100%;\"></div><!-- End Shareaholic LikeButtonSetTop --><p style=\"text-align: center;\"></p>\n<p>Fighting the urge to be unproductive, I locked myself in the house for the past few days to get some work done on a new character TD demo.\u00a0 Been under the weather anyhow and didn&#8217;t feel like doing much else, not even surf *gasp!*.\u00a0 Here it is in all it&#8217;s beautiful animator friendly simplicity.\u00a0 I plan on extending this demo with character animation tools.\u00a0 I can&#8217;t wait to get away from creating demos and rendering video and go back to actually programming and rigging stuff!\u00a0 I have so much more advanced rigging techniques to show and some that haven&#8217;t gotten to a finished stage on my characters yet so stay tuned.</p>\n<p><span id=\"more-2864\"></span></p>\n<p><span style=\"text-decoration: underline;\">Additional Credits:</span></p>\n<p title=\"Suchan Bajracharya\">This latest demo features the Kaylee rig which is provided by Alex Curtis, director of Hephaestus the latest short animation project to have my work in it and soon to be released.\u00a0 More on that soon.\u00a0 It shows techniques I think are in the top 5 of all rigging resources out there provided by Autodesk&#8217;s Animator Friendly Rigging series by Jason Schleifer.\u00a0 Special recognition goes to Image Metrics&#8217; proprietary facial rigging tools for the automatic setup of the control rig for the face&#8211;I worked after hours on this one.\u00a0 Of course my favorite track at the moment Little Dragon&#8217;s &#8220;Feather&#8221; off the Machine Dreams album is being used.\u00a0 The whole album you must listen if you haven&#8217;t already.\u00a0 Last but not least, I supervised Suchan Bajracharya (@<a href=\"https://twitter.com/#%21/tweetBoucha\" title=\"Suchan Bajracharya\">tweetBoucha</a> ) for the goggles and hair rigging.\u00a0 Follow him on Twitter for great rig tips.\u00a0 Big thanks to him for helping me get done on a tight deadline!\u00a0 All of this work was afterhours spending long nights at the office when everyone else blissfully went home.\u00a0 <img alt=\";)\" class=\"wp-smiley\" src=\"http://www.jonasavrin.com/wp-includes/images/smilies/icon_wink.gif\" /> \u00a0 Hope you enjoy!</p>\n<p title=\"Suchan Bajracharya\">Shot breakdown coming soon!</p>\n<div class=\"shr-publisher-2864\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "Fighting the urge to be unproductive, I locked myself in the house for the past few days to get some work done on a new character TD demo.\u00a0 Been under the weather anyhow and didn&#8217;t feel like doing much else, not even surf *gasp!*.\u00a0 Here it is in all it&#8217;s beautiful animator friendly simpl", "id": "http://www.jonasavrin.com/?p=2864", "categories": [], "metadata": {"guid": "a34f8d1c-9ade-4a46-992a-4079dc0f82bb", "likes": 0, "is_published": false}}, {"author": "Dru Sellers", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/PDwLESDJLv8/", "title": "The .Net community and the negative view on assembly references", "datetime": "2011-09-05T19:43:43", "html": "<p>Why is it that we abhor large numbers of references in our .Net projects? Beyond the obvious that is (I don&#8217;t care about start up time, or any other performance hogwash). It seems that early in my career I thought 10 assembly references was absurd, now that number is MUCH higher (almost without limit) but this view is intensely not the view held by the larger .net community. I take a look at other communities outside of .net and see people doing a much better job of pulling together a multitude of libraries to construct even simple sites versus the vast majority of .net projects I have seen that seem to go out of their way to avoid a dependency hit. Not to mention the enterprise projects that build massive systems and taking no more dependencies than exist in the BCL.</p>\n<p>This bias of not wanting to import a larger number of references has impacted the way I design my .net code, and I am not sure I would do the same if I were in another language. For instance, I have a library called Magnum that is a junk drawer of functionality for my other projects. Every now and then someone will see the reference in another project and will go take a look at it. To there surprise, it contains a vast and deep amount of code that could be very useful to them. But to import it means to import a LOT of stuff. Why don&#8217;t I break up this codebase? Because of my negative view on assembly references. &#8220;Le sigh.&#8221; Should I just start splitting things up more? How does this splintering of Magnum effect other things?</p>\n<p>A part of me wonders if this isn&#8217;t caused by the same effects of &#8216;The Tale of J. Random Newbie&#8217; in the Art of Unix Programming pg 415. Go read the 4 pages or so. I will wait.</p>\n<p><a href=\"http://catb.org/esr/writings/taoup/html/graphics/taoup.pdf\">The Art of Unix Programming</a></p>\n<p>It would not surprise me if the lack of OSS experience and transparency in the large part of the .Net community isn&#8217;t responsible for this.</p>\n<p>Of course, I can&#8217;t, in practice, ignore the impacts of additional assembly references on the performance of my applications. Has anyone actually measured this?</p>\n<p>Thoughts?</p>\n<p>-d</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/PDwLESDJLv8\" width=\"1\" />", "summary": "Why is it that we abhor large numbers of references in our .Net projects? Beyond the obvious that is (I don&#8217;t care about start up time, or any other performance hogwash). It seems that early in my career I thought&#160;&#8230; <a href=\"http://codebetter.com/drusellers/2011/09/05/the-net-commun", "id": "http://codebetter.com/drusellers/?p=163", "categories": [], "metadata": {"guid": "08ba5c3f-7aba-4f7e-8370-282000bf52d6", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/05/deus-ex-human-revolution/", "title": "Deus Ex: Human Revolution", "datetime": "2011-09-05T15:17:49", "html": "<p>The original Deus Ex is my favorite FPS game so when I heard that they are making a prequel I was intrigued. I figured that if a company picks up such a lesser known franchise then they must have a pretty solid idea what to do with it. (And probably know how big of a meh DX:Invisible War was and will try to avoid the same mistakes.) Of course &#8220;solid idea&#8221; might not necessary mean &#8220;great idea&#8221; (*cough* X-Com *cough*) but hell, it&#8217;s time for a proper first person think/explore/decide sort of game, I hoped that Eidos Montreal gets it right.</p>\n<p><img alt=\"http://www.zspline.net/blog/wp-content/gallery/misc/dxhr_logo.png\" class=\"alignleft\" height=\"256\" src=\"http://www.zspline.net/blog/wp-content/gallery/misc/dxhr_logo.png\" width=\"64\" />I saw an early render trailer and read an interview with one of the developers and that was convincing enough to make me avoid any further news regarding the game: No screenshots, no trailers, no dev diaries, no reviews mean no spoilers. (I did check the metacritic score.)<br />\nI bought the game on Steam, waited for the first two patches and then started playing.</p>\n<p><strong>All I can say is that this is how you make a game in this day and age.</strong></p>\n<p>I&#8217;d like to have more games where the most glaring problems are the choppy menu UI and that the mouse doesn&#8217;t work in gamepad mode. (Clever people already <a href=\"http://www.gamefaqs.com/boards/944090-deus-ex-human-revolution/60137370?page=2\" target=\"_blank\">fixed</a> the unskippable intro videos.)<!-- PHP 5.x --></p>", "summary": "The original Deus Ex is my favorite FPS game so when I heard that they are making a prequel I was intrigued. I figured that if a company picks up such a lesser known franchise then they must have a pretty solid idea what to do with it. (And probably know how big of a [...]", "id": "http://www.zspline.net/blog/?p=1488", "categories": [], "metadata": {"guid": "a52f33df-54d1-4be9-94bc-455d5e20cea9", "likes": 0, "is_published": false}}, {"author": "anim8d (timborrelli@gmail.com)", "url": "http://strongmanimator.blogspot.com/2011/09/technically-its-creative.html", "title": "Technically, It's Creative!", "datetime": "2011-09-05T11:54:41.522000", "html": "<span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"></span><br /><span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><em>This blog was cross-posted <a href=\"http://altdevblogaday.com/2011/09/05/technically-its-creative/\">here</a>.</em></span><br /><br /><span class=\"Apple-style-span\">While waiting for a reply to my open letter from a few weeks ago (I still haven\u2019t heard back from you, Andy<span class=\"Apple-style-span\" style=\"font-family: inherit;\">!), I&nbsp;</span></span><span class=\"Apple-style-span\" style=\"font-family: inherit; line-height: 19px;\">gave a talk </span><span class=\"Apple-style-span\"><span class=\"Apple-style-span\" style=\"font-family: inherit;\">at PAXDev</span> regarding how to animate quickly for design, which contained both creative and technical approaches to game animation. After the talk, I received an email asking two things:</span><br /><br /><div style=\"padding-left: 30px;\">&nbsp;\u201cHow do I get into video game animation? I've always found animation to be a very interesting discipline. The problem is that I'm not even sure where to begin training for such a thing.\u201d</div>And:<br /><br /><div style=\"padding-left: 30px;\">\u201cIs animation more technical than artistic, or is it the other way around?\u201d</div><div style=\"padding-left: 30px;\"><br /></div>The first question is something I am asked often, and am glad to help with. I responded to the inquiry with this:<br /><br /><div style=\"padding-left: 30px;\">\u201cThe first thing to do is learn the basics- read up on the 12 Principles of Animation (read The Illusion of Life- it's the animation holy bible). If you can draw, you could start doing the basic animation tests (bouncing ball, flour sack, etc.) that way w/o needing to buy Max or Maya (though both have 30 day trials!) I've seen far too many beginners jump right in with a walk cycle and not be able to take or understand critique on their work because they don't understand the principles and the vocabulary.</div><div style=\"padding-left: 30px;\"><br /></div><div style=\"padding-left: 30px;\">http://www.11secondclub.com/forum/ is a great place to share animation, as well, once you feel comfortable with it. Online schools like http://www.animationmentor.com/ and http://ianimate.net/ are good, but they are not cheap.</div><div style=\"padding-left: 30px;\"><br /></div><div style=\"padding-left: 30px;\">Also, watch movies! Watch old WB classics, watch Disney, Pixar, and study the animation. If you see something cool, rewind and step through frame by frame to see what they did. Deconstructing the masters is a great teaching tool.\u201d</div><div style=\"padding-left: 30px;\"><br /></div>However, second part really made me think. Is animation more technical than artistic, or is it the other way around?<br /><br />The easy answer to this very good question is \u201cyes.\u201d Game animation is both creative AND technical. Animation is creative by nature-we\u2019re figuring out timing of our motions, developing poses that communicate emotion and intent to the player, and ultimately, we\u2019re delivering the look and feel that design wants. In all, we are breathing life into our characters!<br /><br /><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: right;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/master-thespian-jon-lovitz-500x378.jpg\" style=\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-15728\" height=\"378\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/master-thespian-jon-lovitz-500x378.jpg\" style=\"border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"500\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Nah, we're just painting pixels, really</td></tr></tbody></table><br />However, it helps if you have some proficiency with understanding the technical side of things (though I\u2019m not talking about rigging and other technical animation specialties - those have their own discipline separate from animation). In some engines, your timing in that walk cycle needs to match the timing for the rest of your walk cycles so it blends properly, or your footstep events need to be setup so time-scale blending to your run cycle works properly. In other engines, your poses need to be setup so that they makes sense against other poses they will blend to, unless you want to create countless 3 to 6 frame transition animations.<br /><br />And you better know what state machines and blendtrees are. If you know how to build them, that\u2019s a big advantage. Know a little scripting? That\u2019s even better.<br /><div class=\"mceTemp mceIEcenter\" style=\"text-align: center;\"><br /><dl class=\"wp-caption aligncenter\" id=\"attachment_15733\" style=\"background-color: #f3f3f3; border-bottom-color: rgb(221, 221, 221); border-bottom-left-radius: 3px 3px; border-bottom-right-radius: 3px 3px; border-bottom-style: solid; border-bottom-width: 1px; border-left-color: rgb(221, 221, 221); border-left-style: solid; border-left-width: 1px; border-right-color: rgb(221, 221, 221); border-right-style: solid; border-right-width: 1px; border-top-color: rgb(221, 221, 221); border-top-left-radius: 3px 3px; border-top-right-radius: 3px 3px; border-top-style: solid; border-top-width: 1px; display: block; margin-bottom: 10px; margin-left: auto; margin-right: auto; margin-top: 10px; padding-top: 4px; text-align: center; width: 310px;\"><dt class=\"wp-caption-dt\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/basic_state_flow-300x107.png\"><img alt=\"\" class=\"size-full wp-image-15733\" height=\"107\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/basic_state_flow-300x107.png\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"300\" /></a></dt><dd class=\"wp-caption-dd\" style=\"font-size: 11px; line-height: 17px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 5px; padding-left: 4px; padding-right: 4px; padding-top: 0px;\">Oh hey, I can handle that!</dd></dl></div>This begs the question, however, of where exactly the line drawn is between the two, and how important it is as an animator to BE technically trained. Sure, you can create the best looking run cycle in the history of run cycles, but how does it work with animation layers in-game, how does it transition, and does it hold up to speed changes?<br /><br />Or does it really matter? Who\u2019s to say that a game animator NEEDS to build those blendtrees? Or that they have to understand how to set up an IK chain in-engine? Or know how the aiming system works?<br /><br />In my opinion, animators will be far more successful if they have that knowledge.<br /><br />I don't expect them to have it right off the bat, mind you. Entry level folks should be concentrating on creating good motion and letting their leads dictate the technical details. I also don't think it's a requirement to know scripting or understand how to build a complex state machine in order to be a successful game animator.<br /><br /><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: left;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/havokbehaviortool.jpg\" style=\"clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-15734\" height=\"244\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/havokbehaviortool.jpg\" style=\"border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"400\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">SWEET JEBUS THIS IS BEYOND ME HALPS!</td></tr></tbody></table><br />However, those animators at any level should be learning WHY those technical details exist. Why a pose needs to be oriented one way or the other, or how their motions will be used in game and why it works that way. They should know what scripting can do for them, at the least so they can request a tool from a tech artist. All the while, continuing to hone the creative side of their craft, in order to become the best game animator possible.<br /><br />Marrying the creative side of animation with the technical side makes an animator even MORE creative. For example, on a project early in my career, I was tasked with giving the attack animations of a character \u201cmore flair.\u201d This was all the direction I was given from my offsite corporate producer. I worked for weeks on just adjusting and presenting the animations with no success. By shear \u201che was a close friend\u201d luck, I spoke with the VFX artist on the project on how we could push the attack animations further. He told me that I could attach VFX to my animations! I immediately added ridiculously exaggerated spinning weapon movements to the attacks, and worked with that VFX artist to create trails for the weapons. We hooked it up in game, showed it to our producer a week later and he exclaimed \u201cthat\u2019s it!\u201d Had I not known about that ability to tie VFX to an animation, I may never have succeeded in bringing my producer\u2019s vision to life.<br /><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"></div><div style=\"text-align: center;\">(at 3:16) More flair, Taurgis, MORE FLAIR! :)</div><br />Understanding what happens after your animation is done and makes its way into the game will allow an animator to devise new and interesting ways to make a character move. It also allows them to do it more efficiently, leaving more time for polishing animation or sneaking in that fidget animation that everyone keeps saying they should do.<br /><br />Understanding both sides also creates the opportunity to be creative with the most tedious, technical animations, like those aforementioned transition animations. Mike Jungbluth does an excellent job discussing how to inject more character into those animations in <a href=\"http://altdevblogaday.com/2011/04/10/growing-game-animation-transitions-player-input/\">a separate post</a>.&nbsp;By not treating those animations as a technical requirement and instead as an opportunity to communicate a character\u2019s personality, they become a creative necessity, not a technical one.<br /><br />Use of motion capture is another opportunity to push beyond the technical. If treated like nothing more than technical data, the motion will stay as it was captured, and the performance delivered will fall short, no matter how good the actor (and we all know my opinion on THAT). Inject the creativity of an animator, and you have the opportunity to punch out poses, adjust timing for bigger impact, and even change shots after the fact. Yes, this opens up the <a href=\"http://www.motivesinmovement.com/blog/2011/09/who-owns-the-pixel-digital-rights-and-performance/\">\"ownership\" debate</a>,&nbsp;but it\u2019s the end result that matters. It\u2019s important to remember that it\u2019s a creative, collaborative effort, and not a technical hurdle that gets in the way of a performance.<br /><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"></div><div style=\"text-align: center;\">Well, usually. :)</div><br />In the end, it\u2019s best to approach both the creative and technical sides as wholly creative. The technical side varies from studio to studio, engine to engine, and it's ultimately a teachable process. The creative part comes from you, and you take that to whatever studio you work at and use it in whatever engine you work with.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4248341596629159263-8977062883261323042?l=strongmanimator.blogspot.com\" width=\"1\" /></div>", "summary": "<span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"></span><br /><span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-8977062883261323042", "categories": [], "metadata": {"guid": "71687686-b4d8-4dbb-a350-c41a12681052", "likes": 0, "is_published": false}}, {"author": "Sebastien Lambla", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/jtuhrGodB0U/", "title": "Summer holidays are over, time for a new roadmap", "datetime": "2011-09-04T23:52:06", "html": "<p>As many of you many have noticed, things have stalled a bit over the summer on the master branches of openrasta and openwrap. While our amazing contributors are still sending pull requests and development has continued, as the owner of the master branches I\u2019ve not been there to maintain the new packages, as I decided to take the summer slow and learn how to*rest*.</p>\n<p>Now that the summer is over, I\u2019m glad to clarify the roadmap for OpenEverything frameworks:</p>\n<ul>\n<li>OpenWrap 2.0 with ReSharper support and cached remote implementation is nearly done, but a lot of features planned for 2.0 will be rescheduled for future versions. I expect a release for this in the next two weeks.</li>\n<li>OpenRasta 2.1 work is coming along nicely, with all the bug fixes that have been suggested, and some extension points that will be needed for the work on 3.0 to start. I expect that work to be completed by the end of September. I\u2019ll also make OpenRasta available on NuGet, although it *will* auto-install OpenWrap in your solution.<br />\nWe\u2019re dropping .net 2.0 support, as it\u2019s been out of the binaries for a while and no one has requested them back, so I\u2019ll assume no one needs that anymore. Note that some work is going in this release that will let OpenRasta manage in-memory / caching automatically, so if your code depends on the request or response stream being seekalbe, I\u2019d start making some changes now.</li>\n<li>OpenRasta 2.2 will be next, and again we\u2019ll take any additional enhancements that don\u2019t break binary compatibility. I\u2019d like to continue taking those changes and start doing per-feature or per-bugfix releases.</li>\n<li>OpenRasta 3.0 is going to be where heavy rewriting is going to happen in parts of the API I don\u2019t like, and we\u2019ll take the luxury of redesigning and renaming / refactoring what needs to be (for example, IType et al will probably disappear and be replaced by a simpler model, the key/values binding model will be updated to provide additional information and extensibility points for those crazy people wanting a plug-in validation framework).<br />\nIn order to guarantee that\u00a0 your components using OpenRasta 2 will still work on 3, we\u2019ll be type-redirecting the published extensibility interfaces that are changing into a 2.0-specific legacy API package. In other words, we\u2019ll plug most of the existing contributors, codecs, interceptors, decorators and all other non-generic interfaces straight in the new API, using the same composition engine that will be used by OR 3.0 itself.</li>\n<li>OpenHttp and OpenWebFx are the two components that will provide the basis for OR 3. The former is an extension of the unified hosting environment OpenRasta already has been using for two years, and allows hosting across HttpListener, TCP, IISCore, asp.net and in-memory, based on an async pull mechanism (as opposed to, say, OWIN which is push based, one of the two reasons I\u2019m not implementing OWIN myself). OpenWebFx is the building blocks of a web framework, aka provides the http pipeline model and a couple of building blocks that are core to OpenRasta (codecs, media types, content negotiation\u2026). This will leave OpenRasta itself as a combination of many packages and a bit of custom code on top of it (mainly, the registration API).<br />\nCode will be out when it\u2019s out, I make no promises, but do expect to see beta versions running on the beta openwrap package repository by the end of the year.</li>\n<li>Everything else is already in the process of migrating to its own packages, so you can expect a first release of OpenContainer (the IoC type resolving compatibility layer) and associated releases to appear around the OR 2.2 timeframe. You can also expect a diagnostics package for OR 2.1 (pluggable of course, named openrasta-diagnostics), a 2.1-specific devtools package (that installs the templates to create projects and solutions thanks to OpenWrap project manipulation), a temporary openrasta-fluent package that contains the new and more compact registration API (which will be type redirected back in the 3.0 API as a replacement for the old syntax), a couple of codecs that will be maintained by us (openrasta-codecs-jsonnet for example, with support for anonymous types and dynamics), etc. Some of those packages (such as our support for Unity, StructureMap, Windsor and Ninject) will be looking for new owners as I start delegating a lot of the package releases to whoever wants to manage them.</li>\n</ul>\n<p>This is the schedule for the end of the year, no guarantee implied, as any work I do for clients drives those two frameworks as a priority. If you\u2019re interested in sponsoring some work on OpenEverything for your own needs, please do let me know, we can always figure something out.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/jtuhrGodB0U\" width=\"1\" />", "summary": "As many of you many have noticed, things have stalled a bit over the summer on the master branches of openrasta and openwrap. While our amazing contributors are still sending pull requests and development has continued, as the owner of&#160;&#8230; <a href=\"http://codebetter.com/sebastienlambla/2011", "id": "http://codebetter.com/sebastienlambla/2011/09/04/summer-holidays-are-over-time-for-a-new-roadmap/", "categories": [], "metadata": {"guid": "d78afc11-153a-404b-91e7-b99ef4ebec97", "likes": 0, "is_published": false}}, {"author": "Peter van Ooijen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/GAoORHmbYxw/", "title": "Book review: Learning Monotouch by Michael Bluestein", "datetime": "2011-09-04T18:51:16", "html": "<p><a href=\"http://ios.xamarin.com/\">Monotouch</a> is a powerful tool to create native iOS (iPhone/iPad/iPod) apps written in C# backed by (a native version of) the .net framework. I have been using it for some time now to my great satisfaction. Learning Monotouch was a somewhat bumpy road. The native language for iOS is objective C and the majority of the resources on iOS development use that language. Objective C is on itself not a bad language at all. But the syntax is somewhat awkward and the philosophy differs enough from C# to make the learning curve for us .net-ers rather steep.</p>\n<p>There are a lot of resources on the web on Monotouch, a lot with practical hands on examples. They do learn you how to build working (and appstore accepted apps) but not many of them spend any attention on the background or architecture of iOS. Making it hard to understand all Objective C resources, even having learned the syntax.</p>\n<p><a href=\"http://www.informit.com/store/product.aspx?isbn=0321719921\">Learning Monotouch</a> \u201cA hand-On Guide to Building iOS Applications with C# and .NET\u201d, by <a href=\"http://mikebluestein.wordpress.com/\">Michael Bluestein</a> ,\u00a0 is the book I wish I had had when I started working with Monotouch.</p>\n<p><a href=\"http://codebetter.com/petervanooijen/files/2011/09/LM.png\"><img alt=\"LM\" border=\"0\" height=\"608\" src=\"http://codebetter.com/petervanooijen/files/2011/09/LM_thumb.png\" style=\"margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; padding-top: 0px; border: 0px;\" width=\"466\" /></a></p>\n<p>The book is a hands-on guide, everything is explained in clear example apps. In the first chapters the same app is demonstrated in XCODE-Objective C (Apple\u2019s tools)and in Monotouch. Doing so it both explains the architecture of an iOS app and explains the way Monotouch handles that. In case you are already working with Monotouch: do get this book and do not skip these first chapters. Besides a better understanding of your apps Michael also spends a lot of attention to the details, there is a lot of quality to be won in fine tuning the result of the default app template.</p>\n<p>The book assumes you are familiar with C#, lambda expressions and extension functions are used without introduction. Those things show how good an idea Monotouch is, these are powerful language features not offered by objective C. The book also assumes you are familiar with the .Net framework. Parts are used throughout the chapters. \u201cOur\u201d framework really has more to offer than the native Apple tools, especially when it comes to webservice clients and xml.</p>\n<p>The components which make up iOS, visual and non visual, are wrapped up by Monotouch in C# classes. In a number of chapters all pass the revue, ranging from views to the music player. Tables and navigation get a chapter of their own, they are the backbone of almost any iOS app. Thank goodness Michael does start a navigation app with the default windowed app template. Xcode (and thus Monotouch) has a template for a navigation based app, my experience with that is not that good. The way Michael treats navigation in an app works completely outshines all I have ever found so far on the subject. Working through it results in an app that is easy to understand, well integrated and is guarded against common problems. Like popping to a view which has unintended been garbage collected in the mean time. Leading to a blank screen, many an app (including mine..) can suffer from this behavior. Having worked through this chapter I now know how to (really) solve this.</p>\n<p>Monotouch and Michael\u2019s coverage don\u2019 stop with of-the shelf components. You can also do hard core bare graphics and animations yourself, the chapter \u201cGraphics and Animations\u201d provide a good start for that. Locations (using GPS) and a chapter on Google Maps using the MapKit follow. Again all very clear and complete containing the essential secrets like how to keep recording location data when your apps switches to the background. Again, this is the book I should have had when I started <img alt=\"Smile\" class=\"wlEmoticon wlEmoticon-smile\" src=\"http://codebetter.com/petervanooijen/files/2011/09/wlEmoticon-smile.png\" style=\"margin: 0px 0px 24px; border-style: none;\" /></p>\n<p>A whole chapter is spent on connecting to webservices. SOAP style as well as REST style. Here the .net framework shines again. Networking has a chapter of its own. Which treats the iOS GameKit, which turns out to be a complete peer to peer networking API, and Bonjour, Apple\u2019s networking infrastructure API. In a demo app a client-server scenario, using two iOS devices (!). is demonstrated.</p>\n<p>Storage has a chapter of its own. Which describe how to work with app settings (like app.config in .net) and SQLite. SQLlite is not a part of iOS itself, it\u2019s a third party open source database. Using that, will give your app ADO.NET style database access. The nice thing is that several apps can share one and the same database file, a good way to reach out of your app\u2019s sandbox.</p>\n<p>A final chapter is spent on the iPad. Having a larger screen it offers specific\u00a0 components to fully utilize that. Michael covers these components and explains how to make your app device aware, with specific screens for iPhone and for iPad.</p>\n<p>The book is not about cross-platform development. Monotouch is not a tool for a straightforward port of a Windows phone or MonoDroid (C# for Android) app. Such a tool does not exist, simply because these platforms are different. They are different in the way an user works with apps, they are different in how the user expects the apps to behave. Windows Phone has the Metro interface, which works different as navigating through tables as an iPhone user is used to. You cannot port that, you have to rethink your UI. What can be ported is the non-visual part of the app, where the business logic should be. These parts can be ported, Michael does spend some writing on that, though not that much. Needless to say a good architecture pays of and is beyond the scope of this book.</p>\n<p>Some words on the style of the book. It is a hands-on book where your teacher is talking to you, using words like \u201cLet\u2019s create an app\u201d and recipe style fragments. This is a way of writing I do appreciate being \u201cguilty\u201d of doing it myself too. But feedback I received, both from readers and editors, indicates that not everybody does favor it.</p>\n<p>To conclude: I can only be lyrical about this book. Once more: I wish I had read it last year. In case you do anything with iOS and .net, just get it. In case you don\u2019t do anything with iOS yet, get it too and expend your C#/.net skills. I hope my walkthrough\u00a0 of the book, and thus of the platform has hinted at the richness of iOS. Let Michael enlighten you to bring it more great apps.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/GAoORHmbYxw\" width=\"1\" />", "summary": "Monotouch is a powerful tool to create native iOS (iPhone/iPad/iPod) apps written in C# backed by (a native version of) the .net framework. I have been using it for some time now to my great satisfaction. Learning Monotouch was a&#160;&#8230; <a href=\"http://codebetter.com/petervanooijen/2011/09/04/", "id": "http://codebetter.com/petervanooijen/2011/09/04/book-review-learning-monotouch-by-michael-bluestein/", "categories": [], "metadata": {"guid": "2ede3c58-127c-4017-af98-5e7dce04e394", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://www.tylergood.net/collision-showhide-script/", "title": "Collision show/hide script", "datetime": "2011-09-01T04:07:14", "html": "<p>Yesterday a friend asked me if I could make a quick tool that would show or hide objects with the prefix &#8216;COL_&#8217; in Max. Being that I had never worked in MaxScript beyond a simple &#8216;hello world&#8217; level, I told him sure, give me half an hour. This script was the result.</p>\n<p><a href=\"http://www.tylergood.net/wp-content/uploads/2011/09/hide_collision.zip\">Download Script here.<br />\n</a></p>\n<p>Directions for use:</p>\n<ul>\n<li>\u00a0Copy this script to your &lt;Max Directory&gt;\\stdplugs\\stdscripts folder</li>\n<li>Restart Max</li>\n<li>Open up the &#8216;Customize User Interface&#8217; Dialog ( Customize &gt; Customize User Interface )</li>\n<li>Select &#8216;GoodUtils&#8217; from the &#8216;Category&#8217; drop down</li>\n<li>Select &#8216;Show or hide collision&#8217; from the actions</li>\n<li>Assign a hotkey using the assign hotkey area to the right</li>\n<li>&#8216;Save&#8217; your UI settings</li>\n</ul>", "summary": "Yesterday a friend asked me if I could make a quick tool that would show or hide objects with the prefix &#8216;COL_&#8217; in Max. Being that I had never worked in MaxScript beyond a simple &#8216;hello world&#8217; level, I told him sure, give me half an hour. This script was the result. Download ", "id": "http://www.tylergood.net/?p=66", "categories": [], "metadata": {"guid": "b5876659-74c6-4a6d-801e-ceea02809578", "likes": 0, "is_published": false}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/08/masterclass-links-now-up.html", "title": "MasterClass links now up!", "datetime": "2011-08-31T08:43:56.137000", "html": "Just checked on TheArea and it looks like the MasterClass links are up a day early:<br /><br /><a href=\"http://area.autodesk.com/siggraph2011/masterclasses\">http://area.autodesk.com/siggraph2011/masterclasses</a><br /><br />Also it looks like Autodesk forgot to add the download link to the Python Module so I've added it here for the time being until they sort the site out:<br /><br /><a href=\"https://docs.google.com/leaf?id=0B-IBE7QQ3hVPNjRmODBkMmEtN2QzMi00ZGUzLTg2NmQtNTgwNWE0YWM1MjIy&amp;hl=en_US\">AnimationBinder.py</a> <br /><br />Hope you enjoy....and yes you do have to register to see them, I think they're tracking numbers.<br /><br />If you're having issues logging in please be aware that when you've registered you have to logout and log back in to view it, as per the banner that Autodesk put up which nobody, including me has read:<br /><br /><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-S3jW6npohrM/Tl5VgoVZSBI/AAAAAAAAFKQ/ki_NiX3fa0E/s1600/MasterClassBanner.jpg\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"34\" src=\"http://3.bp.blogspot.com/-S3jW6npohrM/Tl5VgoVZSBI/AAAAAAAAFKQ/ki_NiX3fa0E/s400/MasterClassBanner.jpg\" width=\"500\" /></a></div><br /><br /><br />Mark<br /><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/1407054789026932542-3598542780568638806?l=markj3d.blogspot.com\" width=\"1\" /></div>", "summary": "Just checked on TheArea and it looks like the MasterClass links are up a day early:<br /><br /><a href=\"http://area.autodesk.com/siggraph2011/masterclasses\">http://area.autodesk.com/siggraph2011/masterclasses</a><br /><br />Also it looks like Autodesk forgot to add the download link to the Python Mo", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-3598542780568638806", "categories": [], "metadata": {"guid": "f9476b5d-2bdf-4dc5-8f40-6b2272df76fd", "likes": 0, "is_published": false}}, {"author": "Dru Sellers", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/dHqbYhoNuS0/", "title": "A Lesson from Operating System Design", "datetime": "2011-08-30T23:25:14", "html": "<p>The concept of the Kernel.</p>\n<p>In an operating system, it is my understanding, the kernel provides a small but critical set of services to the software running on top of it. In most systems this would be stuff like memory management,</p>\n<p>When I am designing a line of business application this would include persistence (i.e. save this to disk/database/etc), communication (with humans, with other machines), and I can only imagine a whole host of other ones for each different app. Something to note is that these systems are not &#8216;business logic&#8217; but merely allow the business logic to get outside the system. The business processes use these to get the job done.</p>\n<p>Not a big idea, or a new one. Just rethinking previous ideas.</p>\n<p>-d</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/dHqbYhoNuS0\" width=\"1\" />", "summary": "The concept of the Kernel. In an operating system, it is my understanding, the kernel provides a small but critical set of services to the software running on top of it. In most systems this would be stuff like memory&#160;&#8230; <a href=\"http://codebetter.com/drusellers/2011/08/30/a-lesson-from-op", "id": "http://codebetter.com/drusellers/?p=161", "categories": [], "metadata": {"guid": "7eab7849-4095-413f-a7fe-f8e2b68aacc2", "likes": 0, "is_published": false}}, {"author": "Stefan Kamoda (noreply@blogger.com)", "url": "http://copypastepixel.blogspot.com/2011/08/rust-animation-test.html", "title": "Rust animation test", "datetime": "2011-08-29T23:14:03.944000", "html": "Haven't had much free time the last few months but I did manage to let this rendered animation test grow slightly out of control. Big thanks to Stephan Schutze (<a href=\"http://www.stephanschutze.com/\">www.stephanschutze.com</a>, Twitter: @stephanschutze) for the awesome audio work.<br /><br /><br /><br /><br /><div style=\"text-align: center;\"><b>Concept and design work</b></div><b><br /></b><br />This little guy started out as a bunch of thumbnail sketches (below left) well over a year ago, but the design also shares some similarities with an even older concept (below right).<br /><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-Twbk5ecEkA0/TlovQxpbmXI/AAAAAAAAAyE/QQoA-5pu78s/s1600/six_scribbles.jpg\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"216\" src=\"http://3.bp.blogspot.com/-Twbk5ecEkA0/TlovQxpbmXI/AAAAAAAAAyE/QQoA-5pu78s/s320/six_scribbles.jpg\" width=\"320\" /></a><a href=\"http://1.bp.blogspot.com/-BDkdsSAvgJU/TlovaohOIKI/AAAAAAAAAyI/vc4Cf-IzyVg/s1600/Mainframe.jpg\"><img border=\"0\" height=\"320\" src=\"http://1.bp.blogspot.com/-BDkdsSAvgJU/TlovaohOIKI/AAAAAAAAAyI/vc4Cf-IzyVg/s320/Mainframe.jpg\" width=\"249\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">Eventually I got around to&nbsp;modelling&nbsp;and although the concepts don't really show it, I drew a lot of inspiration from the Apple IIe and Amiga 500 computers of my misspent youth. The 3D paint-over below shows an early version with only one&nbsp;antennae. The final version has a second antennae which was an accident, I kept it when I realised they could work almost like ears and added a bit more personality.</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/-y_6CcMkQwdU/Tlovi6Ll14I/AAAAAAAAAyQ/luiqqSUYFdA/s1600/six_paintover.jpg\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"345\" src=\"http://2.bp.blogspot.com/-y_6CcMkQwdU/Tlovi6Ll14I/AAAAAAAAAyQ/luiqqSUYFdA/s640/six_paintover.jpg\" width=\"640\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">And finally, a snippet from an old mock comic book panel, just for the hell of it :)</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/-e5sJRUfBGp8/TlovekHf0LI/AAAAAAAAAyM/LerG2gFVqeE/s1600/six_mock_comic_panel.jpg\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"312\" src=\"http://2.bp.blogspot.com/-e5sJRUfBGp8/TlovekHf0LI/AAAAAAAAAyM/LerG2gFVqeE/s640/six_mock_comic_panel.jpg\" width=\"640\" /></a></div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/831618114448728681-4969554441372624352?l=copypastepixel.blogspot.com\" width=\"1\" /></div>", "summary": "Haven't had much free time the last few months but I did manage to let this rendered animation test grow slightly out of control. Big thanks to Stephan Schutze (<a href=\"http://www.stephanschutze.com/\">www.stephanschutze.com</a>, Twitter: @stephanschutze) for the awesome audio work.<br /><br /><br /", "id": "tag:blogger.com,1999:blog-831618114448728681.post-4969554441372624352", "categories": [], "metadata": {"guid": "2d729e4c-c6dd-4cfc-887c-74e06013baad", "likes": 0, "is_published": false}}]"
09-10 23:30 SocketClient INFO     Returning(as str): '[{"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/09/08/coast-to-coast-blue-sky-here-i-come/", "title": "Coast to Coast!  Blue Sky here I come!", "datetime": "2011-09-08T18:27:29", "html": "<div class=\\"wp-caption aligncenter\\" id=\\"attachment_2890\\" style=\\"width: 310px;\\"><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup.jpg\\" rel=\\"lightbox[2889]\\"><img alt=\\"Scrat Continental Crackup\\" class=\\"size-medium wp-image-2890 \\" height=\\"127\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup-300x127.jpg\\" title=\\"scrat_cont_crackup\\" width=\\"300\\" /></a><p class=\\"wp-caption-text\\">How I\'ve felt for so long about working in VFX/Anim industry.</p></div>\\n<div class=\\"wp-caption aligncenter\\" id=\\"attachment_2891\\" style=\\"width: 310px;\\"><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift.jpg\\" rel=\\"lightbox[2889]\\"><img alt=\\"Ice Age: Continental Drift\\" class=\\"size-medium wp-image-2891 \\" height=\\"127\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift-300x127.jpg\\" title=\\"ice_age_continental_drift\\" width=\\"300\\" /></a><p class=\\"wp-caption-text\\">My first project</p></div>\\n<p>Done! \\u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \\u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \\u00a0It&#8217;s everything I could ask for in an employer and more.</p>\\n<p>Don&#8217;t think that it&#8217;s going to stop me from being active on my blog though, quite the opposite! \\u00a0Well, maybe the first month or two starting now there will be a pause, but after that it will increase. \\u00a0I&#8217;m super excited to learn and share knowledge with people and stay really connected and dedicated to innovating personal and industry wide workflows, tech, and of course animation. \\u00a0Technical animation and tech art to be specific is what I&#8217;ll be working on in the coming months, same as usual.</p>\\n<p>Thanks to everyone that&#8217;s been involved in the process of landing this, you know who you are! \\u00a0I don&#8217;t think they know yet what a valuable asset they just\\u00a0acquired but soon they will find out just how serious I am about the work I do and how inspired I can be!</p>\\n<div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "Done! \\u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \\u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \\u00a0It&#8217;s everything I could ask for in an employer and more. Don&#8217;t think that it", "id": "http://www.jonasavrin.com/?p=2889", "categories": [], "metadata": {"guid": "af6033e3-25e1-4153-9754-83f7548bd986", "likes": 0, "is_published": false}}, {"author": "Artur Le\\u00e3o", "url": "http://dimensao3.com/al/?p=556", "title": "iDev Listener \\u2013 Another video", "datetime": "2011-09-06T19:28:55", "html": "<div class=\\"alignleft\\"><p><a href=\\"http://dimensao3.com/al/?p=556\\"><em>Click here to view the embedded video.</em></a></p></div>\\n<p>Another video&#8230; just doing some major advertising to my Autodesk cover&#8230;. well AUTODESK I need a new workstation you know&#8230;. <img alt=\\":P\\" class=\\"wp-smiley\\" src=\\"http://dimensao3.com/wptest/wp-includes/images/smilies/icon_razz.gif\\" /> </p>\\n<p>Remember, still early development, it has some lag on my laptop but it works fine on my workstation at work.</p>", "summary": "Another video&#8230; just doing some major advertising to my Autodesk cover&#8230;. well AUTODESK I need a new workstation you know&#8230;. Remember, still early development, it has some lag on my laptop but it works fine on my workstation at work.", "id": "http://dimensao3.com/al/?p=556", "categories": [], "metadata": {"guid": "18265d1a-2d29-4bfb-8e3f-ffe7eeedd513", "likes": 0, "is_published": false}}, {"author": "Brendan Tompkins", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/PGrLOMBEy_4/", "title": "CodeBetter.Com wants to send you to Redmond!", "datetime": "2011-09-06T13:22:48", "html": "<p>In March, we sent the <a href=\\"http://codebetter.com/2011/03/21/visual-studio-live-las-vegas-giveaway/\\" title=\\"VSLive!\\">Code Junkie to Las Vegas, to attend Visual Studio Live!</a>, and now it&#8217;s your turn!</p>\\n<p>As a thank you for continuing to help support CodeBetter.Com/Devlicio.us and our community of friends here, we\\u2019ve arranged (thanks to the generous support from Visual Studio Live!)\\u00a0to give away one conference pass to\\u00a0<a href=\\"http://vslive.com/events/redmond-2011/home.aspx\\">Visual Studio Live! in Redmond!</a>\\u00a0(October 17th &#8211; 21st, 2011) \\u00a0That&#8217;s REDMOND people!</p>\\n<p>The value of the pass we\\u2019re giving you to for a giveaway is $1,895. \\u00a0It\\u2019s a 5-day package with an excellent\\u00a0<a href=\\"http://vslive.com/events/redmond-2011/speakers/speaker-list.aspx\\">speaker lineup</a>\\u00a0(Ted Neward, Rocky Lhotka, Billy Hollis, Miguel Castro Jason Bock and others!) \\u00a0that includes the following:</p>\\n<ul>\\n<li>All Visual Studio Live! Sessions and Keynotes</li>\\n<li>Pre-conference workshops</li>\\n<li>Post-conference workshops</li>\\n<li>Reception</li>\\n<li>Networking Events</li>\\n<li>Lunch (October 17-21)</li>\\n<li>Coffee and Morning Pastries</li>\\n</ul>\\n<p>On top of the attendance covered, we\\u2019re going to give the winner\\u00a0$500 to help offset travel and hotel costs and throw in some CodeBetter.com/Devlicio.us schwag to giveaway to boot!</p>\\n<h2>What do I have to do to enter?</h2>\\n<p>Not much! \\u00a0All you need to do is comment/trackback/tweet this and you\\u2019re eligible. \\u00a0We\\u2019ll pick a winner and announce the final recipient this Tuesday, September 20th at 12:00 EST.</p>\\n<p>Good luck, and again thanks for all of the support!</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/PGrLOMBEy_4\\" width=\\"1\\" />", "summary": "In March, we sent the Code Junkie to Las Vegas, to attend Visual Studio Live!, and now it&#8217;s your turn! As a thank you for continuing to help support CodeBetter.Com/Devlicio.us and our community of friends here, we\\u2019ve arranged (thanks to&#160;&#8230; <a href=\\"http://codebetter.com/2011/09/06/co", "id": "http://codebetter.com/?p=202", "categories": [], "metadata": {"guid": "498b09a0-378e-4eec-a546-98fc8c7faac6", "likes": 0, "is_published": false}}, {"author": "Artur Le\\u00e3o", "url": "http://dimensao3.com/al/?p=552", "title": "iDev Listener \\u2013 Control objects with iPhone", "datetime": "2011-09-06T10:18:10", "html": "<div class=\\"alignleft\\"><p><a href=\\"http://dimensao3.com/al/?p=552\\"><em>Click here to view the embedded video.</em></a></p></div>\\n<p>Hey guys, I had something on my mind for some time now and yesterday I decided to create a proof of concept and it worked!<br />\\nThe video is nothing special, I&#8217;ll try posting one later where you see the iPhone and viewport at the same time but I can tell you something, it&#8217;s REALLY cool to control the camera with the iPhone<br />\\nAs I&#8217;ve said before, this is only a proof of concept and I&#8217;ll start working on the movements and later on on capturing and keyframing the data, but that&#8217;s later on.</p>\\n<p>In the video it&#8217;s a bit (a lot) slow, but that&#8217;s because my laptop is shit and the screen capture software didn&#8217;t help, also outputing to the listener makes it even slower.</p>\\n<p>Hope you like it, cheers!</p>\\n<p>Oh yeah&#8230; for 3dsmax of course <img alt=\\":D\\" class=\\"wp-smiley\\" src=\\"http://dimensao3.com/wptest/wp-includes/images/smilies/icon_biggrin.gif\\" /> </p>", "summary": "Hey guys, I had something on my mind for some time now and yesterday I decided to create a proof of concept and it worked! The video is nothing special, I&#8217;ll try posting one later where you see the iPhone and viewport at the same time but I can tell you something, it&#8217;s REALLY cool [...]", "id": "http://dimensao3.com/al/?p=552", "categories": [], "metadata": {"guid": "528a8a68-8643-4391-bd39-23021e6b3170", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=764", "title": "Python software metrics- my first useful OS project?", "datetime": "2011-09-06T03:59:48", "html": "<p>I&#8217;ve tried to open-source code quite a few times, but the projects have been niche enough that they haven&#8217;t been very useful. \\u00a0Well, I <em>finally</em>\\u00a0have something universally useful.</p>\\n<p>I&#8217;ve take an interest in code metrics recently (as documented on this blog) and I have been quite upset to learn that there are few good tools for measuring them in Python code. \\u00a0PyLint and PyChecker and the like are not what I&#8217;m talking about- I want dependency graphs, measure of cyclomatic complexity, automatic coverage analysis, etc.</p>\\n<p>So basically what I&#8217;m doing is creating a framework that wraps a bunch of existing functionality into an easy-to-use system, and expands or refactors it where necessary. \\u00a0My goal is to make it a &#8216;drop in&#8217; system to it will be trivial to get thorough code metrics for your codebase (similar to how simple it is to do in Visual Studio).</p>\\n<p>Right now I&#8217;ve created a SLOC (Source Lines of Code) generater, a wrapper for nose and coverage, and hooked it up to pygenie to measure Cyclomatic Complexity- which is unfortunately going to need a significant refactoring, so I won&#8217;t be able to fork it directly. \\u00a0I&#8217;ll be hooking it up into our automated test framework at work this week as well for some battle testing. \\u00a0I&#8217;m 100% sure there&#8217;s a good deal of extensibility and configuration adjustments I&#8217;ll need to make to support alternative setups. \\u00a0Next up will be automatic generation of dependency graphs (which doesn&#8217;t look easy at all, unfortunately). \\u00a0And writing tests (this is the first project that I didn&#8217;t sort-of-TDD in a while). \\u00a0Oh, and getting it into Google Code.</p>\\n<p>Is this something you guys can see hooking into your codebases? \\u00a0Do you see the value of and want to find out metrics of your codebases?</p>\\n<p>Oh and it&#8217;s tentatively called &#8216;pynocle&#8217;, if you have a better name I&#8217;d love to hear it.</p>", "summary": "I&#8217;ve tried to open-source code quite a few times, but the projects have been niche enough that they haven&#8217;t been very useful. \\u00a0Well, I finally\\u00a0have something universally useful. I&#8217;ve take an interest in code metrics recently (as documented on this blog) and I have been quite upset ", "id": "http://www.robg3d.com/?p=764", "categories": [], "metadata": {"guid": "f9380a24-09be-4116-9149-6105d90d8609", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/09/05/character-td-demo-the-kaylee-rig/", "title": "Character TD Demo \\u2013 The Kaylee Rig (Sticky)", "datetime": "2011-09-05T20:00:31", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><div class=\\"shareaholic-like-buttonset\\" style=\\"float: right; height: 30px;\\"><a class=\\"shareaholic-fblike\\"></a><a class=\\"shareaholic-googleplusone\\"></a></div><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><!-- End Shareaholic LikeButtonSetTop --><p style=\\"text-align: center;\\"></p>\\n<p>Fighting the urge to be unproductive, I locked myself in the house for the past few days to get some work done on a new character TD demo.\\u00a0 Been under the weather anyhow and didn&#8217;t feel like doing much else, not even surf *gasp!*.\\u00a0 Here it is in all it&#8217;s beautiful animator friendly simplicity.\\u00a0 I plan on extending this demo with character animation tools.\\u00a0 I can&#8217;t wait to get away from creating demos and rendering video and go back to actually programming and rigging stuff!\\u00a0 I have so much more advanced rigging techniques to show and some that haven&#8217;t gotten to a finished stage on my characters yet so stay tuned.</p>\\n<p><span id=\\"more-2864\\"></span></p>\\n<p><span style=\\"text-decoration: underline;\\">Additional Credits:</span></p>\\n<p title=\\"Suchan Bajracharya\\">This latest demo features the Kaylee rig which is provided by Alex Curtis, director of Hephaestus the latest short animation project to have my work in it and soon to be released.\\u00a0 More on that soon.\\u00a0 It shows techniques I think are in the top 5 of all rigging resources out there provided by Autodesk&#8217;s Animator Friendly Rigging series by Jason Schleifer.\\u00a0 Special recognition goes to Image Metrics&#8217; proprietary facial rigging tools for the automatic setup of the control rig for the face&#8211;I worked after hours on this one.\\u00a0 Of course my favorite track at the moment Little Dragon&#8217;s &#8220;Feather&#8221; off the Machine Dreams album is being used.\\u00a0 The whole album you must listen if you haven&#8217;t already.\\u00a0 Last but not least, I supervised Suchan Bajracharya (@<a href=\\"https://twitter.com/#%21/tweetBoucha\\" title=\\"Suchan Bajracharya\\">tweetBoucha</a> ) for the goggles and hair rigging.\\u00a0 Follow him on Twitter for great rig tips.\\u00a0 Big thanks to him for helping me get done on a tight deadline!\\u00a0 All of this work was afterhours spending long nights at the office when everyone else blissfully went home.\\u00a0 <img alt=\\";)\\" class=\\"wp-smiley\\" src=\\"http://www.jonasavrin.com/wp-includes/images/smilies/icon_wink.gif\\" /> \\u00a0 Hope you enjoy!</p>\\n<p title=\\"Suchan Bajracharya\\">Shot breakdown coming soon!</p>\\n<div class=\\"shr-publisher-2864\\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "Fighting the urge to be unproductive, I locked myself in the house for the past few days to get some work done on a new character TD demo.\\u00a0 Been under the weather anyhow and didn&#8217;t feel like doing much else, not even surf *gasp!*.\\u00a0 Here it is in all it&#8217;s beautiful animator friendly simpl", "id": "http://www.jonasavrin.com/?p=2864", "categories": [], "metadata": {"guid": "a34f8d1c-9ade-4a46-992a-4079dc0f82bb", "likes": 0, "is_published": false}}, {"author": "Dru Sellers", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/PDwLESDJLv8/", "title": "The .Net community and the negative view on assembly references", "datetime": "2011-09-05T19:43:43", "html": "<p>Why is it that we abhor large numbers of references in our .Net projects? Beyond the obvious that is (I don&#8217;t care about start up time, or any other performance hogwash). It seems that early in my career I thought 10 assembly references was absurd, now that number is MUCH higher (almost without limit) but this view is intensely not the view held by the larger .net community. I take a look at other communities outside of .net and see people doing a much better job of pulling together a multitude of libraries to construct even simple sites versus the vast majority of .net projects I have seen that seem to go out of their way to avoid a dependency hit. Not to mention the enterprise projects that build massive systems and taking no more dependencies than exist in the BCL.</p>\\n<p>This bias of not wanting to import a larger number of references has impacted the way I design my .net code, and I am not sure I would do the same if I were in another language. For instance, I have a library called Magnum that is a junk drawer of functionality for my other projects. Every now and then someone will see the reference in another project and will go take a look at it. To there surprise, it contains a vast and deep amount of code that could be very useful to them. But to import it means to import a LOT of stuff. Why don&#8217;t I break up this codebase? Because of my negative view on assembly references. &#8220;Le sigh.&#8221; Should I just start splitting things up more? How does this splintering of Magnum effect other things?</p>\\n<p>A part of me wonders if this isn&#8217;t caused by the same effects of &#8216;The Tale of J. Random Newbie&#8217; in the Art of Unix Programming pg 415. Go read the 4 pages or so. I will wait.</p>\\n<p><a href=\\"http://catb.org/esr/writings/taoup/html/graphics/taoup.pdf\\">The Art of Unix Programming</a></p>\\n<p>It would not surprise me if the lack of OSS experience and transparency in the large part of the .Net community isn&#8217;t responsible for this.</p>\\n<p>Of course, I can&#8217;t, in practice, ignore the impacts of additional assembly references on the performance of my applications. Has anyone actually measured this?</p>\\n<p>Thoughts?</p>\\n<p>-d</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/PDwLESDJLv8\\" width=\\"1\\" />", "summary": "Why is it that we abhor large numbers of references in our .Net projects? Beyond the obvious that is (I don&#8217;t care about start up time, or any other performance hogwash). It seems that early in my career I thought&#160;&#8230; <a href=\\"http://codebetter.com/drusellers/2011/09/05/the-net-commun", "id": "http://codebetter.com/drusellers/?p=163", "categories": [], "metadata": {"guid": "08ba5c3f-7aba-4f7e-8370-282000bf52d6", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/05/deus-ex-human-revolution/", "title": "Deus Ex: Human Revolution", "datetime": "2011-09-05T15:17:49", "html": "<p>The original Deus Ex is my favorite FPS game so when I heard that they are making a prequel I was intrigued. I figured that if a company picks up such a lesser known franchise then they must have a pretty solid idea what to do with it. (And probably know how big of a meh DX:Invisible War was and will try to avoid the same mistakes.) Of course &#8220;solid idea&#8221; might not necessary mean &#8220;great idea&#8221; (*cough* X-Com *cough*) but hell, it&#8217;s time for a proper first person think/explore/decide sort of game, I hoped that Eidos Montreal gets it right.</p>\\n<p><img alt=\\"http://www.zspline.net/blog/wp-content/gallery/misc/dxhr_logo.png\\" class=\\"alignleft\\" height=\\"256\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/misc/dxhr_logo.png\\" width=\\"64\\" />I saw an early render trailer and read an interview with one of the developers and that was convincing enough to make me avoid any further news regarding the game: No screenshots, no trailers, no dev diaries, no reviews mean no spoilers. (I did check the metacritic score.)<br />\\nI bought the game on Steam, waited for the first two patches and then started playing.</p>\\n<p><strong>All I can say is that this is how you make a game in this day and age.</strong></p>\\n<p>I&#8217;d like to have more games where the most glaring problems are the choppy menu UI and that the mouse doesn&#8217;t work in gamepad mode. (Clever people already <a href=\\"http://www.gamefaqs.com/boards/944090-deus-ex-human-revolution/60137370?page=2\\" target=\\"_blank\\">fixed</a> the unskippable intro videos.)<!-- PHP 5.x --></p>", "summary": "The original Deus Ex is my favorite FPS game so when I heard that they are making a prequel I was intrigued. I figured that if a company picks up such a lesser known franchise then they must have a pretty solid idea what to do with it. (And probably know how big of a [...]", "id": "http://www.zspline.net/blog/?p=1488", "categories": [], "metadata": {"guid": "a52f33df-54d1-4be9-94bc-455d5e20cea9", "likes": 0, "is_published": false}}, {"author": "anim8d (timborrelli@gmail.com)", "url": "http://strongmanimator.blogspot.com/2011/09/technically-its-creative.html", "title": "Technically, It\'s Creative!", "datetime": "2011-09-05T11:54:41.522000", "html": "<span class=\\"Apple-style-span\\" style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"></span><br /><span class=\\"Apple-style-span\\" style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><em>This blog was cross-posted <a href=\\"http://altdevblogaday.com/2011/09/05/technically-its-creative/\\">here</a>.</em></span><br /><br /><span class=\\"Apple-style-span\\">While waiting for a reply to my open letter from a few weeks ago (I still haven\\u2019t heard back from you, Andy<span class=\\"Apple-style-span\\" style=\\"font-family: inherit;\\">!), I&nbsp;</span></span><span class=\\"Apple-style-span\\" style=\\"font-family: inherit; line-height: 19px;\\">gave a talk </span><span class=\\"Apple-style-span\\"><span class=\\"Apple-style-span\\" style=\\"font-family: inherit;\\">at PAXDev</span> regarding how to animate quickly for design, which contained both creative and technical approaches to game animation. After the talk, I received an email asking two things:</span><br /><br /><div style=\\"padding-left: 30px;\\">&nbsp;\\u201cHow do I get into video game animation? I\'ve always found animation to be a very interesting discipline. The problem is that I\'m not even sure where to begin training for such a thing.\\u201d</div>And:<br /><br /><div style=\\"padding-left: 30px;\\">\\u201cIs animation more technical than artistic, or is it the other way around?\\u201d</div><div style=\\"padding-left: 30px;\\"><br /></div>The first question is something I am asked often, and am glad to help with. I responded to the inquiry with this:<br /><br /><div style=\\"padding-left: 30px;\\">\\u201cThe first thing to do is learn the basics- read up on the 12 Principles of Animation (read The Illusion of Life- it\'s the animation holy bible). If you can draw, you could start doing the basic animation tests (bouncing ball, flour sack, etc.) that way w/o needing to buy Max or Maya (though both have 30 day trials!) I\'ve seen far too many beginners jump right in with a walk cycle and not be able to take or understand critique on their work because they don\'t understand the principles and the vocabulary.</div><div style=\\"padding-left: 30px;\\"><br /></div><div style=\\"padding-left: 30px;\\">http://www.11secondclub.com/forum/ is a great place to share animation, as well, once you feel comfortable with it. Online schools like http://www.animationmentor.com/ and http://ianimate.net/ are good, but they are not cheap.</div><div style=\\"padding-left: 30px;\\"><br /></div><div style=\\"padding-left: 30px;\\">Also, watch movies! Watch old WB classics, watch Disney, Pixar, and study the animation. If you see something cool, rewind and step through frame by frame to see what they did. Deconstructing the masters is a great teaching tool.\\u201d</div><div style=\\"padding-left: 30px;\\"><br /></div>However, second part really made me think. Is animation more technical than artistic, or is it the other way around?<br /><br />The easy answer to this very good question is \\u201cyes.\\u201d Game animation is both creative AND technical. Animation is creative by nature-we\\u2019re figuring out timing of our motions, developing poses that communicate emotion and intent to the player, and ultimately, we\\u2019re delivering the look and feel that design wants. In all, we are breathing life into our characters!<br /><br /><table align=\\"center\\" cellpadding=\\"0\\" cellspacing=\\"0\\" class=\\"tr-caption-container\\" style=\\"margin-left: auto; margin-right: auto; text-align: right;\\"><tbody><tr><td style=\\"text-align: center;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/master-thespian-jon-lovitz-500x378.jpg\\" style=\\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\\"><img alt=\\"\\" class=\\"size-full wp-image-15728\\" height=\\"378\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/master-thespian-jon-lovitz-500x378.jpg\\" style=\\"border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\\" width=\\"500\\" /></a></td></tr><tr><td class=\\"tr-caption\\" style=\\"text-align: center;\\">Nah, we\'re just painting pixels, really</td></tr></tbody></table><br />However, it helps if you have some proficiency with understanding the technical side of things (though I\\u2019m not talking about rigging and other technical animation specialties - those have their own discipline separate from animation). In some engines, your timing in that walk cycle needs to match the timing for the rest of your walk cycles so it blends properly, or your footstep events need to be setup so time-scale blending to your run cycle works properly. In other engines, your poses need to be setup so that they makes sense against other poses they will blend to, unless you want to create countless 3 to 6 frame transition animations.<br /><br />And you better know what state machines and blendtrees are. If you know how to build them, that\\u2019s a big advantage. Know a little scripting? That\\u2019s even better.<br /><div class=\\"mceTemp mceIEcenter\\" style=\\"text-align: center;\\"><br /><dl class=\\"wp-caption aligncenter\\" id=\\"attachment_15733\\" style=\\"background-color: #f3f3f3; border-bottom-color: rgb(221, 221, 221); border-bottom-left-radius: 3px 3px; border-bottom-right-radius: 3px 3px; border-bottom-style: solid; border-bottom-width: 1px; border-left-color: rgb(221, 221, 221); border-left-style: solid; border-left-width: 1px; border-right-color: rgb(221, 221, 221); border-right-style: solid; border-right-width: 1px; border-top-color: rgb(221, 221, 221); border-top-left-radius: 3px 3px; border-top-right-radius: 3px 3px; border-top-style: solid; border-top-width: 1px; display: block; margin-bottom: 10px; margin-left: auto; margin-right: auto; margin-top: 10px; padding-top: 4px; text-align: center; width: 310px;\\"><dt class=\\"wp-caption-dt\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/basic_state_flow-300x107.png\\"><img alt=\\"\\" class=\\"size-full wp-image-15733\\" height=\\"107\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/basic_state_flow-300x107.png\\" style=\\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\\" width=\\"300\\" /></a></dt><dd class=\\"wp-caption-dd\\" style=\\"font-size: 11px; line-height: 17px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 5px; padding-left: 4px; padding-right: 4px; padding-top: 0px;\\">Oh hey, I can handle that!</dd></dl></div>This begs the question, however, of where exactly the line drawn is between the two, and how important it is as an animator to BE technically trained. Sure, you can create the best looking run cycle in the history of run cycles, but how does it work with animation layers in-game, how does it transition, and does it hold up to speed changes?<br /><br />Or does it really matter? Who\\u2019s to say that a game animator NEEDS to build those blendtrees? Or that they have to understand how to set up an IK chain in-engine? Or know how the aiming system works?<br /><br />In my opinion, animators will be far more successful if they have that knowledge.<br /><br />I don\'t expect them to have it right off the bat, mind you. Entry level folks should be concentrating on creating good motion and letting their leads dictate the technical details. I also don\'t think it\'s a requirement to know scripting or understand how to build a complex state machine in order to be a successful game animator.<br /><br /><table align=\\"center\\" cellpadding=\\"0\\" cellspacing=\\"0\\" class=\\"tr-caption-container\\" style=\\"margin-left: auto; margin-right: auto; text-align: left;\\"><tbody><tr><td style=\\"text-align: center;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/havokbehaviortool.jpg\\" style=\\"clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;\\"><img alt=\\"\\" class=\\"size-full wp-image-15734\\" height=\\"244\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/havokbehaviortool.jpg\\" style=\\"border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\\" width=\\"400\\" /></a></td></tr><tr><td class=\\"tr-caption\\" style=\\"text-align: center;\\">SWEET JEBUS THIS IS BEYOND ME HALPS!</td></tr></tbody></table><br />However, those animators at any level should be learning WHY those technical details exist. Why a pose needs to be oriented one way or the other, or how their motions will be used in game and why it works that way. They should know what scripting can do for them, at the least so they can request a tool from a tech artist. All the while, continuing to hone the creative side of their craft, in order to become the best game animator possible.<br /><br />Marrying the creative side of animation with the technical side makes an animator even MORE creative. For example, on a project early in my career, I was tasked with giving the attack animations of a character \\u201cmore flair.\\u201d This was all the direction I was given from my offsite corporate producer. I worked for weeks on just adjusting and presenting the animations with no success. By shear \\u201che was a close friend\\u201d luck, I spoke with the VFX artist on the project on how we could push the attack animations further. He told me that I could attach VFX to my animations! I immediately added ridiculously exaggerated spinning weapon movements to the attacks, and worked with that VFX artist to create trails for the weapons. We hooked it up in game, showed it to our producer a week later and he exclaimed \\u201cthat\\u2019s it!\\u201d Had I not known about that ability to tie VFX to an animation, I may never have succeeded in bringing my producer\\u2019s vision to life.<br /><br /><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"></div><div style=\\"text-align: center;\\">(at 3:16) More flair, Taurgis, MORE FLAIR! :)</div><br />Understanding what happens after your animation is done and makes its way into the game will allow an animator to devise new and interesting ways to make a character move. It also allows them to do it more efficiently, leaving more time for polishing animation or sneaking in that fidget animation that everyone keeps saying they should do.<br /><br />Understanding both sides also creates the opportunity to be creative with the most tedious, technical animations, like those aforementioned transition animations. Mike Jungbluth does an excellent job discussing how to inject more character into those animations in <a href=\\"http://altdevblogaday.com/2011/04/10/growing-game-animation-transitions-player-input/\\">a separate post</a>.&nbsp;By not treating those animations as a technical requirement and instead as an opportunity to communicate a character\\u2019s personality, they become a creative necessity, not a technical one.<br /><br />Use of motion capture is another opportunity to push beyond the technical. If treated like nothing more than technical data, the motion will stay as it was captured, and the performance delivered will fall short, no matter how good the actor (and we all know my opinion on THAT). Inject the creativity of an animator, and you have the opportunity to punch out poses, adjust timing for bigger impact, and even change shots after the fact. Yes, this opens up the <a href=\\"http://www.motivesinmovement.com/blog/2011/09/who-owns-the-pixel-digital-rights-and-performance/\\">\\"ownership\\" debate</a>,&nbsp;but it\\u2019s the end result that matters. It\\u2019s important to remember that it\\u2019s a creative, collaborative effort, and not a technical hurdle that gets in the way of a performance.<br /><br /><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"></div><div style=\\"text-align: center;\\">Well, usually. :)</div><br />In the end, it\\u2019s best to approach both the creative and technical sides as wholly creative. The technical side varies from studio to studio, engine to engine, and it\'s ultimately a teachable process. The creative part comes from you, and you take that to whatever studio you work at and use it in whatever engine you work with.<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/4248341596629159263-8977062883261323042?l=strongmanimator.blogspot.com\\" width=\\"1\\" /></div>", "summary": "<span class=\\"Apple-style-span\\" style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"></span><br /><span class=\\"Apple-style-span\\" style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-8977062883261323042", "categories": [], "metadata": {"guid": "71687686-b4d8-4dbb-a350-c41a12681052", "likes": 0, "is_published": false}}, {"author": "Sebastien Lambla", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/jtuhrGodB0U/", "title": "Summer holidays are over, time for a new roadmap", "datetime": "2011-09-04T23:52:06", "html": "<p>As many of you many have noticed, things have stalled a bit over the summer on the master branches of openrasta and openwrap. While our amazing contributors are still sending pull requests and development has continued, as the owner of the master branches I\\u2019ve not been there to maintain the new packages, as I decided to take the summer slow and learn how to*rest*.</p>\\n<p>Now that the summer is over, I\\u2019m glad to clarify the roadmap for OpenEverything frameworks:</p>\\n<ul>\\n<li>OpenWrap 2.0 with ReSharper support and cached remote implementation is nearly done, but a lot of features planned for 2.0 will be rescheduled for future versions. I expect a release for this in the next two weeks.</li>\\n<li>OpenRasta 2.1 work is coming along nicely, with all the bug fixes that have been suggested, and some extension points that will be needed for the work on 3.0 to start. I expect that work to be completed by the end of September. I\\u2019ll also make OpenRasta available on NuGet, although it *will* auto-install OpenWrap in your solution.<br />\\nWe\\u2019re dropping .net 2.0 support, as it\\u2019s been out of the binaries for a while and no one has requested them back, so I\\u2019ll assume no one needs that anymore. Note that some work is going in this release that will let OpenRasta manage in-memory / caching automatically, so if your code depends on the request or response stream being seekalbe, I\\u2019d start making some changes now.</li>\\n<li>OpenRasta 2.2 will be next, and again we\\u2019ll take any additional enhancements that don\\u2019t break binary compatibility. I\\u2019d like to continue taking those changes and start doing per-feature or per-bugfix releases.</li>\\n<li>OpenRasta 3.0 is going to be where heavy rewriting is going to happen in parts of the API I don\\u2019t like, and we\\u2019ll take the luxury of redesigning and renaming / refactoring what needs to be (for example, IType et al will probably disappear and be replaced by a simpler model, the key/values binding model will be updated to provide additional information and extensibility points for those crazy people wanting a plug-in validation framework).<br />\\nIn order to guarantee that\\u00a0 your components using OpenRasta 2 will still work on 3, we\\u2019ll be type-redirecting the published extensibility interfaces that are changing into a 2.0-specific legacy API package. In other words, we\\u2019ll plug most of the existing contributors, codecs, interceptors, decorators and all other non-generic interfaces straight in the new API, using the same composition engine that will be used by OR 3.0 itself.</li>\\n<li>OpenHttp and OpenWebFx are the two components that will provide the basis for OR 3. The former is an extension of the unified hosting environment OpenRasta already has been using for two years, and allows hosting across HttpListener, TCP, IISCore, asp.net and in-memory, based on an async pull mechanism (as opposed to, say, OWIN which is push based, one of the two reasons I\\u2019m not implementing OWIN myself). OpenWebFx is the building blocks of a web framework, aka provides the http pipeline model and a couple of building blocks that are core to OpenRasta (codecs, media types, content negotiation\\u2026). This will leave OpenRasta itself as a combination of many packages and a bit of custom code on top of it (mainly, the registration API).<br />\\nCode will be out when it\\u2019s out, I make no promises, but do expect to see beta versions running on the beta openwrap package repository by the end of the year.</li>\\n<li>Everything else is already in the process of migrating to its own packages, so you can expect a first release of OpenContainer (the IoC type resolving compatibility layer) and associated releases to appear around the OR 2.2 timeframe. You can also expect a diagnostics package for OR 2.1 (pluggable of course, named openrasta-diagnostics), a 2.1-specific devtools package (that installs the templates to create projects and solutions thanks to OpenWrap project manipulation), a temporary openrasta-fluent package that contains the new and more compact registration API (which will be type redirected back in the 3.0 API as a replacement for the old syntax), a couple of codecs that will be maintained by us (openrasta-codecs-jsonnet for example, with support for anonymous types and dynamics), etc. Some of those packages (such as our support for Unity, StructureMap, Windsor and Ninject) will be looking for new owners as I start delegating a lot of the package releases to whoever wants to manage them.</li>\\n</ul>\\n<p>This is the schedule for the end of the year, no guarantee implied, as any work I do for clients drives those two frameworks as a priority. If you\\u2019re interested in sponsoring some work on OpenEverything for your own needs, please do let me know, we can always figure something out.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/jtuhrGodB0U\\" width=\\"1\\" />", "summary": "As many of you many have noticed, things have stalled a bit over the summer on the master branches of openrasta and openwrap. While our amazing contributors are still sending pull requests and development has continued, as the owner of&#160;&#8230; <a href=\\"http://codebetter.com/sebastienlambla/2011", "id": "http://codebetter.com/sebastienlambla/2011/09/04/summer-holidays-are-over-time-for-a-new-roadmap/", "categories": [], "metadata": {"guid": "d78afc11-153a-404b-91e7-b99ef4ebec97", "likes": 0, "is_published": false}}, {"author": "Peter van Ooijen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/GAoORHmbYxw/", "title": "Book review: Learning Monotouch by Michael Bluestein", "datetime": "2011-09-04T18:51:16", "html": "<p><a href=\\"http://ios.xamarin.com/\\">Monotouch</a> is a powerful tool to create native iOS (iPhone/iPad/iPod) apps written in C# backed by (a native version of) the .net framework. I have been using it for some time now to my great satisfaction. Learning Monotouch was a somewhat bumpy road. The native language for iOS is objective C and the majority of the resources on iOS development use that language. Objective C is on itself not a bad language at all. But the syntax is somewhat awkward and the philosophy differs enough from C# to make the learning curve for us .net-ers rather steep.</p>\\n<p>There are a lot of resources on the web on Monotouch, a lot with practical hands on examples. They do learn you how to build working (and appstore accepted apps) but not many of them spend any attention on the background or architecture of iOS. Making it hard to understand all Objective C resources, even having learned the syntax.</p>\\n<p><a href=\\"http://www.informit.com/store/product.aspx?isbn=0321719921\\">Learning Monotouch</a> \\u201cA hand-On Guide to Building iOS Applications with C# and .NET\\u201d, by <a href=\\"http://mikebluestein.wordpress.com/\\">Michael Bluestein</a> ,\\u00a0 is the book I wish I had had when I started working with Monotouch.</p>\\n<p><a href=\\"http://codebetter.com/petervanooijen/files/2011/09/LM.png\\"><img alt=\\"LM\\" border=\\"0\\" height=\\"608\\" src=\\"http://codebetter.com/petervanooijen/files/2011/09/LM_thumb.png\\" style=\\"margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; padding-top: 0px; border: 0px;\\" width=\\"466\\" /></a></p>\\n<p>The book is a hands-on guide, everything is explained in clear example apps. In the first chapters the same app is demonstrated in XCODE-Objective C (Apple\\u2019s tools)and in Monotouch. Doing so it both explains the architecture of an iOS app and explains the way Monotouch handles that. In case you are already working with Monotouch: do get this book and do not skip these first chapters. Besides a better understanding of your apps Michael also spends a lot of attention to the details, there is a lot of quality to be won in fine tuning the result of the default app template.</p>\\n<p>The book assumes you are familiar with C#, lambda expressions and extension functions are used without introduction. Those things show how good an idea Monotouch is, these are powerful language features not offered by objective C. The book also assumes you are familiar with the .Net framework. Parts are used throughout the chapters. \\u201cOur\\u201d framework really has more to offer than the native Apple tools, especially when it comes to webservice clients and xml.</p>\\n<p>The components which make up iOS, visual and non visual, are wrapped up by Monotouch in C# classes. In a number of chapters all pass the revue, ranging from views to the music player. Tables and navigation get a chapter of their own, they are the backbone of almost any iOS app. Thank goodness Michael does start a navigation app with the default windowed app template. Xcode (and thus Monotouch) has a template for a navigation based app, my experience with that is not that good. The way Michael treats navigation in an app works completely outshines all I have ever found so far on the subject. Working through it results in an app that is easy to understand, well integrated and is guarded against common problems. Like popping to a view which has unintended been garbage collected in the mean time. Leading to a blank screen, many an app (including mine..) can suffer from this behavior. Having worked through this chapter I now know how to (really) solve this.</p>\\n<p>Monotouch and Michael\\u2019s coverage don\\u2019 stop with of-the shelf components. You can also do hard core bare graphics and animations yourself, the chapter \\u201cGraphics and Animations\\u201d provide a good start for that. Locations (using GPS) and a chapter on Google Maps using the MapKit follow. Again all very clear and complete containing the essential secrets like how to keep recording location data when your apps switches to the background. Again, this is the book I should have had when I started <img alt=\\"Smile\\" class=\\"wlEmoticon wlEmoticon-smile\\" src=\\"http://codebetter.com/petervanooijen/files/2011/09/wlEmoticon-smile.png\\" style=\\"margin: 0px 0px 24px; border-style: none;\\" /></p>\\n<p>A whole chapter is spent on connecting to webservices. SOAP style as well as REST style. Here the .net framework shines again. Networking has a chapter of its own. Which treats the iOS GameKit, which turns out to be a complete peer to peer networking API, and Bonjour, Apple\\u2019s networking infrastructure API. In a demo app a client-server scenario, using two iOS devices (!). is demonstrated.</p>\\n<p>Storage has a chapter of its own. Which describe how to work with app settings (like app.config in .net) and SQLite. SQLlite is not a part of iOS itself, it\\u2019s a third party open source database. Using that, will give your app ADO.NET style database access. The nice thing is that several apps can share one and the same database file, a good way to reach out of your app\\u2019s sandbox.</p>\\n<p>A final chapter is spent on the iPad. Having a larger screen it offers specific\\u00a0 components to fully utilize that. Michael covers these components and explains how to make your app device aware, with specific screens for iPhone and for iPad.</p>\\n<p>The book is not about cross-platform development. Monotouch is not a tool for a straightforward port of a Windows phone or MonoDroid (C# for Android) app. Such a tool does not exist, simply because these platforms are different. They are different in the way an user works with apps, they are different in how the user expects the apps to behave. Windows Phone has the Metro interface, which works different as navigating through tables as an iPhone user is used to. You cannot port that, you have to rethink your UI. What can be ported is the non-visual part of the app, where the business logic should be. These parts can be ported, Michael does spend some writing on that, though not that much. Needless to say a good architecture pays of and is beyond the scope of this book.</p>\\n<p>Some words on the style of the book. It is a hands-on book where your teacher is talking to you, using words like \\u201cLet\\u2019s create an app\\u201d and recipe style fragments. This is a way of writing I do appreciate being \\u201cguilty\\u201d of doing it myself too. But feedback I received, both from readers and editors, indicates that not everybody does favor it.</p>\\n<p>To conclude: I can only be lyrical about this book. Once more: I wish I had read it last year. In case you do anything with iOS and .net, just get it. In case you don\\u2019t do anything with iOS yet, get it too and expend your C#/.net skills. I hope my walkthrough\\u00a0 of the book, and thus of the platform has hinted at the richness of iOS. Let Michael enlighten you to bring it more great apps.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/GAoORHmbYxw\\" width=\\"1\\" />", "summary": "Monotouch is a powerful tool to create native iOS (iPhone/iPad/iPod) apps written in C# backed by (a native version of) the .net framework. I have been using it for some time now to my great satisfaction. Learning Monotouch was a&#160;&#8230; <a href=\\"http://codebetter.com/petervanooijen/2011/09/04/", "id": "http://codebetter.com/petervanooijen/2011/09/04/book-review-learning-monotouch-by-michael-bluestein/", "categories": [], "metadata": {"guid": "2ede3c58-127c-4017-af98-5e7dce04e394", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://www.tylergood.net/collision-showhide-script/", "title": "Collision show/hide script", "datetime": "2011-09-01T04:07:14", "html": "<p>Yesterday a friend asked me if I could make a quick tool that would show or hide objects with the prefix &#8216;COL_&#8217; in Max. Being that I had never worked in MaxScript beyond a simple &#8216;hello world&#8217; level, I told him sure, give me half an hour. This script was the result.</p>\\n<p><a href=\\"http://www.tylergood.net/wp-content/uploads/2011/09/hide_collision.zip\\">Download Script here.<br />\\n</a></p>\\n<p>Directions for use:</p>\\n<ul>\\n<li>\\u00a0Copy this script to your &lt;Max Directory&gt;\\\\stdplugs\\\\stdscripts folder</li>\\n<li>Restart Max</li>\\n<li>Open up the &#8216;Customize User Interface&#8217; Dialog ( Customize &gt; Customize User Interface )</li>\\n<li>Select &#8216;GoodUtils&#8217; from the &#8216;Category&#8217; drop down</li>\\n<li>Select &#8216;Show or hide collision&#8217; from the actions</li>\\n<li>Assign a hotkey using the assign hotkey area to the right</li>\\n<li>&#8216;Save&#8217; your UI settings</li>\\n</ul>", "summary": "Yesterday a friend asked me if I could make a quick tool that would show or hide objects with the prefix &#8216;COL_&#8217; in Max. Being that I had never worked in MaxScript beyond a simple &#8216;hello world&#8217; level, I told him sure, give me half an hour. This script was the result. Download ", "id": "http://www.tylergood.net/?p=66", "categories": [], "metadata": {"guid": "b5876659-74c6-4a6d-801e-ceea02809578", "likes": 0, "is_published": false}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/08/masterclass-links-now-up.html", "title": "MasterClass links now up!", "datetime": "2011-08-31T08:43:56.137000", "html": "Just checked on TheArea and it looks like the MasterClass links are up a day early:<br /><br /><a href=\\"http://area.autodesk.com/siggraph2011/masterclasses\\">http://area.autodesk.com/siggraph2011/masterclasses</a><br /><br />Also it looks like Autodesk forgot to add the download link to the Python Module so I\'ve added it here for the time being until they sort the site out:<br /><br /><a href=\\"https://docs.google.com/leaf?id=0B-IBE7QQ3hVPNjRmODBkMmEtN2QzMi00ZGUzLTg2NmQtNTgwNWE0YWM1MjIy&amp;hl=en_US\\">AnimationBinder.py</a> <br /><br />Hope you enjoy....and yes you do have to register to see them, I think they\'re tracking numbers.<br /><br />If you\'re having issues logging in please be aware that when you\'ve registered you have to logout and log back in to view it, as per the banner that Autodesk put up which nobody, including me has read:<br /><br /><br /><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><a href=\\"http://3.bp.blogspot.com/-S3jW6npohrM/Tl5VgoVZSBI/AAAAAAAAFKQ/ki_NiX3fa0E/s1600/MasterClassBanner.jpg\\" style=\\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\\"><img border=\\"0\\" height=\\"34\\" src=\\"http://3.bp.blogspot.com/-S3jW6npohrM/Tl5VgoVZSBI/AAAAAAAAFKQ/ki_NiX3fa0E/s400/MasterClassBanner.jpg\\" width=\\"500\\" /></a></div><br /><br /><br />Mark<br /><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/1407054789026932542-3598542780568638806?l=markj3d.blogspot.com\\" width=\\"1\\" /></div>", "summary": "Just checked on TheArea and it looks like the MasterClass links are up a day early:<br /><br /><a href=\\"http://area.autodesk.com/siggraph2011/masterclasses\\">http://area.autodesk.com/siggraph2011/masterclasses</a><br /><br />Also it looks like Autodesk forgot to add the download link to the Python Mo", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-3598542780568638806", "categories": [], "metadata": {"guid": "f9476b5d-2bdf-4dc5-8f40-6b2272df76fd", "likes": 0, "is_published": false}}, {"author": "Dru Sellers", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/dHqbYhoNuS0/", "title": "A Lesson from Operating System Design", "datetime": "2011-08-30T23:25:14", "html": "<p>The concept of the Kernel.</p>\\n<p>In an operating system, it is my understanding, the kernel provides a small but critical set of services to the software running on top of it. In most systems this would be stuff like memory management,</p>\\n<p>When I am designing a line of business application this would include persistence (i.e. save this to disk/database/etc), communication (with humans, with other machines), and I can only imagine a whole host of other ones for each different app. Something to note is that these systems are not &#8216;business logic&#8217; but merely allow the business logic to get outside the system. The business processes use these to get the job done.</p>\\n<p>Not a big idea, or a new one. Just rethinking previous ideas.</p>\\n<p>-d</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/dHqbYhoNuS0\\" width=\\"1\\" />", "summary": "The concept of the Kernel. In an operating system, it is my understanding, the kernel provides a small but critical set of services to the software running on top of it. In most systems this would be stuff like memory&#160;&#8230; <a href=\\"http://codebetter.com/drusellers/2011/08/30/a-lesson-from-op", "id": "http://codebetter.com/drusellers/?p=161", "categories": [], "metadata": {"guid": "7eab7849-4095-413f-a7fe-f8e2b68aacc2", "likes": 0, "is_published": false}}, {"author": "Stefan Kamoda (noreply@blogger.com)", "url": "http://copypastepixel.blogspot.com/2011/08/rust-animation-test.html", "title": "Rust animation test", "datetime": "2011-08-29T23:14:03.944000", "html": "Haven\'t had much free time the last few months but I did manage to let this rendered animation test grow slightly out of control. Big thanks to Stephan Schutze (<a href=\\"http://www.stephanschutze.com/\\">www.stephanschutze.com</a>, Twitter: @stephanschutze) for the awesome audio work.<br /><br /><br /><br /><br /><div style=\\"text-align: center;\\"><b>Concept and design work</b></div><b><br /></b><br />This little guy started out as a bunch of thumbnail sketches (below left) well over a year ago, but the design also shares some similarities with an even older concept (below right).<br /><br /><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><a href=\\"http://3.bp.blogspot.com/-Twbk5ecEkA0/TlovQxpbmXI/AAAAAAAAAyE/QQoA-5pu78s/s1600/six_scribbles.jpg\\" style=\\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\\"><img border=\\"0\\" height=\\"216\\" src=\\"http://3.bp.blogspot.com/-Twbk5ecEkA0/TlovQxpbmXI/AAAAAAAAAyE/QQoA-5pu78s/s320/six_scribbles.jpg\\" width=\\"320\\" /></a><a href=\\"http://1.bp.blogspot.com/-BDkdsSAvgJU/TlovaohOIKI/AAAAAAAAAyI/vc4Cf-IzyVg/s1600/Mainframe.jpg\\"><img border=\\"0\\" height=\\"320\\" src=\\"http://1.bp.blogspot.com/-BDkdsSAvgJU/TlovaohOIKI/AAAAAAAAAyI/vc4Cf-IzyVg/s320/Mainframe.jpg\\" width=\\"249\\" /></a></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">Eventually I got around to&nbsp;modelling&nbsp;and although the concepts don\'t really show it, I drew a lot of inspiration from the Apple IIe and Amiga 500 computers of my misspent youth. The 3D paint-over below shows an early version with only one&nbsp;antennae. The final version has a second antennae which was an accident, I kept it when I realised they could work almost like ears and added a bit more personality.</div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><a href=\\"http://2.bp.blogspot.com/-y_6CcMkQwdU/Tlovi6Ll14I/AAAAAAAAAyQ/luiqqSUYFdA/s1600/six_paintover.jpg\\" style=\\"margin-left: 1em; margin-right: 1em;\\"><img border=\\"0\\" height=\\"345\\" src=\\"http://2.bp.blogspot.com/-y_6CcMkQwdU/Tlovi6Ll14I/AAAAAAAAAyQ/luiqqSUYFdA/s640/six_paintover.jpg\\" width=\\"640\\" /></a></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">And finally, a snippet from an old mock comic book panel, just for the hell of it :)</div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><a href=\\"http://2.bp.blogspot.com/-e5sJRUfBGp8/TlovekHf0LI/AAAAAAAAAyM/LerG2gFVqeE/s1600/six_mock_comic_panel.jpg\\" style=\\"margin-left: 1em; margin-right: 1em;\\"><img border=\\"0\\" height=\\"312\\" src=\\"http://2.bp.blogspot.com/-e5sJRUfBGp8/TlovekHf0LI/AAAAAAAAAyM/LerG2gFVqeE/s640/six_mock_comic_panel.jpg\\" width=\\"640\\" /></a></div><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/831618114448728681-4969554441372624352?l=copypastepixel.blogspot.com\\" width=\\"1\\" /></div>", "summary": "Haven\'t had much free time the last few months but I did manage to let this rendered animation test grow slightly out of control. Big thanks to Stephan Schutze (<a href=\\"http://www.stephanschutze.com/\\">www.stephanschutze.com</a>, Twitter: @stephanschutze) for the awesome audio work.<br /><br /><br /", "id": "tag:blogger.com,1999:blog-831618114448728681.post-4969554441372624352", "categories": [], "metadata": {"guid": "2d729e4c-c6dd-4cfc-887c-74e06013baad", "likes": 0, "is_published": false}}]'
09-10 23:30 root         INFO     Handling CGI request.
09-10 23:30 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:30 SocketClient INFO     Sending to service: "["request_content_slice", [15, 15], {}]"
09-10 23:30 SocketClient INFO     Received from service: "[{"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/08/29/new-tutorial-texturing-with-metasl-in-3dsma/", "title": "New tutorial: Texturing with MetaSL in 3dsMax", "datetime": "2011-08-29T14:21:59", "html": "<p>I&#8217;ve been trying to establish a reliable MetaSL based texturing workflow since 3dsMax 2010 but only recently got close to a practical solution. This tutorial is the fruit of that journey.</p>\n<div class=\"caption \"><span class=\"caption-title\">MetaSL based texturing</span><a href=\"http://www.zspline.net/blog/metasl-based-texturing-part-i/\">Part I</a>: Overview<br />\n<a href=\"http://www.zspline.net/blog/metasl-based-texturing-part-ii/\">Part II</a>: A basic example<br />\n<a href=\"http://www.zspline.net/blog/metasl-based-texturing-part-iii/\">Part III</a>: Baking<br />\n<a href=\"http://www.zspline.net/blog/metasl-based-texturing-part-iv/\">Part IV</a>: Displacement<br />\n<a href=\"http://www.zspline.net/blog/metasl-based-texturing-part-v/\">Part V</a>: An advanced example<br />\n<a href=\"http://www.zspline.net/blog/metasl-based-texturing-part-vi/\">Part VI</a>: Tips and tricks<br />\n<a href=\"http://www.zspline.net/blog/metasl-based-texturing-part-vii/\">Part VII</a>: Known issues<br />\n<a href=\"http://www.zspline.net/blog/metasl-based-texturing-part-viii/\">Part VIII</a>: Node reference</div>\n<p>If you find problems or solutions, have suggestions or opinions, please <a href=\"http://www.zspline.net/blog/contact/\" target=\"_blank\">let me know</a>.</p>\n<p><em>UPDATE: I&#8217;ve just fixed the download links in part I. Sorry for the inconvenience.</em><!-- PHP 5.x --></p>", "summary": "I&#8217;ve been trying to establish a reliable MetaSL based texturing workflow since 3dsMax 2010 but only recently got close to a practical solution. This tutorial is the fruit of that journey. If you find problems or solutions, have suggestions or opinions, please let me know. UPDATE: I&#8217;ve ju", "id": "http://www.zspline.net/blog/?p=1477", "categories": [], "metadata": {"guid": "dafe7410-f10a-4760-a4d7-2efe95e1d18b", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/9466133800", "title": "Found this image while I was looking through my photos the other...", "datetime": "2011-08-27T15:28:00", "html": "<img src=\"http://29.media.tumblr.com/tumblr_lqlq39f7Dj1qgg0uyo1_500.png\" /><br /> Unedited<br /><br /> <img src=\"http://24.media.tumblr.com/tumblr_lqlq39f7Dj1qgg0uyo2_500.png\" /><br /> PS magic!<br /><br /> <p>Found this image while I was looking through my photos the other day. \u00a0Wanted to stitch it together and post it up. \u00a0First one is just placed side by side, the second has softened edges and a level adjustment. \u00a0Took all of 10 minutes. hehe. \u00a0Wish it was higher res, but\u2026this is what I found. \u00a0I could have spent more time on the edges, still visible, but yea\u2026</p>", "summary": "<img src=\"http://29.media.tumblr.com/tumblr_lqlq39f7Dj1qgg0uyo1_500.png\" /><br /> Unedited<br /><br /> <img src=\"http://24.media.tumblr.com/tumblr_lqlq39f7Dj1qgg0uyo2_500.png\" /><br /> PS magic!<br /><br /> <p>Found this image while I was looking through my photos the other day. \u00a0Wanted to stitch it", "id": "http://shawnkirsch.tumblr.com/post/9466133800", "categories": [], "metadata": {"guid": "40844ef7-0bce-4a23-9dd3-20a648b7debf", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=760", "title": "The Tech Artist\u2019s Creed", "datetime": "2011-08-26T22:27:46", "html": "<p>Repost of my most recent from altdevblogaday:\u00a0<a href=\"http://altdevblogaday.com/2011/08/26/the-tech-artists-creed\">http://altdevblogaday.com/2011/08/26/the-tech-artists-creed</a></p>\n<hr />\n<p>Last month we started a <a href=\"http://tech-artists.org/forum/showthread.php?t=1819\">thread</a> on <a href=\"http://www.tech-artists.org\">tech-artists.org</a> about creating a tech artist&#8217;s creed. \u00a0After several weeks of back and forth, we finally came up with something we could all agree upon. \u00a0Here it is:</p>\n<p style=\"padding-left: 30px;\">I am a Tech Artist,<br />\nEvery day I will teach, learn, and assist,<br />\nAnd build bridges between teams, people, and ideas.<br />\nI will observe without interrupting and mediate without judging.<br />\nI may not give exactly what you ask for,<br />\nBut I will provide what you need.</p>\n<p style=\"padding-left: 30px;\">I am a Tech Artist,<br />\nI will approach every problem with mind and ears open<br />\nTo my colleagues and peers across the industry.<br />\nI will solve the problems of today,<br />\nImprove the solutions of yesterday,<br />\nAnd design the answers of tomorrow.</p>\n<p style=\"padding-left: 30px;\">I am a Tech Artist,<br />\nI am a leader for my team,<br />\nAnd a standard-bearer for my community.<br />\nI will do what needs to be done,<br />\nI will advocate for what should be done,<br />\nAnd my decisions will be in the best interest of the production.</p>\n<p>My goal for the creed was to have the community come up with a code of ethics and standards for tech art in general. \u00a0We are a diverse group and there are as many specialties as there are TA&#8217;s. \u00a0So it was necessary to create something widely applicable, but still meaningful.</p>\n<p>My hope is that we can hold ourselves to, and judge our actions against, this creed. \u00a0I think it says everything vital about what a tech artist should strive for. \u00a0I know I have not always lived up to it, and I want my fellow TA&#8217;s to call me out when I do not. \u00a0I expect that other tech artists will share that sentiment. \u00a0I want to keep pushing our craft forward, bettering ourselves and our community, and I think this creed embodies that.</p>\n<p>So, a short post today because so much brain power and effort went into those words above. \u00a0They are not mine alone (or even primarily), they are those of the tech-artists.org community which represents and advocates for the tech art community at large. \u00a0I am just fortunate enough to have the honor and privilege of posting the creed here, on behalf of an amazing and incredibly creative group of people.</p>\n<p>So read it over, tell me what you think, and if you have something to suggest, suggest away- the creed should continually grow and evolve just as our role does.</p>", "summary": "Repost of my most recent from altdevblogaday:\u00a0http://altdevblogaday.com/2011/08/26/the-tech-artists-creed Last month we started a thread on tech-artists.org about creating a tech artist&#8217;s creed. \u00a0After several weeks of back and forth, we finally came up with something we could all agree upon. ", "id": "http://www.robg3d.com/?p=760", "categories": [], "metadata": {"guid": "437c6afe-01ba-4770-a740-c24d4bda8a11", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/23/massive_sunday_pipeline_vray_shader_library/", "title": "Massive Sunday Pipeline VRay Shader Library", "datetime": "2011-08-24T04:57:38", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\"clear: both; height: 3px; width: 100%;\"></div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"></a><a class=\"shareaholic-googleplusone\"></a></div><div style=\"clear: both; height: 3px; width: 100%;\"></div><!-- End Shareaholic LikeButtonSetTop --><p><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/vray.png\" rel=\"lightbox[2821]\"><img alt=\"\" class=\"alignleft size-full wp-image-2830\" height=\"128\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/vray.png\" title=\"vray\" width=\"99\" /></a>I took the VRay <a href=\"http://bit.ly/mPEdzB\" target=\"_blank\" title=\"Latest FBI shader lib mirror\">shader library</a> from what\u00a0Oliver Markowski, creator of <a href=\"http://bitly.com/qwO73t?r=bb\" target=\"_blank\" title=\"FBI Shader Lib\">Full Blown Images</a>, compiled and married it with the shader warehouse resources provided by <a href=\"http://bitly.com/oa00nV?r=bb\" target=\"_blank\" title=\"Sunday shader lib\">Sunday Pipeline</a>, took out this and that, renamed, dusted off, and reorganized everything.\u00a0 All assets were renamed according to strict naming convention to minimize confusion and to facilitate faster searching. \u00a0All this on my free time, which I&#8217;ve had quite a lot the past few days. \u00a0Well, go ahead and grab it because it&#8217;s quite a library to have in your arsenal. \u00a0It&#8217;s all free to use.</p>\n<p>Sunday Pipeline is the way to go.\u00a0 If you haven&#8217;t installed it yet, head over there, read up on it, and <a href=\"http://bitly.com/r5CHlm?r=bb\" target=\"_blank\" title=\"Sunday Pipeline Public\">give it a try</a>.\u00a0 They are updating it with new scripts often.\u00a0 It&#8217;s a simplified asset manager that houses everything from shaders to geometry to a script repo, and best of all, programmed in Python.</p>\n<p>I&#8217;ll be updating this .rar from time to time now with VRay shaders from the internet and what I create or use on my own.</p>\n<p><a href=\"http://bitly.com/nmLhY8?r=bb\" target=\"_blank\" title=\"Sunday Pipeline Warehouse hosted by CGHijinks\">Sunday Pipeline Warehouse hosted by CGHijinks</a></p>\n<p><a href=\"http://bitly.com/rkPO70\" title=\"bit.ly bundle\">All links in this post</a><br />\n&nbsp;</p>\n<div class=\"wp-caption alignleft\" id=\"attachment_2824\" style=\"width: 205px;\"><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/warehouseBrowser.png\" rel=\"lightbox[2821]\"><img alt=\"Warehouse Browser\" class=\"size-medium wp-image-2824 \" height=\"300\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/warehouseBrowser-195x300.png\" title=\"Warehouse Browser\" width=\"195\" /></a><p class=\"wp-caption-text\">Browser for the Asset Library</p></div>\n<div class=\"wp-caption alignleft\" id=\"attachment_2825\" style=\"width: 310px;\"><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/warehouseCreate.png\" rel=\"lightbox[2821]\"><img alt=\"Warehouse Create UI\" class=\"size-medium wp-image-2825\" height=\"295\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/warehouseCreate-300x295.png\" title=\"Warehouse Create UI\" width=\"300\" /></a><p class=\"wp-caption-text\">Add and Remove Assets</p></div>\n<div class=\"wp-caption alignnone\" id=\"attachment_2823\" style=\"width: 310px;\"><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/Strawberry-Jam.png\" rel=\"lightbox[2821]\"><img alt=\"Strawberry Jam\" class=\"size-medium wp-image-2823 \" height=\"300\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/Strawberry-Jam-300x300.png\" title=\"Strawberry Jam\" width=\"300\" /></a><p class=\"wp-caption-text\">Create/Customize/Get Crazy!</p></div>\n<h2><span id=\"more-2821\"></span></h2>\n<p>&nbsp;</p>\n<h2>List of package contents:</h2>\n<hr />\n(This list is subject to change)</p>\n<p>Directory of \\warehouse\\V-Ray Shaders</p>\n<p>08/26/2011\u00a0 10:29 AM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .<br />\n08/26/2011\u00a0 10:29 AM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ..<br />\n08/23/2011\u00a0 10:16 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Metal<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Glass<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Liquid<br />\n08/14/2011\u00a0 01:02 AM\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6,148 .DS_Store<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Wood<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Organic<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Flooring<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Car Paint<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Textile<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Leather<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Plastic<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Walls<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Flora<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Stone<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Ice<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Fire<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Dirt<br />\n08/23/2011\u00a0 10:54 AM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Toon<br />\n08/23/2011\u00a0 01:51 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Basic<br />\n08/23/2011\u00a0 02:33 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Light<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Ceramic<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Pavement<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Concrete<br />\n08/23/2011\u00a0 10:17 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray Brick</p>\n<p>Directory of \\warehouse\\Scenes</p>\n<p>08/26/2011\u00a0 10:30 AM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .<br />\n08/26/2011\u00a0 10:30 AM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ..<br />\n08/14/2011\u00a0 01:03 AM\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6,148 .DS_Store<br />\n08/19/2011\u00a0 07:28 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 V-Ray<br />\n08/19/2011\u00a0 08:14 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 IR-Scan<br />\n08/21/2011\u00a0 10:23 PM\u00a0\u00a0\u00a0 &lt;DIR&gt;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Light Setup</p>\n<p>&nbsp;</p>\n<h1>Check Here for Updates!</h1>\n<hr />\n&nbsp;</p>\n<h2>Texture Library Update:</h2>\n<p>I&#8217;m providing a link to all the original textures (FBI_shaderLibrary only) that are now hosted by me.\u00a0 The pipeline tool has a confirmed bug when it tries to export textures that go with the shaders.\u00a0 You can also use the link provided earlier to download the original from the source, they are exactly the same as mine.\u00a0 Please refer to the Chaos Group forum <a href=\"http://bit.ly/r9xUCI\" title=\"FBI Shader Lib Thread\">thread</a> for queries regarding FBI_shaderLibrary.</p>\n<p>A lot of the shader resources that I posted in my library probably don&#8217;t have their associating textures so here you will find them all in one place so that you can fix the shaders yourself.\u00a0 I will be updating my warehouse as the tools get fixed so there&#8217;s a chance that I could fix them all pretty soon.</p>\n<p><a href=\"http://bit.ly/mPEdzB\" target=\"_blank\" title=\"original textures hosted by source\">source textures</a></p>\n<p><a href=\"http://bit.ly/mTlo5s\" title=\"textures hosted by cghijinks\">my textures</a><br />\n</p>\n<h2>Quick Shader Library Update:</h2>\n<p>Most of the shaders have been rebuilt with textures. I&#8217;m sharing them here:</p>\n<p><a href=\"http://bitly.com/o0GLQB\" title=\"Download Latest Shader Lib Version\">Download my updated sunday warehouse with shader library here</a><br />\nMore to come! Car Paint needs to be done along with most other glossy shaders. Almost there!</p>\n<p>New version .4 of the 3DG SP tools was quietly rolled out today, it fixed the export textures on selected shader bug.  Still kinda unstable after long periods of use.</p>\n<p></p>\n<h2>Textures Fully Updated</h2>\n<p>Textures have been fully integrated into the shader library for all FBI shaders.  Importing has been tested as well, but a few of the textures remain MIA so those will affect the renders.  It&#8217;ll only affect a couple of the very basic shaders like Dark Hardwood.</p>\n<p>Good news!  3DG has officially signed-off on the shader resources as being Sunday Warehouse compliant and have featured a link to this post on their blog.</p>\n<div class=\"shr-publisher-2821\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "I took the VRay shader library from what\u00a0Oliver Markowski, creator of Full Blown Images, compiled and married it with the shader warehouse resources provided by Sunday Pipeline, took out this and that, renamed, dusted off, and reorganized everything.\u00a0 All assets were renamed according to strict nami", "id": "http://www.jonasavrin.com/?p=2821", "categories": [], "metadata": {"guid": "e328670e-9b1f-4291-ad7f-b2d8e9983312", "likes": 0, "is_published": false}}, {"author": "Rigging Dojo", "url": "http://www.riggingDojo.com/2011/08/23/session-4-registration-and-rigging-dojo-live/", "title": "Session 4 registration and Rigging Dojo Live", "datetime": "2011-08-23T21:35:01", "html": "<h2>\nSession 4 Registration open: Limited Time</h2>\n<p>Registration\u00a0 is open now for our final session this year.\u00a0 There is a limited window of time we are accepting registrations so don&#8217;t delay.</p>\n<div>Details: Session start -September 5th</div>\n<div>Please complete the\u00a0registration\u00a0form by\u00a0Wednesday August 31st at 11:59PM CST. \u00a0Space is limited. \u00a0Returning and pre-registered students will receive priority space.</p>\n</div>\n<div><em><strong>Click\u00a0<a href=\"http://www.riggingdojo.com/home/registration/\" target=\"_blank\">here</a>\u00a0to register now!</p>\n<p></strong></em></div>\n<div>We will send you terms of service and payment information once we close registration.</p>\n</div>\n<h2>Rigging Dojo Live Event with Austin Autodesk Animation User Group Association.</h2>\n<p>Join us <strong>Tuesday, Aug. 30, 7:00 PM CST</strong>-as Rigging Dojo and AAUGA presents Dark Art of Animation Layers by Brad Clark.</p>\n<div>\n<p>The next AAUGA will be next Tuesday, Aug. 30, 6:30 pm at Mr. Tramps, 8565 Research Blvd. Austin, TX.<br />\nBrad Clark will present on the Dark Art of Animation Layers.</p>\n<p><a href=\"http://3daustin.org/2011/08/22/aauga-meeting-3d-austin-august/\">http://3daustin.org/2011/08/22/aauga-meeting-3d-austin-august/</a></p>\n</div>\n<div>Learn the how and why of adding animation layers to your animation workflow in Maya.Discover how to tame dense data and simplify the mixing of keyframe and motion capture data.Uncover the secrets of combining animation layers and constraints to create faster rigs and streamlined animation systems.</div>\n<div>You can watch it live online or join us in person (if you are in Austin)\u00a0 and we will post the recording in the event archive at a later date.</div>\n<div><!-- Artiss Code Embed v1.5 | http://www.artiss.co.uk/artiss-code-embed -->\n<div id=\"vokle_embed_event_25477_container\"></div><!-- End of Artiss Code Embed code -->\n</div>\n<p>&nbsp;</p>", "summary": "Session 4 Registration open: Limited Time Registration\u00a0 is open now for our final session this year.\u00a0 There is a limited window of time we are accepting registrations so don&#8217;t delay. Details: Session start -September 5th Please complete the\u00a0registration\u00a0form by\u00a0Wednesday August 31st at 11:59PM", "id": "http://www.riggingDojo.com/?p=944", "categories": [], "metadata": {"guid": "1a6e5974-cfa6-41b6-b258-691b76d88cac", "likes": 0, "is_published": false}}, {"author": "ldunham (noreply@blogger.com)", "url": "http://ldunham.blogspot.com/2011/08/alembic.html", "title": "alembic", "datetime": "2011-08-23T08:36:36.762000", "html": "<span class=\"Apple-style-span\" style=\"background-color: white; font-family: arial, sans-serif; font-size: 13px; line-height: 18px;\">my god...&nbsp;</span><span class=\"Apple-style-span\" style=\"background-color: white; font-family: arial, sans-serif; font-size: 13px; line-height: 18px;\"><a class=\"ot-anchor\" href=\"http://www.youtube.com/watch?v=I__MeR8jsFk&amp;feature=youtu.be\" style=\"color: #3366cc; cursor: pointer; text-decoration: none;\">Alembic.mp4</a></span><br /><span class=\"Apple-style-span\" style=\"background-color: white;\"><span class=\"Apple-style-span\" style=\"font-family: arial, sans-serif; font-size: x-small;\"><span class=\"Apple-style-span\" style=\"line-height: 18px;\"><br /></span></span></span><br /><span class=\"Apple-style-span\" style=\"background-color: white;\"><span class=\"Apple-style-span\" style=\"font-family: arial, sans-serif; font-size: x-small;\"><span class=\"Apple-style-span\" style=\"line-height: 18px;\">good on houdini, would love autodesk to now use the alembic research, not just support, but proper&nbsp;</span></span></span><span class=\"Apple-style-span\" style=\"background-color: white;\"><span class=\"Apple-style-span\" style=\"font-family: arial, sans-serif; font-size: x-small;\"><span class=\"Apple-style-span\" style=\"line-height: 18px;\">integration, i really dont think they can afford not to...</span></span></span><br /><span class=\"Apple-style-span\" style=\"background-color: white;\"><span class=\"Apple-style-span\" style=\"font-family: arial, sans-serif; font-size: x-small;\"><span class=\"Apple-style-span\" style=\"line-height: 18px;\">just look at those speeds!!!&nbsp;</span></span></span><br /><br /><span class=\"Apple-style-span\" style=\"font-family: arial, sans-serif; font-size: x-small;\"><span class=\"Apple-style-span\" style=\"line-height: 18px;\"><br /></span></span><br /><span class=\"Apple-style-span\" style=\"background-color: white; font-family: arial, sans-serif; font-size: 13px; line-height: 18px;\"><a class=\"ot-anchor\" href=\"http://www.sidefx.com/index.php?option=com_content&amp;task=view&amp;id=2005&amp;Itemid=66\" style=\"color: #3366cc; cursor: pointer; text-decoration: none;\">http://www.sidefx.com/index.php?option=com_content&amp;task=view&amp;id=2005&amp;Itemid=66</a></span><br /><br /><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/536028505499887975-6311271595636845363?l=ldunham.blogspot.com\" width=\"1\" /></div>", "summary": "<span class=\"Apple-style-span\" style=\"background-color: white; font-family: arial, sans-serif; font-size: 13px; line-height: 18px;\">my god...&nbsp;</span><span class=\"Apple-style-span\" style=\"background-color: white; font-family: arial, sans-serif; font-size: 13px; line-height: 18px;\"><a class=\"ot-a", "id": "tag:blogger.com,1999:blog-536028505499887975.post-6311271595636845363", "categories": [], "metadata": {"guid": "7b010c80-b5ff-4b2d-9d7e-540ad79b118c", "likes": 0, "is_published": false}}, {"author": "Dru Sellers", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/sOzEBKsv6DI/", "title": "Thoughts on MassTransit on other languages", "datetime": "2011-08-21T15:44:32", "html": "<p>This weekend I sat in another nodejs talk, I found myself thinking again about how I would implement mass transit in other languages; specifically those that are not statically typed. The typical use of masstransit in .net looks like this.</p>\n<pre class=\"brush: csharp; title: ; notranslate\">\nbus.Subscribe&lt;Ping&gt;(msg =&gt;\n{\n    // do stuff with the ping message\n});\n</pre>\n<p>What this does is instruct the bus to subscribe to the message named &#8216;Ping&#8217; and when that message arrives it then passes it to the handler (that&#8217;s the anonymous function). Because .Net is both statically and strongly typed I know that they want a ping message, just by looking at the type name. MassTransit also has a bunch of code to handle routing that is also influenced on the type of the message. But in JavaScript I don&#8217;t have that luxury in the same way. \u00a0in javascript you might say:</p>\n<pre class=\"brush: jscript; title: ; notranslate\">\nbus.subscribe('ping', function(msg) {\n\n/* do stuff */\n\n});\n</pre>\n<p>So we don&#8217;t have a type name to key off of, only a string name. As someone that has learned to use every last scrap of metadata in my programming language its very bizarre to switch to a language that has so much LESS metadata available to me. I could try to improve that a bit with a constant so it would look like</p>\n<pre class=\"brush: jscript; title: ; notranslate\">\nbus.subscribe(MessageNames.ping, function(msg) {\n\n/* do stuff */\n\n});\n</pre>\n<p>Which does feel better, but its weird to me that its not as &#8216;tight&#8217; as the .net experience. But then again, that is the whole point of dynamic languages, a dynamic environment.</p>\n<p>The more that I ponder on it, the more I wonder if its just that I don&#8217;t have the patterns of thought necessary to structure large applications in non-static languages. what i need is a new way to derive the &#8216;name&#8217; of the message in JavaScript. I am not content with the simplistic &#8216;string&#8217; approach. I wonder if I can also apply the powerful concept of object scoping to mass transit in JS in the same fashion that we do in the .net version as well. I should be able to, there is an amazing amount of object scoping in the best practices of JS.</p>\n<pre class=\"brush: jscript; title: ; notranslate\">\n//module pattern\n\n(function(global, bus) {\n    //could auto register handlers using a known convention\n    bus.loadFrom(global);\n    bus.subscribe('msg name', function (msg) {\n    }); // for one offs\n})(window, busInstance);\n</pre>\n<p>Ok, I like that quite a bit. Not sure if the global is needed or not. I wonder what that would look like in CoffeeScript (tries for a bit and falls on face, must try later). I wonder if I could then do some magic around require.js or some other dependency resolver to complete the magic. Hmmm\u2026.</p>\n<p>Overall I am much happier now. I am starting to see how I could use javascript in much the same fashion, I have identified some patterns of use that I would like to attack and better understand around versioning as well. Of course a lot of this is just academic for me, I still need a real problem to solve.</p>\n<p>Happy Sunday</p>\n<p>-d</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/sOzEBKsv6DI\" width=\"1\" />", "summary": "This weekend I sat in another nodejs talk, I found myself thinking again about how I would implement mass transit in other languages; specifically those that are not statically typed. The typical use of masstransit in .net looks like this.&#160;&#8230; <a href=\"http://codebetter.com/drusellers/2011/", "id": "http://codebetter.com/drusellers/?p=150", "categories": [], "metadata": {"guid": "f3219497-f350-4951-9562-6d0d7850794b", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/08/21/update/", "title": "Update", "datetime": "2011-08-21T14:37:36", "html": "<p>It&#8217;s been a while since the last post&#8230; I&#8217;m currently working on Gavit, writing a longish MetaSL related tutorial and another one for a FilterForge filter I&#8217;ve just finished. I hope I&#8217;ll be able to post something a bit more interesting in the next few weeks.<!-- PHP 5.x --></p>", "summary": "It&#8217;s been a while since the last post&#8230; I&#8217;m currently working on Gavit, writing a longish MetaSL related tutorial and another one for a FilterForge filter I&#8217;ve just finished. I hope I&#8217;ll be able to post something a bit more interesting in the next few weeks.", "id": "http://www.zspline.net/blog/?p=1456", "categories": [], "metadata": {"guid": "bd272877-f20a-4495-810b-f33a50e5e108", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/20/jeffs-rio-comparison-reel-tims-letter-to-andy-serkis/", "title": "Jeff\u2019s Rio Comparison Reel & Tim\u2019s Letter to Andy Serkis", "datetime": "2011-08-20T21:11:21", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\"clear: both; height: 3px; width: 100%;\"></div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"></a><a class=\"shareaholic-googleplusone\"></a></div><div style=\"clear: both; height: 3px; width: 100%;\"></div><!-- End Shareaholic LikeButtonSetTop --><p><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/Rio-2127.jpg\" rel=\"lightbox[2805]\"><img alt=\"\" class=\"aligncenter size-medium wp-image-2815\" height=\"225\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/Rio-2127-300x225.jpg\" title=\"Rio-2127\" width=\"300\" /></a></p>\n<p>A fellow classmate from a while back, Jeff Gabor, has been putting up these really interesting reels that exhibit the capturing of a performance of an animator and translating that to a character.\u00a0 We in the animation biz like to call that animation.\u00a0 Tried and true, it&#8217;s the best solution there is to getting characters full of life!</p>\n<p>use password: &#8220;education&#8221;</p>\n<p></p>\n<p>On a serious note, take a look at this post<del></del> (link below)\u00a0 challenging Andy Serkis&#8217; statements that actors deserve Academy recognition at the same time completely disregarding the role of the animation team it takes to make a character lifelike and engaging.\u00a0 While I think this shouldn&#8217;t be put squarely on Andy&#8217;s shoulders, He being the mocap spokesperson and Weta both definitely should have something to say about their actions most recently displayed in a making of video that completely neglects to have any footage about animators working hard to translate and polish the performance onto the digital character.</p>\n<p>They must have some highly pissed animators working for them. It&#8217;s also stirring up emotions of other animators who are or who have been in the same position. \u00a0 I know how it feels as an animator being left out of credits and getting no recognition working at Image Metrics, again a production run completely as if the software was doing all the work.</p>\n<p>Be sure to take a look at the video half-way through <a href=\"http://bit.ly/q7YHXY\" target=\"_blank\" title=\"Andy Serkis open letter\">Tim&#8217;s post</a>.</p>\n<div class=\"shr-publisher-2805\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "A fellow classmate from a while back, Jeff Gabor, has been putting up these really interesting reels that exhibit the capturing of a performance of an animator and translating that to a character.\u00a0 We in the animation biz like to call that animation.\u00a0 Tried and true, it&#8217;s the best solution the", "id": "http://www.jonasavrin.com/?p=2805", "categories": [], "metadata": {"guid": "fc276835-67a1-4f13-8302-cd67a9df4288", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=387&utm_source=rss&utm_medium=rss&utm_campaign=saturday-night-sketch-fkik-simultaneous-chain", "title": "Saturday night sketch: FK+IK Simultaneous Chain", "datetime": "2011-08-20T13:28:37", "html": "<p>To prove the technique described on the last post I built a little thing: a couple of bones with FK and IK behaviour at the same time. It&#8217;s just a quick sketch based on one of the videos from <a href=\"http://www.toonkit-studio.com/\" target=\"_blank\">ToonKit</a>. It could be developed further to make it animation friendly since it&#8217;s a rough prototype. But let me explain you how I did this&#8230;</p>\n<p style=\"text-align: center;\"></p>\n<p><span id=\"more-387\"></span><br />\nOne of the videos from ToonKit features this behaviour, and from what it&#8217;s shown I reckon the IK control is purely used to drive the rotation of the bones. Well, this is how an IK system actually behaves. But rather than controlling/overwriting the rotation of the bones by using an IK Solver, we could do the whole calculations &#8216;by hand&#8217; and then tell the EulerXYZ controller of both bones (just the Z Rotation in this case) how many degrees they should rotate.</p>\n<p>After doing some research, I found a complete mathematical explanation on how an IK system works <a href=\"http://www.ryanjuckett.com/programming/animation/16-analytic-two-bone-ik-in-2d?showall=1\" target=\"_blank\">here</a>. As one might expect, everything is based on trigonometry. I really recommend you to follow Ryan Juckett&#8217;s explanations here to try to understand&#8230; which I barely did since I wanted to finish this sketch before going to bed, so I went straight to the code he provides and translated it to MAXScript. I know, I&#8217;m going to hell for this <img alt=\":-)\" class=\"wp-smiley\" src=\"http://somosposmodernos.com/blog/wp-includes/images/smilies/icon_smile.gif\" /> </p>\n<pre class=\"brush: jscript; title: ; notranslate\">\nfn clampValue value upperLimit lowerLimit =\n(\n\tif value &gt; upperLimit then return upperLimit else\n\t(\n\t\tif value &lt; lowerLimit then return lowerLimit else\n\t\t(\n\t\t\treturn value\n\t\t)\n\t)\n)\n\nfn CalcIK_2D_TwoBoneAnalytic length1 length2 targetX targetY=\n(\n\t-- variables\n\tlocal angle1 -- angle of bone 1\n\tlocal angle2 -- angle of bone 2\n\tlocal solvePosAngle2 = true -- solve for positive angle 2 instead of negative angle 2\n\tlocal epsilon = 0.0001 -- used to prevent division by small numbers\n\n\tlocal foundValidSolution = true\n\tlocal targetDistSqr = (targetX*targetX + targetY*targetY)\n\n   -- Compute a new value for angle2 along with its cosine\n    local sinAngle2\n    local cosAngle2\n\n    local cosAngle2_denom = 2*length1*length2;\n    if cosAngle2_denom &gt; epsilon then\n\t(\n        cosAngle2 =  (targetDistSqr - length1*length1 - length2*length2)/(cosAngle2_denom)\n\n        -- if our result is not in the legal cosine range, we can not find a legal solution for the target\n        if( (cosAngle2 &lt; -1.0) or (cosAngle2 &gt; 1.0) ) do foundValidSolution = false\n\n        -- clamp our value into range so we can calculate the best solution when there are no valid ones\n        cosAngle2 = clampValue cosAngle2 1 -1\n\n        --compute a new value for angle2\n        angle2 = acos cosAngle2\t\t\n\n        -- adjust for the desired bend direction\n        if solvePosAngle2 do\n\t\t(\n            angle2 = -angle2\n\t\t)\n\n        -- compute the sine of our angle\n        sinAngle2 = Sin angle2\n    )\n    else\n    (\n        --At leaset one of the bones had a zero length. This means our\n        --solvable domain is a circle around the origin with a radius\n        --equal to the sum of our bone lengths.\n        local totalLenSqr = (length1 + length2) * (length1 + length2)\n        if targetDistSqr &lt; (totalLenSqr-epsilon) or targetDistSqr &gt; (totalLenSqr+epsilon) do foundValidSolution = false\n    )\n\n    -- Compute the value of angle1 based on the sine and cosine of angle2\n    local triAdjacent = length1 + length2*cosAngle2\n    local triOpposite = length2*sinAngle2\n\n    local tanY = targetY*triAdjacent - targetX*triOpposite\n    local tanX = targetX*triAdjacent + targetY*triOpposite\n\n    -- Note that it is safe to call Atan2(0,0) which will happen if targetX and targetY are zero\n    angle1 = atan2 tanY tanX\n\treturn #(angle1, angle2)\n   --return foundValidSolution\n)\n\nvalues = CalcIK_2D_TwoBoneAnalytic $Bone01.length $Bone02.length $Point01.pos.x -$Point01.pos.z \n\nif selection[1] == GetNodeByName(&quot;Point01&quot;) then\n(\n\t$Bone01.rotation.controller[1].controller.y_rotation = values[1]\n\t$Bone02.rotation.controller[1].controller.y_rotation = values[2]\n\t$Point01.position = $Bone03.position\n)\nelse\n(\n\t$Point01.position = $Bone03.position\n-- \t$Bone01.rotation.controller[1].controller.y_rotation = values[1]\n-- \t$Bone02.rotation.controller[1].controller.y_rotation = values[2]\n)\n</pre>\n<p>You can try this code on a scene with 2 bones and 1 point. Each time you execute it the whole thing will align. So we need something to run it one time and another and another&#8230; without evaluating it on the MAXScript Editor. So now it&#8217;s the time to use the info provided on the previous post. Create another object (the red point on the video), throw a Script Controller on some property you do not plan to use (Box), and paste that code, leaving the 0 as the last line. And voil\u00e0!</p>", "summary": "To prove the technique described on the last post I built a little thing: a couple of bones with FK and IK behaviour at the same time. It&#8217;s just a quick sketch based on one of the videos from ToonKit. It could be developed further to make it animation friendly since it&#8217;s a rough prototyp", "id": "http://somosposmodernos.com/blog/?p=387", "categories": [], "metadata": {"guid": "a7d64fd2-e1c9-441b-9fcb-1c3fe8d1ae8c", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=380&utm_source=rss&utm_medium=rss&utm_campaign=fake-callbacks-in-3dsmax", "title": "\u2018Fake\u2019 callbacks in 3DSMAX", "datetime": "2011-08-20T02:33:28", "html": "<p>I haven&#8217;t used callbacks a lot. I guess I barely needed them, but for advanced behaviours they are amazing. According to MAXScript help&#8230;</p>\n<blockquote><p><strong>Callbacks</strong> are used to register with 3ds Max functions that are called when specific events occur within 3ds Max. <strong>Events </strong>that can be monitored are changes to the time slider time and redrawing of viewports. Callbacks are not stored in a 3ds Max scene.</p></blockquote>\n<p>So here I present you an easy way to have a piece of code running without digging too much into complex stuff&#8230;</p>\n<p><span id=\"more-380\"></span></p>\n<p>In the same way having a lot of callbacks could make your scene refresh slower, having a lot of these &#8216;fake&#8217; callbacks could make MAX behave the same way. So be careful when using this &#8216;perpetual&#8217; behaviours.</p>\n<p>Basically the trick consists on executing some code inside a <strong>Script Controller</strong>, and then returning something according to the property that holds the controller. I&#8217;ve used external objects that are not related to the rig to run some calculations that modify it. Just create an object to hold the script, let&#8217;s say a <em>Point</em>. Assign a Script Controller to any property, for example, <em>Box</em>. That parameter can be True (returns 1) or False (returns 0). If you open the controller it&#8217;s quite probable that says 0. Your last line always has to return the type of value that property is expecting to. If you set this controller on XPosition, it will expect a float. If you put it on a Diffuse channel of a material, it will expect a vector. In this case, it will ask for a boolean. </p>\n<p>But before that line you can write whatever you want. For example, a function to change the wirecolor of an object depending of the distance between it and another one. And that&#8217;s nice, because the wirecolor property is not animatable, so you are not able to set a controller on it! And that&#8217;s brought to you by the magic of Script Controllers, which evaluates non-stop.</p>\n<p>This widens your possibilities when building a rig. I tend to use this to prototype quick ideas. And to sum up, the main point is<strong> you can use external objects to continuously run code that affects a system</strong>.</p>", "summary": "I haven&#8217;t used callbacks a lot. I guess I barely needed them, but for advanced behaviours they are amazing. According to MAXScript help&#8230; Callbacks are used to register with 3ds Max functions that are called when specific events occur within 3ds Max. Events that can be monitored are chang", "id": "http://somosposmodernos.com/blog/?p=380", "categories": [], "metadata": {"guid": "7492dcf2-97a3-4279-800c-6941e51ce1ea", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/18/socal-surf-spots-vol-1-staircases/", "title": "SoCal Surf Spots Vol 1: Staircases", "datetime": "2011-08-19T02:01:48", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\"clear: both; height: 3px; width: 100%;\"></div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"></a><a class=\"shareaholic-googleplusone\"></a></div><div style=\"clear: both; height: 3px; width: 100%;\"></div><!-- End Shareaholic LikeButtonSetTop --><p></p>\n<div class=\"shr-publisher-2798\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "&#038;nbsp", "id": "http://www.jonasavrin.com/?p=2798", "categories": [], "metadata": {"guid": "c356f1b9-e936-4abb-90c2-29f2b6554106", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/18/hephaestus-animated-short-film-work/", "title": "Hephaestus Animated Short Film Work", "datetime": "2011-08-18T20:53:22", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\"clear: both; height: 3px; width: 100%;\"></div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"></a><a class=\"shareaholic-googleplusone\"></a></div><div style=\"clear: both; height: 3px; width: 100%;\"></div><!-- End Shareaholic LikeButtonSetTop --><p><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/header2.jpg\" rel=\"lightbox[2788]\"><img alt=\"hephaestus header\" class=\"aligncenter size-medium wp-image-2790\" height=\"83\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/header2-300x63.jpg\" title=\"header2\" width=\"400\" /></a></p>\n<p>From Director/Animator Alex Curtis comes his debut animated short that I luckily got to work on as a freelance pro bono character rigger/td.\u00a0 Here&#8217;s a work in progress reel and Kaylee the character I rigged and supervised rigging the hair and goggles with the help of my friend Suchan.\u00a0 Keep in mind this demo is months old at this point and a newer one is out that is password protected so I cannot share until later.</p>\n<p style=\"text-align: center;\"></p>\n<div class=\"wp-caption aligncenter\" id=\"attachment_2803\" style=\"width: 310px;\"><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/KayleePose03.png\" rel=\"lightbox[2788]\"><img alt=\"\" class=\"size-medium wp-image-2803\" height=\"291\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/KayleePose03-300x291.png\" title=\"KayleePose03\" width=\"300\" /></a><p class=\"wp-caption-text\">Kaylee showin' off her moves</p></div>\n<p style=\"text-align: left;\">Stay tuned!\u00a0 The final is looking good!\u00a0 Should be any day now&#8230;</p>\n<div class=\"shr-publisher-2788\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "From Director/Animator Alex Curtis comes his debut animated short that I luckily got to work on as a freelance pro bono character rigger/td.\u00a0 Here&#8217;s a work in progress reel and Kaylee the character I rigged and supervised rigging the hair and goggles with the help of my friend Suchan.\u00a0 Keep in", "id": "http://www.jonasavrin.com/?p=2788", "categories": [], "metadata": {"guid": "fdd7323e-9975-4a87-879a-73ba9acda112", "likes": 0, "is_published": false}}, {"author": "ldunham (noreply@blogger.com)", "url": "http://ldunham.blogspot.com/2011/08/updating.html", "title": "Updating...", "datetime": "2011-08-18T20:19:14.815000", "html": "phew... far too much has happened to post it all but...<br /><br />Few weeks into new job at Red Wire Media, down Cardiff Bay and I haven't stopped :)<br /><br />Started with a compact animation toolset, then onto rigging the main characters (with some lovely work on the faces, even if i do say so myself), now onto setting up the maya and deadline to shotgun api, which is&nbsp;surprisingly&nbsp;easy actually. Just abit more practice on a dummy project and should be up and running soon.<br /><br />Got so many scripts to upload at some point, so started with a modified version of David Lightbown's 2006 \"dlUtils_Profiler.mel\" (<span class=\"Apple-style-span\" style=\"background-color: white; color: #202020; font-family: 'Droid Sans', arial, sans-serif; font-size: 13px;\"><a href=\"http://www.davidlightbown.com/\" style=\"color: #67753a;\" target=\"_blank\">www.davidlightbown.com</a></span>) which allows you to compare the difference in speed between two mel scripts (example used, compares difference in speed between multiplication and division in maya - multiplication is about 30% faster from what I remember - so instead of using a /2, use * .5 instead! - added bonus, use to avoid / by 0 errors!)<br />link:<br /><a href=\"http://www.creativecrash.com/maya/downloads/scripts-plugins/utility-external/c/mel-python-speed-profiler\">http://www.creativecrash.com/maya/downloads/scripts-plugins/utility-external/c/mel-python-speed-profiler</a><br /><br />I use it fairly often, from comparing simple procs to deciding the best/quickest file management solution, and even started to use it to compare the difference in speed between connected multiple nodes, constraints and expressions (I do also use the fps, but it can vary too much).<br /><br /><br /><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/536028505499887975-5238660424862993551?l=ldunham.blogspot.com\" width=\"1\" /></div>", "summary": "phew... far too much has happened to post it all but...<br /><br />Few weeks into new job at Red Wire Media, down Cardiff Bay and I haven't stopped :)<br /><br />Started with a compact animation toolset, then onto rigging the main characters (with some lovely work on the faces, even if i do say so m", "id": "tag:blogger.com,1999:blog-536028505499887975.post-5238660424862993551", "categories": [], "metadata": {"guid": "406bf533-8b77-47f9-88e5-6ca59f244d79", "likes": 0, "is_published": false}}, {"author": "James", "url": "http://www.d3coy.com/?p=215", "title": "Crimson Alliance almost out", "datetime": "2011-08-18T05:36:53", "html": "<p>Well, things are cruising along at Certain Affinity. I recently finished working on our latest title, <a href=\"http://www.crimsonalliance.com/\" target=\"_blank\">Crimson Alliance</a>, which comes to XBLA on 9/7. Go check it out. It&#8217;s a fun, Gauntlet-type adventure through a brand new fantasy world. My part on the title was chiefly graphics and particles, and I&#8217;m pretty pleased with what we were able to do, given our constraints.</p>\n<p>I don&#8217;t think I can ever completely remove myself from creating art or writing code entirely, although sometimes I wish I could just to keep things simpler&#8230; I was deeply involved in creating particle effects as well as hacking on tools and implementing various systems, like decal generation, threaded particles, and various editors. Oh yea, I&#8217;m also growing a crazy mustache:</p>\n<p><img alt=\"\" class=\"softshadow\" height=\"280\" src=\"http://www.d3coy.com/wp-content/uploads/2011/08/Jamberly-300x280.jpg\" style=\"float: right; margin-left: 1em; margin-bottom: 1em;\" title=\"Jamberly\" width=\"300\" /></p>\n<p>This picture is a little old, so the &#8216;stache is actually a little bigger than this, now. I never thought I&#8217;d enjoy being a &#8220;facial hair enthusiast,&#8221; as I&#8217;ve heard myself called, but it&#8217;s actually a kick-ass thing to wear on your face. It&#8217;s also a fun social experiment to see how people treat you differently depending on how you look. Most of the time people greet me with pleased excitement, but there are some who seemingly scorn mustaches and who sometimes seem to feel embarrassed for me (aww&#8230;). You know, this must be similar to the way normal people feel when they go out dressed like a bum, just to see how people&#8217;s perceptions are altered. Wait, is it good or bad that growing a mustache is like pretending to be a bum? Ah, well, fuck it.</p>\n<p>Anyways, Crimson Alliance. The game&#8217;s pretty neat, and I&#8217;m excited to see public reception that is so overwhelmingly positive. It&#8217;ll be fun to watch it release.</p>\n<p>In closing, I&#8217;ve been moved off of that project onto a larger, unannounced title of awesomeness. I can&#8217;t talk about it, but suffice it to say that I&#8217;m very happy and hard at work.</p>\n<p>Next time, I want to tell you about a little game I released a couple of months ago for the iPhone/Android/iPad: <a href=\"http://itunes.apple.com/us/app/jangle/id437572740?mt=8\" target=\"_blank\">Jangle</a>!</p>", "summary": "Well, things are cruising along at Certain Affinity. I recently finished working on our latest title, Crimson Alliance, which comes to XBLA on 9/7. Go check it out. It&#8217;s a fun, Gauntlet-type adventure through a brand new fantasy world. My part on the title was chiefly graphics and particles, a", "id": "http://www.d3coy.com/?p=215", "categories": [], "metadata": {"guid": "5a214fa6-153c-4dda-a2e1-e2a9fe9f57d8", "likes": 0, "is_published": false}}]"
09-10 23:30 SocketClient INFO     Returning(as str): '[{"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/08/29/new-tutorial-texturing-with-metasl-in-3dsma/", "title": "New tutorial: Texturing with MetaSL in 3dsMax", "datetime": "2011-08-29T14:21:59", "html": "<p>I&#8217;ve been trying to establish a reliable MetaSL based texturing workflow since 3dsMax 2010 but only recently got close to a practical solution. This tutorial is the fruit of that journey.</p>\\n<div class=\\"caption \\"><span class=\\"caption-title\\">MetaSL based texturing</span><a href=\\"http://www.zspline.net/blog/metasl-based-texturing-part-i/\\">Part I</a>: Overview<br />\\n<a href=\\"http://www.zspline.net/blog/metasl-based-texturing-part-ii/\\">Part II</a>: A basic example<br />\\n<a href=\\"http://www.zspline.net/blog/metasl-based-texturing-part-iii/\\">Part III</a>: Baking<br />\\n<a href=\\"http://www.zspline.net/blog/metasl-based-texturing-part-iv/\\">Part IV</a>: Displacement<br />\\n<a href=\\"http://www.zspline.net/blog/metasl-based-texturing-part-v/\\">Part V</a>: An advanced example<br />\\n<a href=\\"http://www.zspline.net/blog/metasl-based-texturing-part-vi/\\">Part VI</a>: Tips and tricks<br />\\n<a href=\\"http://www.zspline.net/blog/metasl-based-texturing-part-vii/\\">Part VII</a>: Known issues<br />\\n<a href=\\"http://www.zspline.net/blog/metasl-based-texturing-part-viii/\\">Part VIII</a>: Node reference</div>\\n<p>If you find problems or solutions, have suggestions or opinions, please <a href=\\"http://www.zspline.net/blog/contact/\\" target=\\"_blank\\">let me know</a>.</p>\\n<p><em>UPDATE: I&#8217;ve just fixed the download links in part I. Sorry for the inconvenience.</em><!-- PHP 5.x --></p>", "summary": "I&#8217;ve been trying to establish a reliable MetaSL based texturing workflow since 3dsMax 2010 but only recently got close to a practical solution. This tutorial is the fruit of that journey. If you find problems or solutions, have suggestions or opinions, please let me know. UPDATE: I&#8217;ve ju", "id": "http://www.zspline.net/blog/?p=1477", "categories": [], "metadata": {"guid": "dafe7410-f10a-4760-a4d7-2efe95e1d18b", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/9466133800", "title": "Found this image while I was looking through my photos the other...", "datetime": "2011-08-27T15:28:00", "html": "<img src=\\"http://29.media.tumblr.com/tumblr_lqlq39f7Dj1qgg0uyo1_500.png\\" /><br /> Unedited<br /><br /> <img src=\\"http://24.media.tumblr.com/tumblr_lqlq39f7Dj1qgg0uyo2_500.png\\" /><br /> PS magic!<br /><br /> <p>Found this image while I was looking through my photos the other day. \\u00a0Wanted to stitch it together and post it up. \\u00a0First one is just placed side by side, the second has softened edges and a level adjustment. \\u00a0Took all of 10 minutes. hehe. \\u00a0Wish it was higher res, but\\u2026this is what I found. \\u00a0I could have spent more time on the edges, still visible, but yea\\u2026</p>", "summary": "<img src=\\"http://29.media.tumblr.com/tumblr_lqlq39f7Dj1qgg0uyo1_500.png\\" /><br /> Unedited<br /><br /> <img src=\\"http://24.media.tumblr.com/tumblr_lqlq39f7Dj1qgg0uyo2_500.png\\" /><br /> PS magic!<br /><br /> <p>Found this image while I was looking through my photos the other day. \\u00a0Wanted to stitch it", "id": "http://shawnkirsch.tumblr.com/post/9466133800", "categories": [], "metadata": {"guid": "40844ef7-0bce-4a23-9dd3-20a648b7debf", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=760", "title": "The Tech Artist\\u2019s Creed", "datetime": "2011-08-26T22:27:46", "html": "<p>Repost of my most recent from altdevblogaday:\\u00a0<a href=\\"http://altdevblogaday.com/2011/08/26/the-tech-artists-creed\\">http://altdevblogaday.com/2011/08/26/the-tech-artists-creed</a></p>\\n<hr />\\n<p>Last month we started a <a href=\\"http://tech-artists.org/forum/showthread.php?t=1819\\">thread</a> on <a href=\\"http://www.tech-artists.org\\">tech-artists.org</a> about creating a tech artist&#8217;s creed. \\u00a0After several weeks of back and forth, we finally came up with something we could all agree upon. \\u00a0Here it is:</p>\\n<p style=\\"padding-left: 30px;\\">I am a Tech Artist,<br />\\nEvery day I will teach, learn, and assist,<br />\\nAnd build bridges between teams, people, and ideas.<br />\\nI will observe without interrupting and mediate without judging.<br />\\nI may not give exactly what you ask for,<br />\\nBut I will provide what you need.</p>\\n<p style=\\"padding-left: 30px;\\">I am a Tech Artist,<br />\\nI will approach every problem with mind and ears open<br />\\nTo my colleagues and peers across the industry.<br />\\nI will solve the problems of today,<br />\\nImprove the solutions of yesterday,<br />\\nAnd design the answers of tomorrow.</p>\\n<p style=\\"padding-left: 30px;\\">I am a Tech Artist,<br />\\nI am a leader for my team,<br />\\nAnd a standard-bearer for my community.<br />\\nI will do what needs to be done,<br />\\nI will advocate for what should be done,<br />\\nAnd my decisions will be in the best interest of the production.</p>\\n<p>My goal for the creed was to have the community come up with a code of ethics and standards for tech art in general. \\u00a0We are a diverse group and there are as many specialties as there are TA&#8217;s. \\u00a0So it was necessary to create something widely applicable, but still meaningful.</p>\\n<p>My hope is that we can hold ourselves to, and judge our actions against, this creed. \\u00a0I think it says everything vital about what a tech artist should strive for. \\u00a0I know I have not always lived up to it, and I want my fellow TA&#8217;s to call me out when I do not. \\u00a0I expect that other tech artists will share that sentiment. \\u00a0I want to keep pushing our craft forward, bettering ourselves and our community, and I think this creed embodies that.</p>\\n<p>So, a short post today because so much brain power and effort went into those words above. \\u00a0They are not mine alone (or even primarily), they are those of the tech-artists.org community which represents and advocates for the tech art community at large. \\u00a0I am just fortunate enough to have the honor and privilege of posting the creed here, on behalf of an amazing and incredibly creative group of people.</p>\\n<p>So read it over, tell me what you think, and if you have something to suggest, suggest away- the creed should continually grow and evolve just as our role does.</p>", "summary": "Repost of my most recent from altdevblogaday:\\u00a0http://altdevblogaday.com/2011/08/26/the-tech-artists-creed Last month we started a thread on tech-artists.org about creating a tech artist&#8217;s creed. \\u00a0After several weeks of back and forth, we finally came up with something we could all agree upon. ", "id": "http://www.robg3d.com/?p=760", "categories": [], "metadata": {"guid": "437c6afe-01ba-4770-a740-c24d4bda8a11", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/23/massive_sunday_pipeline_vray_shader_library/", "title": "Massive Sunday Pipeline VRay Shader Library", "datetime": "2011-08-24T04:57:38", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><div class=\\"shareaholic-like-buttonset\\" style=\\"float: right; height: 30px;\\"><a class=\\"shareaholic-fblike\\"></a><a class=\\"shareaholic-googleplusone\\"></a></div><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><!-- End Shareaholic LikeButtonSetTop --><p><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/vray.png\\" rel=\\"lightbox[2821]\\"><img alt=\\"\\" class=\\"alignleft size-full wp-image-2830\\" height=\\"128\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/vray.png\\" title=\\"vray\\" width=\\"99\\" /></a>I took the VRay <a href=\\"http://bit.ly/mPEdzB\\" target=\\"_blank\\" title=\\"Latest FBI shader lib mirror\\">shader library</a> from what\\u00a0Oliver Markowski, creator of <a href=\\"http://bitly.com/qwO73t?r=bb\\" target=\\"_blank\\" title=\\"FBI Shader Lib\\">Full Blown Images</a>, compiled and married it with the shader warehouse resources provided by <a href=\\"http://bitly.com/oa00nV?r=bb\\" target=\\"_blank\\" title=\\"Sunday shader lib\\">Sunday Pipeline</a>, took out this and that, renamed, dusted off, and reorganized everything.\\u00a0 All assets were renamed according to strict naming convention to minimize confusion and to facilitate faster searching. \\u00a0All this on my free time, which I&#8217;ve had quite a lot the past few days. \\u00a0Well, go ahead and grab it because it&#8217;s quite a library to have in your arsenal. \\u00a0It&#8217;s all free to use.</p>\\n<p>Sunday Pipeline is the way to go.\\u00a0 If you haven&#8217;t installed it yet, head over there, read up on it, and <a href=\\"http://bitly.com/r5CHlm?r=bb\\" target=\\"_blank\\" title=\\"Sunday Pipeline Public\\">give it a try</a>.\\u00a0 They are updating it with new scripts often.\\u00a0 It&#8217;s a simplified asset manager that houses everything from shaders to geometry to a script repo, and best of all, programmed in Python.</p>\\n<p>I&#8217;ll be updating this .rar from time to time now with VRay shaders from the internet and what I create or use on my own.</p>\\n<p><a href=\\"http://bitly.com/nmLhY8?r=bb\\" target=\\"_blank\\" title=\\"Sunday Pipeline Warehouse hosted by CGHijinks\\">Sunday Pipeline Warehouse hosted by CGHijinks</a></p>\\n<p><a href=\\"http://bitly.com/rkPO70\\" title=\\"bit.ly bundle\\">All links in this post</a><br />\\n&nbsp;</p>\\n<div class=\\"wp-caption alignleft\\" id=\\"attachment_2824\\" style=\\"width: 205px;\\"><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/warehouseBrowser.png\\" rel=\\"lightbox[2821]\\"><img alt=\\"Warehouse Browser\\" class=\\"size-medium wp-image-2824 \\" height=\\"300\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/warehouseBrowser-195x300.png\\" title=\\"Warehouse Browser\\" width=\\"195\\" /></a><p class=\\"wp-caption-text\\">Browser for the Asset Library</p></div>\\n<div class=\\"wp-caption alignleft\\" id=\\"attachment_2825\\" style=\\"width: 310px;\\"><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/warehouseCreate.png\\" rel=\\"lightbox[2821]\\"><img alt=\\"Warehouse Create UI\\" class=\\"size-medium wp-image-2825\\" height=\\"295\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/warehouseCreate-300x295.png\\" title=\\"Warehouse Create UI\\" width=\\"300\\" /></a><p class=\\"wp-caption-text\\">Add and Remove Assets</p></div>\\n<div class=\\"wp-caption alignnone\\" id=\\"attachment_2823\\" style=\\"width: 310px;\\"><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/Strawberry-Jam.png\\" rel=\\"lightbox[2821]\\"><img alt=\\"Strawberry Jam\\" class=\\"size-medium wp-image-2823 \\" height=\\"300\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/Strawberry-Jam-300x300.png\\" title=\\"Strawberry Jam\\" width=\\"300\\" /></a><p class=\\"wp-caption-text\\">Create/Customize/Get Crazy!</p></div>\\n<h2><span id=\\"more-2821\\"></span></h2>\\n<p>&nbsp;</p>\\n<h2>List of package contents:</h2>\\n<hr />\\n(This list is subject to change)</p>\\n<p>Directory of \\\\warehouse\\\\V-Ray Shaders</p>\\n<p>08/26/2011\\u00a0 10:29 AM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 .<br />\\n08/26/2011\\u00a0 10:29 AM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 ..<br />\\n08/23/2011\\u00a0 10:16 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Metal<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Glass<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Liquid<br />\\n08/14/2011\\u00a0 01:02 AM\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 6,148 .DS_Store<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Wood<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Organic<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Flooring<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Car Paint<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Textile<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Leather<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Plastic<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Walls<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Flora<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Stone<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Ice<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Fire<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Dirt<br />\\n08/23/2011\\u00a0 10:54 AM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Toon<br />\\n08/23/2011\\u00a0 01:51 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Basic<br />\\n08/23/2011\\u00a0 02:33 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Light<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Ceramic<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Pavement<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Concrete<br />\\n08/23/2011\\u00a0 10:17 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray Brick</p>\\n<p>Directory of \\\\warehouse\\\\Scenes</p>\\n<p>08/26/2011\\u00a0 10:30 AM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 .<br />\\n08/26/2011\\u00a0 10:30 AM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 ..<br />\\n08/14/2011\\u00a0 01:03 AM\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 6,148 .DS_Store<br />\\n08/19/2011\\u00a0 07:28 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 V-Ray<br />\\n08/19/2011\\u00a0 08:14 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 IR-Scan<br />\\n08/21/2011\\u00a0 10:23 PM\\u00a0\\u00a0\\u00a0 &lt;DIR&gt;\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0 Light Setup</p>\\n<p>&nbsp;</p>\\n<h1>Check Here for Updates!</h1>\\n<hr />\\n&nbsp;</p>\\n<h2>Texture Library Update:</h2>\\n<p>I&#8217;m providing a link to all the original textures (FBI_shaderLibrary only) that are now hosted by me.\\u00a0 The pipeline tool has a confirmed bug when it tries to export textures that go with the shaders.\\u00a0 You can also use the link provided earlier to download the original from the source, they are exactly the same as mine.\\u00a0 Please refer to the Chaos Group forum <a href=\\"http://bit.ly/r9xUCI\\" title=\\"FBI Shader Lib Thread\\">thread</a> for queries regarding FBI_shaderLibrary.</p>\\n<p>A lot of the shader resources that I posted in my library probably don&#8217;t have their associating textures so here you will find them all in one place so that you can fix the shaders yourself.\\u00a0 I will be updating my warehouse as the tools get fixed so there&#8217;s a chance that I could fix them all pretty soon.</p>\\n<p><a href=\\"http://bit.ly/mPEdzB\\" target=\\"_blank\\" title=\\"original textures hosted by source\\">source textures</a></p>\\n<p><a href=\\"http://bit.ly/mTlo5s\\" title=\\"textures hosted by cghijinks\\">my textures</a><br />\\n</p>\\n<h2>Quick Shader Library Update:</h2>\\n<p>Most of the shaders have been rebuilt with textures. I&#8217;m sharing them here:</p>\\n<p><a href=\\"http://bitly.com/o0GLQB\\" title=\\"Download Latest Shader Lib Version\\">Download my updated sunday warehouse with shader library here</a><br />\\nMore to come! Car Paint needs to be done along with most other glossy shaders. Almost there!</p>\\n<p>New version .4 of the 3DG SP tools was quietly rolled out today, it fixed the export textures on selected shader bug.  Still kinda unstable after long periods of use.</p>\\n<p></p>\\n<h2>Textures Fully Updated</h2>\\n<p>Textures have been fully integrated into the shader library for all FBI shaders.  Importing has been tested as well, but a few of the textures remain MIA so those will affect the renders.  It&#8217;ll only affect a couple of the very basic shaders like Dark Hardwood.</p>\\n<p>Good news!  3DG has officially signed-off on the shader resources as being Sunday Warehouse compliant and have featured a link to this post on their blog.</p>\\n<div class=\\"shr-publisher-2821\\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "I took the VRay shader library from what\\u00a0Oliver Markowski, creator of Full Blown Images, compiled and married it with the shader warehouse resources provided by Sunday Pipeline, took out this and that, renamed, dusted off, and reorganized everything.\\u00a0 All assets were renamed according to strict nami", "id": "http://www.jonasavrin.com/?p=2821", "categories": [], "metadata": {"guid": "e328670e-9b1f-4291-ad7f-b2d8e9983312", "likes": 0, "is_published": false}}, {"author": "Rigging Dojo", "url": "http://www.riggingDojo.com/2011/08/23/session-4-registration-and-rigging-dojo-live/", "title": "Session 4 registration and Rigging Dojo Live", "datetime": "2011-08-23T21:35:01", "html": "<h2>\\nSession 4 Registration open: Limited Time</h2>\\n<p>Registration\\u00a0 is open now for our final session this year.\\u00a0 There is a limited window of time we are accepting registrations so don&#8217;t delay.</p>\\n<div>Details: Session start -September 5th</div>\\n<div>Please complete the\\u00a0registration\\u00a0form by\\u00a0Wednesday August 31st at 11:59PM CST. \\u00a0Space is limited. \\u00a0Returning and pre-registered students will receive priority space.</p>\\n</div>\\n<div><em><strong>Click\\u00a0<a href=\\"http://www.riggingdojo.com/home/registration/\\" target=\\"_blank\\">here</a>\\u00a0to register now!</p>\\n<p></strong></em></div>\\n<div>We will send you terms of service and payment information once we close registration.</p>\\n</div>\\n<h2>Rigging Dojo Live Event with Austin Autodesk Animation User Group Association.</h2>\\n<p>Join us <strong>Tuesday, Aug. 30, 7:00 PM CST</strong>-as Rigging Dojo and AAUGA presents Dark Art of Animation Layers by Brad Clark.</p>\\n<div>\\n<p>The next AAUGA will be next Tuesday, Aug. 30, 6:30 pm at Mr. Tramps, 8565 Research Blvd. Austin, TX.<br />\\nBrad Clark will present on the Dark Art of Animation Layers.</p>\\n<p><a href=\\"http://3daustin.org/2011/08/22/aauga-meeting-3d-austin-august/\\">http://3daustin.org/2011/08/22/aauga-meeting-3d-austin-august/</a></p>\\n</div>\\n<div>Learn the how and why of adding animation layers to your animation workflow in Maya.Discover how to tame dense data and simplify the mixing of keyframe and motion capture data.Uncover the secrets of combining animation layers and constraints to create faster rigs and streamlined animation systems.</div>\\n<div>You can watch it live online or join us in person (if you are in Austin)\\u00a0 and we will post the recording in the event archive at a later date.</div>\\n<div><!-- Artiss Code Embed v1.5 | http://www.artiss.co.uk/artiss-code-embed -->\\n<div id=\\"vokle_embed_event_25477_container\\"></div><!-- End of Artiss Code Embed code -->\\n</div>\\n<p>&nbsp;</p>", "summary": "Session 4 Registration open: Limited Time Registration\\u00a0 is open now for our final session this year.\\u00a0 There is a limited window of time we are accepting registrations so don&#8217;t delay. Details: Session start -September 5th Please complete the\\u00a0registration\\u00a0form by\\u00a0Wednesday August 31st at 11:59PM", "id": "http://www.riggingDojo.com/?p=944", "categories": [], "metadata": {"guid": "1a6e5974-cfa6-41b6-b258-691b76d88cac", "likes": 0, "is_published": false}}, {"author": "ldunham (noreply@blogger.com)", "url": "http://ldunham.blogspot.com/2011/08/alembic.html", "title": "alembic", "datetime": "2011-08-23T08:36:36.762000", "html": "<span class=\\"Apple-style-span\\" style=\\"background-color: white; font-family: arial, sans-serif; font-size: 13px; line-height: 18px;\\">my god...&nbsp;</span><span class=\\"Apple-style-span\\" style=\\"background-color: white; font-family: arial, sans-serif; font-size: 13px; line-height: 18px;\\"><a class=\\"ot-anchor\\" href=\\"http://www.youtube.com/watch?v=I__MeR8jsFk&amp;feature=youtu.be\\" style=\\"color: #3366cc; cursor: pointer; text-decoration: none;\\">Alembic.mp4</a></span><br /><span class=\\"Apple-style-span\\" style=\\"background-color: white;\\"><span class=\\"Apple-style-span\\" style=\\"font-family: arial, sans-serif; font-size: x-small;\\"><span class=\\"Apple-style-span\\" style=\\"line-height: 18px;\\"><br /></span></span></span><br /><span class=\\"Apple-style-span\\" style=\\"background-color: white;\\"><span class=\\"Apple-style-span\\" style=\\"font-family: arial, sans-serif; font-size: x-small;\\"><span class=\\"Apple-style-span\\" style=\\"line-height: 18px;\\">good on houdini, would love autodesk to now use the alembic research, not just support, but proper&nbsp;</span></span></span><span class=\\"Apple-style-span\\" style=\\"background-color: white;\\"><span class=\\"Apple-style-span\\" style=\\"font-family: arial, sans-serif; font-size: x-small;\\"><span class=\\"Apple-style-span\\" style=\\"line-height: 18px;\\">integration, i really dont think they can afford not to...</span></span></span><br /><span class=\\"Apple-style-span\\" style=\\"background-color: white;\\"><span class=\\"Apple-style-span\\" style=\\"font-family: arial, sans-serif; font-size: x-small;\\"><span class=\\"Apple-style-span\\" style=\\"line-height: 18px;\\">just look at those speeds!!!&nbsp;</span></span></span><br /><br /><span class=\\"Apple-style-span\\" style=\\"font-family: arial, sans-serif; font-size: x-small;\\"><span class=\\"Apple-style-span\\" style=\\"line-height: 18px;\\"><br /></span></span><br /><span class=\\"Apple-style-span\\" style=\\"background-color: white; font-family: arial, sans-serif; font-size: 13px; line-height: 18px;\\"><a class=\\"ot-anchor\\" href=\\"http://www.sidefx.com/index.php?option=com_content&amp;task=view&amp;id=2005&amp;Itemid=66\\" style=\\"color: #3366cc; cursor: pointer; text-decoration: none;\\">http://www.sidefx.com/index.php?option=com_content&amp;task=view&amp;id=2005&amp;Itemid=66</a></span><br /><br /><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/536028505499887975-6311271595636845363?l=ldunham.blogspot.com\\" width=\\"1\\" /></div>", "summary": "<span class=\\"Apple-style-span\\" style=\\"background-color: white; font-family: arial, sans-serif; font-size: 13px; line-height: 18px;\\">my god...&nbsp;</span><span class=\\"Apple-style-span\\" style=\\"background-color: white; font-family: arial, sans-serif; font-size: 13px; line-height: 18px;\\"><a class=\\"ot-a", "id": "tag:blogger.com,1999:blog-536028505499887975.post-6311271595636845363", "categories": [], "metadata": {"guid": "7b010c80-b5ff-4b2d-9d7e-540ad79b118c", "likes": 0, "is_published": false}}, {"author": "Dru Sellers", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/sOzEBKsv6DI/", "title": "Thoughts on MassTransit on other languages", "datetime": "2011-08-21T15:44:32", "html": "<p>This weekend I sat in another nodejs talk, I found myself thinking again about how I would implement mass transit in other languages; specifically those that are not statically typed. The typical use of masstransit in .net looks like this.</p>\\n<pre class=\\"brush: csharp; title: ; notranslate\\">\\nbus.Subscribe&lt;Ping&gt;(msg =&gt;\\n{\\n    // do stuff with the ping message\\n});\\n</pre>\\n<p>What this does is instruct the bus to subscribe to the message named &#8216;Ping&#8217; and when that message arrives it then passes it to the handler (that&#8217;s the anonymous function). Because .Net is both statically and strongly typed I know that they want a ping message, just by looking at the type name. MassTransit also has a bunch of code to handle routing that is also influenced on the type of the message. But in JavaScript I don&#8217;t have that luxury in the same way. \\u00a0in javascript you might say:</p>\\n<pre class=\\"brush: jscript; title: ; notranslate\\">\\nbus.subscribe(\'ping\', function(msg) {\\n\\n/* do stuff */\\n\\n});\\n</pre>\\n<p>So we don&#8217;t have a type name to key off of, only a string name. As someone that has learned to use every last scrap of metadata in my programming language its very bizarre to switch to a language that has so much LESS metadata available to me. I could try to improve that a bit with a constant so it would look like</p>\\n<pre class=\\"brush: jscript; title: ; notranslate\\">\\nbus.subscribe(MessageNames.ping, function(msg) {\\n\\n/* do stuff */\\n\\n});\\n</pre>\\n<p>Which does feel better, but its weird to me that its not as &#8216;tight&#8217; as the .net experience. But then again, that is the whole point of dynamic languages, a dynamic environment.</p>\\n<p>The more that I ponder on it, the more I wonder if its just that I don&#8217;t have the patterns of thought necessary to structure large applications in non-static languages. what i need is a new way to derive the &#8216;name&#8217; of the message in JavaScript. I am not content with the simplistic &#8216;string&#8217; approach. I wonder if I can also apply the powerful concept of object scoping to mass transit in JS in the same fashion that we do in the .net version as well. I should be able to, there is an amazing amount of object scoping in the best practices of JS.</p>\\n<pre class=\\"brush: jscript; title: ; notranslate\\">\\n//module pattern\\n\\n(function(global, bus) {\\n    //could auto register handlers using a known convention\\n    bus.loadFrom(global);\\n    bus.subscribe(\'msg name\', function (msg) {\\n    }); // for one offs\\n})(window, busInstance);\\n</pre>\\n<p>Ok, I like that quite a bit. Not sure if the global is needed or not. I wonder what that would look like in CoffeeScript (tries for a bit and falls on face, must try later). I wonder if I could then do some magic around require.js or some other dependency resolver to complete the magic. Hmmm\\u2026.</p>\\n<p>Overall I am much happier now. I am starting to see how I could use javascript in much the same fashion, I have identified some patterns of use that I would like to attack and better understand around versioning as well. Of course a lot of this is just academic for me, I still need a real problem to solve.</p>\\n<p>Happy Sunday</p>\\n<p>-d</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/sOzEBKsv6DI\\" width=\\"1\\" />", "summary": "This weekend I sat in another nodejs talk, I found myself thinking again about how I would implement mass transit in other languages; specifically those that are not statically typed. The typical use of masstransit in .net looks like this.&#160;&#8230; <a href=\\"http://codebetter.com/drusellers/2011/", "id": "http://codebetter.com/drusellers/?p=150", "categories": [], "metadata": {"guid": "f3219497-f350-4951-9562-6d0d7850794b", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/08/21/update/", "title": "Update", "datetime": "2011-08-21T14:37:36", "html": "<p>It&#8217;s been a while since the last post&#8230; I&#8217;m currently working on Gavit, writing a longish MetaSL related tutorial and another one for a FilterForge filter I&#8217;ve just finished. I hope I&#8217;ll be able to post something a bit more interesting in the next few weeks.<!-- PHP 5.x --></p>", "summary": "It&#8217;s been a while since the last post&#8230; I&#8217;m currently working on Gavit, writing a longish MetaSL related tutorial and another one for a FilterForge filter I&#8217;ve just finished. I hope I&#8217;ll be able to post something a bit more interesting in the next few weeks.", "id": "http://www.zspline.net/blog/?p=1456", "categories": [], "metadata": {"guid": "bd272877-f20a-4495-810b-f33a50e5e108", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/20/jeffs-rio-comparison-reel-tims-letter-to-andy-serkis/", "title": "Jeff\\u2019s Rio Comparison Reel & Tim\\u2019s Letter to Andy Serkis", "datetime": "2011-08-20T21:11:21", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><div class=\\"shareaholic-like-buttonset\\" style=\\"float: right; height: 30px;\\"><a class=\\"shareaholic-fblike\\"></a><a class=\\"shareaholic-googleplusone\\"></a></div><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><!-- End Shareaholic LikeButtonSetTop --><p><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/Rio-2127.jpg\\" rel=\\"lightbox[2805]\\"><img alt=\\"\\" class=\\"aligncenter size-medium wp-image-2815\\" height=\\"225\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/Rio-2127-300x225.jpg\\" title=\\"Rio-2127\\" width=\\"300\\" /></a></p>\\n<p>A fellow classmate from a while back, Jeff Gabor, has been putting up these really interesting reels that exhibit the capturing of a performance of an animator and translating that to a character.\\u00a0 We in the animation biz like to call that animation.\\u00a0 Tried and true, it&#8217;s the best solution there is to getting characters full of life!</p>\\n<p>use password: &#8220;education&#8221;</p>\\n<p></p>\\n<p>On a serious note, take a look at this post<del></del> (link below)\\u00a0 challenging Andy Serkis&#8217; statements that actors deserve Academy recognition at the same time completely disregarding the role of the animation team it takes to make a character lifelike and engaging.\\u00a0 While I think this shouldn&#8217;t be put squarely on Andy&#8217;s shoulders, He being the mocap spokesperson and Weta both definitely should have something to say about their actions most recently displayed in a making of video that completely neglects to have any footage about animators working hard to translate and polish the performance onto the digital character.</p>\\n<p>They must have some highly pissed animators working for them. It&#8217;s also stirring up emotions of other animators who are or who have been in the same position. \\u00a0 I know how it feels as an animator being left out of credits and getting no recognition working at Image Metrics, again a production run completely as if the software was doing all the work.</p>\\n<p>Be sure to take a look at the video half-way through <a href=\\"http://bit.ly/q7YHXY\\" target=\\"_blank\\" title=\\"Andy Serkis open letter\\">Tim&#8217;s post</a>.</p>\\n<div class=\\"shr-publisher-2805\\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "A fellow classmate from a while back, Jeff Gabor, has been putting up these really interesting reels that exhibit the capturing of a performance of an animator and translating that to a character.\\u00a0 We in the animation biz like to call that animation.\\u00a0 Tried and true, it&#8217;s the best solution the", "id": "http://www.jonasavrin.com/?p=2805", "categories": [], "metadata": {"guid": "fc276835-67a1-4f13-8302-cd67a9df4288", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=387&utm_source=rss&utm_medium=rss&utm_campaign=saturday-night-sketch-fkik-simultaneous-chain", "title": "Saturday night sketch: FK+IK Simultaneous Chain", "datetime": "2011-08-20T13:28:37", "html": "<p>To prove the technique described on the last post I built a little thing: a couple of bones with FK and IK behaviour at the same time. It&#8217;s just a quick sketch based on one of the videos from <a href=\\"http://www.toonkit-studio.com/\\" target=\\"_blank\\">ToonKit</a>. It could be developed further to make it animation friendly since it&#8217;s a rough prototype. But let me explain you how I did this&#8230;</p>\\n<p style=\\"text-align: center;\\"></p>\\n<p><span id=\\"more-387\\"></span><br />\\nOne of the videos from ToonKit features this behaviour, and from what it&#8217;s shown I reckon the IK control is purely used to drive the rotation of the bones. Well, this is how an IK system actually behaves. But rather than controlling/overwriting the rotation of the bones by using an IK Solver, we could do the whole calculations &#8216;by hand&#8217; and then tell the EulerXYZ controller of both bones (just the Z Rotation in this case) how many degrees they should rotate.</p>\\n<p>After doing some research, I found a complete mathematical explanation on how an IK system works <a href=\\"http://www.ryanjuckett.com/programming/animation/16-analytic-two-bone-ik-in-2d?showall=1\\" target=\\"_blank\\">here</a>. As one might expect, everything is based on trigonometry. I really recommend you to follow Ryan Juckett&#8217;s explanations here to try to understand&#8230; which I barely did since I wanted to finish this sketch before going to bed, so I went straight to the code he provides and translated it to MAXScript. I know, I&#8217;m going to hell for this <img alt=\\":-)\\" class=\\"wp-smiley\\" src=\\"http://somosposmodernos.com/blog/wp-includes/images/smilies/icon_smile.gif\\" /> </p>\\n<pre class=\\"brush: jscript; title: ; notranslate\\">\\nfn clampValue value upperLimit lowerLimit =\\n(\\n\\tif value &gt; upperLimit then return upperLimit else\\n\\t(\\n\\t\\tif value &lt; lowerLimit then return lowerLimit else\\n\\t\\t(\\n\\t\\t\\treturn value\\n\\t\\t)\\n\\t)\\n)\\n\\nfn CalcIK_2D_TwoBoneAnalytic length1 length2 targetX targetY=\\n(\\n\\t-- variables\\n\\tlocal angle1 -- angle of bone 1\\n\\tlocal angle2 -- angle of bone 2\\n\\tlocal solvePosAngle2 = true -- solve for positive angle 2 instead of negative angle 2\\n\\tlocal epsilon = 0.0001 -- used to prevent division by small numbers\\n\\n\\tlocal foundValidSolution = true\\n\\tlocal targetDistSqr = (targetX*targetX + targetY*targetY)\\n\\n   -- Compute a new value for angle2 along with its cosine\\n    local sinAngle2\\n    local cosAngle2\\n\\n    local cosAngle2_denom = 2*length1*length2;\\n    if cosAngle2_denom &gt; epsilon then\\n\\t(\\n        cosAngle2 =  (targetDistSqr - length1*length1 - length2*length2)/(cosAngle2_denom)\\n\\n        -- if our result is not in the legal cosine range, we can not find a legal solution for the target\\n        if( (cosAngle2 &lt; -1.0) or (cosAngle2 &gt; 1.0) ) do foundValidSolution = false\\n\\n        -- clamp our value into range so we can calculate the best solution when there are no valid ones\\n        cosAngle2 = clampValue cosAngle2 1 -1\\n\\n        --compute a new value for angle2\\n        angle2 = acos cosAngle2\\t\\t\\n\\n        -- adjust for the desired bend direction\\n        if solvePosAngle2 do\\n\\t\\t(\\n            angle2 = -angle2\\n\\t\\t)\\n\\n        -- compute the sine of our angle\\n        sinAngle2 = Sin angle2\\n    )\\n    else\\n    (\\n        --At leaset one of the bones had a zero length. This means our\\n        --solvable domain is a circle around the origin with a radius\\n        --equal to the sum of our bone lengths.\\n        local totalLenSqr = (length1 + length2) * (length1 + length2)\\n        if targetDistSqr &lt; (totalLenSqr-epsilon) or targetDistSqr &gt; (totalLenSqr+epsilon) do foundValidSolution = false\\n    )\\n\\n    -- Compute the value of angle1 based on the sine and cosine of angle2\\n    local triAdjacent = length1 + length2*cosAngle2\\n    local triOpposite = length2*sinAngle2\\n\\n    local tanY = targetY*triAdjacent - targetX*triOpposite\\n    local tanX = targetX*triAdjacent + targetY*triOpposite\\n\\n    -- Note that it is safe to call Atan2(0,0) which will happen if targetX and targetY are zero\\n    angle1 = atan2 tanY tanX\\n\\treturn #(angle1, angle2)\\n   --return foundValidSolution\\n)\\n\\nvalues = CalcIK_2D_TwoBoneAnalytic $Bone01.length $Bone02.length $Point01.pos.x -$Point01.pos.z \\n\\nif selection[1] == GetNodeByName(&quot;Point01&quot;) then\\n(\\n\\t$Bone01.rotation.controller[1].controller.y_rotation = values[1]\\n\\t$Bone02.rotation.controller[1].controller.y_rotation = values[2]\\n\\t$Point01.position = $Bone03.position\\n)\\nelse\\n(\\n\\t$Point01.position = $Bone03.position\\n-- \\t$Bone01.rotation.controller[1].controller.y_rotation = values[1]\\n-- \\t$Bone02.rotation.controller[1].controller.y_rotation = values[2]\\n)\\n</pre>\\n<p>You can try this code on a scene with 2 bones and 1 point. Each time you execute it the whole thing will align. So we need something to run it one time and another and another&#8230; without evaluating it on the MAXScript Editor. So now it&#8217;s the time to use the info provided on the previous post. Create another object (the red point on the video), throw a Script Controller on some property you do not plan to use (Box), and paste that code, leaving the 0 as the last line. And voil\\u00e0!</p>", "summary": "To prove the technique described on the last post I built a little thing: a couple of bones with FK and IK behaviour at the same time. It&#8217;s just a quick sketch based on one of the videos from ToonKit. It could be developed further to make it animation friendly since it&#8217;s a rough prototyp", "id": "http://somosposmodernos.com/blog/?p=387", "categories": [], "metadata": {"guid": "a7d64fd2-e1c9-441b-9fcb-1c3fe8d1ae8c", "likes": 0, "is_published": false}}, {"author": "ike", "url": "http://somosposmodernos.com/blog/?p=380&utm_source=rss&utm_medium=rss&utm_campaign=fake-callbacks-in-3dsmax", "title": "\\u2018Fake\\u2019 callbacks in 3DSMAX", "datetime": "2011-08-20T02:33:28", "html": "<p>I haven&#8217;t used callbacks a lot. I guess I barely needed them, but for advanced behaviours they are amazing. According to MAXScript help&#8230;</p>\\n<blockquote><p><strong>Callbacks</strong> are used to register with 3ds Max functions that are called when specific events occur within 3ds Max. <strong>Events </strong>that can be monitored are changes to the time slider time and redrawing of viewports. Callbacks are not stored in a 3ds Max scene.</p></blockquote>\\n<p>So here I present you an easy way to have a piece of code running without digging too much into complex stuff&#8230;</p>\\n<p><span id=\\"more-380\\"></span></p>\\n<p>In the same way having a lot of callbacks could make your scene refresh slower, having a lot of these &#8216;fake&#8217; callbacks could make MAX behave the same way. So be careful when using this &#8216;perpetual&#8217; behaviours.</p>\\n<p>Basically the trick consists on executing some code inside a <strong>Script Controller</strong>, and then returning something according to the property that holds the controller. I&#8217;ve used external objects that are not related to the rig to run some calculations that modify it. Just create an object to hold the script, let&#8217;s say a <em>Point</em>. Assign a Script Controller to any property, for example, <em>Box</em>. That parameter can be True (returns 1) or False (returns 0). If you open the controller it&#8217;s quite probable that says 0. Your last line always has to return the type of value that property is expecting to. If you set this controller on XPosition, it will expect a float. If you put it on a Diffuse channel of a material, it will expect a vector. In this case, it will ask for a boolean. </p>\\n<p>But before that line you can write whatever you want. For example, a function to change the wirecolor of an object depending of the distance between it and another one. And that&#8217;s nice, because the wirecolor property is not animatable, so you are not able to set a controller on it! And that&#8217;s brought to you by the magic of Script Controllers, which evaluates non-stop.</p>\\n<p>This widens your possibilities when building a rig. I tend to use this to prototype quick ideas. And to sum up, the main point is<strong> you can use external objects to continuously run code that affects a system</strong>.</p>", "summary": "I haven&#8217;t used callbacks a lot. I guess I barely needed them, but for advanced behaviours they are amazing. According to MAXScript help&#8230; Callbacks are used to register with 3ds Max functions that are called when specific events occur within 3ds Max. Events that can be monitored are chang", "id": "http://somosposmodernos.com/blog/?p=380", "categories": [], "metadata": {"guid": "7492dcf2-97a3-4279-800c-6941e51ce1ea", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/18/socal-surf-spots-vol-1-staircases/", "title": "SoCal Surf Spots Vol 1: Staircases", "datetime": "2011-08-19T02:01:48", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><div class=\\"shareaholic-like-buttonset\\" style=\\"float: right; height: 30px;\\"><a class=\\"shareaholic-fblike\\"></a><a class=\\"shareaholic-googleplusone\\"></a></div><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><!-- End Shareaholic LikeButtonSetTop --><p></p>\\n<div class=\\"shr-publisher-2798\\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "&#038;nbsp", "id": "http://www.jonasavrin.com/?p=2798", "categories": [], "metadata": {"guid": "c356f1b9-e936-4abb-90c2-29f2b6554106", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/18/hephaestus-animated-short-film-work/", "title": "Hephaestus Animated Short Film Work", "datetime": "2011-08-18T20:53:22", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><div class=\\"shareaholic-like-buttonset\\" style=\\"float: right; height: 30px;\\"><a class=\\"shareaholic-fblike\\"></a><a class=\\"shareaholic-googleplusone\\"></a></div><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><!-- End Shareaholic LikeButtonSetTop --><p><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/header2.jpg\\" rel=\\"lightbox[2788]\\"><img alt=\\"hephaestus header\\" class=\\"aligncenter size-medium wp-image-2790\\" height=\\"83\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/header2-300x63.jpg\\" title=\\"header2\\" width=\\"400\\" /></a></p>\\n<p>From Director/Animator Alex Curtis comes his debut animated short that I luckily got to work on as a freelance pro bono character rigger/td.\\u00a0 Here&#8217;s a work in progress reel and Kaylee the character I rigged and supervised rigging the hair and goggles with the help of my friend Suchan.\\u00a0 Keep in mind this demo is months old at this point and a newer one is out that is password protected so I cannot share until later.</p>\\n<p style=\\"text-align: center;\\"></p>\\n<div class=\\"wp-caption aligncenter\\" id=\\"attachment_2803\\" style=\\"width: 310px;\\"><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/KayleePose03.png\\" rel=\\"lightbox[2788]\\"><img alt=\\"\\" class=\\"size-medium wp-image-2803\\" height=\\"291\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/KayleePose03-300x291.png\\" title=\\"KayleePose03\\" width=\\"300\\" /></a><p class=\\"wp-caption-text\\">Kaylee showin\' off her moves</p></div>\\n<p style=\\"text-align: left;\\">Stay tuned!\\u00a0 The final is looking good!\\u00a0 Should be any day now&#8230;</p>\\n<div class=\\"shr-publisher-2788\\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "From Director/Animator Alex Curtis comes his debut animated short that I luckily got to work on as a freelance pro bono character rigger/td.\\u00a0 Here&#8217;s a work in progress reel and Kaylee the character I rigged and supervised rigging the hair and goggles with the help of my friend Suchan.\\u00a0 Keep in", "id": "http://www.jonasavrin.com/?p=2788", "categories": [], "metadata": {"guid": "fdd7323e-9975-4a87-879a-73ba9acda112", "likes": 0, "is_published": false}}, {"author": "ldunham (noreply@blogger.com)", "url": "http://ldunham.blogspot.com/2011/08/updating.html", "title": "Updating...", "datetime": "2011-08-18T20:19:14.815000", "html": "phew... far too much has happened to post it all but...<br /><br />Few weeks into new job at Red Wire Media, down Cardiff Bay and I haven\'t stopped :)<br /><br />Started with a compact animation toolset, then onto rigging the main characters (with some lovely work on the faces, even if i do say so myself), now onto setting up the maya and deadline to shotgun api, which is&nbsp;surprisingly&nbsp;easy actually. Just abit more practice on a dummy project and should be up and running soon.<br /><br />Got so many scripts to upload at some point, so started with a modified version of David Lightbown\'s 2006 \\"dlUtils_Profiler.mel\\" (<span class=\\"Apple-style-span\\" style=\\"background-color: white; color: #202020; font-family: \'Droid Sans\', arial, sans-serif; font-size: 13px;\\"><a href=\\"http://www.davidlightbown.com/\\" style=\\"color: #67753a;\\" target=\\"_blank\\">www.davidlightbown.com</a></span>) which allows you to compare the difference in speed between two mel scripts (example used, compares difference in speed between multiplication and division in maya - multiplication is about 30% faster from what I remember - so instead of using a /2, use * .5 instead! - added bonus, use to avoid / by 0 errors!)<br />link:<br /><a href=\\"http://www.creativecrash.com/maya/downloads/scripts-plugins/utility-external/c/mel-python-speed-profiler\\">http://www.creativecrash.com/maya/downloads/scripts-plugins/utility-external/c/mel-python-speed-profiler</a><br /><br />I use it fairly often, from comparing simple procs to deciding the best/quickest file management solution, and even started to use it to compare the difference in speed between connected multiple nodes, constraints and expressions (I do also use the fps, but it can vary too much).<br /><br /><br /><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/536028505499887975-5238660424862993551?l=ldunham.blogspot.com\\" width=\\"1\\" /></div>", "summary": "phew... far too much has happened to post it all but...<br /><br />Few weeks into new job at Red Wire Media, down Cardiff Bay and I haven\'t stopped :)<br /><br />Started with a compact animation toolset, then onto rigging the main characters (with some lovely work on the faces, even if i do say so m", "id": "tag:blogger.com,1999:blog-536028505499887975.post-5238660424862993551", "categories": [], "metadata": {"guid": "406bf533-8b77-47f9-88e5-6ca59f244d79", "likes": 0, "is_published": false}}, {"author": "James", "url": "http://www.d3coy.com/?p=215", "title": "Crimson Alliance almost out", "datetime": "2011-08-18T05:36:53", "html": "<p>Well, things are cruising along at Certain Affinity. I recently finished working on our latest title, <a href=\\"http://www.crimsonalliance.com/\\" target=\\"_blank\\">Crimson Alliance</a>, which comes to XBLA on 9/7. Go check it out. It&#8217;s a fun, Gauntlet-type adventure through a brand new fantasy world. My part on the title was chiefly graphics and particles, and I&#8217;m pretty pleased with what we were able to do, given our constraints.</p>\\n<p>I don&#8217;t think I can ever completely remove myself from creating art or writing code entirely, although sometimes I wish I could just to keep things simpler&#8230; I was deeply involved in creating particle effects as well as hacking on tools and implementing various systems, like decal generation, threaded particles, and various editors. Oh yea, I&#8217;m also growing a crazy mustache:</p>\\n<p><img alt=\\"\\" class=\\"softshadow\\" height=\\"280\\" src=\\"http://www.d3coy.com/wp-content/uploads/2011/08/Jamberly-300x280.jpg\\" style=\\"float: right; margin-left: 1em; margin-bottom: 1em;\\" title=\\"Jamberly\\" width=\\"300\\" /></p>\\n<p>This picture is a little old, so the &#8216;stache is actually a little bigger than this, now. I never thought I&#8217;d enjoy being a &#8220;facial hair enthusiast,&#8221; as I&#8217;ve heard myself called, but it&#8217;s actually a kick-ass thing to wear on your face. It&#8217;s also a fun social experiment to see how people treat you differently depending on how you look. Most of the time people greet me with pleased excitement, but there are some who seemingly scorn mustaches and who sometimes seem to feel embarrassed for me (aww&#8230;). You know, this must be similar to the way normal people feel when they go out dressed like a bum, just to see how people&#8217;s perceptions are altered. Wait, is it good or bad that growing a mustache is like pretending to be a bum? Ah, well, fuck it.</p>\\n<p>Anyways, Crimson Alliance. The game&#8217;s pretty neat, and I&#8217;m excited to see public reception that is so overwhelmingly positive. It&#8217;ll be fun to watch it release.</p>\\n<p>In closing, I&#8217;ve been moved off of that project onto a larger, unannounced title of awesomeness. I can&#8217;t talk about it, but suffice it to say that I&#8217;m very happy and hard at work.</p>\\n<p>Next time, I want to tell you about a little game I released a couple of months ago for the iPhone/Android/iPad: <a href=\\"http://itunes.apple.com/us/app/jangle/id437572740?mt=8\\" target=\\"_blank\\">Jangle</a>!</p>", "summary": "Well, things are cruising along at Certain Affinity. I recently finished working on our latest title, Crimson Alliance, which comes to XBLA on 9/7. Go check it out. It&#8217;s a fun, Gauntlet-type adventure through a brand new fantasy world. My part on the title was chiefly graphics and particles, a", "id": "http://www.d3coy.com/?p=215", "categories": [], "metadata": {"guid": "5a214fa6-153c-4dda-a2e1-e2a9fe9f57d8", "likes": 0, "is_published": false}}]'
09-10 23:30 root         INFO     Handling CGI request.
09-10 23:30 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:30 SocketClient INFO     Sending to service: "["request_content_slice", [30, 15], {}]"
09-10 23:30 SocketClient INFO     Received from service: "[{"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/08/maya-command-completion-issues-in.html", "title": "Maya Command Completion issues in Python", "datetime": "2011-08-18T04:59:26.944000", "html": "Something Dave discovered a while ago and has just come back to bite us again is that the dot code completion in the scriptEditor in Maya is actually RUNNING the code inside Python property blocks when you call a dot complete (Ctrl+Space). It's not just returning the function/property list by using something like the inspect module, but actually running the property itself. The same is true when<br />you hit return to accept and fill that function/property in the script editor.<br /><br />Test it, add this in a Python Script window:<br /><br /><pre class=\"python\" name=\"code\">import pymel.core as pCore\n<br />\n<br />class AutoCompleteTest(object):\n<br />\n<br />    def __init__(self):\n<br />        pass\n<br />\n<br />    @property\n<br />    def Test(self):\n<br />        print \"Im being CALLED Multiple times!!!!!\\n\" \n<br />        pCore.newFile(force=True)\n<br />\n<br /></pre><br />Now do the following:<br /><br />com=AutoCompleteTest()<br /><br />turn on \u2019Command Completion\u2019 and do a dot complete to inspect the com object you just made!<br /><br />The property is now being RUN. So what you ask? Well lets say you are doing something stupid like the fileNew example above, just by trying to get code completion you've actually nuked your scene. Also because it's doing this for all the inspect calls it means that it's running all code, in all property blocks which makes it very, very slow!<br /><br />Mark<br /><br /><br /><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/1407054789026932542-6682116681588518415?l=markj3d.blogspot.com\" width=\"1\" /></div>", "summary": "Something Dave discovered a while ago and has just come back to bite us again is that the dot code completion in the scriptEditor in Maya is actually RUNNING the code inside Python property blocks when you call a dot complete (Ctrl+Space). It's not just returning the function/property list by using ", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-6682116681588518415", "categories": [], "metadata": {"guid": "1bda313a-0f46-4f94-9591-b6d1fcf9d461", "likes": 0, "is_published": false}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/08/more-playblast-issues-frame-syncing.html", "title": "More Playblast issues - Frame Syncing issues with Xvid", "datetime": "2011-08-18T04:59:02.097000", "html": "So we thought all was good, we've moved from wrapping the FFDS encoder to using a native 64bit version of Xvid in playblasts and all is good.... or so we thought. It turns out that the default Xvid Encoder settings DO NOT maintain frame counts correctly, randomly inserting padding frames into the Avi. So if you load an avi with baked in FrameCounter from Maya into Virtual Dub and step through it you'll see the frame counters get out of sync. We're only talking 2 or 3 frames but that's enough to completely stuff facial lip sync up and cause anybody using these avi's as master guides to have problems.<br /><br /><br />The cure is simple, launch the Configure Encoder settingsUI from your Start&gt;Programs&gt;Xvid folder and make sure you turn OFF the B-VOP's (b-frames) under the Profiles@level&gt;more&gt;profile UI. All of a sudden all is in sync and happy. God damned all the time we've wasted getting these working!<br /><br />Mark<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/1407054789026932542-1447026508580877184?l=markj3d.blogspot.com\" width=\"1\" /></div>", "summary": "So we thought all was good, we've moved from wrapping the FFDS encoder to using a native 64bit version of Xvid in playblasts and all is good.... or so we thought. It turns out that the default Xvid Encoder settings DO NOT maintain frame counts correctly, randomly inserting padding frames into the Av", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-1447026508580877184", "categories": [], "metadata": {"guid": "1fee526f-d11f-4da9-a38e-828c27ec13ed", "likes": 0, "is_published": false}}, {"author": "Kyle Baley", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/6jGcLLTwYp4/", "title": "Designing an API: Is JSON/JSONP an and/or decision?", "datetime": "2011-08-17T14:03:05", "html": "<p>Executive Summary: Who knew serving up JSON for a public API was so complicatedly anti-hillbilly?</p>\n<p>Our next major phase at <a href=\"http://getbookedin.com\">BookedIN\u2019s</a> plan for world-except-for-Edmonton-and-certain-parts-of-Winnipeg-domination is underway. That\u2019s the public-facing site which will provide a way for <strong><em><u>YOU THE PUBLIC</u></em></strong> to book appointments online at your favorite\u2026ahem\u2026\u201dservice providers\u201d. Let me explain our marketing strategy in detail.</p>\n<p>Ha ha, I jest of course. That last sentence is the sum-total of what I know about our marketing strategy. I have a hard enough time trying to keep myself entertained through code. (As a general rule, I start with the code reviews.)</p>\n<p>To populate the public site, we\u2019re building an API around our appointment manager. And we\u2019ve opted for JSON as the default format mostly because I love the way people pronounce it, accenting both syllables like badly-translated anime.</p>\n<p>In this app, we are making two API calls from two different places. When we first load the page for a particular vendor, the server makes a call to retrieve the company details and a list of services. After the page is loaded, jQuery comes along and populates the list of available appointment times. In this way, we get the benefit of SEO being able to see the vendor details and services and a snappy user interface when the user navigates to different dates within a particular vendor page, as outlined on the <a href=\"http://googlewebmastercentral.blogspot.com/2007/11/spiders-view-of-web-20.html\">Google Webmaster Blog</a> (though I didn\u2019t actually discover that link until after we decided on the structure).</p>\n<p>In the appointment manager, serving up JSON is pretty simple. Configure the servlet, get the data, convert to JSON (we\u2019re using <a href=\"http://jackson.codehaus.org/\">Jackson</a>), and write it to the response. This is working just fine with the server-side company details call.</p>\n<p>For the client-side call, it\u2019s not. Depending on how you configure the AJAX call in jQuery, we get one of the following:</p>\n<ul>\n<li>The API call is never made\n<li>The call is made but cancelled\n<li>The call is made and returns but has no data</li>\n</ul>\n<p>All are symptoms of the same issue: cross-domain client calls, which aren\u2019t allowed. I read that it\u2019s for security reasons which, due to my loathing of all things security-related, was enough for me not to read further.</p>\n<p>From what I can tell, you can\u2019t make a call to another domain in jQuery (or likely any JavaScript library) and expect to get JSON back.</p>\n<p>Here\u2019s an example. Follow this link in your browser: <a href=\"https://github.com/api/v2/json/repos/search/zenboard\">https://github.com/api/v2/json/repos/search/zenboard</a></p>\n<p>You\u2019ll probably get this back: </p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:</span> {<span style=\"color: #006080;\">\"repositories\"</span>:[{<span style=\"color: #006080;\">\"type\"</span>:<span style=\"color: #006080;\">\"repo\"</span>,<span style=\"color: #006080;\">\"username\"</span>:<span style=\"color: #006080;\">\"amirci\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:</span> <span style=\"color: #006080;\">\"url\"</span>:<span style=\"color: #006080;\">\"https://github.com/amirci/zenboard\"</span>,<span style=\"color: #006080;\">\"watchers\"</span>:5,<span style=\"color: #006080;\">\"owner\"</span>:<span style=\"color: #006080;\">\"amirci\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:</span> <span style=\"color: #006080;\">\"has_wiki\"</span>:<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #006080;\">\"open_issues\"</span>:0,<span style=\"color: #006080;\">\"score\"</span>:6.994658,<span style=\"color: #006080;\">\"followers\"</span>:5,<span style=\"color: #006080;\">\"forks\"</span>:3,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:</span> <span style=\"color: #006080;\">\"has_issues\"</span>:<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #006080;\">\"language\"</span>:<span style=\"color: #006080;\">\"Ruby\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:</span> <span style=\"color: #006080;\">\"description\"</span>:<span style=\"color: #006080;\">\"Companion to agile zen to provide extra calculations and functionality\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:</span> <span style=\"color: #006080;\">\"pushed\"</span>:<span style=\"color: #006080;\">\"2011/05/18 15:25:54 -0700\"</span>,<span style=\"color: #006080;\">\"fork\"</span>:<span style=\"color: #0000ff;\">false</span>,<span style=\"color: #006080;\">\"size\"</span>:1348,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:</span> <span style=\"color: #006080;\">\"created_at\"</span>:<span style=\"color: #006080;\">\"2010/11/24 17:28:33 -0800\"</span>,<span style=\"color: #006080;\">\"name\"</span>:<span style=\"color: #006080;\">\"zenboard\"</span>,<span style=\"color: #006080;\">\"has_downloads\"</span>:<span style=\"color: #0000ff;\">true</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:</span> <span style=\"color: #006080;\">\"private\"</span>:<span style=\"color: #0000ff;\">false</span>,<span style=\"color: #006080;\">\"pushed_at\"</span>:<span style=\"color: #006080;\">\"2011/05/18 15:25:54 -0700\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:</span> <span style=\"color: #006080;\">\"created\"</span>:<span style=\"color: #006080;\">\"2010/11/24 17:28:33 -0800\"</span>,<span style=\"color: #006080;\">\"homepage\"</span>:<span style=\"color: #006080;\">\"\"</span>}]}</pre>\n<p><!--CRLF--></div>\n</div>\n<p>(Side note: If you\u2019re using <a href=\"http://agilezen.com\">AgileZen</a>, the project above, <a href=\"http://zenboard.heroku.com\">ZenBoard</a>, is an awesome companion for it.)</p>\n<p>Now let\u2019s try this in jQuery:</p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:</span> <span style=\"color: #0000ff;\">function</span> loadProjects( ) {</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:</span>     <span style=\"color: #0000ff;\">var</span> url= <span style=\"color: #006080;\">\"https://github.com/api/v2/json/repos/search/zenboard\"</span>;</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:</span>   $.ajax({</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:</span>       url: url,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:</span>       type: <span style=\"color: #006080;\">\"GET\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:</span>       dataType: <span style=\"color: #006080;\">\"json\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:</span>       success: <span style=\"color: #0000ff;\">function</span>(data) {</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:</span>           alert( <span style=\"color: #006080;\">'moo'</span> );</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:</span>       }</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  10:</span>   });</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  11:</span> }</pre>\n<p><!--CRLF--></div>\n</div>\n<p>Throw this into a $( document ).ready call, load it up, and you get nothing. The browser developer tools give you a vague hint of what\u2019s going on:</p>\n<p><a href=\"http://codebetter.com/kylebaley/files/2011/08/CanceledRequest.png\"><img alt=\"CanceledRequest\" border=\"0\" height=\"304\" src=\"http://codebetter.com/kylebaley/files/2011/08/CanceledRequest_thumb.png\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"644\" /></a></p>\n<p>&nbsp;</p>\n<p>The request to the GitHub API was canceled. Let\u2019s make one small change to the JavaScript:</p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:</span> <span style=\"color: #0000ff;\">function</span> loadAppointmentTimes( ) {</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:</span>     <span style=\"color: #0000ff;\">var</span> url= <span style=\"color: #006080;\">\"https://github.com/api/v2/json/repos/search/zenboard\"</span>;</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:</span>   $.ajax({</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:</span>       url: url,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:</span>       type: <span style=\"color: #006080;\">\"GET\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:</span>       dataType: <span style=\"color: #006080;\">\"jsonp\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:</span>       success: <span style=\"color: #0000ff;\">function</span>(data) {</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:</span>           alert( <span style=\"color: #006080;\">'moo'</span> );</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:</span>       }</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  10:</span>   });</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  11:</span> }</pre>\n<p><!--CRLF--></div>\n</div>\n<p>The only difference here is the datatype is now jsonp instead of json. Load this page up and we get a hearty \u201cmoo\u201d alert.</p>\n<p>But take a look at the headers for the request we\u2019ve made:</p>\n<p><a href=\"http://codebetter.com/kylebaley/files/2011/08/RequestWithURL.png\"><img alt=\"RequestWithURL\" border=\"0\" height=\"306\" src=\"http://codebetter.com/kylebaley/files/2011/08/RequestWithURL_thumb.png\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"644\" /></a></p>\n<p>There\u2019s an extra parameter: callback. jQuery added this. Furthermore, here\u2019s the response:</p>\n<p><a href=\"http://codebetter.com/kylebaley/files/2011/08/RequestWithResponse.png\"><img alt=\"RequestWithResponse\" border=\"0\" height=\"306\" src=\"http://codebetter.com/kylebaley/files/2011/08/RequestWithResponse_thumb.png\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"644\" /></a></p>\n<p>This ain\u2019t quite JSON. It\u2019s a JavaScript function call wrapped around JSON.</p>\n<p>The upshot of all this: When you make a request without the callback parameter, GitHub will give you JSON. Unless it\u2019s called from JavaScript from the browser in which case, I believe it\u2019s the browser itself that says \u201cPapa don\u2019t preach that way\u201d and cancels the request completely because it won\u2019t allow JSON to come back.</p>\n<p>But when you tell jQuery to make the call as jsonp, it adds an auto-generated callback parameter (I believe you can specify the name of the callback if you so desire). GitHub is nice enough to adjust the response accordingly, wrapping the JSON in the callback function. Further, jQuery is nice enough to strip it off again and give you back the intended JSON.</p>\n<p>When I first started this post, it was going to lead up to this point where I ask: When creating an API, is it normal to support both JSON and JSONP requests? In fact, I ask the question in the title already.</p>\n<p>But it appears the answer is yes based on other services that offer APIs. Obviously, GitHub supports it. So does <a href=\"https://api.bitbucket.org/1.0/users/kbaley?callback=moo\">BitBucket</a>, <a href=\"http://api.twitter.com/1/statuses/user_timeline/kbaley.json?callback=moo\">Twitter</a>, <a href=\"http://dev.agilezen.com/concepts/formatting.html#jsonp_support\">AgileZen</a>, and Flickr (though Flickr uses a different <a href=\"http://www.flickr.com/services/api/response.json.html\">callback parameter name</a>). So\u2026thanks for listening, I guess\u2026</p>\n<h2>Final Note</h2>\n<p>JSONP (and any cross-domain request, I believe) is read-only. I.e. it supports GET requests only, not POSTs (or PUT or DELETE, I suppose). The odd thing is: I only discovered this today while researching for this post. This baffles me because I\u2019ve been doing AJAX apps since 2000 and don\u2019t remember ever having to deal with this. I suppose they were all same-domain, or if they were cross-domain, it was read-only. Anyway, score one for blogging because within the next two days, we would have run into this very issue at BookedIN and wasted a bunch of time tracking down the cause.</p>\n<p>To get around this limitation, there are two options (probably more depending on how academic you want to make your research):</p>\n<h3>Use a proxy</h3>\n<p>That is, you POST the request to the same domain and in the server code, forward the request on to the other domain. Remember, cross-domain security is only on the browser.</p>\n<h3>Cross-Origin Resource Sharing</h3>\n<p>This is new to me as well as of this morning. It\u2019s a draft specification to get around the same origin policy I\u2019ve spent these many minutes describing. I know nothing about except what I read on <a href=\"http://dev.agilezen.com/concepts/authentication.html#crossorigin_resource_sharing\">AgileZen\u2019s documentation</a>. The salient points are:</p>\n<ul>\n<li>Works on newer browsers only. This essentially translates into \u201cWorks on IE8 or higher and all versions of Firefox and Chrome that you\u2019re likely to see in the wild.\u201d</li>\n<li>May have issues with some proxy servers and firewalls</li>\n</ul>\n<p>This was enough for us to postpone this route to a future release when our client isn\u2019t the only one for the API.</p>\n<p>Kyle the Applicable</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/6jGcLLTwYp4\" width=\"1\" />", "summary": "Executive Summary: Who knew serving up JSON for a public API was so complicatedly anti-hillbilly? Our next major phase at BookedIN\u2019s plan for world-except-for-Edmonton-and-certain-parts-of-Winnipeg-domination is underway. That\u2019s the public-facing site which will provide a way for YOU THE PUBLIC to&#", "id": "http://codebetter.com/kylebaley/2011/08/17/designing-an-api-is-jsonjsonp-an-andor-decision-2/", "categories": [], "metadata": {"guid": "4c799b8e-d072-4c9d-b6fa-90034a47fd27", "likes": 0, "is_published": false}}, {"author": "Kyle Baley", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/Q3oVow9Rt6s/", "title": "Designing an API: Is JSON/JSONP an and/or decision?", "datetime": "2011-08-17T14:02:26", "html": "<p>Executive Summary: Who knew serving up JSON for a public API was so complicatedly anti-hillbilly?</p>\n<p>Our next major phase at <a href=\"http://getbookedin.com\">BookedIN\u2019s</a> plan for world-except-for-Edmonton-and-certain-parts-of-Winnipeg-domination is underway. That\u2019s the public-facing site which will provide a way for <strong><em><u>YOU THE PUBLIC</u></em></strong> to book appointments online at your favorite\u2026ahem\u2026\u201dservice providers\u201d. Let me explain our marketing strategy in detail.</p>\n<p>Ha ha, I jest of course. That last sentence is the sum-total of what I know about our marketing strategy. I have a hard enough time trying to keep myself entertained through code. (As a general rule, I start with the code reviews.)</p>\n<p>To populate the public site, we\u2019re building an API around our appointment manager. And we\u2019ve opted for JSON as the default format mostly because I love the way people pronounce it, accenting both syllables like badly-translated anime.</p>\n<p>In this app, we are making two API calls from two different places. When we first load the page for a particular vendor, the server makes a call to retrieve the company details and a list of services. After the page is loaded, jQuery comes along and populates the list of available appointment times. In this way, we get the benefit of SEO being able to see the vendor details and services and a snappy user interface when the user navigates to different dates within a particular vendor page, as outlined on the <a href=\"http://googlewebmastercentral.blogspot.com/2007/11/spiders-view-of-web-20.html\">Google Webmaster Blog</a> (though I didn\u2019t actually discover that link until after we decided on the structure).</p>\n<p>In the appointment manager, serving up JSON is pretty simple. Configure the servlet, get the data, convert to JSON (we\u2019re using <a href=\"http://jackson.codehaus.org/\">Jackson</a>), and write it to the response. This is working just fine with the server-side company details call.</p>\n<p>For the client-side call, it\u2019s not. Depending on how you configure the AJAX call in jQuery, we get one of the following:</p>\n<ul>\n<li>The API call is never made\n<li>The call is made but cancelled\n<li>The call is made and returns but has no data</li>\n</ul>\n<p>All are symptoms of the same issue: cross-domain client calls, which aren\u2019t allowed. I read that it\u2019s for security reasons which, due to my loathing of all things security-related, was enough for me not to read further.</p>\n<p>From what I can tell, you can\u2019t make a call to another domain in jQuery (or likely any JavaScript library) and expect to get JSON back.</p>\n<p>Here\u2019s an example. Follow this link in your browser: <a href=\"https://github.com/api/v2/json/repos/search/zenboard\">https://github.com/api/v2/json/repos/search/zenboard</a></p>\n<p>You\u2019ll probably get this back: </p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:</span> {<span style=\"color: #006080;\">\"repositories\"</span>:[{<span style=\"color: #006080;\">\"type\"</span>:<span style=\"color: #006080;\">\"repo\"</span>,<span style=\"color: #006080;\">\"username\"</span>:<span style=\"color: #006080;\">\"amirci\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:</span> <span style=\"color: #006080;\">\"url\"</span>:<span style=\"color: #006080;\">\"https://github.com/amirci/zenboard\"</span>,<span style=\"color: #006080;\">\"watchers\"</span>:5,<span style=\"color: #006080;\">\"owner\"</span>:<span style=\"color: #006080;\">\"amirci\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:</span> <span style=\"color: #006080;\">\"has_wiki\"</span>:<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #006080;\">\"open_issues\"</span>:0,<span style=\"color: #006080;\">\"score\"</span>:6.994658,<span style=\"color: #006080;\">\"followers\"</span>:5,<span style=\"color: #006080;\">\"forks\"</span>:3,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:</span> <span style=\"color: #006080;\">\"has_issues\"</span>:<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #006080;\">\"language\"</span>:<span style=\"color: #006080;\">\"Ruby\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:</span> <span style=\"color: #006080;\">\"description\"</span>:<span style=\"color: #006080;\">\"Companion to agile zen to provide extra calculations and functionality\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:</span> <span style=\"color: #006080;\">\"pushed\"</span>:<span style=\"color: #006080;\">\"2011/05/18 15:25:54 -0700\"</span>,<span style=\"color: #006080;\">\"fork\"</span>:<span style=\"color: #0000ff;\">false</span>,<span style=\"color: #006080;\">\"size\"</span>:1348,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:</span> <span style=\"color: #006080;\">\"created_at\"</span>:<span style=\"color: #006080;\">\"2010/11/24 17:28:33 -0800\"</span>,<span style=\"color: #006080;\">\"name\"</span>:<span style=\"color: #006080;\">\"zenboard\"</span>,<span style=\"color: #006080;\">\"has_downloads\"</span>:<span style=\"color: #0000ff;\">true</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:</span> <span style=\"color: #006080;\">\"private\"</span>:<span style=\"color: #0000ff;\">false</span>,<span style=\"color: #006080;\">\"pushed_at\"</span>:<span style=\"color: #006080;\">\"2011/05/18 15:25:54 -0700\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:</span> <span style=\"color: #006080;\">\"created\"</span>:<span style=\"color: #006080;\">\"2010/11/24 17:28:33 -0800\"</span>,<span style=\"color: #006080;\">\"homepage\"</span>:<span style=\"color: #006080;\">\"\"</span>}]}</pre>\n<p><!--CRLF--></div>\n</div>\n<p>(Side note: If you\u2019re using <a href=\"http://agilezen.com\">AgileZen</a>, the project above, <a href=\"http://zenboard.heroku.com\">ZenBoard</a>, is an awesome companion for it.)</p>\n<p>Now let\u2019s try this in jQuery:</p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:</span> <span style=\"color: #0000ff;\">function</span> loadProjects( ) {</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:</span>     <span style=\"color: #0000ff;\">var</span> url= <span style=\"color: #006080;\">\"https://github.com/api/v2/json/repos/search/zenboard\"</span>;</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:</span>   $.ajax({</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:</span>       url: url,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:</span>       type: <span style=\"color: #006080;\">\"GET\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:</span>       dataType: <span style=\"color: #006080;\">\"json\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:</span>       success: <span style=\"color: #0000ff;\">function</span>(data) {</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:</span>           alert( <span style=\"color: #006080;\">'moo'</span> );</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:</span>       }</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  10:</span>   });</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  11:</span> }</pre>\n<p><!--CRLF--></div>\n</div>\n<p>Throw this into a $( document ).ready call, load it up, and you get nothing. The browser developer tools give you a vague hint of what\u2019s going on:</p>\n<p><a href=\"http://codebetter.com/kylebaley/files/2011/08/CanceledRequest.png\"><img alt=\"CanceledRequest\" border=\"0\" height=\"304\" src=\"http://codebetter.com/kylebaley/files/2011/08/CanceledRequest_thumb.png\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"644\" /></a></p>\n<p>&nbsp;</p>\n<p>The request to the GitHub API was canceled. Let\u2019s make one small change to the JavaScript:</p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:</span> <span style=\"color: #0000ff;\">function</span> loadAppointmentTimes( ) {</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:</span>     <span style=\"color: #0000ff;\">var</span> url= <span style=\"color: #006080;\">\"https://github.com/api/v2/json/repos/search/zenboard\"</span>;</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:</span>   $.ajax({</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:</span>       url: url,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:</span>       type: <span style=\"color: #006080;\">\"GET\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:</span>       dataType: <span style=\"color: #006080;\">\"jsonp\"</span>,</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:</span>       success: <span style=\"color: #0000ff;\">function</span>(data) {</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:</span>           alert( <span style=\"color: #006080;\">'moo'</span> );</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:</span>       }</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  10:</span>   });</pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  11:</span> }</pre>\n<p><!--CRLF--></div>\n</div>\n<p>The only difference here is the datatype is now jsonp instead of json. Load this page up and we get a hearty \u201cmoo\u201d alert.</p>\n<p>But take a look at the headers for the request we\u2019ve made:</p>\n<p><a href=\"http://codebetter.com/kylebaley/files/2011/08/RequestWithURL.png\"><img alt=\"RequestWithURL\" border=\"0\" height=\"306\" src=\"http://codebetter.com/kylebaley/files/2011/08/RequestWithURL_thumb.png\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"644\" /></a></p>\n<p>There\u2019s an extra parameter: callback. jQuery added this. Furthermore, here\u2019s the response:</p>\n<p><a href=\"http://codebetter.com/kylebaley/files/2011/08/RequestWithResponse.png\"><img alt=\"RequestWithResponse\" border=\"0\" height=\"306\" src=\"http://codebetter.com/kylebaley/files/2011/08/RequestWithResponse_thumb.png\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"644\" /></a></p>\n<p>This ain\u2019t quite JSON. It\u2019s a JavaScript function call wrapped around JSON.</p>\n<p>The upshot of all this: When you make a request without the callback parameter, GitHub will give you JSON. Unless it\u2019s called from JavaScript from the browser in which case, I believe it\u2019s the browser itself that says \u201cPapa don\u2019t preach that way\u201d and cancels the request completely because it won\u2019t allow JSON to come back.</p>\n<p>But when you tell jQuery to make the call as jsonp, it adds an auto-generated callback parameter (I believe you can specify the name of the callback if you so desire). GitHub is nice enough to adjust the response accordingly, wrapping the JSON in the callback function. Further, jQuery is nice enough to strip it off again and give you back the intended JSON.</p>\n<p>When I first started this post, it was going to lead up to this point where I ask: When creating an API, is it normal to support both JSON and JSONP requests? In fact, I ask the question in the title already.</p>\n<p>But it appears the answer is yes based on other services that offer APIs. Obviously, GitHub supports it. So does <a href=\"https://api.bitbucket.org/1.0/users/kbaley?callback=moo\">BitBucket</a>, <a href=\"http://api.twitter.com/1/statuses/user_timeline/kbaley.json?callback=moo\">Twitter</a>, <a href=\"http://dev.agilezen.com/concepts/formatting.html#jsonp_support\">AgileZen</a>, and Flickr (though Flickr uses a different <a href=\"http://www.flickr.com/services/api/response.json.html\">callback parameter name</a>). So\u2026thanks for listening, I guess\u2026</p>\n<h2>Final Note</h2>\n<p>JSONP (and any cross-domain request, I believe) is read-only. I.e. it supports GET requests only, not POSTs (or PUT or DELETE, I suppose). The odd thing is: I only discovered this today while researching for this post. This baffles me because I\u2019ve been doing AJAX apps since 2000 and don\u2019t remember ever having to deal with this. I suppose they were all same-domain, or if they were cross-domain, it was read-only. Anyway, score one for blogging because within the next two days, we would have run into this very issue at BookedIN and wasted a bunch of time tracking down the cause.</p>\n<p>To get around this limitation, there are two options (probably more depending on how academic you want to make your research):</p>\n<h3>Use a proxy</h3>\n<p>That is, you POST the request to the same domain and in the server code, forward the request on to the other domain. Remember, cross-domain security is only on the browser.</p>\n<h3>Cross-Origin Resource Sharing</h3>\n<p>This is new to me as well as of this morning. It\u2019s a draft specification to get around the same origin policy I\u2019ve spent these many minutes describing. I know nothing about except what I read on <a href=\"http://dev.agilezen.com/concepts/authentication.html#crossorigin_resource_sharing\">AgileZen\u2019s documentation</a>. The salient points are:</p>\n<ul>\n<li>Works on newer browsers only. This essentially translates into \u201cWorks on IE8 or higher and all versions of Firefox and Chrome that you\u2019re likely to see in the wild.\u201d</li>\n<li>May have issues with some proxy servers and firewalls</li>\n</ul>\n<p>This was enough for us to postpone this route to a future release when our client isn\u2019t the only one for the API.</p>\n<p>Kyle the Applicable</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/Q3oVow9Rt6s\" width=\"1\" />", "summary": "Executive Summary: Who knew serving up JSON for a public API was so complicatedly anti-hillbilly? Our next major phase at BookedIN\u2019s plan for world-except-for-Edmonton-and-certain-parts-of-Winnipeg-domination is underway. That\u2019s the public-facing site which will provide a way for YOU THE PUBLIC to&#", "id": "http://codebetter.com/kylebaley/2011/08/17/designing-an-api-is-jsonjsonp-an-andor-decision/", "categories": [], "metadata": {"guid": "11312078-47b7-42e3-97f9-6dee04a50571", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://rubenhenares.404fs.com/management-why-work-doesnt-happen-at-work/", "title": "Management: Why work doesn\u2019t happen at work", "datetime": "2011-08-17T10:20:06", "html": "<p>Nice <a href=\"http://www.ted.com/talks/jason_fried_why_work_doesn_t_happen_at_work.html\">talk</a> from Jason Fried at <a href=\"http://www.ted.com\">Ted.com</a> about interrupting employees and breaking their creativity flow.</p>\n<p>How many times have you reached the end of the day and you have asked yourself: &#8220;what did I do today?&#8221;.<br />\nCreating the right atmosphere that allow employees to work without interruptions ain&#8217;t easy.</p>\n<p>&#8220;M&#038;Ms Managers and Meetings, those are the real problems today&#8230;&#8221; Jason says.</p>\n<p>In my opinion, it&#8217;s not just limited to that, software crashes, server hangs, also break your flow. This is specially important when you are trying to collect metrics data. Hey, let&#8217;s find how many times our editor crashes and how long it takes for it to load.</p>\n<p><del datetime=\"2011-08-17T10:14:36+00:00\">Loading time * Number of Crashes = Time Lost * Average Employees Salary = MONEY LOST.</del></p>\n<p>Well&#8230; As my brother <a href=\"http://oliverhenares.tumblr.com/\">Oliver Henares</a> says, &#8220;Life is not in an Excel file&#8221;. Add to that formula the fact that when your editor crashes your employee is breaking his/her creative flow, and it could take him/her hours to reach back that climax. That has an impact on the quality of the product which is not easy to represent in numbers.</p>\n<p>Explaining something that can&#8217;t be shown in numbers, to people who think in numbers, isn&#8217;t an easy task. But it&#8217;s a philosophy that must be applied up to certain degree, to any creative development environment if you want to add that extra shiny touch to the final product.</p>", "summary": "Nice talk from Jason Fried at Ted.com about interrupting employees and breaking their creativity flow. How many times have you reached the end of the day and you have asked yourself: &#8220;what did I do today?&#8221;. Creating the right atmosphere that allow employees to work without interruptions ", "id": "http://rubenhenares.404fs.com/?p=237", "categories": [], "metadata": {"guid": "b8168487-e4cb-4e18-9c3b-252c463d9e2f", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=798", "title": "the importance of rig encapsulation", "datetime": "2011-08-16T21:34:15", "html": "<p>Being able to write good animation tools relies on being able to easily make queries about a rig.  Animation tools often need a high level understanding about how a rig works for many reasons.  But obviously you want to maintain a loose coupling between the two.  You want rigging to have the freedom to be able to change the way the rigs work without having to worry about breaking animation tools.  Conversely you don&#8217;t want animation tools to be hamstrung by the lack of ability to encapsulate the complexity of the rig.</p>\n<p>For example, is there a way to query the FK controls from a given IK control and vice-versa?  What about pole vector controls?  Is there a way to ask which controls have space switching?  If so can you query what the spaces are?  What about which controls are affected by a given space switch?  Given a joint can you get a list of the rig controls that drive it?  You get the idea.</p>\n<p>Animation tools are basically a layer that build on top of the rig layer.  If the rig layer isn&#8217;t rock solid, then animation tools will be unstable or feature restricted or both.</p>\n<p>Having some sort of programmatic interface to encapsulate the implementation details of your rig features is incredibly important if you want to be able to write useful and robust animation tools.  Without this sort of high level rig API you&#8217;ll most likely make it difficult or impossible to write the sort of tools that will enable your animators to be more productive.</p>\n<p>So if you&#8217;re writing a rigging system, try taking a break from it and building some animation tools.  Exercise that rigging API you&#8217;ve been spending so much time on.  Better yet, use all the animation tools you write as part of your unit testing to validate changes made to your rigging API.  Remember, as a rigger your customers are both your animators and anyone who might write animation tools.</p>", "summary": "Being able to write good animation tools relies on being able to easily make queries about a rig. Animation tools often need a high level understanding about how a rig works for many reasons. But obviously you want to maintain a loose coupling between the two. You want rigging to have the freedom to", "id": "http://www.macaronikazoo.com/?p=798", "categories": [], "metadata": {"guid": "f77143ea-7622-448b-906d-159f686e9cb1", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/16/indie-facial-performance-capture-rd/", "title": "Indie Facial Performance Capture R&D", "datetime": "2011-08-16T15:43:36", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\"clear: both; height: 3px; width: 100%;\"></div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"></a><a class=\"shareaholic-googleplusone\"></a></div><div style=\"clear: both; height: 3px; width: 100%;\"></div><!-- End Shareaholic LikeButtonSetTop --><p></p>\n<p>Suchan, a buddy from Nepal, just broke the independent game dev facial performance capture animation barrier.\u00a0 He deserves kudos for getting it to this stage.\u00a0 This would be such a valuable asset to any gaming company if he brings it to the next level or even at this stage I suspect.\u00a0 Suchan is on a solo climb of Mount Mocap and while he is a base camp right now, I expect he could make the difficult summit by himself!\u00a0 <img alt=\";)\" class=\"wp-smiley\" src=\"http://www.jonasavrin.com/wp-includes/images/smilies/icon_wink.gif\" /> \u00a0 Nice job!</p>\n<p>I wonder how much harder it would be to actually be able to do facial mocap from your smart phone directly to a character in Maya or Unity app without any markers, to me that&#8217;s Everest.\u00a0 It is, however, a tangible goal these days for developers and all the freely available mocap tech that&#8217;s on the market these days.</p>\n<div class=\"shr-publisher-2774\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "Suchan, a buddy from Nepal, just broke the independent game dev facial performance capture animation barrier.\u00a0 He deserves kudos for getting it to this stage.\u00a0 This would be such a valuable asset to any gaming company if he brings it to the next level or even at this stage I suspect.\u00a0 Suchan is on a", "id": "http://www.jonasavrin.com/?p=2774", "categories": [], "metadata": {"guid": "33fe54cf-f183-4a7d-8efa-a0a87f44e936", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://rubenhenares.404fs.com/management-bored-people-quit/", "title": "Management: Bored People Quit", "datetime": "2011-08-16T11:35:47", "html": "<p>I have read this <a href=\"http://www.randsinrepose.com/archives/2011/07/12/bored_people_quit.html\">extremely interesting article</a>, via <a href=\"http://www.robg3d.com/\">RobG3D</a> blog. It&#8217;s amazing how sometimes, there are situations that you have been seeing during years but, you just haven&#8217;t taken a step back to think about the words to describe them and therefore analyze them and look for a solution. When you see them broken-down, clearly written, it all seems so obvious , it all makes sense.</p>", "summary": "I have read this extremely interesting article, via RobG3D blog. It&#8217;s amazing how sometimes, there are situations that you have been seeing during years but, you just haven&#8217;t taken a step back to think about the words to describe them and therefore analyze them and look for a solution. W", "id": "http://rubenhenares.404fs.com/?p=233", "categories": [], "metadata": {"guid": "53266a3b-fa3b-4263-ab67-f3fc1b8e8c7f", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8986735539", "title": "Well I Lied", "datetime": "2011-08-16T01:49:34", "html": "<p>I said I would be posting soon\u2026yea, that didn\u2019t happen. \u00a0Sometimes life gets in the way. \u00a0If I had it my way, I\u2019d be pumping out blog post after blog post. \u00a0Actually, that\u2019s a lie too. \u00a0I would be drawing and programming my ass off, getting things done for my portfolio. \u00a0Hell I\u2019ve got at least 10 blog posts that are anywhere from 50 to 90 percent finished. \u00a0I just can\u2019t find the motivation to finish them. \u00a0Sometimes personal life just sucks up that motivation and takes a shit on you. \u00a0It\u2019s internal, possibly more powerful than the external factors I face. \u00a0I know this is nothing compared to some of the situations people are in, but regardless I feel this way. \u00a0It feels\u00a0weird\u00a0to bitch about my life on my blog. \u00a0Funny, I used to know that no one read my blog and it kinda became my spot for ranting and getting my feelings out. \u00a0Now it\u2019s totally different. \u00a0I\u2019m going to stop bitching now. \u00a0I\u00a0apologize.</p>", "summary": "<p>I said I would be posting soon\u2026yea, that didn\u2019t happen. \u00a0Sometimes life gets in the way. \u00a0If I had it my way, I\u2019d be pumping out blog post after blog post. \u00a0Actually, that\u2019s a lie too. \u00a0I would be drawing and programming my ass off, getting things done for my portfolio. \u00a0Hell I\u2019ve got at least 10", "id": "http://shawnkirsch.tumblr.com/post/8986735539", "categories": [], "metadata": {"guid": "8b68f75a-6c98-40f7-98c0-a12da6880a1b", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=755", "title": "What\u2019s Eating OOP?", "datetime": "2011-08-16T00:26:34", "html": "<p>Repost from altdevblogaday. Also of note that this was my first blog post that I know of that was reposted on reddit/hackernews, and on reddit especially the comments were sort of brutal&#8230; oh, internets. Anyway, I&#8217;d suggest heading over the altdevblogaday to <a href=\"http://altdevblogaday.com/2011/08/15/whats-eating-oop/#disqus_thread\">read the comments</a> when you&#8217;re done with the article.</p>\n<hr />\n<p>It has been commonplace over the past few years to bash Object Oriented Programming. \u00a0Functional programming going mainstream. \u00a0Data oriented design becoming commonplace for performance. \u00a0The resurgence of dynamic languages. \u00a0OO bastions going multi-paradigm. \u00a0Why is everything going wrong for traditional OOP?</p>\n<p>Because it took a while but we realized that canonical OOP sucks. \u00a0Let&#8217;s look at .NET&#8217;s humble <a href=\"http://msdn.microsoft.com/en-us/library/system.diagnostics.process.aspx\">System.Diagnostics.Process class</a>.</p>\n<ol>\n<li><strong>The sin of statefulness.</strong>\u00a0 ProcessStartInfo, the mutable type that represents the filename, args, std io, and other state of the Process, has 20 mutable (get/set) properties. \u00a0The Process type itself has over 50 properties (mostly immutable). \u00a0The problem here is that the Process itself transitions between three states- not started, running, and finished- and only a subset of properties are valid at any given time. \u00a0This whole situation is impossible to reason about- you either need to look at the extensive tests that would need to be written to test all the combinations of state, or you&#8217;d need to look at it under the debugger to know what&#8217;s going on.</li>\n<li><strong>Inheritance.</strong>\u00a0 This situation is bad enough. \u00a0But have you ever seen someone subclass Process? \u00a0I have, a few times, and it makes things even more impossible to reason about. \u00a0You presumably subclass it to ensure certain state is set up by default, such as Filename. \u00a0What if someone mutates that default, though? \u00a0You either allow it, which makes your class sort of pointless and breaks its invariant (Filename won&#8217;t change), or you don&#8217;t allow it by raising an Exception, or even worse, just silently returning, which would break the fundamental contract of your base class and the Liskov Substitution Principle (you are quite clearly changing the behavior if you are raising an exception or not fulfilling the contracts the base class makes). \u00a0There&#8217;s no point to inherit stateful objects like this, but that is canonical OOP.</li>\n<li><strong>Code reuse through inheritance/polymorphism.</strong>\u00a0 Obviously code reuse is a good thing. \u00a0The problem is the way OOP encourages it, through polymorphism via inheritance. \u00a0Process does not implement any interfaces. \u00a0You could not pass Process to a method or class that, say, is responsible for managing IO and std streams in general, not just for Process. \u00a0Actually, this isn&#8217;t a big problem- just either wrap the Process in something (don&#8217;t subclass it!), or pass in only the actual data/methods needed. \u00a0The ease of getting around this quite clearly demonstrates that, if you were to take away inheritance, it really wouldn&#8217;t be such a big deal- would it?</li>\n<li><strong>Messy contracts and abstractions.</strong>\u00a0 What are the contracts on Process? \u00a0Good luck trying to figure them out by reading the documentation (which is extensive). \u00a0I think everyone has put an asynchronous process into a deadlock, even when following MSFT&#8217;s directions. \u00a0Understanding how to use Process still requires a pretty thorough understanding of the underlying system, and it ends up in a no-man&#8217;s land between simplicity and power. \u00a0These messy (not just leaky) abstractions are the major problem when consuming other people&#8217;s code- I can&#8217;t count how many 3rd party modules I&#8217;ve seen crashes or problems in, if they have a reasonable enough API to figure out in the first place.</li>\n</ol>\n<p>I&#8217;m aware I&#8217;m picking on Process here. \u00a0It is a .NET 1.0 type, and the .NET framework (and programming in general) has matured immeasurably. \u00a0I&#8217;m sure if the team were to do it again, they would do it quite differently. \u00a0Process is a simple thing but obviously technically not easy- look at the dozens of ways Python had to launch a process, until <em>subprocess.POpen</em> simplified things into a wonderfully simple yet powerful way. \u00a0But that&#8217;s another good point, isn&#8217;t it- even Microsoft, who are supposed to be the leaders in these things (they are the ones training people and publishing the guides), &#8216;get it wrong,&#8217; if it&#8217;s even possible to get right (it isn&#8217;t). \u00a0How is Sammy the Scripter supposed to learn these lessons easily? \u00a0He won&#8217;t. \u00a0It will take him years, and he&#8217;s not going to learn it from OOP, he&#8217;s going to learn it (like the C# team did) from other languages and concepts. \u00a0But this whole time, we&#8217;re telling him these fallacies about the wonders of OOP, with inheritance, polymorphism, code reuse, abstraction, patterns, and every other buzzword.</p>\n<p>So what are we gonna do? \u00a0Well, the first thing is to throw out ideological purity when it comes to OOP. \u00a0The language designers are way ahead of us. \u00a0Dynamic languages like python and Ruby have long been multi-paradigm. \u00a0C# has been making big strides in the area, with anonymous methods/lambdas in 3.5, and even adding dynamic typing support in 4.0. \u00a0Java and even <a href=\"http://en.wikipedia.org/wiki/C%2B%2B0x\">C++</a> are following suit. \u00a0On the opposite end of the spectrum, people are also taking <a href=\"http://en.wikipedia.org/wiki/Code_contracts\">hints from Eiffel</a>, the most thorough and pure OO language around, with things like .NET&#8217;s Code Contracts.</p>\n<p>We&#8217;re still lagging behind with education (the education we give at work, not just universities). \u00a0We need to expand our toolbox by looking at other languages and other concepts. \u00a0We need to throw out much of the traditional OOP approach we&#8217;ve taken that hasn&#8217;t worked. \u00a0(As a commenter pointed out- ideological purity is an aid for new people, but we too often label it as best practices.) \u00a0But I also don&#8217;t want to throw the baby out with the bathwater and start declaring that <a href=\"http://www.google.com/search?btnG=1&amp;pws=0&amp;q=oop+is+dead\">OOP is dead</a>, or all around \u00a0inferior. \u00a0The practical applications of OOP languages (and not necessarily their ideological underpinnings) make them natural for multi-paradigm implementations, and this is something I think it&#8217;d be hard to say of procedural, or even functional, languages.</p>\n<p>I&#8217;d love to see us start to branch out in how we educate and teach to include these non-OO concepts, so we can better use the generally excellent OO languages available. \u00a0Let&#8217;s take the lack of state from functional programming. \u00a0That&#8217;s easy enough to\u00a0do. \u00a0Let&#8217;s take the modularity and specificity of data oriented design solutions. \u00a0Not everything has to fit into some grande, reusable abstraction. \u00a0Let&#8217;s be honest about the fact that most of our code does a particular thing and isn&#8217;t reused. \u00a0Let&#8217;s take design by contract from Eiffel, and stress how important contracts are for a clear and well abstracted API. \u00a0Let&#8217;s take duck typing from dynamic languages, so we don&#8217;t have to write a new interface to use our code somewhere (interfaces are great, except when you want some small overlap or subset of functionality- look at how even though .Add isn&#8217;t part of .NET&#8217;s IEnumerable, it gets special treatment by the compiler). \u00a0On the other hand, let&#8217;s not forget that formal interfaces are important, and make sure we have those (like ABC&#8217;s in python).</p>\n<p>We have most of these things already, because the language designers are really quite smart people and are way ahead of where the mainstream usage and understanding of these concepts are. \u00a0We just need to start using and teaching them more intelligently. \u00a0Maybe it is a PR thing? \u00a0Stop calling our languages &#8216;object oriented&#8217; and take the focus off of the &#8217;4 principles&#8217;, and start teaching people how to program effectively using a variety of paradigms.</p>\n<p>Likewise, I&#8217;d like to see caution when talking about the style-a-la-mode, whether that&#8217;s AOP, DOD, FP, whatever, so we don&#8217;t start treating it as a golden hammer. \u00a0As modern programmers, we live in a complex world, and it is our duty to continually educate ourselves and others using all the information we can find.</p>\n<p>&nbsp;</p>", "summary": "Repost from altdevblogaday. Also of note that this was my first blog post that I know of that was reposted on reddit/hackernews, and on reddit especially the comments were sort of brutal&#8230; oh, internets. Anyway, I&#8217;d suggest heading over the altdevblogaday to read the comments when you&#82", "id": "http://www.robg3d.com/?p=755", "categories": [], "metadata": {"guid": "b67cb173-117f-471f-826f-12c82566311f", "likes": 0, "is_published": false}}, {"author": "Adam", "url": "http://adammechtley.com/2011/08/biped-editor-update/", "title": "Biped Editor Update", "datetime": "2011-08-15T23:03:02", "html": "<p>I&#8217;ve been pretty silent lately, but I&#8217;ve also been busy! In addition to getting our place ready for our first baby (!), I&#8217;ve been wrapping up stuff on the <a href=\"http://www.amazon.com/Maya-Python-Games-Film-Reference/dp/0123785782/ref=sr_1_1?ie=UTF8&#038;qid=1313447676&#038;sr=8-1\" title=\"Maya Python for Games and Film\">Maya Python book</a>. I&#8217;m happy to report the proofs have been well under way, and it will be going to print soon. Our official sale date is at the end of November. I hope some of you out there find it helpful!</p>\n<p>With baby due any day, I am frantically trying to tie up a few loose ends, and so made time to put together an update for my Biped Editor on the Unity Asset Store. The main new feature I added is some simple mechanisms to help characters intelligently get up from ragdoll (a request I&#8217;ve gotten from quite a few customers). I haven&#8217;t had a huge number of test cases, so do please let me know if you have any issues so I can get it fixed! (Note also I will be increasing the tool&#8217;s price, so buy it now while it&#8217;s cheap and get the free upgrade as soon as it hits!)</p>\n<p></p>", "summary": "I&#8217;ve been pretty silent lately, but I&#8217;ve also been busy! In addition to getting our place ready for our first baby (!), I&#8217;ve been wrapping up stuff on the Maya Python book. I&#8217;m happy to report the proofs have been well under way, and it will be going to print soon. Our offici", "id": "http://adammechtley.com/?p=1149", "categories": [], "metadata": {"guid": "222e7225-f74d-4446-a216-720973f85e35", "likes": 0, "is_published": false}}, {"author": "anim8d (timborrelli@gmail.com)", "url": "http://strongmanimator.blogspot.com/2011/08/open-letter-to-andy-serkis.html", "title": "An Open Letter To Andy Serkis", "datetime": "2011-08-15T12:32:03.957000", "html": "Dear Mr. Serkis,<br /><br />If you deserve to be considered for an Academy Award nomination for Acting in regards to your performance motion capture, then every animator who has ever animated a character in any movie deserves consideration as well.<br /><br />Sincerely,<br /><br />Tim Borrelli<br /><br />P.S., Let me clarify:<br /><br /><div class=\"\" style=\"clear: both; text-align: left;\">Recently, you have been quoted as claiming that performance capture actors deserve to be considered for the Academy Awards in Acting categories:</div><div class=\"MsoNormal\"></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><a href=\"http://www.guardian.co.uk/film/2011/aug/12/andy-serkis-motion-capture-acting\">http://www.guardian.co.uk/film/2011/aug/12/andy-serkis-motion-capture-acting</a><u><span style=\"color: blue;\"></span></u></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Before I even start, let me say that I feel that you are a great actor. I don\u2019t doubt your acting ability, both on stage and on film. But that\u2019s not the debate here.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">From what I gather, here is what you are suggesting. You seem to feel that performances like yours in Lord of the Rings (Gollum), King Kong (King Kong), and Rise of the Planet of the Apes (Caesar) should be recognized by The Academy as an individual effort in excellence of acting performance.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Wait. What?</div><div class=\"MsoNormal\"><br />Let\u2019s ignore the fact that animators have been doing this without motion capture longer than you have been suiting up for it.<br /><br /></div><div class=\"MsoNormal\">Performance capture is the digital capture of a performance of an individual actor, to be later applied to a digital character. Yet according to you, \u201c\u2026there are two parts to the process. The first part is capturing the performance. Only later down the line do you start seeing the characters being painted over frame by frame using pixels.\" </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">First, that doesn\u2019t sound like an individual performance to me.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Second, painted over? Using pixels? For a guy who has positioned himself to be the spokesperson for performance capture, it sounds like you don't <i>quite </i>understand what goes into the entire process.<br /><br /></div><div class=\"MsoNormal\">Ignoring the fact that there is nothing \u201cbeing painted over frame by frame using pixels\u201d (almost) anywhere in the process, you seem to be ignorant of what happens to your performance data after you walk off the set. Many times, chunks of data need to be thrown out entirely and done by hand. Also, it is quite often that the actor\u2019s proportions don\u2019t match that of the digital characters, requiring a remapping of the motion. This may not seem like it affects a performance, but it in fact does. Different proportions means poses don\u2019t read the same. It means a slouch on a short actor is a hunchback on a tall character. It means delicate interactions often need to be heavily modified or redone with animation due to differing limb lengths. I could go on.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Long story short, it means the performance is not 1-to-1 from performance capture to screen.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Furthermore, you claim that \"Performance-capture technology is really the only way that we could bring these characters to life\u2026 It's the way that Gollum was brought to life, and King Kong, and the Na'vi in Avatar and so on and it's really another way of capturing an actor's performance.\u201d</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">You then go on to say, \u201cThat's all it is, digital make-up.\"</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">What. The. Hell. </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Well, makeup artists HAVE an Oscar category. So are you also suggesting that the people behind taking his performance to the big screen be considered in that category? When you say \u201cthat success using the technique can be rewarded with current accolades,\u201d is that what you mean? Should the modelers, animators, painters, shader TDs, lighters, etc., be considered for Makeup and Costume Design?</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Makeup and Costume Design teams do&nbsp;<i>amazing </i>work. I just have trouble seeing how modelers, animators, painters, shader TDs, lighters, etc. fit into those categories.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Or are you referring to the VFX category (which, while valid, is a much broader category than acting), or even the lesser known, non-televised technology categories? Are you basically saying that your performance, which wouldn\u2019t even be viewable without those aforementioned teams of people, is more deserving of public recognition? </div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">I, as well as many others, won\u2019t argue that motion capture data is only as good as the actor in the suit. I have directed and worked with motion capture data from actors on both ends of the talent spectrum. I agree that without the proper direction and performance, the end result that I produced wouldn\u2019t be as emotional, as powerful, or as accurate.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">However, I also know that without a talented digital character team (animators, modelers, TDs, etc.), that performance will NEVER look as intended.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">What you've done here, Mr. Serkis, is downplay the contribution that the whole team makes to bring a character like Gollum to life. What\u2019s worse is that you aren\u2019t alone. In this featurette on the making of Rise of the Planet of the Apes, the animation team is completely overlooked!<br /><br /></div><div class=\"MsoNormal\"><div class=\"separator\" style=\"clear: both; text-align: center;\"></div><br /></div><div class=\"MsoNormal\">Is the technology that Weta developed awe-inspiring and exciting? Hell yes it is. I\u2019d love to be on set just for a day and see what the technology is like from start to finish. It would be amazing (and after writing this I may never get the chance). But to see the contribution of an entire discipline glossed over so readily by both a recognizable name (your own, Andy Serkis!) AND a production team is disheartening and frustrating.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Yet, as infuriating as that may be, this is not the point I want to make here. That point is:</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">If you deserve to be considered for an Academy Award nomination for Acting, then every animator who has ever animated a character in any movie deserves consideration as well.</span></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Animators, both hand-keyed and motion capture artists, breathe life into their characters. They push performances of their characters to an artistic limit, based on the direction they are given. Many even use video reference- animators often of themselves performing (yes, ACTING) the scenes they are working on, mocap artists using video shot on set.</div><div class=\"MsoNormal\"></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Not to single one person out, but some do it REALLY WELL, like this example (password: education):</div><div class=\"MsoNormal\"><br /></div><br /><div style=\"text-align: center;\"></div><a href=\"http://vimeo.com/27379093\">Rio Comparison Reel</a> from <a href=\"http://vimeo.com/user8028778\">jeff gabor</a> on <a href=\"http://vimeo.com/\">Vimeo</a>.<br /><br /><div class=\"MsoNormal\">And this one:</div><div class=\"MsoNormal\"><br /></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"></div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">It should be clear that this guy is an amazing animator. He\u2019s also a great example of an animator using his own performance to bring characters to life (in the case of Rio, a female lead, and supporting male, and a bird.) As animators, we\u2019ve been taught that video reference is a powerful tool. Like any tool, however, it requires training and practice to get right.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Some things may come more naturally (in a male animator\u2019s case, the supporting male). Some things may take more creativity (like humanizing a creature, such as a bird). Even other things may take a bigger investment into the movement and emotion of the character (the female lead).</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">However, the end result in Rio didn\u2019t come from just an animator\u2019s performance. It came from the ability to translate that acting into what the digital character warranted.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Like you, Mr. Serkis, animators use their performance to improve and sell the characters they are acting for, in the interest of the whole story.</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">So my question for you is this:</div><div class=\"MsoNormal\"><br /></div><div class=\"MsoNormal\">Don\u2019t animators also deserve individual recognition from the Academy for Acting?<br /><br />Mr. Serkis, please leave a comment here, or drop me a line. I welcome the discussion, as would many others who do and do not share my opinion.</div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4248341596629159263-6180644853011344220?l=strongmanimator.blogspot.com\" width=\"1\" /></div>", "summary": "Dear Mr. Serkis,<br /><br />If you deserve to be considered for an Academy Award nomination for Acting in regards to your performance motion capture, then every animator who has ever animated a character in any movie deserves consideration as well.<br /><br />Sincerely,<br /><br />Tim Borrelli<br />", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-6180644853011344220", "categories": [], "metadata": {"guid": "c11523f6-836e-4f20-8207-ac2a12c54e15", "likes": 0, "is_published": false}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=80", "title": "read only registry browser", "datetime": "2011-08-15T04:19:16", "html": "<p>A handy registry browser that works in read only mode:<br />\n<a href=\"http://www.softspotsoftware.com/pages/downloads/RegBrowser.zip\">http://www.softspotsoftware.com/pages/downloads/RegBrowser.zip</a> (including source in Delphi)</p>\n<p>When do you want to use this? If IT blocked write access to a PC&#8217;s registry. Windows&#8217; own registry editor isn&#8217;t clever enough to operate in a read only mode and refuses to launch. That&#8217;s when you can use this tool.</p>", "summary": "A handy registry browser that works in read only mode: http://www.softspotsoftware.com/pages/downloads/RegBrowser.zip (including source in Delphi) When do you want to use this? If IT blocked write access to a PC&#8217;s registry. Windows&#8217; own registry editor isn&#8217;t clever enough to operat", "id": "http://blarg.robertkist.com/?p=80", "categories": [], "metadata": {"guid": "f3209357-cf61-4430-add0-237ee05d1985", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/12/character-development-and-rigging-for-facial-animation-part-1/", "title": "Character Development and Rigging for Facial Animation Part 1", "datetime": "2011-08-13T05:50:13", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\"clear: both; height: 3px; width: 100%;\"></div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"></a><a class=\"shareaholic-googleplusone\"></a></div><div style=\"clear: both; height: 3px; width: 100%;\"></div><!-- End Shareaholic LikeButtonSetTop --><p>This demo illustrates the steps taken to develop a character from concept sketches to finished facial rig in a simplified format. This is an actual rig I developed with the use of proprietary rigging tools in Maya utilized daily at work so I&#8217;m not going to demo those tools. However, future installments will incorporate the use of tools that I have written and that you can use to aide the building of complex facial rigs such as this, and include overviews of more advanced rigging techniques. I would also like to break the process down into chunks to really go into more detail about things you should be thinking about if you are trying to rig a face. This is an ongoing process so stay tuned, I have lot&#8217;s of useful tips to share.</p>\n<p></p>\n<p><span id=\"more-2761\"></span></p>\n<p>The simple breakdown:</p>\n<p>Concept Art<br />\n1) Concept painting in photoshop is the first step to try and figure out a solid direction. I had nothing to go on except it needed to be a sexy female which is difficult because what makes just a head sexy? A lot of fashion models have killer bodies that obviously encorporate a lot of the determining factors, so blocking out and finessing the important attributes of a desirable face is imperative and what make this exercise challenging.</p>\n<p>2) Orthographic views and 3/4 of the type of head I was going for. It turns out that I didn&#8217;t make the design decision of sticking with a pinup style female until after I sketched the head turnaround drawing inspiration from another concept painting I liked. Thus, I use the head turnaround purely as a generic starting point. Getting it into 3d was more important at this stage than making a final decision on the character design. Sculpting tools make it easier to finalize the design anyway, at least for me.</p>\n<p>Concept Sculpt and Texturing<br />\n3) It&#8217;s hard to really nail down a 2d design before you get it into 3d especially when you have a couple of different genres competing for your affections. I was fighting with making a supermodel or a pinup style face. Luckily Mudbox made that process easier. The final probably looks like a mashup of both.</p>\n<p>Sculpting the head is really where I made my design decisions take on an afterlife from their inception, attempting to distill organic forms that looked more finalized.</p>\n<p>4) Texture painting with ptex as an experimental process was useful in further exploration of the design. Since I didn&#8217;t have to fully commit and make UVs, and I already had good sculpting topology, the freedom to experiment was limitless.</p>\n<p>Model Rigging Prep<br />\n5) Retopology of the low res mesh using Modo produced the best and the cleanest generic mesh result in the least amount of time. This simple mesh is also highly reusable as a starting point for other designs.</p>\n<p>6) The final mesh to be rigged needs to have just enough loops for an optimal resulting deformation after skinning, most importantly the mouth followed by the eyes etcetera. The low res retop is not a good choice for good deformation except if you are trying to output a low poly game rig.</p>\n<p>Since I was under the gun to get the model and rig done in a week or two I had to continue to refine the proportions at the same time as modeling good topology. The resulting workflow is a sculpting approach to modeling low res whereby slowly adding more loops, followed by a pass of smoothing and carving the subdivision preview available in Modo, and then stepping back down to the lower res geo, got the job done. Beware when trying this technique in Zbrush or other software because editing proportions and sculpting high res and then deleting the higher divisions will indirectly smooth the resulting mesh thereby erasing the detail. I suggest using this workflow only in Modo where you can hit Tab to toggle on an off subdivisions, Catmull Clark being the best (Shift-Tab). I have to say Modo is supreme for modeling not only for these cababilities, but also the superior advantage of quickly lighting and rendering a preview with occlusion and GI. The physical lighting makes the model feel more real with a sense of scale from cast shadows and a simple skin texture. Blemishes and undesirable defects become glaringly more obvious as well, making it easier to spot and fix.</p>\n<p>Rigging with Joints<br />\n7) Rigging Starts with joints only with a control rig that either drives the joints directly via constraints or by constraining parent controls so that they drive groups of child controls. Some controls around the mouth are driven by SDK as well so a system of using multiple null buffer nodes is used to get proper tranformations and rotations of the controls or else there would be not so desirable or predictable results.</p>\n<p> <img alt=\"8)\" class=\"wp-smiley\" src=\"http://www.jonasavrin.com/wp-includes/images/smilies/icon_cool.gif\" /> The weighting process is time consuming but with adequate practice and great topology like this some people can get it done in literally hours. I&#8217;m slower but that&#8217;s because I am a perfectionist when it comes to weighting.</p>\n<p>9) The control rig is a series of stock curves constrained to the rig when the rig gets built so it&#8217;s easy to modify and save those curves for a perfectly fast result that is highly reusable.</p>\n<p>The Osipa style face rig is preferred a lot by animators and the next demo will go over how I use multiple styles of UI on the same rig and the tools to generate said controls.</p>\n<p>Subsequent demos will include facial poses and blends and making this rig work with both also known as a hybrid rig. The advantage of poses made with joints only are great because its less computationally expensive but blends are necessary for folding, wrinkling, and some minor correctives.</p>\n<div class=\"shr-publisher-2761\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "This demo illustrates the steps taken to develop a character from concept sketches to finished facial rig in a simplified format. This is an actual rig I developed with the use of proprietary rigging tools in Maya utilized daily at work so I&#8217;m not going to demo those tools. However, future ins", "id": "http://www.jonasavrin.com/?p=2761", "categories": [], "metadata": {"guid": "151618b7-e734-4383-bd45-8b97002a40d9", "likes": 0, "is_published": false}}, {"author": "Peter van Ooijen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/528PYM8S0Sg/", "title": "Running Visual Studio (and Resharper) on a Mac", "datetime": "2011-08-11T08:53:25", "html": "<p>Many before me have made this step, finally I took it myself. The excuse to get me a Mac was building iPhone apps with <a href=\"http://ios.xamarin.com/\">Monotouch</a>. My expectations were great and all were fully met. After battling a couple of blue screens and a lot of Windows updates I decided to pass my Dell to my son\u2019s game addiction and move as much as possible to the Mac. I wanted to mix the (excellent) Mac mail, surf and other tools with the Windows only tool Visual Studio. Using <a href=\"http://www.apple.com/support/bootcamp/\">Bootcamp</a> to boot either OSX or Windows on Apple hardware was not good enough. <a href=\"http://www.vmware.com/products/fusion/overview.html\">VMware fusion</a> runs any version of Windows (including 64 bit) almost seamless under OSX.</p>\n<p>To give both OSX and Windows some air my Macbook has 8 Gb of Ram. 4 gigs is standard. VMware fusion works as promised. Windows runs like a charm; resuming (from sleep mode) is even faster than on a PC.</p>\n<p>The only thing which needed some attention was Resharper which highly depends on specific keystrokes. The Mac keyboard is quite different, making all keys work required fiddling some settings in several places. I have an external <a href=\"http://store.apple.com/us/product/MB110LL/B\">Mac keyboard with a numeric keypad</a>, a surprising minimalistic approach after all curved desktop hoggers with multi media extensions. It is a nice fast and relaxing typer. </p>\n<p>The problem keys</p>\n<h2>Insert</h2>\n<p>There is no insert key on a Mac keyboard. VMware can map keys, a <a href=\"http://blogs.vmware.com/teamfusion/2008/10/vmware-fusion-7.html\">post on the VMware support forum</a> describes how to map the Ins key, explicitly mentioning R# <img alt=\"Smile\" class=\"wlEmoticon wlEmoticon-smile\" src=\"http://codebetter.com/petervanooijen/files/2011/08/wlEmoticon-smile.png\" style=\"border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none;\" /> There is no need to do that for the external keyboard, the 0 on the numeric keypad works just like the &lt;ins&gt;. Type &lt;alt&gt;&lt;0&gt; and you have your new class.</p>\n<h2>Ctrl-Click</h2>\n<p>In the default VMware key mappings&nbsp; &lt;ctrl&gt;&lt;click&gt; is mapped to a mouse right click. Disable or change that in the VMware preferences</p>\n<p><a href=\"http://codebetter.com/petervanooijen/files/2011/08/MAcKb1.png\"><img alt=\"MAcKb1\" border=\"0\" height=\"509\" src=\"http://codebetter.com/petervanooijen/files/2011/08/MAcKb1_thumb.png\" style=\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; border-top: 0px; border-right: 0px; padding-top: 0px;\" width=\"492\" /></a></p>\n<h2>Function keys</h2>\n<p>The default behavior of Mac Function keys does things like changing the audio volume.&nbsp; You change that in System Preferences.</p>\n<p><a href=\"http://codebetter.com/petervanooijen/files/2011/08/MacKb2.png\"><img alt=\"MacKb2\" border=\"0\" height=\"448\" src=\"http://codebetter.com/petervanooijen/files/2011/08/MacKb2_thumb.png\" style=\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; border-top: 0px; border-right: 0px; padding-top: 0px;\" width=\"502\" /></a></p>\n<p>This does not always work for all keys. In the key mappings of VMware is the possibility to enable Mac OS keyboard shortcuts.</p>\n<p><a href=\"http://codebetter.com/petervanooijen/files/2011/08/MacKb4.png\"><img alt=\"MacKb4\" border=\"0\" height=\"529\" src=\"http://codebetter.com/petervanooijen/files/2011/08/MacKb4_thumb.png\" style=\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; border-top: 0px; border-right: 0px; padding-top: 0px;\" width=\"511\" /></a></p>\n<p>The Apple-Tab key is nice to have to switch from VS, even in full screen, to Apple mail with one keystroke. The expos\u00e9 one is not that nice, as it is linked to the F9 and F10 function keys. Trying to set a breakpoint will show you Mac\u00b4s desktop\u2026</p>\n<p>These key mappings can be changed in System preferences, Expos\u00e9 and Spaces</p>\n<p><a href=\"http://codebetter.com/petervanooijen/files/2011/08/MacKb3.png\"><img alt=\"MacKb3\" border=\"0\" height=\"497\" src=\"http://codebetter.com/petervanooijen/files/2011/08/MacKb3_thumb.png\" style=\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; border-top: 0px; border-right: 0px; padding-top: 0px;\" width=\"506\" /></a></p>\n<p>Here I just disabled the keys. A four finger swipe works just as good.</p>\n<p>Well, that\u00b4s all. Now I have my full VS experience with everything Mac just a keystroke away.</p>\n<p><a href=\"http://codebetter.com/petervanooijen/files/2011/08/DSC_6531_001.jpg\"><img alt=\"DSC_6531_001\" border=\"0\" height=\"772\" src=\"http://codebetter.com/petervanooijen/files/2011/08/DSC_6531_001_thumb.jpg\" style=\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; border-top: 0px; border-right: 0px; padding-top: 0px;\" width=\"513\" /></a></p>\n<p>Recommended.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/528PYM8S0Sg\" width=\"1\" />", "summary": "Many before me have made this step, finally I took it myself. The excuse to get me a Mac was building iPhone apps with Monotouch. My expectations were great and all were fully met. After battling a couple of blue&#160;&#8230; <a href=\"http://codebetter.com/petervanooijen/2011/08/11/running-visual-st", "id": "http://codebetter.com/petervanooijen/2011/08/11/running-visual-studio-and-resharper-on-a-mac/", "categories": [], "metadata": {"guid": "f2005ee0-c374-4e0f-9822-d1bd99d2d52d", "likes": 0, "is_published": false}}]"
09-10 23:30 SocketClient INFO     Returning(as str): '[{"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/08/maya-command-completion-issues-in.html", "title": "Maya Command Completion issues in Python", "datetime": "2011-08-18T04:59:26.944000", "html": "Something Dave discovered a while ago and has just come back to bite us again is that the dot code completion in the scriptEditor in Maya is actually RUNNING the code inside Python property blocks when you call a dot complete (Ctrl+Space). It\'s not just returning the function/property list by using something like the inspect module, but actually running the property itself. The same is true when<br />you hit return to accept and fill that function/property in the script editor.<br /><br />Test it, add this in a Python Script window:<br /><br /><pre class=\\"python\\" name=\\"code\\">import pymel.core as pCore\\n<br />\\n<br />class AutoCompleteTest(object):\\n<br />\\n<br />    def __init__(self):\\n<br />        pass\\n<br />\\n<br />    @property\\n<br />    def Test(self):\\n<br />        print \\"Im being CALLED Multiple times!!!!!\\\\n\\" \\n<br />        pCore.newFile(force=True)\\n<br />\\n<br /></pre><br />Now do the following:<br /><br />com=AutoCompleteTest()<br /><br />turn on \\u2019Command Completion\\u2019 and do a dot complete to inspect the com object you just made!<br /><br />The property is now being RUN. So what you ask? Well lets say you are doing something stupid like the fileNew example above, just by trying to get code completion you\'ve actually nuked your scene. Also because it\'s doing this for all the inspect calls it means that it\'s running all code, in all property blocks which makes it very, very slow!<br /><br />Mark<br /><br /><br /><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/1407054789026932542-6682116681588518415?l=markj3d.blogspot.com\\" width=\\"1\\" /></div>", "summary": "Something Dave discovered a while ago and has just come back to bite us again is that the dot code completion in the scriptEditor in Maya is actually RUNNING the code inside Python property blocks when you call a dot complete (Ctrl+Space). It\'s not just returning the function/property list by using ", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-6682116681588518415", "categories": [], "metadata": {"guid": "1bda313a-0f46-4f94-9591-b6d1fcf9d461", "likes": 0, "is_published": false}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/08/more-playblast-issues-frame-syncing.html", "title": "More Playblast issues - Frame Syncing issues with Xvid", "datetime": "2011-08-18T04:59:02.097000", "html": "So we thought all was good, we\'ve moved from wrapping the FFDS encoder to using a native 64bit version of Xvid in playblasts and all is good.... or so we thought. It turns out that the default Xvid Encoder settings DO NOT maintain frame counts correctly, randomly inserting padding frames into the Avi. So if you load an avi with baked in FrameCounter from Maya into Virtual Dub and step through it you\'ll see the frame counters get out of sync. We\'re only talking 2 or 3 frames but that\'s enough to completely stuff facial lip sync up and cause anybody using these avi\'s as master guides to have problems.<br /><br /><br />The cure is simple, launch the Configure Encoder settingsUI from your Start&gt;Programs&gt;Xvid folder and make sure you turn OFF the B-VOP\'s (b-frames) under the Profiles@level&gt;more&gt;profile UI. All of a sudden all is in sync and happy. God damned all the time we\'ve wasted getting these working!<br /><br />Mark<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/1407054789026932542-1447026508580877184?l=markj3d.blogspot.com\\" width=\\"1\\" /></div>", "summary": "So we thought all was good, we\'ve moved from wrapping the FFDS encoder to using a native 64bit version of Xvid in playblasts and all is good.... or so we thought. It turns out that the default Xvid Encoder settings DO NOT maintain frame counts correctly, randomly inserting padding frames into the Av", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-1447026508580877184", "categories": [], "metadata": {"guid": "1fee526f-d11f-4da9-a38e-828c27ec13ed", "likes": 0, "is_published": false}}, {"author": "Kyle Baley", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/6jGcLLTwYp4/", "title": "Designing an API: Is JSON/JSONP an and/or decision?", "datetime": "2011-08-17T14:03:05", "html": "<p>Executive Summary: Who knew serving up JSON for a public API was so complicatedly anti-hillbilly?</p>\\n<p>Our next major phase at <a href=\\"http://getbookedin.com\\">BookedIN\\u2019s</a> plan for world-except-for-Edmonton-and-certain-parts-of-Winnipeg-domination is underway. That\\u2019s the public-facing site which will provide a way for <strong><em><u>YOU THE PUBLIC</u></em></strong> to book appointments online at your favorite\\u2026ahem\\u2026\\u201dservice providers\\u201d. Let me explain our marketing strategy in detail.</p>\\n<p>Ha ha, I jest of course. That last sentence is the sum-total of what I know about our marketing strategy. I have a hard enough time trying to keep myself entertained through code. (As a general rule, I start with the code reviews.)</p>\\n<p>To populate the public site, we\\u2019re building an API around our appointment manager. And we\\u2019ve opted for JSON as the default format mostly because I love the way people pronounce it, accenting both syllables like badly-translated anime.</p>\\n<p>In this app, we are making two API calls from two different places. When we first load the page for a particular vendor, the server makes a call to retrieve the company details and a list of services. After the page is loaded, jQuery comes along and populates the list of available appointment times. In this way, we get the benefit of SEO being able to see the vendor details and services and a snappy user interface when the user navigates to different dates within a particular vendor page, as outlined on the <a href=\\"http://googlewebmastercentral.blogspot.com/2007/11/spiders-view-of-web-20.html\\">Google Webmaster Blog</a> (though I didn\\u2019t actually discover that link until after we decided on the structure).</p>\\n<p>In the appointment manager, serving up JSON is pretty simple. Configure the servlet, get the data, convert to JSON (we\\u2019re using <a href=\\"http://jackson.codehaus.org/\\">Jackson</a>), and write it to the response. This is working just fine with the server-side company details call.</p>\\n<p>For the client-side call, it\\u2019s not. Depending on how you configure the AJAX call in jQuery, we get one of the following:</p>\\n<ul>\\n<li>The API call is never made\\n<li>The call is made but cancelled\\n<li>The call is made and returns but has no data</li>\\n</ul>\\n<p>All are symptoms of the same issue: cross-domain client calls, which aren\\u2019t allowed. I read that it\\u2019s for security reasons which, due to my loathing of all things security-related, was enough for me not to read further.</p>\\n<p>From what I can tell, you can\\u2019t make a call to another domain in jQuery (or likely any JavaScript library) and expect to get JSON back.</p>\\n<p>Here\\u2019s an example. Follow this link in your browser: <a href=\\"https://github.com/api/v2/json/repos/search/zenboard\\">https://github.com/api/v2/json/repos/search/zenboard</a></p>\\n<p>You\\u2019ll probably get this back: </p>\\n<div style=\\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: \'Courier New\', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\\">\\n<div style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\">\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   1:</span> {<span style=\\"color: #006080;\\">\\"repositories\\"</span>:[{<span style=\\"color: #006080;\\">\\"type\\"</span>:<span style=\\"color: #006080;\\">\\"repo\\"</span>,<span style=\\"color: #006080;\\">\\"username\\"</span>:<span style=\\"color: #006080;\\">\\"amirci\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   2:</span> <span style=\\"color: #006080;\\">\\"url\\"</span>:<span style=\\"color: #006080;\\">\\"https://github.com/amirci/zenboard\\"</span>,<span style=\\"color: #006080;\\">\\"watchers\\"</span>:5,<span style=\\"color: #006080;\\">\\"owner\\"</span>:<span style=\\"color: #006080;\\">\\"amirci\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   3:</span> <span style=\\"color: #006080;\\">\\"has_wiki\\"</span>:<span style=\\"color: #0000ff;\\">true</span>,<span style=\\"color: #006080;\\">\\"open_issues\\"</span>:0,<span style=\\"color: #006080;\\">\\"score\\"</span>:6.994658,<span style=\\"color: #006080;\\">\\"followers\\"</span>:5,<span style=\\"color: #006080;\\">\\"forks\\"</span>:3,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   4:</span> <span style=\\"color: #006080;\\">\\"has_issues\\"</span>:<span style=\\"color: #0000ff;\\">true</span>,<span style=\\"color: #006080;\\">\\"language\\"</span>:<span style=\\"color: #006080;\\">\\"Ruby\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   5:</span> <span style=\\"color: #006080;\\">\\"description\\"</span>:<span style=\\"color: #006080;\\">\\"Companion to agile zen to provide extra calculations and functionality\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   6:</span> <span style=\\"color: #006080;\\">\\"pushed\\"</span>:<span style=\\"color: #006080;\\">\\"2011/05/18 15:25:54 -0700\\"</span>,<span style=\\"color: #006080;\\">\\"fork\\"</span>:<span style=\\"color: #0000ff;\\">false</span>,<span style=\\"color: #006080;\\">\\"size\\"</span>:1348,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   7:</span> <span style=\\"color: #006080;\\">\\"created_at\\"</span>:<span style=\\"color: #006080;\\">\\"2010/11/24 17:28:33 -0800\\"</span>,<span style=\\"color: #006080;\\">\\"name\\"</span>:<span style=\\"color: #006080;\\">\\"zenboard\\"</span>,<span style=\\"color: #006080;\\">\\"has_downloads\\"</span>:<span style=\\"color: #0000ff;\\">true</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   8:</span> <span style=\\"color: #006080;\\">\\"private\\"</span>:<span style=\\"color: #0000ff;\\">false</span>,<span style=\\"color: #006080;\\">\\"pushed_at\\"</span>:<span style=\\"color: #006080;\\">\\"2011/05/18 15:25:54 -0700\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   9:</span> <span style=\\"color: #006080;\\">\\"created\\"</span>:<span style=\\"color: #006080;\\">\\"2010/11/24 17:28:33 -0800\\"</span>,<span style=\\"color: #006080;\\">\\"homepage\\"</span>:<span style=\\"color: #006080;\\">\\"\\"</span>}]}</pre>\\n<p><!--CRLF--></div>\\n</div>\\n<p>(Side note: If you\\u2019re using <a href=\\"http://agilezen.com\\">AgileZen</a>, the project above, <a href=\\"http://zenboard.heroku.com\\">ZenBoard</a>, is an awesome companion for it.)</p>\\n<p>Now let\\u2019s try this in jQuery:</p>\\n<div style=\\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: \'Courier New\', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\\">\\n<div style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\">\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   1:</span> <span style=\\"color: #0000ff;\\">function</span> loadProjects( ) {</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   2:</span>     <span style=\\"color: #0000ff;\\">var</span> url= <span style=\\"color: #006080;\\">\\"https://github.com/api/v2/json/repos/search/zenboard\\"</span>;</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   3:</span>   $.ajax({</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   4:</span>       url: url,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   5:</span>       type: <span style=\\"color: #006080;\\">\\"GET\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   6:</span>       dataType: <span style=\\"color: #006080;\\">\\"json\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   7:</span>       success: <span style=\\"color: #0000ff;\\">function</span>(data) {</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   8:</span>           alert( <span style=\\"color: #006080;\\">\'moo\'</span> );</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   9:</span>       }</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  10:</span>   });</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  11:</span> }</pre>\\n<p><!--CRLF--></div>\\n</div>\\n<p>Throw this into a $( document ).ready call, load it up, and you get nothing. The browser developer tools give you a vague hint of what\\u2019s going on:</p>\\n<p><a href=\\"http://codebetter.com/kylebaley/files/2011/08/CanceledRequest.png\\"><img alt=\\"CanceledRequest\\" border=\\"0\\" height=\\"304\\" src=\\"http://codebetter.com/kylebaley/files/2011/08/CanceledRequest_thumb.png\\" style=\\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\\" width=\\"644\\" /></a></p>\\n<p>&nbsp;</p>\\n<p>The request to the GitHub API was canceled. Let\\u2019s make one small change to the JavaScript:</p>\\n<div style=\\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: \'Courier New\', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\\">\\n<div style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\">\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   1:</span> <span style=\\"color: #0000ff;\\">function</span> loadAppointmentTimes( ) {</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   2:</span>     <span style=\\"color: #0000ff;\\">var</span> url= <span style=\\"color: #006080;\\">\\"https://github.com/api/v2/json/repos/search/zenboard\\"</span>;</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   3:</span>   $.ajax({</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   4:</span>       url: url,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   5:</span>       type: <span style=\\"color: #006080;\\">\\"GET\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   6:</span>       dataType: <span style=\\"color: #006080;\\">\\"jsonp\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   7:</span>       success: <span style=\\"color: #0000ff;\\">function</span>(data) {</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   8:</span>           alert( <span style=\\"color: #006080;\\">\'moo\'</span> );</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   9:</span>       }</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  10:</span>   });</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  11:</span> }</pre>\\n<p><!--CRLF--></div>\\n</div>\\n<p>The only difference here is the datatype is now jsonp instead of json. Load this page up and we get a hearty \\u201cmoo\\u201d alert.</p>\\n<p>But take a look at the headers for the request we\\u2019ve made:</p>\\n<p><a href=\\"http://codebetter.com/kylebaley/files/2011/08/RequestWithURL.png\\"><img alt=\\"RequestWithURL\\" border=\\"0\\" height=\\"306\\" src=\\"http://codebetter.com/kylebaley/files/2011/08/RequestWithURL_thumb.png\\" style=\\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\\" width=\\"644\\" /></a></p>\\n<p>There\\u2019s an extra parameter: callback. jQuery added this. Furthermore, here\\u2019s the response:</p>\\n<p><a href=\\"http://codebetter.com/kylebaley/files/2011/08/RequestWithResponse.png\\"><img alt=\\"RequestWithResponse\\" border=\\"0\\" height=\\"306\\" src=\\"http://codebetter.com/kylebaley/files/2011/08/RequestWithResponse_thumb.png\\" style=\\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\\" width=\\"644\\" /></a></p>\\n<p>This ain\\u2019t quite JSON. It\\u2019s a JavaScript function call wrapped around JSON.</p>\\n<p>The upshot of all this: When you make a request without the callback parameter, GitHub will give you JSON. Unless it\\u2019s called from JavaScript from the browser in which case, I believe it\\u2019s the browser itself that says \\u201cPapa don\\u2019t preach that way\\u201d and cancels the request completely because it won\\u2019t allow JSON to come back.</p>\\n<p>But when you tell jQuery to make the call as jsonp, it adds an auto-generated callback parameter (I believe you can specify the name of the callback if you so desire). GitHub is nice enough to adjust the response accordingly, wrapping the JSON in the callback function. Further, jQuery is nice enough to strip it off again and give you back the intended JSON.</p>\\n<p>When I first started this post, it was going to lead up to this point where I ask: When creating an API, is it normal to support both JSON and JSONP requests? In fact, I ask the question in the title already.</p>\\n<p>But it appears the answer is yes based on other services that offer APIs. Obviously, GitHub supports it. So does <a href=\\"https://api.bitbucket.org/1.0/users/kbaley?callback=moo\\">BitBucket</a>, <a href=\\"http://api.twitter.com/1/statuses/user_timeline/kbaley.json?callback=moo\\">Twitter</a>, <a href=\\"http://dev.agilezen.com/concepts/formatting.html#jsonp_support\\">AgileZen</a>, and Flickr (though Flickr uses a different <a href=\\"http://www.flickr.com/services/api/response.json.html\\">callback parameter name</a>). So\\u2026thanks for listening, I guess\\u2026</p>\\n<h2>Final Note</h2>\\n<p>JSONP (and any cross-domain request, I believe) is read-only. I.e. it supports GET requests only, not POSTs (or PUT or DELETE, I suppose). The odd thing is: I only discovered this today while researching for this post. This baffles me because I\\u2019ve been doing AJAX apps since 2000 and don\\u2019t remember ever having to deal with this. I suppose they were all same-domain, or if they were cross-domain, it was read-only. Anyway, score one for blogging because within the next two days, we would have run into this very issue at BookedIN and wasted a bunch of time tracking down the cause.</p>\\n<p>To get around this limitation, there are two options (probably more depending on how academic you want to make your research):</p>\\n<h3>Use a proxy</h3>\\n<p>That is, you POST the request to the same domain and in the server code, forward the request on to the other domain. Remember, cross-domain security is only on the browser.</p>\\n<h3>Cross-Origin Resource Sharing</h3>\\n<p>This is new to me as well as of this morning. It\\u2019s a draft specification to get around the same origin policy I\\u2019ve spent these many minutes describing. I know nothing about except what I read on <a href=\\"http://dev.agilezen.com/concepts/authentication.html#crossorigin_resource_sharing\\">AgileZen\\u2019s documentation</a>. The salient points are:</p>\\n<ul>\\n<li>Works on newer browsers only. This essentially translates into \\u201cWorks on IE8 or higher and all versions of Firefox and Chrome that you\\u2019re likely to see in the wild.\\u201d</li>\\n<li>May have issues with some proxy servers and firewalls</li>\\n</ul>\\n<p>This was enough for us to postpone this route to a future release when our client isn\\u2019t the only one for the API.</p>\\n<p>Kyle the Applicable</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/6jGcLLTwYp4\\" width=\\"1\\" />", "summary": "Executive Summary: Who knew serving up JSON for a public API was so complicatedly anti-hillbilly? Our next major phase at BookedIN\\u2019s plan for world-except-for-Edmonton-and-certain-parts-of-Winnipeg-domination is underway. That\\u2019s the public-facing site which will provide a way for YOU THE PUBLIC to&#", "id": "http://codebetter.com/kylebaley/2011/08/17/designing-an-api-is-jsonjsonp-an-andor-decision-2/", "categories": [], "metadata": {"guid": "4c799b8e-d072-4c9d-b6fa-90034a47fd27", "likes": 0, "is_published": false}}, {"author": "Kyle Baley", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/Q3oVow9Rt6s/", "title": "Designing an API: Is JSON/JSONP an and/or decision?", "datetime": "2011-08-17T14:02:26", "html": "<p>Executive Summary: Who knew serving up JSON for a public API was so complicatedly anti-hillbilly?</p>\\n<p>Our next major phase at <a href=\\"http://getbookedin.com\\">BookedIN\\u2019s</a> plan for world-except-for-Edmonton-and-certain-parts-of-Winnipeg-domination is underway. That\\u2019s the public-facing site which will provide a way for <strong><em><u>YOU THE PUBLIC</u></em></strong> to book appointments online at your favorite\\u2026ahem\\u2026\\u201dservice providers\\u201d. Let me explain our marketing strategy in detail.</p>\\n<p>Ha ha, I jest of course. That last sentence is the sum-total of what I know about our marketing strategy. I have a hard enough time trying to keep myself entertained through code. (As a general rule, I start with the code reviews.)</p>\\n<p>To populate the public site, we\\u2019re building an API around our appointment manager. And we\\u2019ve opted for JSON as the default format mostly because I love the way people pronounce it, accenting both syllables like badly-translated anime.</p>\\n<p>In this app, we are making two API calls from two different places. When we first load the page for a particular vendor, the server makes a call to retrieve the company details and a list of services. After the page is loaded, jQuery comes along and populates the list of available appointment times. In this way, we get the benefit of SEO being able to see the vendor details and services and a snappy user interface when the user navigates to different dates within a particular vendor page, as outlined on the <a href=\\"http://googlewebmastercentral.blogspot.com/2007/11/spiders-view-of-web-20.html\\">Google Webmaster Blog</a> (though I didn\\u2019t actually discover that link until after we decided on the structure).</p>\\n<p>In the appointment manager, serving up JSON is pretty simple. Configure the servlet, get the data, convert to JSON (we\\u2019re using <a href=\\"http://jackson.codehaus.org/\\">Jackson</a>), and write it to the response. This is working just fine with the server-side company details call.</p>\\n<p>For the client-side call, it\\u2019s not. Depending on how you configure the AJAX call in jQuery, we get one of the following:</p>\\n<ul>\\n<li>The API call is never made\\n<li>The call is made but cancelled\\n<li>The call is made and returns but has no data</li>\\n</ul>\\n<p>All are symptoms of the same issue: cross-domain client calls, which aren\\u2019t allowed. I read that it\\u2019s for security reasons which, due to my loathing of all things security-related, was enough for me not to read further.</p>\\n<p>From what I can tell, you can\\u2019t make a call to another domain in jQuery (or likely any JavaScript library) and expect to get JSON back.</p>\\n<p>Here\\u2019s an example. Follow this link in your browser: <a href=\\"https://github.com/api/v2/json/repos/search/zenboard\\">https://github.com/api/v2/json/repos/search/zenboard</a></p>\\n<p>You\\u2019ll probably get this back: </p>\\n<div style=\\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: \'Courier New\', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\\">\\n<div style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\">\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   1:</span> {<span style=\\"color: #006080;\\">\\"repositories\\"</span>:[{<span style=\\"color: #006080;\\">\\"type\\"</span>:<span style=\\"color: #006080;\\">\\"repo\\"</span>,<span style=\\"color: #006080;\\">\\"username\\"</span>:<span style=\\"color: #006080;\\">\\"amirci\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   2:</span> <span style=\\"color: #006080;\\">\\"url\\"</span>:<span style=\\"color: #006080;\\">\\"https://github.com/amirci/zenboard\\"</span>,<span style=\\"color: #006080;\\">\\"watchers\\"</span>:5,<span style=\\"color: #006080;\\">\\"owner\\"</span>:<span style=\\"color: #006080;\\">\\"amirci\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   3:</span> <span style=\\"color: #006080;\\">\\"has_wiki\\"</span>:<span style=\\"color: #0000ff;\\">true</span>,<span style=\\"color: #006080;\\">\\"open_issues\\"</span>:0,<span style=\\"color: #006080;\\">\\"score\\"</span>:6.994658,<span style=\\"color: #006080;\\">\\"followers\\"</span>:5,<span style=\\"color: #006080;\\">\\"forks\\"</span>:3,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   4:</span> <span style=\\"color: #006080;\\">\\"has_issues\\"</span>:<span style=\\"color: #0000ff;\\">true</span>,<span style=\\"color: #006080;\\">\\"language\\"</span>:<span style=\\"color: #006080;\\">\\"Ruby\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   5:</span> <span style=\\"color: #006080;\\">\\"description\\"</span>:<span style=\\"color: #006080;\\">\\"Companion to agile zen to provide extra calculations and functionality\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   6:</span> <span style=\\"color: #006080;\\">\\"pushed\\"</span>:<span style=\\"color: #006080;\\">\\"2011/05/18 15:25:54 -0700\\"</span>,<span style=\\"color: #006080;\\">\\"fork\\"</span>:<span style=\\"color: #0000ff;\\">false</span>,<span style=\\"color: #006080;\\">\\"size\\"</span>:1348,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   7:</span> <span style=\\"color: #006080;\\">\\"created_at\\"</span>:<span style=\\"color: #006080;\\">\\"2010/11/24 17:28:33 -0800\\"</span>,<span style=\\"color: #006080;\\">\\"name\\"</span>:<span style=\\"color: #006080;\\">\\"zenboard\\"</span>,<span style=\\"color: #006080;\\">\\"has_downloads\\"</span>:<span style=\\"color: #0000ff;\\">true</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   8:</span> <span style=\\"color: #006080;\\">\\"private\\"</span>:<span style=\\"color: #0000ff;\\">false</span>,<span style=\\"color: #006080;\\">\\"pushed_at\\"</span>:<span style=\\"color: #006080;\\">\\"2011/05/18 15:25:54 -0700\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   9:</span> <span style=\\"color: #006080;\\">\\"created\\"</span>:<span style=\\"color: #006080;\\">\\"2010/11/24 17:28:33 -0800\\"</span>,<span style=\\"color: #006080;\\">\\"homepage\\"</span>:<span style=\\"color: #006080;\\">\\"\\"</span>}]}</pre>\\n<p><!--CRLF--></div>\\n</div>\\n<p>(Side note: If you\\u2019re using <a href=\\"http://agilezen.com\\">AgileZen</a>, the project above, <a href=\\"http://zenboard.heroku.com\\">ZenBoard</a>, is an awesome companion for it.)</p>\\n<p>Now let\\u2019s try this in jQuery:</p>\\n<div style=\\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: \'Courier New\', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\\">\\n<div style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\">\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   1:</span> <span style=\\"color: #0000ff;\\">function</span> loadProjects( ) {</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   2:</span>     <span style=\\"color: #0000ff;\\">var</span> url= <span style=\\"color: #006080;\\">\\"https://github.com/api/v2/json/repos/search/zenboard\\"</span>;</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   3:</span>   $.ajax({</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   4:</span>       url: url,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   5:</span>       type: <span style=\\"color: #006080;\\">\\"GET\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   6:</span>       dataType: <span style=\\"color: #006080;\\">\\"json\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   7:</span>       success: <span style=\\"color: #0000ff;\\">function</span>(data) {</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   8:</span>           alert( <span style=\\"color: #006080;\\">\'moo\'</span> );</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   9:</span>       }</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  10:</span>   });</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  11:</span> }</pre>\\n<p><!--CRLF--></div>\\n</div>\\n<p>Throw this into a $( document ).ready call, load it up, and you get nothing. The browser developer tools give you a vague hint of what\\u2019s going on:</p>\\n<p><a href=\\"http://codebetter.com/kylebaley/files/2011/08/CanceledRequest.png\\"><img alt=\\"CanceledRequest\\" border=\\"0\\" height=\\"304\\" src=\\"http://codebetter.com/kylebaley/files/2011/08/CanceledRequest_thumb.png\\" style=\\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\\" width=\\"644\\" /></a></p>\\n<p>&nbsp;</p>\\n<p>The request to the GitHub API was canceled. Let\\u2019s make one small change to the JavaScript:</p>\\n<div style=\\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: \'Courier New\', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\\">\\n<div style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\">\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   1:</span> <span style=\\"color: #0000ff;\\">function</span> loadAppointmentTimes( ) {</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   2:</span>     <span style=\\"color: #0000ff;\\">var</span> url= <span style=\\"color: #006080;\\">\\"https://github.com/api/v2/json/repos/search/zenboard\\"</span>;</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   3:</span>   $.ajax({</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   4:</span>       url: url,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   5:</span>       type: <span style=\\"color: #006080;\\">\\"GET\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   6:</span>       dataType: <span style=\\"color: #006080;\\">\\"jsonp\\"</span>,</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   7:</span>       success: <span style=\\"color: #0000ff;\\">function</span>(data) {</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   8:</span>           alert( <span style=\\"color: #006080;\\">\'moo\'</span> );</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">   9:</span>       }</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  10:</span>   });</pre>\\n<p><!--CRLF-->\\n<pre style=\\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: \'Courier New\', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\\"><span style=\\"color: #606060;\\">  11:</span> }</pre>\\n<p><!--CRLF--></div>\\n</div>\\n<p>The only difference here is the datatype is now jsonp instead of json. Load this page up and we get a hearty \\u201cmoo\\u201d alert.</p>\\n<p>But take a look at the headers for the request we\\u2019ve made:</p>\\n<p><a href=\\"http://codebetter.com/kylebaley/files/2011/08/RequestWithURL.png\\"><img alt=\\"RequestWithURL\\" border=\\"0\\" height=\\"306\\" src=\\"http://codebetter.com/kylebaley/files/2011/08/RequestWithURL_thumb.png\\" style=\\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\\" width=\\"644\\" /></a></p>\\n<p>There\\u2019s an extra parameter: callback. jQuery added this. Furthermore, here\\u2019s the response:</p>\\n<p><a href=\\"http://codebetter.com/kylebaley/files/2011/08/RequestWithResponse.png\\"><img alt=\\"RequestWithResponse\\" border=\\"0\\" height=\\"306\\" src=\\"http://codebetter.com/kylebaley/files/2011/08/RequestWithResponse_thumb.png\\" style=\\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\\" width=\\"644\\" /></a></p>\\n<p>This ain\\u2019t quite JSON. It\\u2019s a JavaScript function call wrapped around JSON.</p>\\n<p>The upshot of all this: When you make a request without the callback parameter, GitHub will give you JSON. Unless it\\u2019s called from JavaScript from the browser in which case, I believe it\\u2019s the browser itself that says \\u201cPapa don\\u2019t preach that way\\u201d and cancels the request completely because it won\\u2019t allow JSON to come back.</p>\\n<p>But when you tell jQuery to make the call as jsonp, it adds an auto-generated callback parameter (I believe you can specify the name of the callback if you so desire). GitHub is nice enough to adjust the response accordingly, wrapping the JSON in the callback function. Further, jQuery is nice enough to strip it off again and give you back the intended JSON.</p>\\n<p>When I first started this post, it was going to lead up to this point where I ask: When creating an API, is it normal to support both JSON and JSONP requests? In fact, I ask the question in the title already.</p>\\n<p>But it appears the answer is yes based on other services that offer APIs. Obviously, GitHub supports it. So does <a href=\\"https://api.bitbucket.org/1.0/users/kbaley?callback=moo\\">BitBucket</a>, <a href=\\"http://api.twitter.com/1/statuses/user_timeline/kbaley.json?callback=moo\\">Twitter</a>, <a href=\\"http://dev.agilezen.com/concepts/formatting.html#jsonp_support\\">AgileZen</a>, and Flickr (though Flickr uses a different <a href=\\"http://www.flickr.com/services/api/response.json.html\\">callback parameter name</a>). So\\u2026thanks for listening, I guess\\u2026</p>\\n<h2>Final Note</h2>\\n<p>JSONP (and any cross-domain request, I believe) is read-only. I.e. it supports GET requests only, not POSTs (or PUT or DELETE, I suppose). The odd thing is: I only discovered this today while researching for this post. This baffles me because I\\u2019ve been doing AJAX apps since 2000 and don\\u2019t remember ever having to deal with this. I suppose they were all same-domain, or if they were cross-domain, it was read-only. Anyway, score one for blogging because within the next two days, we would have run into this very issue at BookedIN and wasted a bunch of time tracking down the cause.</p>\\n<p>To get around this limitation, there are two options (probably more depending on how academic you want to make your research):</p>\\n<h3>Use a proxy</h3>\\n<p>That is, you POST the request to the same domain and in the server code, forward the request on to the other domain. Remember, cross-domain security is only on the browser.</p>\\n<h3>Cross-Origin Resource Sharing</h3>\\n<p>This is new to me as well as of this morning. It\\u2019s a draft specification to get around the same origin policy I\\u2019ve spent these many minutes describing. I know nothing about except what I read on <a href=\\"http://dev.agilezen.com/concepts/authentication.html#crossorigin_resource_sharing\\">AgileZen\\u2019s documentation</a>. The salient points are:</p>\\n<ul>\\n<li>Works on newer browsers only. This essentially translates into \\u201cWorks on IE8 or higher and all versions of Firefox and Chrome that you\\u2019re likely to see in the wild.\\u201d</li>\\n<li>May have issues with some proxy servers and firewalls</li>\\n</ul>\\n<p>This was enough for us to postpone this route to a future release when our client isn\\u2019t the only one for the API.</p>\\n<p>Kyle the Applicable</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/Q3oVow9Rt6s\\" width=\\"1\\" />", "summary": "Executive Summary: Who knew serving up JSON for a public API was so complicatedly anti-hillbilly? Our next major phase at BookedIN\\u2019s plan for world-except-for-Edmonton-and-certain-parts-of-Winnipeg-domination is underway. That\\u2019s the public-facing site which will provide a way for YOU THE PUBLIC to&#", "id": "http://codebetter.com/kylebaley/2011/08/17/designing-an-api-is-jsonjsonp-an-andor-decision/", "categories": [], "metadata": {"guid": "11312078-47b7-42e3-97f9-6dee04a50571", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://rubenhenares.404fs.com/management-why-work-doesnt-happen-at-work/", "title": "Management: Why work doesn\\u2019t happen at work", "datetime": "2011-08-17T10:20:06", "html": "<p>Nice <a href=\\"http://www.ted.com/talks/jason_fried_why_work_doesn_t_happen_at_work.html\\">talk</a> from Jason Fried at <a href=\\"http://www.ted.com\\">Ted.com</a> about interrupting employees and breaking their creativity flow.</p>\\n<p>How many times have you reached the end of the day and you have asked yourself: &#8220;what did I do today?&#8221;.<br />\\nCreating the right atmosphere that allow employees to work without interruptions ain&#8217;t easy.</p>\\n<p>&#8220;M&#038;Ms Managers and Meetings, those are the real problems today&#8230;&#8221; Jason says.</p>\\n<p>In my opinion, it&#8217;s not just limited to that, software crashes, server hangs, also break your flow. This is specially important when you are trying to collect metrics data. Hey, let&#8217;s find how many times our editor crashes and how long it takes for it to load.</p>\\n<p><del datetime=\\"2011-08-17T10:14:36+00:00\\">Loading time * Number of Crashes = Time Lost * Average Employees Salary = MONEY LOST.</del></p>\\n<p>Well&#8230; As my brother <a href=\\"http://oliverhenares.tumblr.com/\\">Oliver Henares</a> says, &#8220;Life is not in an Excel file&#8221;. Add to that formula the fact that when your editor crashes your employee is breaking his/her creative flow, and it could take him/her hours to reach back that climax. That has an impact on the quality of the product which is not easy to represent in numbers.</p>\\n<p>Explaining something that can&#8217;t be shown in numbers, to people who think in numbers, isn&#8217;t an easy task. But it&#8217;s a philosophy that must be applied up to certain degree, to any creative development environment if you want to add that extra shiny touch to the final product.</p>", "summary": "Nice talk from Jason Fried at Ted.com about interrupting employees and breaking their creativity flow. How many times have you reached the end of the day and you have asked yourself: &#8220;what did I do today?&#8221;. Creating the right atmosphere that allow employees to work without interruptions ", "id": "http://rubenhenares.404fs.com/?p=237", "categories": [], "metadata": {"guid": "b8168487-e4cb-4e18-9c3b-252c463d9e2f", "likes": 0, "is_published": false}}, {"author": "hamish", "url": "http://www.macaronikazoo.com/?p=798", "title": "the importance of rig encapsulation", "datetime": "2011-08-16T21:34:15", "html": "<p>Being able to write good animation tools relies on being able to easily make queries about a rig.  Animation tools often need a high level understanding about how a rig works for many reasons.  But obviously you want to maintain a loose coupling between the two.  You want rigging to have the freedom to be able to change the way the rigs work without having to worry about breaking animation tools.  Conversely you don&#8217;t want animation tools to be hamstrung by the lack of ability to encapsulate the complexity of the rig.</p>\\n<p>For example, is there a way to query the FK controls from a given IK control and vice-versa?  What about pole vector controls?  Is there a way to ask which controls have space switching?  If so can you query what the spaces are?  What about which controls are affected by a given space switch?  Given a joint can you get a list of the rig controls that drive it?  You get the idea.</p>\\n<p>Animation tools are basically a layer that build on top of the rig layer.  If the rig layer isn&#8217;t rock solid, then animation tools will be unstable or feature restricted or both.</p>\\n<p>Having some sort of programmatic interface to encapsulate the implementation details of your rig features is incredibly important if you want to be able to write useful and robust animation tools.  Without this sort of high level rig API you&#8217;ll most likely make it difficult or impossible to write the sort of tools that will enable your animators to be more productive.</p>\\n<p>So if you&#8217;re writing a rigging system, try taking a break from it and building some animation tools.  Exercise that rigging API you&#8217;ve been spending so much time on.  Better yet, use all the animation tools you write as part of your unit testing to validate changes made to your rigging API.  Remember, as a rigger your customers are both your animators and anyone who might write animation tools.</p>", "summary": "Being able to write good animation tools relies on being able to easily make queries about a rig. Animation tools often need a high level understanding about how a rig works for many reasons. But obviously you want to maintain a loose coupling between the two. You want rigging to have the freedom to", "id": "http://www.macaronikazoo.com/?p=798", "categories": [], "metadata": {"guid": "f77143ea-7622-448b-906d-159f686e9cb1", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/16/indie-facial-performance-capture-rd/", "title": "Indie Facial Performance Capture R&D", "datetime": "2011-08-16T15:43:36", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><div class=\\"shareaholic-like-buttonset\\" style=\\"float: right; height: 30px;\\"><a class=\\"shareaholic-fblike\\"></a><a class=\\"shareaholic-googleplusone\\"></a></div><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><!-- End Shareaholic LikeButtonSetTop --><p></p>\\n<p>Suchan, a buddy from Nepal, just broke the independent game dev facial performance capture animation barrier.\\u00a0 He deserves kudos for getting it to this stage.\\u00a0 This would be such a valuable asset to any gaming company if he brings it to the next level or even at this stage I suspect.\\u00a0 Suchan is on a solo climb of Mount Mocap and while he is a base camp right now, I expect he could make the difficult summit by himself!\\u00a0 <img alt=\\";)\\" class=\\"wp-smiley\\" src=\\"http://www.jonasavrin.com/wp-includes/images/smilies/icon_wink.gif\\" /> \\u00a0 Nice job!</p>\\n<p>I wonder how much harder it would be to actually be able to do facial mocap from your smart phone directly to a character in Maya or Unity app without any markers, to me that&#8217;s Everest.\\u00a0 It is, however, a tangible goal these days for developers and all the freely available mocap tech that&#8217;s on the market these days.</p>\\n<div class=\\"shr-publisher-2774\\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "Suchan, a buddy from Nepal, just broke the independent game dev facial performance capture animation barrier.\\u00a0 He deserves kudos for getting it to this stage.\\u00a0 This would be such a valuable asset to any gaming company if he brings it to the next level or even at this stage I suspect.\\u00a0 Suchan is on a", "id": "http://www.jonasavrin.com/?p=2774", "categories": [], "metadata": {"guid": "33fe54cf-f183-4a7d-8efa-a0a87f44e936", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://rubenhenares.404fs.com/management-bored-people-quit/", "title": "Management: Bored People Quit", "datetime": "2011-08-16T11:35:47", "html": "<p>I have read this <a href=\\"http://www.randsinrepose.com/archives/2011/07/12/bored_people_quit.html\\">extremely interesting article</a>, via <a href=\\"http://www.robg3d.com/\\">RobG3D</a> blog. It&#8217;s amazing how sometimes, there are situations that you have been seeing during years but, you just haven&#8217;t taken a step back to think about the words to describe them and therefore analyze them and look for a solution. When you see them broken-down, clearly written, it all seems so obvious , it all makes sense.</p>", "summary": "I have read this extremely interesting article, via RobG3D blog. It&#8217;s amazing how sometimes, there are situations that you have been seeing during years but, you just haven&#8217;t taken a step back to think about the words to describe them and therefore analyze them and look for a solution. W", "id": "http://rubenhenares.404fs.com/?p=233", "categories": [], "metadata": {"guid": "53266a3b-fa3b-4263-ab67-f3fc1b8e8c7f", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8986735539", "title": "Well I Lied", "datetime": "2011-08-16T01:49:34", "html": "<p>I said I would be posting soon\\u2026yea, that didn\\u2019t happen. \\u00a0Sometimes life gets in the way. \\u00a0If I had it my way, I\\u2019d be pumping out blog post after blog post. \\u00a0Actually, that\\u2019s a lie too. \\u00a0I would be drawing and programming my ass off, getting things done for my portfolio. \\u00a0Hell I\\u2019ve got at least 10 blog posts that are anywhere from 50 to 90 percent finished. \\u00a0I just can\\u2019t find the motivation to finish them. \\u00a0Sometimes personal life just sucks up that motivation and takes a shit on you. \\u00a0It\\u2019s internal, possibly more powerful than the external factors I face. \\u00a0I know this is nothing compared to some of the situations people are in, but regardless I feel this way. \\u00a0It feels\\u00a0weird\\u00a0to bitch about my life on my blog. \\u00a0Funny, I used to know that no one read my blog and it kinda became my spot for ranting and getting my feelings out. \\u00a0Now it\\u2019s totally different. \\u00a0I\\u2019m going to stop bitching now. \\u00a0I\\u00a0apologize.</p>", "summary": "<p>I said I would be posting soon\\u2026yea, that didn\\u2019t happen. \\u00a0Sometimes life gets in the way. \\u00a0If I had it my way, I\\u2019d be pumping out blog post after blog post. \\u00a0Actually, that\\u2019s a lie too. \\u00a0I would be drawing and programming my ass off, getting things done for my portfolio. \\u00a0Hell I\\u2019ve got at least 10", "id": "http://shawnkirsch.tumblr.com/post/8986735539", "categories": [], "metadata": {"guid": "8b68f75a-6c98-40f7-98c0-a12da6880a1b", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=755", "title": "What\\u2019s Eating OOP?", "datetime": "2011-08-16T00:26:34", "html": "<p>Repost from altdevblogaday. Also of note that this was my first blog post that I know of that was reposted on reddit/hackernews, and on reddit especially the comments were sort of brutal&#8230; oh, internets. Anyway, I&#8217;d suggest heading over the altdevblogaday to <a href=\\"http://altdevblogaday.com/2011/08/15/whats-eating-oop/#disqus_thread\\">read the comments</a> when you&#8217;re done with the article.</p>\\n<hr />\\n<p>It has been commonplace over the past few years to bash Object Oriented Programming. \\u00a0Functional programming going mainstream. \\u00a0Data oriented design becoming commonplace for performance. \\u00a0The resurgence of dynamic languages. \\u00a0OO bastions going multi-paradigm. \\u00a0Why is everything going wrong for traditional OOP?</p>\\n<p>Because it took a while but we realized that canonical OOP sucks. \\u00a0Let&#8217;s look at .NET&#8217;s humble <a href=\\"http://msdn.microsoft.com/en-us/library/system.diagnostics.process.aspx\\">System.Diagnostics.Process class</a>.</p>\\n<ol>\\n<li><strong>The sin of statefulness.</strong>\\u00a0 ProcessStartInfo, the mutable type that represents the filename, args, std io, and other state of the Process, has 20 mutable (get/set) properties. \\u00a0The Process type itself has over 50 properties (mostly immutable). \\u00a0The problem here is that the Process itself transitions between three states- not started, running, and finished- and only a subset of properties are valid at any given time. \\u00a0This whole situation is impossible to reason about- you either need to look at the extensive tests that would need to be written to test all the combinations of state, or you&#8217;d need to look at it under the debugger to know what&#8217;s going on.</li>\\n<li><strong>Inheritance.</strong>\\u00a0 This situation is bad enough. \\u00a0But have you ever seen someone subclass Process? \\u00a0I have, a few times, and it makes things even more impossible to reason about. \\u00a0You presumably subclass it to ensure certain state is set up by default, such as Filename. \\u00a0What if someone mutates that default, though? \\u00a0You either allow it, which makes your class sort of pointless and breaks its invariant (Filename won&#8217;t change), or you don&#8217;t allow it by raising an Exception, or even worse, just silently returning, which would break the fundamental contract of your base class and the Liskov Substitution Principle (you are quite clearly changing the behavior if you are raising an exception or not fulfilling the contracts the base class makes). \\u00a0There&#8217;s no point to inherit stateful objects like this, but that is canonical OOP.</li>\\n<li><strong>Code reuse through inheritance/polymorphism.</strong>\\u00a0 Obviously code reuse is a good thing. \\u00a0The problem is the way OOP encourages it, through polymorphism via inheritance. \\u00a0Process does not implement any interfaces. \\u00a0You could not pass Process to a method or class that, say, is responsible for managing IO and std streams in general, not just for Process. \\u00a0Actually, this isn&#8217;t a big problem- just either wrap the Process in something (don&#8217;t subclass it!), or pass in only the actual data/methods needed. \\u00a0The ease of getting around this quite clearly demonstrates that, if you were to take away inheritance, it really wouldn&#8217;t be such a big deal- would it?</li>\\n<li><strong>Messy contracts and abstractions.</strong>\\u00a0 What are the contracts on Process? \\u00a0Good luck trying to figure them out by reading the documentation (which is extensive). \\u00a0I think everyone has put an asynchronous process into a deadlock, even when following MSFT&#8217;s directions. \\u00a0Understanding how to use Process still requires a pretty thorough understanding of the underlying system, and it ends up in a no-man&#8217;s land between simplicity and power. \\u00a0These messy (not just leaky) abstractions are the major problem when consuming other people&#8217;s code- I can&#8217;t count how many 3rd party modules I&#8217;ve seen crashes or problems in, if they have a reasonable enough API to figure out in the first place.</li>\\n</ol>\\n<p>I&#8217;m aware I&#8217;m picking on Process here. \\u00a0It is a .NET 1.0 type, and the .NET framework (and programming in general) has matured immeasurably. \\u00a0I&#8217;m sure if the team were to do it again, they would do it quite differently. \\u00a0Process is a simple thing but obviously technically not easy- look at the dozens of ways Python had to launch a process, until <em>subprocess.POpen</em> simplified things into a wonderfully simple yet powerful way. \\u00a0But that&#8217;s another good point, isn&#8217;t it- even Microsoft, who are supposed to be the leaders in these things (they are the ones training people and publishing the guides), &#8216;get it wrong,&#8217; if it&#8217;s even possible to get right (it isn&#8217;t). \\u00a0How is Sammy the Scripter supposed to learn these lessons easily? \\u00a0He won&#8217;t. \\u00a0It will take him years, and he&#8217;s not going to learn it from OOP, he&#8217;s going to learn it (like the C# team did) from other languages and concepts. \\u00a0But this whole time, we&#8217;re telling him these fallacies about the wonders of OOP, with inheritance, polymorphism, code reuse, abstraction, patterns, and every other buzzword.</p>\\n<p>So what are we gonna do? \\u00a0Well, the first thing is to throw out ideological purity when it comes to OOP. \\u00a0The language designers are way ahead of us. \\u00a0Dynamic languages like python and Ruby have long been multi-paradigm. \\u00a0C# has been making big strides in the area, with anonymous methods/lambdas in 3.5, and even adding dynamic typing support in 4.0. \\u00a0Java and even <a href=\\"http://en.wikipedia.org/wiki/C%2B%2B0x\\">C++</a> are following suit. \\u00a0On the opposite end of the spectrum, people are also taking <a href=\\"http://en.wikipedia.org/wiki/Code_contracts\\">hints from Eiffel</a>, the most thorough and pure OO language around, with things like .NET&#8217;s Code Contracts.</p>\\n<p>We&#8217;re still lagging behind with education (the education we give at work, not just universities). \\u00a0We need to expand our toolbox by looking at other languages and other concepts. \\u00a0We need to throw out much of the traditional OOP approach we&#8217;ve taken that hasn&#8217;t worked. \\u00a0(As a commenter pointed out- ideological purity is an aid for new people, but we too often label it as best practices.) \\u00a0But I also don&#8217;t want to throw the baby out with the bathwater and start declaring that <a href=\\"http://www.google.com/search?btnG=1&amp;pws=0&amp;q=oop+is+dead\\">OOP is dead</a>, or all around \\u00a0inferior. \\u00a0The practical applications of OOP languages (and not necessarily their ideological underpinnings) make them natural for multi-paradigm implementations, and this is something I think it&#8217;d be hard to say of procedural, or even functional, languages.</p>\\n<p>I&#8217;d love to see us start to branch out in how we educate and teach to include these non-OO concepts, so we can better use the generally excellent OO languages available. \\u00a0Let&#8217;s take the lack of state from functional programming. \\u00a0That&#8217;s easy enough to\\u00a0do. \\u00a0Let&#8217;s take the modularity and specificity of data oriented design solutions. \\u00a0Not everything has to fit into some grande, reusable abstraction. \\u00a0Let&#8217;s be honest about the fact that most of our code does a particular thing and isn&#8217;t reused. \\u00a0Let&#8217;s take design by contract from Eiffel, and stress how important contracts are for a clear and well abstracted API. \\u00a0Let&#8217;s take duck typing from dynamic languages, so we don&#8217;t have to write a new interface to use our code somewhere (interfaces are great, except when you want some small overlap or subset of functionality- look at how even though .Add isn&#8217;t part of .NET&#8217;s IEnumerable, it gets special treatment by the compiler). \\u00a0On the other hand, let&#8217;s not forget that formal interfaces are important, and make sure we have those (like ABC&#8217;s in python).</p>\\n<p>We have most of these things already, because the language designers are really quite smart people and are way ahead of where the mainstream usage and understanding of these concepts are. \\u00a0We just need to start using and teaching them more intelligently. \\u00a0Maybe it is a PR thing? \\u00a0Stop calling our languages &#8216;object oriented&#8217; and take the focus off of the &#8217;4 principles&#8217;, and start teaching people how to program effectively using a variety of paradigms.</p>\\n<p>Likewise, I&#8217;d like to see caution when talking about the style-a-la-mode, whether that&#8217;s AOP, DOD, FP, whatever, so we don&#8217;t start treating it as a golden hammer. \\u00a0As modern programmers, we live in a complex world, and it is our duty to continually educate ourselves and others using all the information we can find.</p>\\n<p>&nbsp;</p>", "summary": "Repost from altdevblogaday. Also of note that this was my first blog post that I know of that was reposted on reddit/hackernews, and on reddit especially the comments were sort of brutal&#8230; oh, internets. Anyway, I&#8217;d suggest heading over the altdevblogaday to read the comments when you&#82", "id": "http://www.robg3d.com/?p=755", "categories": [], "metadata": {"guid": "b67cb173-117f-471f-826f-12c82566311f", "likes": 0, "is_published": false}}, {"author": "Adam", "url": "http://adammechtley.com/2011/08/biped-editor-update/", "title": "Biped Editor Update", "datetime": "2011-08-15T23:03:02", "html": "<p>I&#8217;ve been pretty silent lately, but I&#8217;ve also been busy! In addition to getting our place ready for our first baby (!), I&#8217;ve been wrapping up stuff on the <a href=\\"http://www.amazon.com/Maya-Python-Games-Film-Reference/dp/0123785782/ref=sr_1_1?ie=UTF8&#038;qid=1313447676&#038;sr=8-1\\" title=\\"Maya Python for Games and Film\\">Maya Python book</a>. I&#8217;m happy to report the proofs have been well under way, and it will be going to print soon. Our official sale date is at the end of November. I hope some of you out there find it helpful!</p>\\n<p>With baby due any day, I am frantically trying to tie up a few loose ends, and so made time to put together an update for my Biped Editor on the Unity Asset Store. The main new feature I added is some simple mechanisms to help characters intelligently get up from ragdoll (a request I&#8217;ve gotten from quite a few customers). I haven&#8217;t had a huge number of test cases, so do please let me know if you have any issues so I can get it fixed! (Note also I will be increasing the tool&#8217;s price, so buy it now while it&#8217;s cheap and get the free upgrade as soon as it hits!)</p>\\n<p></p>", "summary": "I&#8217;ve been pretty silent lately, but I&#8217;ve also been busy! In addition to getting our place ready for our first baby (!), I&#8217;ve been wrapping up stuff on the Maya Python book. I&#8217;m happy to report the proofs have been well under way, and it will be going to print soon. Our offici", "id": "http://adammechtley.com/?p=1149", "categories": [], "metadata": {"guid": "222e7225-f74d-4446-a216-720973f85e35", "likes": 0, "is_published": false}}, {"author": "anim8d (timborrelli@gmail.com)", "url": "http://strongmanimator.blogspot.com/2011/08/open-letter-to-andy-serkis.html", "title": "An Open Letter To Andy Serkis", "datetime": "2011-08-15T12:32:03.957000", "html": "Dear Mr. Serkis,<br /><br />If you deserve to be considered for an Academy Award nomination for Acting in regards to your performance motion capture, then every animator who has ever animated a character in any movie deserves consideration as well.<br /><br />Sincerely,<br /><br />Tim Borrelli<br /><br />P.S., Let me clarify:<br /><br /><div class=\\"\\" style=\\"clear: both; text-align: left;\\">Recently, you have been quoted as claiming that performance capture actors deserve to be considered for the Academy Awards in Acting categories:</div><div class=\\"MsoNormal\\"></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\"><a href=\\"http://www.guardian.co.uk/film/2011/aug/12/andy-serkis-motion-capture-acting\\">http://www.guardian.co.uk/film/2011/aug/12/andy-serkis-motion-capture-acting</a><u><span style=\\"color: blue;\\"></span></u></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Before I even start, let me say that I feel that you are a great actor. I don\\u2019t doubt your acting ability, both on stage and on film. But that\\u2019s not the debate here.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">From what I gather, here is what you are suggesting. You seem to feel that performances like yours in Lord of the Rings (Gollum), King Kong (King Kong), and Rise of the Planet of the Apes (Caesar) should be recognized by The Academy as an individual effort in excellence of acting performance.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Wait. What?</div><div class=\\"MsoNormal\\"><br />Let\\u2019s ignore the fact that animators have been doing this without motion capture longer than you have been suiting up for it.<br /><br /></div><div class=\\"MsoNormal\\">Performance capture is the digital capture of a performance of an individual actor, to be later applied to a digital character. Yet according to you, \\u201c\\u2026there are two parts to the process. The first part is capturing the performance. Only later down the line do you start seeing the characters being painted over frame by frame using pixels.\\" </div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">First, that doesn\\u2019t sound like an individual performance to me.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Second, painted over? Using pixels? For a guy who has positioned himself to be the spokesperson for performance capture, it sounds like you don\'t <i>quite </i>understand what goes into the entire process.<br /><br /></div><div class=\\"MsoNormal\\">Ignoring the fact that there is nothing \\u201cbeing painted over frame by frame using pixels\\u201d (almost) anywhere in the process, you seem to be ignorant of what happens to your performance data after you walk off the set. Many times, chunks of data need to be thrown out entirely and done by hand. Also, it is quite often that the actor\\u2019s proportions don\\u2019t match that of the digital characters, requiring a remapping of the motion. This may not seem like it affects a performance, but it in fact does. Different proportions means poses don\\u2019t read the same. It means a slouch on a short actor is a hunchback on a tall character. It means delicate interactions often need to be heavily modified or redone with animation due to differing limb lengths. I could go on.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Long story short, it means the performance is not 1-to-1 from performance capture to screen.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Furthermore, you claim that \\"Performance-capture technology is really the only way that we could bring these characters to life\\u2026 It\'s the way that Gollum was brought to life, and King Kong, and the Na\'vi in Avatar and so on and it\'s really another way of capturing an actor\'s performance.\\u201d</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">You then go on to say, \\u201cThat\'s all it is, digital make-up.\\"</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">What. The. Hell. </div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Well, makeup artists HAVE an Oscar category. So are you also suggesting that the people behind taking his performance to the big screen be considered in that category? When you say \\u201cthat success using the technique can be rewarded with current accolades,\\u201d is that what you mean? Should the modelers, animators, painters, shader TDs, lighters, etc., be considered for Makeup and Costume Design?</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Makeup and Costume Design teams do&nbsp;<i>amazing </i>work. I just have trouble seeing how modelers, animators, painters, shader TDs, lighters, etc. fit into those categories.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Or are you referring to the VFX category (which, while valid, is a much broader category than acting), or even the lesser known, non-televised technology categories? Are you basically saying that your performance, which wouldn\\u2019t even be viewable without those aforementioned teams of people, is more deserving of public recognition? </div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">I, as well as many others, won\\u2019t argue that motion capture data is only as good as the actor in the suit. I have directed and worked with motion capture data from actors on both ends of the talent spectrum. I agree that without the proper direction and performance, the end result that I produced wouldn\\u2019t be as emotional, as powerful, or as accurate.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">However, I also know that without a talented digital character team (animators, modelers, TDs, etc.), that performance will NEVER look as intended.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">What you\'ve done here, Mr. Serkis, is downplay the contribution that the whole team makes to bring a character like Gollum to life. What\\u2019s worse is that you aren\\u2019t alone. In this featurette on the making of Rise of the Planet of the Apes, the animation team is completely overlooked!<br /><br /></div><div class=\\"MsoNormal\\"><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"></div><br /></div><div class=\\"MsoNormal\\">Is the technology that Weta developed awe-inspiring and exciting? Hell yes it is. I\\u2019d love to be on set just for a day and see what the technology is like from start to finish. It would be amazing (and after writing this I may never get the chance). But to see the contribution of an entire discipline glossed over so readily by both a recognizable name (your own, Andy Serkis!) AND a production team is disheartening and frustrating.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Yet, as infuriating as that may be, this is not the point I want to make here. That point is:</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\"><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\">If you deserve to be considered for an Academy Award nomination for Acting, then every animator who has ever animated a character in any movie deserves consideration as well.</span></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Animators, both hand-keyed and motion capture artists, breathe life into their characters. They push performances of their characters to an artistic limit, based on the direction they are given. Many even use video reference- animators often of themselves performing (yes, ACTING) the scenes they are working on, mocap artists using video shot on set.</div><div class=\\"MsoNormal\\"></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Not to single one person out, but some do it REALLY WELL, like this example (password: education):</div><div class=\\"MsoNormal\\"><br /></div><br /><div style=\\"text-align: center;\\"></div><a href=\\"http://vimeo.com/27379093\\">Rio Comparison Reel</a> from <a href=\\"http://vimeo.com/user8028778\\">jeff gabor</a> on <a href=\\"http://vimeo.com/\\">Vimeo</a>.<br /><br /><div class=\\"MsoNormal\\">And this one:</div><div class=\\"MsoNormal\\"><br /></div><br /><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"></div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">It should be clear that this guy is an amazing animator. He\\u2019s also a great example of an animator using his own performance to bring characters to life (in the case of Rio, a female lead, and supporting male, and a bird.) As animators, we\\u2019ve been taught that video reference is a powerful tool. Like any tool, however, it requires training and practice to get right.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Some things may come more naturally (in a male animator\\u2019s case, the supporting male). Some things may take more creativity (like humanizing a creature, such as a bird). Even other things may take a bigger investment into the movement and emotion of the character (the female lead).</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">However, the end result in Rio didn\\u2019t come from just an animator\\u2019s performance. It came from the ability to translate that acting into what the digital character warranted.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Like you, Mr. Serkis, animators use their performance to improve and sell the characters they are acting for, in the interest of the whole story.</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">So my question for you is this:</div><div class=\\"MsoNormal\\"><br /></div><div class=\\"MsoNormal\\">Don\\u2019t animators also deserve individual recognition from the Academy for Acting?<br /><br />Mr. Serkis, please leave a comment here, or drop me a line. I welcome the discussion, as would many others who do and do not share my opinion.</div><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/4248341596629159263-6180644853011344220?l=strongmanimator.blogspot.com\\" width=\\"1\\" /></div>", "summary": "Dear Mr. Serkis,<br /><br />If you deserve to be considered for an Academy Award nomination for Acting in regards to your performance motion capture, then every animator who has ever animated a character in any movie deserves consideration as well.<br /><br />Sincerely,<br /><br />Tim Borrelli<br />", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-6180644853011344220", "categories": [], "metadata": {"guid": "c11523f6-836e-4f20-8207-ac2a12c54e15", "likes": 0, "is_published": false}}, {"author": "Robert", "url": "http://blarg.robertkist.com/?p=80", "title": "read only registry browser", "datetime": "2011-08-15T04:19:16", "html": "<p>A handy registry browser that works in read only mode:<br />\\n<a href=\\"http://www.softspotsoftware.com/pages/downloads/RegBrowser.zip\\">http://www.softspotsoftware.com/pages/downloads/RegBrowser.zip</a> (including source in Delphi)</p>\\n<p>When do you want to use this? If IT blocked write access to a PC&#8217;s registry. Windows&#8217; own registry editor isn&#8217;t clever enough to operate in a read only mode and refuses to launch. That&#8217;s when you can use this tool.</p>", "summary": "A handy registry browser that works in read only mode: http://www.softspotsoftware.com/pages/downloads/RegBrowser.zip (including source in Delphi) When do you want to use this? If IT blocked write access to a PC&#8217;s registry. Windows&#8217; own registry editor isn&#8217;t clever enough to operat", "id": "http://blarg.robertkist.com/?p=80", "categories": [], "metadata": {"guid": "f3209357-cf61-4430-add0-237ee05d1985", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/12/character-development-and-rigging-for-facial-animation-part-1/", "title": "Character Development and Rigging for Facial Animation Part 1", "datetime": "2011-08-13T05:50:13", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><div class=\\"shareaholic-like-buttonset\\" style=\\"float: right; height: 30px;\\"><a class=\\"shareaholic-fblike\\"></a><a class=\\"shareaholic-googleplusone\\"></a></div><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><!-- End Shareaholic LikeButtonSetTop --><p>This demo illustrates the steps taken to develop a character from concept sketches to finished facial rig in a simplified format. This is an actual rig I developed with the use of proprietary rigging tools in Maya utilized daily at work so I&#8217;m not going to demo those tools. However, future installments will incorporate the use of tools that I have written and that you can use to aide the building of complex facial rigs such as this, and include overviews of more advanced rigging techniques. I would also like to break the process down into chunks to really go into more detail about things you should be thinking about if you are trying to rig a face. This is an ongoing process so stay tuned, I have lot&#8217;s of useful tips to share.</p>\\n<p></p>\\n<p><span id=\\"more-2761\\"></span></p>\\n<p>The simple breakdown:</p>\\n<p>Concept Art<br />\\n1) Concept painting in photoshop is the first step to try and figure out a solid direction. I had nothing to go on except it needed to be a sexy female which is difficult because what makes just a head sexy? A lot of fashion models have killer bodies that obviously encorporate a lot of the determining factors, so blocking out and finessing the important attributes of a desirable face is imperative and what make this exercise challenging.</p>\\n<p>2) Orthographic views and 3/4 of the type of head I was going for. It turns out that I didn&#8217;t make the design decision of sticking with a pinup style female until after I sketched the head turnaround drawing inspiration from another concept painting I liked. Thus, I use the head turnaround purely as a generic starting point. Getting it into 3d was more important at this stage than making a final decision on the character design. Sculpting tools make it easier to finalize the design anyway, at least for me.</p>\\n<p>Concept Sculpt and Texturing<br />\\n3) It&#8217;s hard to really nail down a 2d design before you get it into 3d especially when you have a couple of different genres competing for your affections. I was fighting with making a supermodel or a pinup style face. Luckily Mudbox made that process easier. The final probably looks like a mashup of both.</p>\\n<p>Sculpting the head is really where I made my design decisions take on an afterlife from their inception, attempting to distill organic forms that looked more finalized.</p>\\n<p>4) Texture painting with ptex as an experimental process was useful in further exploration of the design. Since I didn&#8217;t have to fully commit and make UVs, and I already had good sculpting topology, the freedom to experiment was limitless.</p>\\n<p>Model Rigging Prep<br />\\n5) Retopology of the low res mesh using Modo produced the best and the cleanest generic mesh result in the least amount of time. This simple mesh is also highly reusable as a starting point for other designs.</p>\\n<p>6) The final mesh to be rigged needs to have just enough loops for an optimal resulting deformation after skinning, most importantly the mouth followed by the eyes etcetera. The low res retop is not a good choice for good deformation except if you are trying to output a low poly game rig.</p>\\n<p>Since I was under the gun to get the model and rig done in a week or two I had to continue to refine the proportions at the same time as modeling good topology. The resulting workflow is a sculpting approach to modeling low res whereby slowly adding more loops, followed by a pass of smoothing and carving the subdivision preview available in Modo, and then stepping back down to the lower res geo, got the job done. Beware when trying this technique in Zbrush or other software because editing proportions and sculpting high res and then deleting the higher divisions will indirectly smooth the resulting mesh thereby erasing the detail. I suggest using this workflow only in Modo where you can hit Tab to toggle on an off subdivisions, Catmull Clark being the best (Shift-Tab). I have to say Modo is supreme for modeling not only for these cababilities, but also the superior advantage of quickly lighting and rendering a preview with occlusion and GI. The physical lighting makes the model feel more real with a sense of scale from cast shadows and a simple skin texture. Blemishes and undesirable defects become glaringly more obvious as well, making it easier to spot and fix.</p>\\n<p>Rigging with Joints<br />\\n7) Rigging Starts with joints only with a control rig that either drives the joints directly via constraints or by constraining parent controls so that they drive groups of child controls. Some controls around the mouth are driven by SDK as well so a system of using multiple null buffer nodes is used to get proper tranformations and rotations of the controls or else there would be not so desirable or predictable results.</p>\\n<p> <img alt=\\"8)\\" class=\\"wp-smiley\\" src=\\"http://www.jonasavrin.com/wp-includes/images/smilies/icon_cool.gif\\" /> The weighting process is time consuming but with adequate practice and great topology like this some people can get it done in literally hours. I&#8217;m slower but that&#8217;s because I am a perfectionist when it comes to weighting.</p>\\n<p>9) The control rig is a series of stock curves constrained to the rig when the rig gets built so it&#8217;s easy to modify and save those curves for a perfectly fast result that is highly reusable.</p>\\n<p>The Osipa style face rig is preferred a lot by animators and the next demo will go over how I use multiple styles of UI on the same rig and the tools to generate said controls.</p>\\n<p>Subsequent demos will include facial poses and blends and making this rig work with both also known as a hybrid rig. The advantage of poses made with joints only are great because its less computationally expensive but blends are necessary for folding, wrinkling, and some minor correctives.</p>\\n<div class=\\"shr-publisher-2761\\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "This demo illustrates the steps taken to develop a character from concept sketches to finished facial rig in a simplified format. This is an actual rig I developed with the use of proprietary rigging tools in Maya utilized daily at work so I&#8217;m not going to demo those tools. However, future ins", "id": "http://www.jonasavrin.com/?p=2761", "categories": [], "metadata": {"guid": "151618b7-e734-4383-bd45-8b97002a40d9", "likes": 0, "is_published": false}}, {"author": "Peter van Ooijen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/528PYM8S0Sg/", "title": "Running Visual Studio (and Resharper) on a Mac", "datetime": "2011-08-11T08:53:25", "html": "<p>Many before me have made this step, finally I took it myself. The excuse to get me a Mac was building iPhone apps with <a href=\\"http://ios.xamarin.com/\\">Monotouch</a>. My expectations were great and all were fully met. After battling a couple of blue screens and a lot of Windows updates I decided to pass my Dell to my son\\u2019s game addiction and move as much as possible to the Mac. I wanted to mix the (excellent) Mac mail, surf and other tools with the Windows only tool Visual Studio. Using <a href=\\"http://www.apple.com/support/bootcamp/\\">Bootcamp</a> to boot either OSX or Windows on Apple hardware was not good enough. <a href=\\"http://www.vmware.com/products/fusion/overview.html\\">VMware fusion</a> runs any version of Windows (including 64 bit) almost seamless under OSX.</p>\\n<p>To give both OSX and Windows some air my Macbook has 8 Gb of Ram. 4 gigs is standard. VMware fusion works as promised. Windows runs like a charm; resuming (from sleep mode) is even faster than on a PC.</p>\\n<p>The only thing which needed some attention was Resharper which highly depends on specific keystrokes. The Mac keyboard is quite different, making all keys work required fiddling some settings in several places. I have an external <a href=\\"http://store.apple.com/us/product/MB110LL/B\\">Mac keyboard with a numeric keypad</a>, a surprising minimalistic approach after all curved desktop hoggers with multi media extensions. It is a nice fast and relaxing typer. </p>\\n<p>The problem keys</p>\\n<h2>Insert</h2>\\n<p>There is no insert key on a Mac keyboard. VMware can map keys, a <a href=\\"http://blogs.vmware.com/teamfusion/2008/10/vmware-fusion-7.html\\">post on the VMware support forum</a> describes how to map the Ins key, explicitly mentioning R# <img alt=\\"Smile\\" class=\\"wlEmoticon wlEmoticon-smile\\" src=\\"http://codebetter.com/petervanooijen/files/2011/08/wlEmoticon-smile.png\\" style=\\"border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none;\\" /> There is no need to do that for the external keyboard, the 0 on the numeric keypad works just like the &lt;ins&gt;. Type &lt;alt&gt;&lt;0&gt; and you have your new class.</p>\\n<h2>Ctrl-Click</h2>\\n<p>In the default VMware key mappings&nbsp; &lt;ctrl&gt;&lt;click&gt; is mapped to a mouse right click. Disable or change that in the VMware preferences</p>\\n<p><a href=\\"http://codebetter.com/petervanooijen/files/2011/08/MAcKb1.png\\"><img alt=\\"MAcKb1\\" border=\\"0\\" height=\\"509\\" src=\\"http://codebetter.com/petervanooijen/files/2011/08/MAcKb1_thumb.png\\" style=\\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; border-top: 0px; border-right: 0px; padding-top: 0px;\\" width=\\"492\\" /></a></p>\\n<h2>Function keys</h2>\\n<p>The default behavior of Mac Function keys does things like changing the audio volume.&nbsp; You change that in System Preferences.</p>\\n<p><a href=\\"http://codebetter.com/petervanooijen/files/2011/08/MacKb2.png\\"><img alt=\\"MacKb2\\" border=\\"0\\" height=\\"448\\" src=\\"http://codebetter.com/petervanooijen/files/2011/08/MacKb2_thumb.png\\" style=\\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; border-top: 0px; border-right: 0px; padding-top: 0px;\\" width=\\"502\\" /></a></p>\\n<p>This does not always work for all keys. In the key mappings of VMware is the possibility to enable Mac OS keyboard shortcuts.</p>\\n<p><a href=\\"http://codebetter.com/petervanooijen/files/2011/08/MacKb4.png\\"><img alt=\\"MacKb4\\" border=\\"0\\" height=\\"529\\" src=\\"http://codebetter.com/petervanooijen/files/2011/08/MacKb4_thumb.png\\" style=\\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; border-top: 0px; border-right: 0px; padding-top: 0px;\\" width=\\"511\\" /></a></p>\\n<p>The Apple-Tab key is nice to have to switch from VS, even in full screen, to Apple mail with one keystroke. The expos\\u00e9 one is not that nice, as it is linked to the F9 and F10 function keys. Trying to set a breakpoint will show you Mac\\u00b4s desktop\\u2026</p>\\n<p>These key mappings can be changed in System preferences, Expos\\u00e9 and Spaces</p>\\n<p><a href=\\"http://codebetter.com/petervanooijen/files/2011/08/MacKb3.png\\"><img alt=\\"MacKb3\\" border=\\"0\\" height=\\"497\\" src=\\"http://codebetter.com/petervanooijen/files/2011/08/MacKb3_thumb.png\\" style=\\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; border-top: 0px; border-right: 0px; padding-top: 0px;\\" width=\\"506\\" /></a></p>\\n<p>Here I just disabled the keys. A four finger swipe works just as good.</p>\\n<p>Well, that\\u00b4s all. Now I have my full VS experience with everything Mac just a keystroke away.</p>\\n<p><a href=\\"http://codebetter.com/petervanooijen/files/2011/08/DSC_6531_001.jpg\\"><img alt=\\"DSC_6531_001\\" border=\\"0\\" height=\\"772\\" src=\\"http://codebetter.com/petervanooijen/files/2011/08/DSC_6531_001_thumb.jpg\\" style=\\"border-bottom: 0px; border-left: 0px; margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; border-top: 0px; border-right: 0px; padding-top: 0px;\\" width=\\"513\\" /></a></p>\\n<p>Recommended.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/528PYM8S0Sg\\" width=\\"1\\" />", "summary": "Many before me have made this step, finally I took it myself. The excuse to get me a Mac was building iPhone apps with Monotouch. My expectations were great and all were fully met. After battling a couple of blue&#160;&#8230; <a href=\\"http://codebetter.com/petervanooijen/2011/08/11/running-visual-st", "id": "http://codebetter.com/petervanooijen/2011/08/11/running-visual-studio-and-resharper-on-a-mac/", "categories": [], "metadata": {"guid": "f2005ee0-c374-4e0f-9822-d1bd99d2d52d", "likes": 0, "is_published": false}}]'
09-10 23:31 root         INFO     Handling CGI request.
09-10 23:31 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:31 SocketClient INFO     Sending to service: "["request_content_slice", [45, 15], {}]"
09-10 23:31 SocketClient INFO     Received from service: "[{"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/09/maya-bevel-plus-and-curve-fillet-tutorial/", "title": "Maya Bevel Plus and Curve Fillet Tutorial", "datetime": "2011-08-10T04:16:32", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\"clear: both; height: 3px; width: 100%;\"></div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"></a><a class=\"shareaholic-googleplusone\"></a></div><div style=\"clear: both; height: 3px; width: 100%;\"></div><!-- End Shareaholic LikeButtonSetTop --><h2>Find Out How to Turn Custom Text to Realistic Metallic Objects</h2>\n<hr />\n&nbsp;&nbsp;&nbsp;</p>\n<div>\nThis is for those of you interested in working with custom curves exported from Illustrator or created in Maya to make a custom logo or raised text for a reel or for work.  I&#8217;m actually doing this type of thing for some extra cash and maybe I will throw a little into my demo reel at some point just to have some more professional looking animated text.  Have fun, and I hope you find it useful!  You can even download the curves to get started.  Read on!\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>This:</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_000.png\" rel=\"lightbox[2680]\"><img alt=\"custom curves\" height=\"193\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_000.png\" title=\"custom curves\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>To this:</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica_redMetallicFlake.jpg\" rel=\"lightbox[2680]\"><img alt=\"\" height=\"376\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica_redMetallicFlake.jpg\" title=\"metallica_redMetallicFlake\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<p><span id=\"more-2680\"></span></p>\n<h2>Getting Started with Nurbs Curves</h2>\n<hr />\n&nbsp;&nbsp;&nbsp;</p>\n<div>\nHere&#8217;s kinda where we start.  These are linear curves that are perfectly capable of being extruded.  They were custom made in Illustrator using a reference image.  Using the flat image of the text, I absorbed what makes the shapes work and made my best attempt at reproducing the lines in a way that unifies the whole design.  The whole design of Ride the Lightning album cover is awesome but there are knock-offs that are completely weak looking like someone drew it on a napkin and that&#8217;s unfortunately what I had to use to start with.\n</div>\n<p>&nbsp;</p>\n<p><a href=\"http://bit.ly/qcYq58\" title=\"Illustrator File\">Download</a> the actual curves if you wanna try it out yourself!</p>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica.jpg\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone size-medium wp-image-2743\" height=\"225\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica-300x225.jpg\" title=\"metallica\" width=\"300\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_000.png\" rel=\"lightbox[2680]\"><img alt=\"custom curves\" height=\"193\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_000.png\" title=\"custom curves\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>The final output I&#8217;m going for is similar to the Ride the Lightning cover.  These are the <a href=\"http://bit.ly/qcYq58\" title=\"download the Illustrator file\">curves</a>.  If you are using your own curves, it is important to save them as an Illustrator CS file and turn off all the options as you save.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_001.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"238\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_001.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>&#8230;and what I get from doing a Bevel Plus directly on those curves.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\nA Pretty good version of 3d text using Bevel Plus, but what&#8217;s missing?  Filleted corners you say?  Yeah!  Here&#8217;s how to go about doing that.  Because I use Vray in Max for final render output, I need to find a way to fillet the corners to add the solid, heavy, metal, realistic feel to block letters for a project.  I&#8217;m thinking of my final output and render software at this stage and Mental Ray has the mia_roundcorners node, recently demoed <a href=\"http://bit.ly/q3EJgh\" title=\"mi_roundedCorners\">here</a> at around 34:30, that&#8217;ll produce a similar result, but I prefer Vray and Vray doesn&#8217;t really have anything (built-in) that&#8217;s comparable.  The technique I will show is good since I can tweak the result many times, zoom in and out to really inspect what&#8217;s happening, and be very specific about the values without being too limited.  Maybe later I can try to write a shader to do the same thing in Vray.\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_012.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"306\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_012.png\" width=\"200\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Example: The M with rounded corners.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_022.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"361\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_022.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Determine the curve that needs to be beveled.  Here&#8217;s an example of one done already.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_002.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"263\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_002.png\" width=\"200\" /></a></div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>The letter for beveling comprised of one continuous curve built in Illustrator.  They are purposely linear so that it&#8217;s easier and cleaner to round the corners.\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_024.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"480\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_024.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Select all the curve corners edit points.  Do not select intermediary edit points.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_025.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"500\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_025.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Detach Curves with preferences set at default.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_026.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"414\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_026.png\" width=\"279\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Sometimes you have to delete the original curve after detaching, but not the detachedCurve(s).</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_027.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"400\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_027.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<div>Fillet Curve Options</div>\n<ul>\n<li>Trim on = delete what&#8217;s left over automatically</li>\n<li>Circular on = easier</li>\n<li>Radius = your preferred radius</li>\n</ul>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_028.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"178\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_028.png\" width=\"178\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Filleted curve example.  There are a total of three curves after doing a fillet.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_002.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"654\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_002.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>After <strong>all</strong> corners are filleted, delete one edge, preferably the straight one.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_003.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"244\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_003.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>After selecting all the curves at once Attach Curves with the default settings tweaked slightly.  Connect is turned on and Keep Originals is off.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_004.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"518\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_004.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Unhide the attached curve and Open/Close Curves to close the curve.  This step is <strong>essential</strong> for getting the edit points right.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_005.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"459\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_005.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Of course delete history and rename your curve to something manageable.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<h2>Bevel Plus Options</h2>\n<hr />\n&nbsp;&nbsp;&nbsp;</p>\n<div>\nOpen up Bevel Plus Options, Output Options.  The important part is the sampling controls, but make sure setting for output get is set to Polygons and Tessellation is set to sampling.  Under Along Extrusion Samples put something like 5, and under Along Curve Samples pick a higher number usually if your letters are fat like mine.  It&#8217;s all relative to the bevel depth and extrude distance.  The default leaves letters looking blocky and low res.\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_007.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"335\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_007.png\" width=\"250\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_006.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"323\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_006.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\nSome good settings to get started with creating really blocky letters with nice rounded fillets, fine tuning with be needed with the bevel width etc.  If you want a script to help you adjust the attributes on multiple bevels simultaneously, then read on!\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_009.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"543\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_009.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Final Fillet.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<h2>Bevel Plus Possible Issues</h2>\n<hr />\n&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_010.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"337\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_010.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\nKeep in mind: Keep it clean. Remember to keep the outliner clean of clutter so that things don&#8217;t get unnecessarily complex. Stages of creation process get a little hairy because of all the nodes Maya doesn&#8217;t do a good job of cleaning up. You always need to keep an eye on that plus selection order does count sometimes so if curves are coming out funky, check the order of selection and deleting of history.\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_011.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"317\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_011.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\nLetters like this A, select the outer curve and then the inner curve before hitting Bevel Plus.  The inner curve needs to be beveled differently from the outer curve so setting this before hand is a good tip or just change it afterwards in the channel box inputs by clicking Style and changing it to Concave In.  Remember to delete history before beveling and all unnecessary objects after beveling.  Keep the bevel history on your objects so that you can tweak the attributes on them.  It&#8217;s easy to create a script to tweak them all at the same time if you want to.  I also recommend version-ing up after each letter to avoid having to start all over again.  The process can get tedious if you don&#8217;t know what you&#8217;re doing at first.\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_013.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"size-full wp-image-2719 alignnone\" height=\"435\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_013.png\" title=\"bevelPlusTut_image_013\" width=\"500\" /></a></div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\nHere&#8217;s another problem that you may encounter.  If a letter appears reversed after doing a bevel then select the curve that made the bevel and hit Reverse Curve Direction in the Edit Curves Menu.\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\nIf you have to recreate a fillet by duplicating another fillet then be sure to freeze transforms on the duplicated curve before proceeding to Attach Curves.  This will lead to unpredictable results.\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_014.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"455\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_014.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\nWhen working with Nurbs Curves in Maya things are inevitably going to get wierd.  Try not to panic and use Reverse Curve Direction, Attach, and Detach Curves, Delete History, and Freeze Transforms till you get the results you want.  Sometimes it&#8217;s impossible to know which way the curve is going and it makes a difference when you&#8217;re trying to create the final filleted curve.  So persevere, you have to jostle Maya a little bit for it to want to cooperate and till there&#8217;s an easier solution, like if Vray had a good auto fillet shader which is why I had to do this, then this solution works just fine.\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>For speeding up workflow, use the G key to repeat the last command.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>The semi-final result (viewport screenshot):</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_015.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"199\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_015.png\" width=\"550\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Here&#8217;s an image of an earlier attempt with the reference image as well just so you have a shot of the reference I used:</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_015_1.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"251\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_015_1.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\nAfter I made a change to have the text extrude a little deeper, if you look you can see it in the reference image that it is indeed deeper than my image, there is funkiness going on with the faces not knowing where to attach themselves to.  A simple tweak to the bevel depth can fix that.  But is it going to take forever to select each object and apply this simple change?  No, not if you have this simple script!  Here&#8217;s how you do it:\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Break out the pymel and do a:</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<pre class=\"brush: python; auto-links: true; title: ; toolbar: true; notranslate\">from pymel.core import *</pre>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\nThen type some code like this.  These lines are just setting attrs directly on ALL bevelPlus nodes in the scene at one.  If you have more than one instance of text, then you better be sure that you know that this is going to change everything globally.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<pre class=\"brush: python; auto-links: true; title: ; toolbar: true; notranslate\">\nfor b in range(len(ls(type='bevelPlus'))+1):\n    if b == 0: continue\n        bevnode = PyNode('bevelPlus' + str(b)\n        setAttr(bevnode+'.width', .009)\n        setAttr(bevnode+'.depth', .010)\n        setAttr(bevnode+'.extrudeDepth', 2.7)\n        setAttr(bevnode+'.polyOutExtrusionSamples',5)\n        setAttr(bevnode+'.polyOutCurveSamples',25)\n</pre>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Take a look at the width attr and bump that down a hundredth.  Now take a look:</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_019.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"184\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_019.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Awesome I say!  But it&#8217;s too high res, no need for all those polys.  So tweak the script again and in seconds have the result you want.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<pre class=\"brush: python; auto-links: true; highlight: [4,8]; title: ; toolbar: true; notranslate\">\nfor b in range(len(ls(type='bevelPlus'))+1):\n    if b == 0: continue\n        bevnode = PyNode('bevelPlus' + str(b)\n        setAttr(bevnode+'.width', .008)\n        setAttr(bevnode+'.depth', .010)\n        setAttr(bevnode+'.extrudeDepth', 2.7)\n        setAttr(bevnode+'.polyOutExtrusionSamples',5)\n        setAttr(bevnode+'.polyOutCurveSamples',11)\n</pre>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Probably the most important attributes to tweak are going to be the polyOutExtrusionSamples and the polyOutCurveSamples so fine tune those to get the cleanest result.  Keep the extrusion samples higher for curved surfaces because polys will quickly become blocky.  Tweak those objects separately and, if more than one, have a separate script to handle just those.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_021.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"196\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_021.png\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Now THAT&#8217;s butta!  Also, check your bevels especially on the inner curves, they can sometimes flip and not be right.</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>Render time!</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div>\n<a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica_redMetallicFlake.jpg\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone size-full wp-image-2706\" height=\"376\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica_redMetallicFlake.jpg\" title=\"metallica_redMetallicFlake\" width=\"500\" /></a>\n</div>\n<p>&nbsp;&nbsp;&nbsp;</p>\n<div><strong>Stay tuned for more tips on rendering with Vray later.</strong></div>\n<div class=\"shr-publisher-2680\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "Find Out How to Turn Custom Text to Realistic Metallic Objects &#160;&#160;&#160; This is for those of you interested in working with custom curves exported from Illustrator or created in Maya to make a custom logo or raised text for a reel or for work. I&#8217;m actually doing this type of thing fo", "id": "http://www.jonasavrin.com/?p=2680", "categories": [], "metadata": {"guid": "5fbb7509-fa16-45b5-b6e5-806f0450c392", "likes": 0, "is_published": false}}, {"author": "noreply@blogger.com (Brian Karis)", "url": "http://graphicrants.blogspot.com/2011/08/new-prey-2-screenshot.html", "title": "New Prey 2 screenshot", "datetime": "2011-08-10T00:16:37.853000", "html": "<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/--29MaDPslhE/TkIHFzTZpNI/AAAAAAAAACA/CQiFt-PWYy0/s1600/tommy_final_cropped1.jpg\"><img border=\"0\" height=\"250\" src=\"http://2.bp.blogspot.com/--29MaDPslhE/TkIHFzTZpNI/AAAAAAAAACA/CQiFt-PWYy0/s400/tommy_final_cropped1.jpg\" width=\"400\" /></a></div><br />It has been a long time since I updated this blog with substantial content but I wanted to point out that Bethesda just released this new screenshot of Prey 2. It's a great shot but it's also a fantastic&nbsp;demonstration&nbsp;of some new graphical features I added to our latest build of the game.<br /><br />First, there's the depth of field in the background which is HDR circular bokeh DOF.<br /><br />Secondly, in the puddles on the ground, you will see screen space reflections. They aren't planer reflections, they work on every surface and run on every platform.&nbsp;SSR really adds a ton of dimension and accuracy to our wet, metal filled, alien noir city.&nbsp;I can't talk yet about how it works unfortunately.<br /><br />So, check it out and tell me what you think. Hopefully in not too long I can start talking about how some of the tech works but for now you just get a glimpse.<br /><br />-Brian<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/3460906122833508895-2356860367751453147?l=graphicrants.blogspot.com\" width=\"1\" /></div>", "summary": "<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/--29MaDPslhE/TkIHFzTZpNI/AAAAAAAAACA/CQiFt-PWYy0/s1600/tommy_final_cropped1.jpg\"><img border=\"0\" height=\"250\" src=\"http://2.bp.blogspot.com/--29MaDPslhE/TkIHFzTZpNI/AAAAAAAAACA/CQiFt-PWYy0/s400/tommy_fi", "id": "tag:blogger.com,1999:blog-3460906122833508895.post-2356860367751453147", "categories": [], "metadata": {"guid": "2d0c2236-fdf3-4227-a8f8-036a6508ee0d", "likes": 0, "is_published": false}}, {"author": "Rigging Dojo", "url": "http://www.riggingDojo.com/2011/08/09/new-demo-reel-from-rigging-dojo-alumna-amy-hay/", "title": "New demo reel from Rigging Dojo alumna, Amy Hay", "datetime": "2011-08-09T18:19:16", "html": "<p>We love getting updates from all our alumni, especially the ones we can share with all of you.<br />\nAmy told us she has been working on rigging some quadruped creatures but she can&#8217;t show that yet.<br />\nWe look forward to getting to see that when she is allowed to show them off.</p>\n<p>For now enjoy her latest character rigging demo reel.</p>\n<p><!-- Artiss Code Embed v1.5 | http://www.artiss.co.uk/artiss-code-embed -->\n<p><a href=\"http://vimeo.com/3212064\">Amy Hay - Character Rigging & Animation Reel</a> from <a href=\"http://vimeo.com/user921147\">Amy Hay</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p><!-- End of Artiss Code Embed code -->\n</p>\n<p>Amy Hay<br />\n<a href=\"http://www.crackerfire.net/\">www.crackerfire.net</a></p>\n<p>&nbsp;</p>", "summary": "We love getting updates from all our alumni, especially the ones we can share with all of you. Amy told us she has been working on rigging some quadruped creatures but she can&#8217;t show that yet. We look forward to getting to see that when she is allowed to show them off. For now enjoy [...]", "id": "http://www.riggingDojo.com/?p=919", "categories": [], "metadata": {"guid": "5d37a3f2-78c2-4b49-8c64-f54267977f71", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/08/08/exportlayer-v1-32/", "title": "ExportLayer v1.32", "datetime": "2011-08-08T08:10:51", "html": "<p>Download: <a href=\"http://www.zspline.net/blog/../files/ExportLayer.lua\" target=\"_blank\">ExportLayer v1.32</a></p>\n<p>Changes in v1.32:</p>\n<ul>\n<li>Fixed default scaling so the &#8220;meter per game unit&#8221; system setting is factored in.</li>\n<li>Added the NORESIZE argument to prevent scaling during export.</li>\n</ul>\n<p>Changes in v1.31:</p>\n<ul>\n<li>Support for automatically applied morphmap.</li>\n</ul>\n<p><!-- PHP 5.x --></p>", "summary": "Download: ExportLayer v1.32 Changes in v1.32: Fixed default scaling so the &#8220;meter per game unit&#8221; system setting is factored in. Added the NORESIZE argument to prevent scaling during export. Changes in v1.31: Support for automatically applied morphmap.", "id": "http://www.zspline.net/blog/?p=1378", "categories": [], "metadata": {"guid": "ed3d583c-f9c5-4a0e-bf29-b93c8183967e", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=750", "title": "Optional parameters can be harmful", "datetime": "2011-08-08T01:13:18", "html": "<p>I&#8217;ve come around on optional parameters after being an opponent of adding them to .NET. \u00a0They can be very helpful, clean up the code by not needing overloads, and inform the caller what the defaults are. \u00a0They are an integral part of python and why it is easy to use. \u00a0This is great.</p>\n<h6>Except when you abuse them.</h6>\n<h5>And you may be abusing them without knowing it.</h5>\n<h3>Parameters should only be optional if a valid default value can be determined by looking only at the contents of the method.</h3>\n<p>What do I mean? \u00a0Well, if your default value is &#8216;None&#8217;, and you call another module to create the actual default value, this is not good practice. \u00a0It negatively impacts two important software metrics: it increases coupling by adding a dependency on your module, and it increases cyclomatic complexity by creating an &#8216;if&#8217; statement.</p>\n<p>It is better, in these cases, to just force the user to pass in a valid value. \u00a0If you&#8217;re jumping through hoops to determine a default value, odds are it is too specific and also breaks the reusability and dependability of the method. \u00a0The caller has a higher chance of already having a dependency to what you would be depending on for your default value (any chance is higher than the 0% chance your method has of needing it). \u00a0To demonstrate:</p>\n<pre>def exportFile(filename, branch=None, depotRoot=None):\n    if branch is None:\n        branch = os.environ['EXPORT_BRANCH']\n    if depotRoot is None:\n        depotRoot = someScmModule.singleton.depotRoot\n    ...</pre>\n<p>This code is not unusual but it is really difficult to understand and maintain. \u00a0The default values determined for branch and depotRoot are entirely outside the logic and goal of the method.</p>\n<p>Don&#8217;t do stuff like this and you (and especially others!) will have a much easier time maintaining and supporting code.</p>", "summary": "I&#8217;ve come around on optional parameters after being an opponent of adding them to .NET. \u00a0They can be very helpful, clean up the code by not needing overloads, and inform the caller what the defaults are. \u00a0They are an integral part of python and why it is easy to use. \u00a0This is great. Except whe", "id": "http://www.robg3d.com/?p=750", "categories": [], "metadata": {"guid": "fdd0a080-f46b-4d9c-9878-89716b48ab48", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/08/07/motion-capture-for-a-weather-forecast-billboard/", "title": "motion capture for a weather forecast billboard", "datetime": "2011-08-07T10:32:26", "html": "<p>In 2009 we were able to produce a follow up with the character Leon and zazar.</p>\n<p>This time the target audience was television : a billboard aired before and after the weather forecast.</p>\n<p></p>\n<p>The main constraint with this kind of movie is its shortness : roughly 5\u00a0 seconds worth of content, barely enough time to announce what comes next.</p>\n<p>Our client,\u00a0 owner of\u00a0 bowling playhouse\u00a0 housing a\u00a0 restaurant\u00a0 and dancing room , was open to all kind of idea : it was logical for us this time to picture 4 characters dancing on an extravagant dance floor . <em>( entirely different than the real one )</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/jennifer_tektonik.jpg\"><img alt=\"\" height=\"362\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/jennifer_tektonik.jpg?w=450&#038;h=362\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>Jennifer , the meanest and most detestable character dances on tektonik</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/leon_jazz.jpg\"><img alt=\"\" height=\"361\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/leon_jazz.jpg?w=450&#038;h=361\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>Leon executes an aerial classical jazz dance steps</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/julie_ragga.jpg\"><img alt=\"\" height=\"360\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/julie_ragga.jpg?w=450&#038;h=360\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>Julie breaks a sweat on a ragga tune.</em></p>\n<p><a href=\"http://circecharacterworks.files.wordpress.com/2011/08/zazar_pop_music.jpg\"><img alt=\"\" height=\"357\" src=\"http://circecharacterworks.files.wordpress.com/2011/08/zazar_pop_music.jpg?w=450&#038;h=357\" title=\"\" width=\"450\" /></a></p>\n<p style=\"text-align: center;\"><em>Zazar dances on pop_music</em></p>\n<p>Films credit: <em>( 4 * 14 seconds movie )</em><br />\nJL Patriat:<br />\n- Film and artistic director<br />\n- character design<br />\n- shot supervision with dance performer</p>\n<p>e. Lepinay:<br />\n- texturing<br />\n- lightning<br />\n- rendering<br />\n- compositing<br />\n- environment modeling</p>\n<p>C. Bazillou:<br />\n- character and expression modeling<br />\n- character setup<br />\n- skinning<br />\n- cloth and soft body simulation<br />\n-motion capture:<br />\n. data acquisition<br />\n. cleaning<br />\n. secondary animation<br />\n. view dependent surface deformation correction</p>\n<p>For this project where the character assets were already built the main cost was the animation part :</p>\n<p>This was a personal project and we were free to explore other style of animation because the client doesn&#8217;t specifically ask for cartoon animation .</p>\n<p>The use of motion capture was justified because with our limited resources<em> ( two 3d artists )</em> we didn&#8217;t feel comfortable to try and keyframe 1 minute worth of content in less than 10 days.</p>\n<p>Our purpose was not to work faster or cheaper : we wanted to tweak the original performance of several dancer and in the end with the preliminary work involved it was actually slightly more expensive to use this technique .</p>\n<p>Funnily enough , It was our first time working with actors : the previous project involving motion capture were simpler and we were doing the performance ourselves .</p>\n<p>There were 4 type of dance :\u00a0 I made my estimation based on 2 actors <em>( 1 for the female characters and\u00a0 the other for the male characters )</em> and accordingly prepare 2 Velcro suit size .</p>\n<br />  <a href=\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/799/\" /></a> <a href=\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/799/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/799/\" /></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=799&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\" width=\"1\" />", "summary": "In 2009 we were able to produce a follow up with the character Leon and zazar. This time the target audience was television : a billboard aired before and after the weather forecast. The main constraint with this kind of movie is its shortness : roughly 5\u00a0 seconds worth of content, barely enough tim", "id": "http://circecharacterworks.wordpress.com/?p=799", "categories": [], "metadata": {"guid": "5f61d34e-53ef-4fe4-8d7d-51a01c3f334a", "likes": 0, "is_published": false}}, {"author": "Dru Sellers", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/N33E3pgzB1c/", "title": "Thought Questions", "datetime": "2011-08-06T14:24:25", "html": "<p><em>After many weeks of travel I finally have some time to think again. Yay!</em></p>\n<p>Today&#8217;s post was inspired by\u00a0<a href=\"http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html\">http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html</a>.\u00a0The post presents a link to another wonderful site called <a href=\"http://thoughtquestions.com/\">Thought Questions</a> which got me thinking about a programming spin on the same concept.</p>\n<p>\u00a0</p>\n<p>What&#8217;s the difference between your coding today, and your coding 6 mths ago? If its improving, are you on the same trajectory? Or are you growing stagnant?</p>\n<p>Can you be a good developer with no business knowledge? Is it business knowledge if its just a mathmatical formula?</p>\n<p>What&#8217;s the biggest shift you have made in your programming since you started?</p>\n<p>What was the last thing you did just for fun?</p>\n<p>Who was the last person you helped on the internet? How did you help them?</p>\n<p>Do you visualize code in your head? What does it look like? Does it have color? Shape?</p>\n<p>\u00a0</p>\n<p>Anyways, happy saturday.</p>\n<p>\u00a0</p>\n<p>-d</p>\n<p>\u00a0</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/N33E3pgzB1c\" width=\"1\" />", "summary": "After many weeks of travel I finally have some time to think again. Yay! Today&#8217;s post was inspired by\u00a0http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html.\u00a0The post presents a link to another wonderful site called Thought Questions which got me thinking about a programming spin ", "id": "http://codebetter.com/drusellers/?p=148", "categories": ["Dru Sellers"], "metadata": {"guid": "85bb9d97-af29-4fa1-ba96-2f601e37a641", "likes": 0, "is_published": true}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/08/designing-animation-for-speed.html", "title": "Designing Animation For Speed", "datetime": "2011-08-06T12:35:28.806000", "html": "This was cross-posted to <a href=\"http://altdevblogaday.com/2011/08/06/designing-animation-for-speed/\">AltDevBlogADay</a>. Look for a powerlifting corollary sometime soon!<br /><br /><br /><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Everything I ever needed to know about animation, I learned from watching Looney Tunes.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Seriously.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Sure, I went to school. I learned HOW to animate there and from other sources, but none of that taught me what I needed to know about animation as much as watching Bugs outsmart Elmer, Daffy play the second banana, Foghorn Leghorn fumble about, or Wile E. Coyote fall to yet another demise.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Gravity Doesn\u2019t Exist Until You Look Down</h3><div><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote_fallstart1.jpg\"><img alt=\"\" class=\"alignleft size-full wp-image-13545\" height=\"320\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote_fallstart1.jpg\" style=\"border-bottom-width: 0px; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; float: left;\" width=\"240\" /></a>Bugs is the popular one. Daffy is the memorable one (Stuuuuuuupor Duck!). Foghorn, well, I say\u2026&nbsp; I say, he was fun to watch with his contraptions. However, Wile E. Coyote is the one that sticks out the most to me.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Not only is it entertaining to watch poor Wile E. try and try again to catch the Roadrunner (with a seemingly unlimited&nbsp;credit line with the Acme corporation), it is also a very good study of how developing a formula can allow an animator to work efficiently while keeping a high quality bar.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Take the timing of Wile E.'s fall, for instance. Did you know that every time he falls, it happens in the same exact number of frames? He tends to walk/fly/float/propel himself over a ledge, and doesn't fall until he looks down (for Wile, gravity doesn't exist until he does this). He then falls over N frames until you see a puff of smoke and hear a distant \"splat.\"</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">This comedic timing (combined with a happy accident regarding the audio level of his \"splat\") allowed the Looney Tunes animators to build up to this punchline without worrying if the punchline itself would feel right. It also ensured that re-takes weren't going to be needed- once that formula was set, it was followed.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Set Your Pace</h3><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">For game animation, I take the same approach, especially for transition animations. In fact, on our current project, we try to animate all transitions to occur on 6, 12, 18 or 24 frames. Each of these frame counts corresponds with the desired perceived pacing of the character's thought process. For example:</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"Ready Now!\" - 6 frames</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"Get moving and STOP!\" - 12 frames</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"I gotta be ready&nbsp;<em>before&nbsp;</em>I get there\"&nbsp;- 18 frames</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">\"OK, I'm gonna pick my spot and get ready when I'm there.\" - 24 frames</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">These frame numbers allowed us to&nbsp;build a visual language with these transitions. For example, the faster ones are more immediate and needed for faster gameplay responsiveness (say, for aiming and shooting). Having them all on a 6-frame count holds the player's expectation that if \u201cI've gotta shoot, I'll get there in .2 seconds.\u201d It also allows us to later add interruptible follow-through for an extra 6 or 12 frames without that extra motion feeling out of place.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">In contrast, the 18/24 frame transitions typically denote the end of longer, deliberate movement- the player knows they are moving at a certain speed and when they have reached their destination, the transition will carry that speed to a stop. These extra frames allow us to sell the character's weight at that stop, which in turn creates a mental acceptance by the player that it took longer than the 6/12 frame motions.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Fast Iteration</h3><div><br /></div><div class=\"mceTemp\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /><dl class=\"wp-caption alignright\" id=\"attachment_13568\" style=\"background-color: #f3f3f3; border-bottom-color: rgb(221, 221, 221); border-bottom-left-radius: 3px 3px; border-bottom-right-radius: 3px 3px; border-bottom-style: solid; border-bottom-width: 1px; border-left-color: rgb(221, 221, 221); border-left-style: solid; border-left-width: 1px; border-right-color: rgb(221, 221, 221); border-right-style: solid; border-right-width: 1px; border-top-color: rgb(221, 221, 221); border-top-left-radius: 3px 3px; border-top-right-radius: 3px 3px; border-top-style: solid; border-top-width: 1px; float: right; margin-bottom: 10px; margin-left: 10px; margin-right: 10px; margin-top: 10px; padding-top: 4px; text-align: center; width: 213px;\"><dt class=\"wp-caption-dt\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/08/exposusresheet1.jpg\"><img alt=\"\" class=\"size-full wp-image-13568\" height=\"233\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/08/exposusresheet1.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"203\" /></a></dt><dd class=\"wp-caption-dd\" style=\"font-size: 11px; line-height: 17px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 5px; padding-left: 4px; padding-right: 4px; padding-top: 0px;\">Sweet, sweet consistency</dd></dl></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">The next benefit to the frame counts is that they are easily scalable from one to the other. Personally, I set poses every 3-6 frames. This lets me easily slide the keys around if I need to make timing adjustments after the animations are implemented. These adjustments can also be easily scriptable (for fast tests), so I can adjust the timing of 160 animations very quickly to see if the new length feels right before going ahead and hand-tweaking them.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Since I've spaced out my keys in a uniform way, I can re-time the motions much more efficiently.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Lastly, these frame formulas give us efficient consistency. Since a uniform length exists, once we nail down the first key animation, we can modify it to create other motions in the same pool. For example, If we need to transition from a non-shooting pose to a shooting pose, we\u2019ll work on a key motion that gets across the character\u2019s intent and the player\u2019s feel. Once design deems the look and feel to be good for gameplay, we can create every other transition in that pool much quicker.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Happy Accidents</h3><div><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Much like the audio level on the splat of Wile E. Coyotes's fall (see the book Chuck Redux), coming up with the multiples of 6 formula was actually a happy accident- the Source Engine's default engine blend value is .2 seconds (6 frames!) In order to not disrupt existing gameplay, we started animating to that frame number. After implementing many transitions, it was apparent that not all of them could or should work on 6 frames. The easiest thing to do was scale the motion by 200% and work back from there. Lo and behold, 200% worked great, so we redid all of those motions with twice the frame count.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Since that pacing looked good,&nbsp;we extrapolated that 18 and 24 frames would be logical to try next. It worked, and now we have a (undocumented till now) visual language for our transitions.&nbsp;We've since extended this philosophy to our movement system, and the animators who work on that pump out high quality motions like nobody's business.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">It's Still Creative!</h3><div><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">Purist animators out there might be shocked that we take shortcuts in order to produce efficient, high-quality animation at a fast pace. The fact of the matter is Warner Brothers, and even Disney, did the&nbsp;same thing! Read Chuck Redux, or watch this:</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">The key is to not get so married to those formulas that we are unwilling to change them when they no longer work, or get stale. If that happens, we play with new formulas and do more timing tests until we get it right.&nbsp;In the end, the better we can nail down the punchline, the more time we can spend on the fun part of getting there.</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote1.jpg\"><img alt=\"\" class=\"aligncenter size-full wp-image-13547\" height=\"320\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote1.jpg\" style=\"border-bottom-width: 0px; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: block; margin-left: auto; margin-right: auto;\" width=\"400\" /></a></div><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\"><br /></h3><h3 style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 1.17em; line-height: 19px;\">Feedback!</h3><div><br /></div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\">I'd love to hear from other animators and designers what their processes for this are, as well! So speak up, tell your friends to read this and rip me to shreds, tell me how awesome I am or somewhere in between. I'm always looking for different techniques and opinions!</div><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><br /></div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4248341596629159263-38124459084849704?l=strongmanimator.blogspot.com\" width=\"1\" /></div>", "summary": "This was cross-posted to <a href=\"http://altdevblogaday.com/2011/08/06/designing-animation-for-speed/\">AltDevBlogADay</a>. Look for a powerlifting corollary sometime soon!<br /><br /><br /><div style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-h", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-38124459084849704", "categories": ["anim8d (noreply@blogger.com)"], "metadata": {"guid": "fe7a6cdc-278b-4844-9482-1883e59c5e3d", "likes": 0, "is_published": true}}, {"author": "Glenn Block", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/PRCEBXQBkPc/", "title": "Integrating MVC routes and Web API routes", "datetime": "2011-08-05T05:55:30", "html": "<p>&nbsp;</p>\n<p>Several folks have been complaining for a while about Action Links not being properly generated when MVC routes are mixed with Service Routes in the same site.\n<p>It turns out there is a solution&#8230;..don&#8217;t use ServiceRoute <img alt=\":-)\" class=\"wp-smiley\" src=\"http://codebetter.com/glennblock/wp-includes/images/smilies/icon_smile.gif\" />  Instead, create a derived route below and use it. [Kudos to <a href=\"http://www.haacked.com\">Phil Haack</a> and <a href=\"http://blogs.msdn.com/b/clemensv/\">Clemens Vasters</a> for this]\n<pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\"><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> WebApiRoute : ServiceRoute\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">{\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     <span style=\"color: #0000ff;\">public</span> AppServiceRoute(<span style=\"color: #0000ff;\">string</span> routePrefix,\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">       ServiceHostFactoryBase serviceHostFactory, Type serviceType)\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     : <span style=\"color: #0000ff;\">base</span>(routePrefix, serviceHostFactory, serviceType)\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     {\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     }\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> VirtualPathData GetVirtualPath(\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">       RequestContext requestContext, RouteValueDictionary values)\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     {\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">       <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">null</span>;\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">     }\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">}\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\"></pre>\n</pre>\n<p>The link gen functionality uses the GetVirtualPath method to generate links. If you set it to null you are opting web api routes out of link gen and everything should work. </p>\n<p>Now to register your routes using this model, don&#8217;t use MapServiceRoute. </p>\n<p>Instead, in add to your route table manually this way:\n<pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">var config = <span style=\"color: #0000ff;\">new</span> HttpHostConfiguration() <span style=\"color: #808080;\">///create your config object</span>\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">var factory = <span style=\"color: #0000ff;\">new</span> HttpConfigurableServiceHostFactory(config);\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\">routes.Add(<span style=\"color: #0000ff;\">new</span> WebApiRoute(\"<span style=\"color: #8b0000;\">Foo</span>\", factory, <span style=\"color: #0000ff;\">typeof</span>(Foo)));\n</pre>\n<pre style=\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,'Courier New',courier,monospace; font-size: 12px;\"></pre>\n</pre>\n<p>It&#8217;s a little bit more code, but not too much and hey, it fixes the problem. This will be fixed in the next drop, which YES, we are working on.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/PRCEBXQBkPc\" width=\"1\" />", "summary": "&#160; Several folks have been complaining for a while about Action Links not being properly generated when MVC routes are mixed with Service Routes in the same site. It turns out there is a solution&#8230;..don&#8217;t use ServiceRoute Instead, create a&#160;&#8230; <a href=\"http://codebetter.com/g", "id": "http://codebetter.com/glennblock/2011/08/05/integrating-mvc-routes-and-web-api-routes-2/", "categories": [], "metadata": {"guid": "5986afe5-245b-48e1-8517-a3b717433432", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8501055529", "title": "a cool photo I found from when I moved home. \u00a0I was doing a lot...", "datetime": "2011-08-05T00:04:07", "html": "<img src=\"http://30.media.tumblr.com/tumblr_lpfsmwBIHp1qgg0uyo1_500.jpg\" /><br /><br /><p>a cool photo I found from when I moved home. \u00a0I was doing a lot of art back then!</p>", "summary": "<img src=\"http://30.media.tumblr.com/tumblr_lpfsmwBIHp1qgg0uyo1_500.jpg\" /><br /><br /><p>a cool photo I found from when I moved home. \u00a0I was doing a lot of art back then!</p>", "id": "http://shawnkirsch.tumblr.com/post/8501055529", "categories": [], "metadata": {"guid": "e6c99f00-b581-442d-b585-0fa452166874", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8500670372", "title": "My Old Car\u2026Been looking for this picture for a...", "datetime": "2011-08-04T23:53:43", "html": "<img src=\"http://29.media.tumblr.com/tumblr_lpfs5kPdp31qgg0uyo1_500.jpg\" /><br /><br /><p>My Old Car\u2026Been looking for this picture for a while\u2026</p>", "summary": "<img src=\"http://29.media.tumblr.com/tumblr_lpfs5kPdp31qgg0uyo1_500.jpg\" /><br /><br /><p>My Old Car\u2026Been looking for this picture for a while\u2026</p>", "id": "http://shawnkirsch.tumblr.com/post/8500670372", "categories": [], "metadata": {"guid": "56c29b89-28ad-42f8-83f8-497f2a4daadc", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=737", "title": "Bored People Quit (I did!)", "datetime": "2011-08-04T15:20:16", "html": "<p>If you read one long blog article this year, make it this one: Rands in Repose&#8217;s <a href=\"http://www.randsinrepose.com/archives/2011/07/12/bored_people_quit.html\">Bored People Quit</a>. \u00a0It is one of the most important blog posts I&#8217;ve read in a long time, and right on the money.</p>\n<p>If you&#8217;ve ever worked a shitty professional job (especially programming), and you know you have, you&#8217;ll resonate with what&#8217;s written there. \u00a0I told my last job for well over a year that I was bored and actually tried to quit a number of times, and gave exact action items for how to fix my boredom and what my grievances were. \u00a0Not that any were ever addressed. \u00a0And in a place like that, they couldn&#8217;t realistically be addressed, with so much riding on such an expensive project- they couldn&#8217;t give a shit about almost any individual worker or what I perceive as the long term health of the studio.</p>\n<p>Anyway, go read it, and pass it on to your managers!</p>", "summary": "If you read one long blog article this year, make it this one: Rands in Repose&#8217;s Bored People Quit. \u00a0It is one of the most important blog posts I&#8217;ve read in a long time, and right on the money. If you&#8217;ve ever worked a shitty professional job (especially programming), and you know y", "id": "http://www.robg3d.com/?p=737", "categories": ["Rob Galanakis"], "metadata": {"guid": "907acc92-7ccf-4761-9e08-97b9dfe61897", "likes": 0, "is_published": true}}, {"author": "Patrick Smacchia", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/tUxnZk4ANcM/", "title": "A bit more details on compiler Roslyn plans\u2026", "datetime": "2011-08-04T13:42:52", "html": "<p>Have a look at this Microsoft Research session entitled <a href=\"http://research.microsoft.com/apps/video/default.aspx?id=152281\" target=\"_blank\">\u201cRefactoring with Roslyn Circus Comes to Town,\u201d</a> made on July 19th. It is partly about Roslyn and also about code refactoring in general. Very interesting one &#8230; and pleasant to watch!</p>\n<p>Mary Jo Foley reported her thoughts on it <a href=\"http://www.zdnet.com/blog/microsoft/microsoft-moves-forward-with-roslyn-compiler-as-a-service-project/10071\" target=\"_blank\">in a recent blog post</a> as well. It seems Roslyn RTM won&#8217;t meet the VS 2012 schedule, but we should have some bits to play around with, hopefully within the next months.</p>\n<p>I notice that the kings of refactoring in the .NET scene, the R# guys, are not there. Especially taking account that this morning I&#8217;ve done some heavy large scale refactoring with R# that saved my day, and free me some time to watch this session.</p>\n<p>Almost a decade of development with .NET and still excited about what&#8217;s next &#8230; I like it!</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/tUxnZk4ANcM\" width=\"1\" />", "summary": "Have a look at this Microsoft Research session entitled \u201cRefactoring with Roslyn Circus Comes to Town,\u201d made on July 19th. It is partly about Roslyn and also about code refactoring in general. Very interesting one &#8230; and pleasant to watch!&#160;&#8230; <a href=\"http://codebetter.com/patricksmac", "id": "http://codebetter.com/patricksmacchia/?p=363", "categories": ["Patrick Smacchia"], "metadata": {"guid": "63f1c0eb-56d3-489f-a70a-456887d3c99c", "likes": 0, "is_published": true}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/08/masterclass-live-animation-binding.html", "title": "MasterClass - Live Animation Binding", "datetime": "2011-08-04T12:33:34.076000", "html": "A few folk have mailed to ask when the MasterClass is being presented so I thought I'd do some blatant self promotion and spill the beans...... The MasterClasses are now online only, Autodesk figure they get a bigger audience this way and it stops me looking like an arse doing it live! (well, less of an arse anyway!) It should go live on TheArea under their Siggraph feed on Tuesday 9th. Here's the basic outline, although it got expanded slightly since this into using HIK as an intermediate object, and mapping to raw optical moCap data. Hope you find it useful!<br /><br /><i>\"This Master Class will outline a method of transferring character animations between any source data and a given animation rig using a binder template file. This method was originally designed to enable Motion Capture data to be mapped to our in-house rigging systems whilst allowing for easy manipulation, but quickly evolved into a retargeting system in its own right. In the most basic form it allows for MoCap fbx files to be dropped directly onto your animation rigs. However, expanding the technique allows you to transfer animations between characters even when their skeletal structures and proportions are completely different. Because it relies on a Binder File and isn't code based it gives you the flexibility to manage any skeleton structure, allowing you to add custom bind nodes between any character specific joint and it's relative Rig Controller. Finally because the bind is a preset file it makes it very easy to bulk process animations, casting CharacterA's animation library straight to CharacterB.\"</i><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/1407054789026932542-7910970030129955628?l=markj3d.blogspot.com\" width=\"1\" /></div>", "summary": "A few folk have mailed to ask when the MasterClass is being presented so I thought I'd do some blatant self promotion and spill the beans...... The MasterClasses are now online only, Autodesk figure they get a bigger audience this way and it stops me looking like an arse doing it live! (well, less o", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-7910970030129955628", "categories": ["Mark Jackson (markj3d@gmail.com)"], "metadata": {"guid": "ebebe083-02e7-4f2b-a588-412d3cbfb61f", "likes": 0, "is_published": true}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/03/you-fed-up-and-deleted-script-editor-history/", "title": "So You F@%$\u2019ed Up and Deleted Script Editor History", "datetime": "2011-08-03T22:17:20", "html": "<!-- Start LikeButtonSetTop --><div style=\"clear: both; height: 2px; width: 100%;\"></div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"></a><a class=\"shareaholic-googleplusone\"></a></div><div style=\"clear: both; height: 2px; width: 100%;\"></div><!-- End LikeButtonSetTop --><p><a href=\"http://www.jonasavrin.com/wp-content/uploads/2010/08/maya2011_thumb.png\" rel=\"lightbox[2652]\"><img alt=\"maya2011_thumb\" class=\"alignleft size-full wp-image-165\" height=\"99\" src=\"http://www.jonasavrin.com/wp-content/uploads/2010/08/maya2011_thumb.png\" title=\"maya2011_thumb\" width=\"76\" /></a>What do you do when you screw up and delete all your history and input code in Maya script editor usually do to a right-click muscle memory FAIL?\u00a0 First of all, DON&#8217;T close Maya!\u00a0 Navigate to your prefs directory, depending on the system you&#8217;re using that is in different locations, and then open up the handy little mel file called &#8220;commandExecuter&#8221;, and that file name may have a hyphen and some numbers behind it depending on how many tabs you have going.\u00a0 Open the corresponding file based on the tab you mistakenly erased in notepad or favorite text editor and then copy the contents back into your script editor.</p>\n<p>This won&#8217;t get you everything back however, sad, I know, but if you can get back to where you were before the melt-down without too much hassle this way then that&#8217;s better than nothing.\u00a0 That&#8217;s why I like using external IDE&#8217;s for longer coding sessions and the script editor for little things that make my life easier in the particular scene I&#8217;m working on.</p>\n<div class=\"shr-publisher-2652\"></div><!-- Start LikeButtonSetBottom --><!-- End LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "What do you do when you screw up and delete all your history and input code in Maya script editor usually do to a right-click muscle memory FAIL?\u00a0 First of all, DON&#8217;T close Maya!\u00a0 Navigate to your prefs directory, depending on the system you&#8217;re using that is in different locations, and t", "id": "http://www.jonasavrin.com/?p=2652", "categories": ["Jonas Avrin"], "metadata": {"guid": "33e2880e-e03e-4ab5-944f-68392040d88a", "likes": 0, "is_published": true}}]"
09-10 23:31 SocketClient INFO     Returning(as str): '[{"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/09/maya-bevel-plus-and-curve-fillet-tutorial/", "title": "Maya Bevel Plus and Curve Fillet Tutorial", "datetime": "2011-08-10T04:16:32", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><div class=\\"shareaholic-like-buttonset\\" style=\\"float: right; height: 30px;\\"><a class=\\"shareaholic-fblike\\"></a><a class=\\"shareaholic-googleplusone\\"></a></div><div style=\\"clear: both; height: 3px; width: 100%;\\"></div><!-- End Shareaholic LikeButtonSetTop --><h2>Find Out How to Turn Custom Text to Realistic Metallic Objects</h2>\\n<hr />\\n&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nThis is for those of you interested in working with custom curves exported from Illustrator or created in Maya to make a custom logo or raised text for a reel or for work.  I&#8217;m actually doing this type of thing for some extra cash and maybe I will throw a little into my demo reel at some point just to have some more professional looking animated text.  Have fun, and I hope you find it useful!  You can even download the curves to get started.  Read on!\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>This:</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_000.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"custom curves\\" height=\\"193\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_000.png\\" title=\\"custom curves\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>To this:</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica_redMetallicFlake.jpg\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" height=\\"376\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica_redMetallicFlake.jpg\\" title=\\"metallica_redMetallicFlake\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<p><span id=\\"more-2680\\"></span></p>\\n<h2>Getting Started with Nurbs Curves</h2>\\n<hr />\\n&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nHere&#8217;s kinda where we start.  These are linear curves that are perfectly capable of being extruded.  They were custom made in Illustrator using a reference image.  Using the flat image of the text, I absorbed what makes the shapes work and made my best attempt at reproducing the lines in a way that unifies the whole design.  The whole design of Ride the Lightning album cover is awesome but there are knock-offs that are completely weak looking like someone drew it on a napkin and that&#8217;s unfortunately what I had to use to start with.\\n</div>\\n<p>&nbsp;</p>\\n<p><a href=\\"http://bit.ly/qcYq58\\" title=\\"Illustrator File\\">Download</a> the actual curves if you wanna try it out yourself!</p>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica.jpg\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone size-medium wp-image-2743\\" height=\\"225\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica-300x225.jpg\\" title=\\"metallica\\" width=\\"300\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_000.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"custom curves\\" height=\\"193\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_000.png\\" title=\\"custom curves\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>The final output I&#8217;m going for is similar to the Ride the Lightning cover.  These are the <a href=\\"http://bit.ly/qcYq58\\" title=\\"download the Illustrator file\\">curves</a>.  If you are using your own curves, it is important to save them as an Illustrator CS file and turn off all the options as you save.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_001.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"238\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_001.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>&#8230;and what I get from doing a Bevel Plus directly on those curves.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nA Pretty good version of 3d text using Bevel Plus, but what&#8217;s missing?  Filleted corners you say?  Yeah!  Here&#8217;s how to go about doing that.  Because I use Vray in Max for final render output, I need to find a way to fillet the corners to add the solid, heavy, metal, realistic feel to block letters for a project.  I&#8217;m thinking of my final output and render software at this stage and Mental Ray has the mia_roundcorners node, recently demoed <a href=\\"http://bit.ly/q3EJgh\\" title=\\"mi_roundedCorners\\">here</a> at around 34:30, that&#8217;ll produce a similar result, but I prefer Vray and Vray doesn&#8217;t really have anything (built-in) that&#8217;s comparable.  The technique I will show is good since I can tweak the result many times, zoom in and out to really inspect what&#8217;s happening, and be very specific about the values without being too limited.  Maybe later I can try to write a shader to do the same thing in Vray.\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_012.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"306\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_012.png\\" width=\\"200\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Example: The M with rounded corners.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_022.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"361\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_022.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Determine the curve that needs to be beveled.  Here&#8217;s an example of one done already.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_002.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"263\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_002.png\\" width=\\"200\\" /></a></div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>The letter for beveling comprised of one continuous curve built in Illustrator.  They are purposely linear so that it&#8217;s easier and cleaner to round the corners.\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_024.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"480\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_024.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Select all the curve corners edit points.  Do not select intermediary edit points.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_025.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"500\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_025.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Detach Curves with preferences set at default.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_026.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"414\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_026.png\\" width=\\"279\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Sometimes you have to delete the original curve after detaching, but not the detachedCurve(s).</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_027.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"400\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_027.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<div>Fillet Curve Options</div>\\n<ul>\\n<li>Trim on = delete what&#8217;s left over automatically</li>\\n<li>Circular on = easier</li>\\n<li>Radius = your preferred radius</li>\\n</ul>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_028.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"178\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_028.png\\" width=\\"178\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Filleted curve example.  There are a total of three curves after doing a fillet.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_002.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"654\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_002.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>After <strong>all</strong> corners are filleted, delete one edge, preferably the straight one.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_003.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"244\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_003.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>After selecting all the curves at once Attach Curves with the default settings tweaked slightly.  Connect is turned on and Keep Originals is off.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_004.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"518\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_004.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Unhide the attached curve and Open/Close Curves to close the curve.  This step is <strong>essential</strong> for getting the edit points right.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_005.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"459\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_005.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Of course delete history and rename your curve to something manageable.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<h2>Bevel Plus Options</h2>\\n<hr />\\n&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nOpen up Bevel Plus Options, Output Options.  The important part is the sampling controls, but make sure setting for output get is set to Polygons and Tessellation is set to sampling.  Under Along Extrusion Samples put something like 5, and under Along Curve Samples pick a higher number usually if your letters are fat like mine.  It&#8217;s all relative to the bevel depth and extrude distance.  The default leaves letters looking blocky and low res.\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_007.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"335\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_007.png\\" width=\\"250\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_006.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"323\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_006.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nSome good settings to get started with creating really blocky letters with nice rounded fillets, fine tuning with be needed with the bevel width etc.  If you want a script to help you adjust the attributes on multiple bevels simultaneously, then read on!\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_009.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"543\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_009.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Final Fillet.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<h2>Bevel Plus Possible Issues</h2>\\n<hr />\\n&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_010.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"337\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_010.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nKeep in mind: Keep it clean. Remember to keep the outliner clean of clutter so that things don&#8217;t get unnecessarily complex. Stages of creation process get a little hairy because of all the nodes Maya doesn&#8217;t do a good job of cleaning up. You always need to keep an eye on that plus selection order does count sometimes so if curves are coming out funky, check the order of selection and deleting of history.\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_011.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"317\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_011.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nLetters like this A, select the outer curve and then the inner curve before hitting Bevel Plus.  The inner curve needs to be beveled differently from the outer curve so setting this before hand is a good tip or just change it afterwards in the channel box inputs by clicking Style and changing it to Concave In.  Remember to delete history before beveling and all unnecessary objects after beveling.  Keep the bevel history on your objects so that you can tweak the attributes on them.  It&#8217;s easy to create a script to tweak them all at the same time if you want to.  I also recommend version-ing up after each letter to avoid having to start all over again.  The process can get tedious if you don&#8217;t know what you&#8217;re doing at first.\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_013.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"size-full wp-image-2719 alignnone\\" height=\\"435\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_013.png\\" title=\\"bevelPlusTut_image_013\\" width=\\"500\\" /></a></div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nHere&#8217;s another problem that you may encounter.  If a letter appears reversed after doing a bevel then select the curve that made the bevel and hit Reverse Curve Direction in the Edit Curves Menu.\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nIf you have to recreate a fillet by duplicating another fillet then be sure to freeze transforms on the duplicated curve before proceeding to Attach Curves.  This will lead to unpredictable results.\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_014.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"455\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_014.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nWhen working with Nurbs Curves in Maya things are inevitably going to get wierd.  Try not to panic and use Reverse Curve Direction, Attach, and Detach Curves, Delete History, and Freeze Transforms till you get the results you want.  Sometimes it&#8217;s impossible to know which way the curve is going and it makes a difference when you&#8217;re trying to create the final filleted curve.  So persevere, you have to jostle Maya a little bit for it to want to cooperate and till there&#8217;s an easier solution, like if Vray had a good auto fillet shader which is why I had to do this, then this solution works just fine.\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>For speeding up workflow, use the G key to repeat the last command.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>The semi-final result (viewport screenshot):</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_015.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"199\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_015.png\\" width=\\"550\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Here&#8217;s an image of an earlier attempt with the reference image as well just so you have a shot of the reference I used:</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_015_1.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"251\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_015_1.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nAfter I made a change to have the text extrude a little deeper, if you look you can see it in the reference image that it is indeed deeper than my image, there is funkiness going on with the faces not knowing where to attach themselves to.  A simple tweak to the bevel depth can fix that.  But is it going to take forever to select each object and apply this simple change?  No, not if you have this simple script!  Here&#8217;s how you do it:\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Break out the pymel and do a:</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<pre class=\\"brush: python; auto-links: true; title: ; toolbar: true; notranslate\\">from pymel.core import *</pre>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\nThen type some code like this.  These lines are just setting attrs directly on ALL bevelPlus nodes in the scene at one.  If you have more than one instance of text, then you better be sure that you know that this is going to change everything globally.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<pre class=\\"brush: python; auto-links: true; title: ; toolbar: true; notranslate\\">\\nfor b in range(len(ls(type=\'bevelPlus\'))+1):\\n    if b == 0: continue\\n        bevnode = PyNode(\'bevelPlus\' + str(b)\\n        setAttr(bevnode+\'.width\', .009)\\n        setAttr(bevnode+\'.depth\', .010)\\n        setAttr(bevnode+\'.extrudeDepth\', 2.7)\\n        setAttr(bevnode+\'.polyOutExtrusionSamples\',5)\\n        setAttr(bevnode+\'.polyOutCurveSamples\',25)\\n</pre>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Take a look at the width attr and bump that down a hundredth.  Now take a look:</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_019.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"184\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_019.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Awesome I say!  But it&#8217;s too high res, no need for all those polys.  So tweak the script again and in seconds have the result you want.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<pre class=\\"brush: python; auto-links: true; highlight: [4,8]; title: ; toolbar: true; notranslate\\">\\nfor b in range(len(ls(type=\'bevelPlus\'))+1):\\n    if b == 0: continue\\n        bevnode = PyNode(\'bevelPlus\' + str(b)\\n        setAttr(bevnode+\'.width\', .008)\\n        setAttr(bevnode+\'.depth\', .010)\\n        setAttr(bevnode+\'.extrudeDepth\', 2.7)\\n        setAttr(bevnode+\'.polyOutExtrusionSamples\',5)\\n        setAttr(bevnode+\'.polyOutCurveSamples\',11)\\n</pre>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Probably the most important attributes to tweak are going to be the polyOutExtrusionSamples and the polyOutCurveSamples so fine tune those to get the cleanest result.  Keep the extrusion samples higher for curved surfaces because polys will quickly become blocky.  Tweak those objects separately and, if more than one, have a separate script to handle just those.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_021.png\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone\\" height=\\"196\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/bevelPlusTut_image_021.png\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Now THAT&#8217;s butta!  Also, check your bevels especially on the inner curves, they can sometimes flip and not be right.</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>Render time!</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div>\\n<a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica_redMetallicFlake.jpg\\" rel=\\"lightbox[2680]\\"><img alt=\\"\\" class=\\"alignnone size-full wp-image-2706\\" height=\\"376\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/08/metallica_redMetallicFlake.jpg\\" title=\\"metallica_redMetallicFlake\\" width=\\"500\\" /></a>\\n</div>\\n<p>&nbsp;&nbsp;&nbsp;</p>\\n<div><strong>Stay tuned for more tips on rendering with Vray later.</strong></div>\\n<div class=\\"shr-publisher-2680\\"></div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "Find Out How to Turn Custom Text to Realistic Metallic Objects &#160;&#160;&#160; This is for those of you interested in working with custom curves exported from Illustrator or created in Maya to make a custom logo or raised text for a reel or for work. I&#8217;m actually doing this type of thing fo", "id": "http://www.jonasavrin.com/?p=2680", "categories": [], "metadata": {"guid": "5fbb7509-fa16-45b5-b6e5-806f0450c392", "likes": 0, "is_published": false}}, {"author": "noreply@blogger.com (Brian Karis)", "url": "http://graphicrants.blogspot.com/2011/08/new-prey-2-screenshot.html", "title": "New Prey 2 screenshot", "datetime": "2011-08-10T00:16:37.853000", "html": "<div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><a href=\\"http://2.bp.blogspot.com/--29MaDPslhE/TkIHFzTZpNI/AAAAAAAAACA/CQiFt-PWYy0/s1600/tommy_final_cropped1.jpg\\"><img border=\\"0\\" height=\\"250\\" src=\\"http://2.bp.blogspot.com/--29MaDPslhE/TkIHFzTZpNI/AAAAAAAAACA/CQiFt-PWYy0/s400/tommy_final_cropped1.jpg\\" width=\\"400\\" /></a></div><br />It has been a long time since I updated this blog with substantial content but I wanted to point out that Bethesda just released this new screenshot of Prey 2. It\'s a great shot but it\'s also a fantastic&nbsp;demonstration&nbsp;of some new graphical features I added to our latest build of the game.<br /><br />First, there\'s the depth of field in the background which is HDR circular bokeh DOF.<br /><br />Secondly, in the puddles on the ground, you will see screen space reflections. They aren\'t planer reflections, they work on every surface and run on every platform.&nbsp;SSR really adds a ton of dimension and accuracy to our wet, metal filled, alien noir city.&nbsp;I can\'t talk yet about how it works unfortunately.<br /><br />So, check it out and tell me what you think. Hopefully in not too long I can start talking about how some of the tech works but for now you just get a glimpse.<br /><br />-Brian<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/3460906122833508895-2356860367751453147?l=graphicrants.blogspot.com\\" width=\\"1\\" /></div>", "summary": "<div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><a href=\\"http://2.bp.blogspot.com/--29MaDPslhE/TkIHFzTZpNI/AAAAAAAAACA/CQiFt-PWYy0/s1600/tommy_final_cropped1.jpg\\"><img border=\\"0\\" height=\\"250\\" src=\\"http://2.bp.blogspot.com/--29MaDPslhE/TkIHFzTZpNI/AAAAAAAAACA/CQiFt-PWYy0/s400/tommy_fi", "id": "tag:blogger.com,1999:blog-3460906122833508895.post-2356860367751453147", "categories": [], "metadata": {"guid": "2d0c2236-fdf3-4227-a8f8-036a6508ee0d", "likes": 0, "is_published": false}}, {"author": "Rigging Dojo", "url": "http://www.riggingDojo.com/2011/08/09/new-demo-reel-from-rigging-dojo-alumna-amy-hay/", "title": "New demo reel from Rigging Dojo alumna, Amy Hay", "datetime": "2011-08-09T18:19:16", "html": "<p>We love getting updates from all our alumni, especially the ones we can share with all of you.<br />\\nAmy told us she has been working on rigging some quadruped creatures but she can&#8217;t show that yet.<br />\\nWe look forward to getting to see that when she is allowed to show them off.</p>\\n<p>For now enjoy her latest character rigging demo reel.</p>\\n<p><!-- Artiss Code Embed v1.5 | http://www.artiss.co.uk/artiss-code-embed -->\\n<p><a href=\\"http://vimeo.com/3212064\\">Amy Hay - Character Rigging & Animation Reel</a> from <a href=\\"http://vimeo.com/user921147\\">Amy Hay</a> on <a href=\\"http://vimeo.com\\">Vimeo</a>.</p><!-- End of Artiss Code Embed code -->\\n</p>\\n<p>Amy Hay<br />\\n<a href=\\"http://www.crackerfire.net/\\">www.crackerfire.net</a></p>\\n<p>&nbsp;</p>", "summary": "We love getting updates from all our alumni, especially the ones we can share with all of you. Amy told us she has been working on rigging some quadruped creatures but she can&#8217;t show that yet. We look forward to getting to see that when she is allowed to show them off. For now enjoy [...]", "id": "http://www.riggingDojo.com/?p=919", "categories": [], "metadata": {"guid": "5d37a3f2-78c2-4b49-8c64-f54267977f71", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/08/08/exportlayer-v1-32/", "title": "ExportLayer v1.32", "datetime": "2011-08-08T08:10:51", "html": "<p>Download: <a href=\\"http://www.zspline.net/blog/../files/ExportLayer.lua\\" target=\\"_blank\\">ExportLayer v1.32</a></p>\\n<p>Changes in v1.32:</p>\\n<ul>\\n<li>Fixed default scaling so the &#8220;meter per game unit&#8221; system setting is factored in.</li>\\n<li>Added the NORESIZE argument to prevent scaling during export.</li>\\n</ul>\\n<p>Changes in v1.31:</p>\\n<ul>\\n<li>Support for automatically applied morphmap.</li>\\n</ul>\\n<p><!-- PHP 5.x --></p>", "summary": "Download: ExportLayer v1.32 Changes in v1.32: Fixed default scaling so the &#8220;meter per game unit&#8221; system setting is factored in. Added the NORESIZE argument to prevent scaling during export. Changes in v1.31: Support for automatically applied morphmap.", "id": "http://www.zspline.net/blog/?p=1378", "categories": [], "metadata": {"guid": "ed3d583c-f9c5-4a0e-bf29-b93c8183967e", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=750", "title": "Optional parameters can be harmful", "datetime": "2011-08-08T01:13:18", "html": "<p>I&#8217;ve come around on optional parameters after being an opponent of adding them to .NET. \\u00a0They can be very helpful, clean up the code by not needing overloads, and inform the caller what the defaults are. \\u00a0They are an integral part of python and why it is easy to use. \\u00a0This is great.</p>\\n<h6>Except when you abuse them.</h6>\\n<h5>And you may be abusing them without knowing it.</h5>\\n<h3>Parameters should only be optional if a valid default value can be determined by looking only at the contents of the method.</h3>\\n<p>What do I mean? \\u00a0Well, if your default value is &#8216;None&#8217;, and you call another module to create the actual default value, this is not good practice. \\u00a0It negatively impacts two important software metrics: it increases coupling by adding a dependency on your module, and it increases cyclomatic complexity by creating an &#8216;if&#8217; statement.</p>\\n<p>It is better, in these cases, to just force the user to pass in a valid value. \\u00a0If you&#8217;re jumping through hoops to determine a default value, odds are it is too specific and also breaks the reusability and dependability of the method. \\u00a0The caller has a higher chance of already having a dependency to what you would be depending on for your default value (any chance is higher than the 0% chance your method has of needing it). \\u00a0To demonstrate:</p>\\n<pre>def exportFile(filename, branch=None, depotRoot=None):\\n    if branch is None:\\n        branch = os.environ[\'EXPORT_BRANCH\']\\n    if depotRoot is None:\\n        depotRoot = someScmModule.singleton.depotRoot\\n    ...</pre>\\n<p>This code is not unusual but it is really difficult to understand and maintain. \\u00a0The default values determined for branch and depotRoot are entirely outside the logic and goal of the method.</p>\\n<p>Don&#8217;t do stuff like this and you (and especially others!) will have a much easier time maintaining and supporting code.</p>", "summary": "I&#8217;ve come around on optional parameters after being an opponent of adding them to .NET. \\u00a0They can be very helpful, clean up the code by not needing overloads, and inform the caller what the defaults are. \\u00a0They are an integral part of python and why it is easy to use. \\u00a0This is great. Except whe", "id": "http://www.robg3d.com/?p=750", "categories": [], "metadata": {"guid": "fdd0a080-f46b-4d9c-9878-89716b48ab48", "likes": 0, "is_published": false}}, {"author": "circerigging", "url": "http://circecharacterworks.wordpress.com/2011/08/07/motion-capture-for-a-weather-forecast-billboard/", "title": "motion capture for a weather forecast billboard", "datetime": "2011-08-07T10:32:26", "html": "<p>In 2009 we were able to produce a follow up with the character Leon and zazar.</p>\\n<p>This time the target audience was television : a billboard aired before and after the weather forecast.</p>\\n<p></p>\\n<p>The main constraint with this kind of movie is its shortness : roughly 5\\u00a0 seconds worth of content, barely enough time to announce what comes next.</p>\\n<p>Our client,\\u00a0 owner of\\u00a0 bowling playhouse\\u00a0 housing a\\u00a0 restaurant\\u00a0 and dancing room , was open to all kind of idea : it was logical for us this time to picture 4 characters dancing on an extravagant dance floor . <em>( entirely different than the real one )</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/jennifer_tektonik.jpg\\"><img alt=\\"\\" height=\\"362\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/jennifer_tektonik.jpg?w=450&#038;h=362\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>Jennifer , the meanest and most detestable character dances on tektonik</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/leon_jazz.jpg\\"><img alt=\\"\\" height=\\"361\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/leon_jazz.jpg?w=450&#038;h=361\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>Leon executes an aerial classical jazz dance steps</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/julie_ragga.jpg\\"><img alt=\\"\\" height=\\"360\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/julie_ragga.jpg?w=450&#038;h=360\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>Julie breaks a sweat on a ragga tune.</em></p>\\n<p><a href=\\"http://circecharacterworks.files.wordpress.com/2011/08/zazar_pop_music.jpg\\"><img alt=\\"\\" height=\\"357\\" src=\\"http://circecharacterworks.files.wordpress.com/2011/08/zazar_pop_music.jpg?w=450&#038;h=357\\" title=\\"\\" width=\\"450\\" /></a></p>\\n<p style=\\"text-align: center;\\"><em>Zazar dances on pop_music</em></p>\\n<p>Films credit: <em>( 4 * 14 seconds movie )</em><br />\\nJL Patriat:<br />\\n- Film and artistic director<br />\\n- character design<br />\\n- shot supervision with dance performer</p>\\n<p>e. Lepinay:<br />\\n- texturing<br />\\n- lightning<br />\\n- rendering<br />\\n- compositing<br />\\n- environment modeling</p>\\n<p>C. Bazillou:<br />\\n- character and expression modeling<br />\\n- character setup<br />\\n- skinning<br />\\n- cloth and soft body simulation<br />\\n-motion capture:<br />\\n. data acquisition<br />\\n. cleaning<br />\\n. secondary animation<br />\\n. view dependent surface deformation correction</p>\\n<p>For this project where the character assets were already built the main cost was the animation part :</p>\\n<p>This was a personal project and we were free to explore other style of animation because the client doesn&#8217;t specifically ask for cartoon animation .</p>\\n<p>The use of motion capture was justified because with our limited resources<em> ( two 3d artists )</em> we didn&#8217;t feel comfortable to try and keyframe 1 minute worth of content in less than 10 days.</p>\\n<p>Our purpose was not to work faster or cheaper : we wanted to tweak the original performance of several dancer and in the end with the preliminary work involved it was actually slightly more expensive to use this technique .</p>\\n<p>Funnily enough , It was our first time working with actors : the previous project involving motion capture were simpler and we were doing the performance ourselves .</p>\\n<p>There were 4 type of dance :\\u00a0 I made my estimation based on 2 actors <em>( 1 for the female characters and\\u00a0 the other for the male characters )</em> and accordingly prepare 2 Velcro suit size .</p>\\n<br />  <a href=\\"http://feeds.wordpress.com/1.0/gocomments/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/comments/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godelicious/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/delicious/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gofacebook/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/facebook/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gotwitter/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/twitter/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/gostumble/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/stumble/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/godigg/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/digg/circecharacterworks.wordpress.com/799/\\" /></a> <a href=\\"http://feeds.wordpress.com/1.0/goreddit/circecharacterworks.wordpress.com/799/\\" rel=\\"nofollow\\"><img alt=\\"\\" border=\\"0\\" src=\\"http://feeds.wordpress.com/1.0/reddit/circecharacterworks.wordpress.com/799/\\" /></a> <img alt=\\"\\" border=\\"0\\" height=\\"1\\" src=\\"http://stats.wordpress.com/b.gif?host=circecharacterworks.wordpress.com&amp;blog=21589438&amp;post=799&amp;subd=circecharacterworks&amp;ref=&amp;feed=1\\" width=\\"1\\" />", "summary": "In 2009 we were able to produce a follow up with the character Leon and zazar. This time the target audience was television : a billboard aired before and after the weather forecast. The main constraint with this kind of movie is its shortness : roughly 5\\u00a0 seconds worth of content, barely enough tim", "id": "http://circecharacterworks.wordpress.com/?p=799", "categories": [], "metadata": {"guid": "5f61d34e-53ef-4fe4-8d7d-51a01c3f334a", "likes": 0, "is_published": false}}, {"author": "Dru Sellers", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/N33E3pgzB1c/", "title": "Thought Questions", "datetime": "2011-08-06T14:24:25", "html": "<p><em>After many weeks of travel I finally have some time to think again. Yay!</em></p>\\n<p>Today&#8217;s post was inspired by\\u00a0<a href=\\"http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html\\">http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html</a>.\\u00a0The post presents a link to another wonderful site called <a href=\\"http://thoughtquestions.com/\\">Thought Questions</a> which got me thinking about a programming spin on the same concept.</p>\\n<p>\\u00a0</p>\\n<p>What&#8217;s the difference between your coding today, and your coding 6 mths ago? If its improving, are you on the same trajectory? Or are you growing stagnant?</p>\\n<p>Can you be a good developer with no business knowledge? Is it business knowledge if its just a mathmatical formula?</p>\\n<p>What&#8217;s the biggest shift you have made in your programming since you started?</p>\\n<p>What was the last thing you did just for fun?</p>\\n<p>Who was the last person you helped on the internet? How did you help them?</p>\\n<p>Do you visualize code in your head? What does it look like? Does it have color? Shape?</p>\\n<p>\\u00a0</p>\\n<p>Anyways, happy saturday.</p>\\n<p>\\u00a0</p>\\n<p>-d</p>\\n<p>\\u00a0</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/N33E3pgzB1c\\" width=\\"1\\" />", "summary": "After many weeks of travel I finally have some time to think again. Yay! Today&#8217;s post was inspired by\\u00a0http://wakeuptiger.blogspot.com/2011/08/questions-worth-asking.html.\\u00a0The post presents a link to another wonderful site called Thought Questions which got me thinking about a programming spin ", "id": "http://codebetter.com/drusellers/?p=148", "categories": ["Dru Sellers"], "metadata": {"guid": "85bb9d97-af29-4fa1-ba96-2f601e37a641", "likes": 0, "is_published": true}}, {"author": "anim8d (noreply@blogger.com)", "url": "http://strongmanimator.blogspot.com/2011/08/designing-animation-for-speed.html", "title": "Designing Animation For Speed", "datetime": "2011-08-06T12:35:28.806000", "html": "This was cross-posted to <a href=\\"http://altdevblogaday.com/2011/08/06/designing-animation-for-speed/\\">AltDevBlogADay</a>. Look for a powerlifting corollary sometime soon!<br /><br /><br /><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Everything I ever needed to know about animation, I learned from watching Looney Tunes.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Seriously.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Sure, I went to school. I learned HOW to animate there and from other sources, but none of that taught me what I needed to know about animation as much as watching Bugs outsmart Elmer, Daffy play the second banana, Foghorn Leghorn fumble about, or Wile E. Coyote fall to yet another demise.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">Gravity Doesn\\u2019t Exist Until You Look Down</h3><div><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote_fallstart1.jpg\\"><img alt=\\"\\" class=\\"alignleft size-full wp-image-13545\\" height=\\"320\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote_fallstart1.jpg\\" style=\\"border-bottom-width: 0px; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; float: left;\\" width=\\"240\\" /></a>Bugs is the popular one. Daffy is the memorable one (Stuuuuuuupor Duck!). Foghorn, well, I say\\u2026&nbsp; I say, he was fun to watch with his contraptions. However, Wile E. Coyote is the one that sticks out the most to me.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Not only is it entertaining to watch poor Wile E. try and try again to catch the Roadrunner (with a seemingly unlimited&nbsp;credit line with the Acme corporation), it is also a very good study of how developing a formula can allow an animator to work efficiently while keeping a high quality bar.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Take the timing of Wile E.\'s fall, for instance. Did you know that every time he falls, it happens in the same exact number of frames? He tends to walk/fly/float/propel himself over a ledge, and doesn\'t fall until he looks down (for Wile, gravity doesn\'t exist until he does this). He then falls over N frames until you see a puff of smoke and hear a distant \\"splat.\\"</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">This comedic timing (combined with a happy accident regarding the audio level of his \\"splat\\") allowed the Looney Tunes animators to build up to this punchline without worrying if the punchline itself would feel right. It also ensured that re-takes weren\'t going to be needed- once that formula was set, it was followed.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">Set Your Pace</h3><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">For game animation, I take the same approach, especially for transition animations. In fact, on our current project, we try to animate all transitions to occur on 6, 12, 18 or 24 frames. Each of these frame counts corresponds with the desired perceived pacing of the character\'s thought process. For example:</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">\\"Ready Now!\\" - 6 frames</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">\\"Get moving and STOP!\\" - 12 frames</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">\\"I gotta be ready&nbsp;<em>before&nbsp;</em>I get there\\"&nbsp;- 18 frames</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">\\"OK, I\'m gonna pick my spot and get ready when I\'m there.\\" - 24 frames</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">These frame numbers allowed us to&nbsp;build a visual language with these transitions. For example, the faster ones are more immediate and needed for faster gameplay responsiveness (say, for aiming and shooting). Having them all on a 6-frame count holds the player\'s expectation that if \\u201cI\'ve gotta shoot, I\'ll get there in .2 seconds.\\u201d It also allows us to later add interruptible follow-through for an extra 6 or 12 frames without that extra motion feeling out of place.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">In contrast, the 18/24 frame transitions typically denote the end of longer, deliberate movement- the player knows they are moving at a certain speed and when they have reached their destination, the transition will carry that speed to a stop. These extra frames allow us to sell the character\'s weight at that stop, which in turn creates a mental acceptance by the player that it took longer than the 6/12 frame motions.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">Fast Iteration</h3><div><br /></div><div class=\\"mceTemp\\" style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /><dl class=\\"wp-caption alignright\\" id=\\"attachment_13568\\" style=\\"background-color: #f3f3f3; border-bottom-color: rgb(221, 221, 221); border-bottom-left-radius: 3px 3px; border-bottom-right-radius: 3px 3px; border-bottom-style: solid; border-bottom-width: 1px; border-left-color: rgb(221, 221, 221); border-left-style: solid; border-left-width: 1px; border-right-color: rgb(221, 221, 221); border-right-style: solid; border-right-width: 1px; border-top-color: rgb(221, 221, 221); border-top-left-radius: 3px 3px; border-top-right-radius: 3px 3px; border-top-style: solid; border-top-width: 1px; float: right; margin-bottom: 10px; margin-left: 10px; margin-right: 10px; margin-top: 10px; padding-top: 4px; text-align: center; width: 213px;\\"><dt class=\\"wp-caption-dt\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/exposusresheet1.jpg\\"><img alt=\\"\\" class=\\"size-full wp-image-13568\\" height=\\"233\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/exposusresheet1.jpg\\" style=\\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\\" width=\\"203\\" /></a></dt><dd class=\\"wp-caption-dd\\" style=\\"font-size: 11px; line-height: 17px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 5px; padding-left: 4px; padding-right: 4px; padding-top: 0px;\\">Sweet, sweet consistency</dd></dl></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">The next benefit to the frame counts is that they are easily scalable from one to the other. Personally, I set poses every 3-6 frames. This lets me easily slide the keys around if I need to make timing adjustments after the animations are implemented. These adjustments can also be easily scriptable (for fast tests), so I can adjust the timing of 160 animations very quickly to see if the new length feels right before going ahead and hand-tweaking them.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Since I\'ve spaced out my keys in a uniform way, I can re-time the motions much more efficiently.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Lastly, these frame formulas give us efficient consistency. Since a uniform length exists, once we nail down the first key animation, we can modify it to create other motions in the same pool. For example, If we need to transition from a non-shooting pose to a shooting pose, we\\u2019ll work on a key motion that gets across the character\\u2019s intent and the player\\u2019s feel. Once design deems the look and feel to be good for gameplay, we can create every other transition in that pool much quicker.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">Happy Accidents</h3><div><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Much like the audio level on the splat of Wile E. Coyotes\'s fall (see the book Chuck Redux), coming up with the multiples of 6 formula was actually a happy accident- the Source Engine\'s default engine blend value is .2 seconds (6 frames!) In order to not disrupt existing gameplay, we started animating to that frame number. After implementing many transitions, it was apparent that not all of them could or should work on 6 frames. The easiest thing to do was scale the motion by 200% and work back from there. Lo and behold, 200% worked great, so we redid all of those motions with twice the frame count.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Since that pacing looked good,&nbsp;we extrapolated that 18 and 24 frames would be logical to try next. It worked, and now we have a (undocumented till now) visual language for our transitions.&nbsp;We\'ve since extended this philosophy to our movement system, and the animators who work on that pump out high quality motions like nobody\'s business.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">It\'s Still Creative!</h3><div><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">Purist animators out there might be shocked that we take shortcuts in order to produce efficient, high-quality animation at a fast pace. The fact of the matter is Warner Brothers, and even Disney, did the&nbsp;same thing! Read Chuck Redux, or watch this:</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">The key is to not get so married to those formulas that we are unwilling to change them when they no longer work, or get stale. If that happens, we play with new formulas and do more timing tests until we get it right.&nbsp;In the end, the better we can nail down the punchline, the more time we can spend on the fun part of getting there.</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote1.jpg\\"><img alt=\\"\\" class=\\"aligncenter size-full wp-image-13547\\" height=\\"320\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/08/WileECoyote1.jpg\\" style=\\"border-bottom-width: 0px; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: block; margin-left: auto; margin-right: auto;\\" width=\\"400\\" /></a></div><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\"><br /></h3><h3 style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 1.17em; line-height: 19px;\\">Feedback!</h3><div><br /></div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\">I\'d love to hear from other animators and designers what their processes for this are, as well! So speak up, tell your friends to read this and rip me to shreds, tell me how awesome I am or somewhere in between. I\'m always looking for different techniques and opinions!</div><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"><br /></div><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/4248341596629159263-38124459084849704?l=strongmanimator.blogspot.com\\" width=\\"1\\" /></div>", "summary": "This was cross-posted to <a href=\\"http://altdevblogaday.com/2011/08/06/designing-animation-for-speed/\\">AltDevBlogADay</a>. Look for a powerlifting corollary sometime soon!<br /><br /><br /><div style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-h", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-38124459084849704", "categories": ["anim8d (noreply@blogger.com)"], "metadata": {"guid": "fe7a6cdc-278b-4844-9482-1883e59c5e3d", "likes": 0, "is_published": true}}, {"author": "Glenn Block", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/PRCEBXQBkPc/", "title": "Integrating MVC routes and Web API routes", "datetime": "2011-08-05T05:55:30", "html": "<p>&nbsp;</p>\\n<p>Several folks have been complaining for a while about Action Links not being properly generated when MVC routes are mixed with Service Routes in the same site.\\n<p>It turns out there is a solution&#8230;..don&#8217;t use ServiceRoute <img alt=\\":-)\\" class=\\"wp-smiley\\" src=\\"http://codebetter.com/glennblock/wp-includes/images/smilies/icon_smile.gif\\" />  Instead, create a derived route below and use it. [Kudos to <a href=\\"http://www.haacked.com\\">Phil Haack</a> and <a href=\\"http://blogs.msdn.com/b/clemensv/\\">Clemens Vasters</a> for this]\\n<pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\"><span style=\\"color: #0000ff;\\">public</span> <span style=\\"color: #0000ff;\\">class</span> WebApiRoute : ServiceRoute\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">{\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     <span style=\\"color: #0000ff;\\">public</span> AppServiceRoute(<span style=\\"color: #0000ff;\\">string</span> routePrefix,\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">       ServiceHostFactoryBase serviceHostFactory, Type serviceType)\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     : <span style=\\"color: #0000ff;\\">base</span>(routePrefix, serviceHostFactory, serviceType)\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     {\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     }\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     <span style=\\"color: #0000ff;\\">public</span> <span style=\\"color: #0000ff;\\">override</span> VirtualPathData GetVirtualPath(\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">       RequestContext requestContext, RouteValueDictionary values)\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     {\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">       <span style=\\"color: #0000ff;\\">return</span> <span style=\\"color: #0000ff;\\">null</span>;\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">     }\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">}\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\"></pre>\\n</pre>\\n<p>The link gen functionality uses the GetVirtualPath method to generate links. If you set it to null you are opting web api routes out of link gen and everything should work. </p>\\n<p>Now to register your routes using this model, don&#8217;t use MapServiceRoute. </p>\\n<p>Instead, in add to your route table manually this way:\\n<pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">var config = <span style=\\"color: #0000ff;\\">new</span> HttpHostConfiguration() <span style=\\"color: #808080;\\">///create your config object</span>\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">var factory = <span style=\\"color: #0000ff;\\">new</span> HttpConfigurableServiceHostFactory(config);\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\">routes.Add(<span style=\\"color: #0000ff;\\">new</span> WebApiRoute(\\"<span style=\\"color: #8b0000;\\">Foo</span>\\", factory, <span style=\\"color: #0000ff;\\">typeof</span>(Foo)));\\n</pre>\\n<pre style=\\"background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,\'Courier New\',courier,monospace; font-size: 12px;\\"></pre>\\n</pre>\\n<p>It&#8217;s a little bit more code, but not too much and hey, it fixes the problem. This will be fixed in the next drop, which YES, we are working on.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/PRCEBXQBkPc\\" width=\\"1\\" />", "summary": "&#160; Several folks have been complaining for a while about Action Links not being properly generated when MVC routes are mixed with Service Routes in the same site. It turns out there is a solution&#8230;..don&#8217;t use ServiceRoute Instead, create a&#160;&#8230; <a href=\\"http://codebetter.com/g", "id": "http://codebetter.com/glennblock/2011/08/05/integrating-mvc-routes-and-web-api-routes-2/", "categories": [], "metadata": {"guid": "5986afe5-245b-48e1-8517-a3b717433432", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8501055529", "title": "a cool photo I found from when I moved home. \\u00a0I was doing a lot...", "datetime": "2011-08-05T00:04:07", "html": "<img src=\\"http://30.media.tumblr.com/tumblr_lpfsmwBIHp1qgg0uyo1_500.jpg\\" /><br /><br /><p>a cool photo I found from when I moved home. \\u00a0I was doing a lot of art back then!</p>", "summary": "<img src=\\"http://30.media.tumblr.com/tumblr_lpfsmwBIHp1qgg0uyo1_500.jpg\\" /><br /><br /><p>a cool photo I found from when I moved home. \\u00a0I was doing a lot of art back then!</p>", "id": "http://shawnkirsch.tumblr.com/post/8501055529", "categories": [], "metadata": {"guid": "e6c99f00-b581-442d-b585-0fa452166874", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/8500670372", "title": "My Old Car\\u2026Been looking for this picture for a...", "datetime": "2011-08-04T23:53:43", "html": "<img src=\\"http://29.media.tumblr.com/tumblr_lpfs5kPdp31qgg0uyo1_500.jpg\\" /><br /><br /><p>My Old Car\\u2026Been looking for this picture for a while\\u2026</p>", "summary": "<img src=\\"http://29.media.tumblr.com/tumblr_lpfs5kPdp31qgg0uyo1_500.jpg\\" /><br /><br /><p>My Old Car\\u2026Been looking for this picture for a while\\u2026</p>", "id": "http://shawnkirsch.tumblr.com/post/8500670372", "categories": [], "metadata": {"guid": "56c29b89-28ad-42f8-83f8-497f2a4daadc", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=737", "title": "Bored People Quit (I did!)", "datetime": "2011-08-04T15:20:16", "html": "<p>If you read one long blog article this year, make it this one: Rands in Repose&#8217;s <a href=\\"http://www.randsinrepose.com/archives/2011/07/12/bored_people_quit.html\\">Bored People Quit</a>. \\u00a0It is one of the most important blog posts I&#8217;ve read in a long time, and right on the money.</p>\\n<p>If you&#8217;ve ever worked a shitty professional job (especially programming), and you know you have, you&#8217;ll resonate with what&#8217;s written there. \\u00a0I told my last job for well over a year that I was bored and actually tried to quit a number of times, and gave exact action items for how to fix my boredom and what my grievances were. \\u00a0Not that any were ever addressed. \\u00a0And in a place like that, they couldn&#8217;t realistically be addressed, with so much riding on such an expensive project- they couldn&#8217;t give a shit about almost any individual worker or what I perceive as the long term health of the studio.</p>\\n<p>Anyway, go read it, and pass it on to your managers!</p>", "summary": "If you read one long blog article this year, make it this one: Rands in Repose&#8217;s Bored People Quit. \\u00a0It is one of the most important blog posts I&#8217;ve read in a long time, and right on the money. If you&#8217;ve ever worked a shitty professional job (especially programming), and you know y", "id": "http://www.robg3d.com/?p=737", "categories": ["Rob Galanakis"], "metadata": {"guid": "907acc92-7ccf-4761-9e08-97b9dfe61897", "likes": 0, "is_published": true}}, {"author": "Patrick Smacchia", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/tUxnZk4ANcM/", "title": "A bit more details on compiler Roslyn plans\\u2026", "datetime": "2011-08-04T13:42:52", "html": "<p>Have a look at this Microsoft Research session entitled <a href=\\"http://research.microsoft.com/apps/video/default.aspx?id=152281\\" target=\\"_blank\\">\\u201cRefactoring with Roslyn Circus Comes to Town,\\u201d</a> made on July 19th. It is partly about Roslyn and also about code refactoring in general. Very interesting one &#8230; and pleasant to watch!</p>\\n<p>Mary Jo Foley reported her thoughts on it <a href=\\"http://www.zdnet.com/blog/microsoft/microsoft-moves-forward-with-roslyn-compiler-as-a-service-project/10071\\" target=\\"_blank\\">in a recent blog post</a> as well. It seems Roslyn RTM won&#8217;t meet the VS 2012 schedule, but we should have some bits to play around with, hopefully within the next months.</p>\\n<p>I notice that the kings of refactoring in the .NET scene, the R# guys, are not there. Especially taking account that this morning I&#8217;ve done some heavy large scale refactoring with R# that saved my day, and free me some time to watch this session.</p>\\n<p>Almost a decade of development with .NET and still excited about what&#8217;s next &#8230; I like it!</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/tUxnZk4ANcM\\" width=\\"1\\" />", "summary": "Have a look at this Microsoft Research session entitled \\u201cRefactoring with Roslyn Circus Comes to Town,\\u201d made on July 19th. It is partly about Roslyn and also about code refactoring in general. Very interesting one &#8230; and pleasant to watch!&#160;&#8230; <a href=\\"http://codebetter.com/patricksmac", "id": "http://codebetter.com/patricksmacchia/?p=363", "categories": ["Patrick Smacchia"], "metadata": {"guid": "63f1c0eb-56d3-489f-a70a-456887d3c99c", "likes": 0, "is_published": true}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/08/masterclass-live-animation-binding.html", "title": "MasterClass - Live Animation Binding", "datetime": "2011-08-04T12:33:34.076000", "html": "A few folk have mailed to ask when the MasterClass is being presented so I thought I\'d do some blatant self promotion and spill the beans...... The MasterClasses are now online only, Autodesk figure they get a bigger audience this way and it stops me looking like an arse doing it live! (well, less of an arse anyway!) It should go live on TheArea under their Siggraph feed on Tuesday 9th. Here\'s the basic outline, although it got expanded slightly since this into using HIK as an intermediate object, and mapping to raw optical moCap data. Hope you find it useful!<br /><br /><i>\\"This Master Class will outline a method of transferring character animations between any source data and a given animation rig using a binder template file. This method was originally designed to enable Motion Capture data to be mapped to our in-house rigging systems whilst allowing for easy manipulation, but quickly evolved into a retargeting system in its own right. In the most basic form it allows for MoCap fbx files to be dropped directly onto your animation rigs. However, expanding the technique allows you to transfer animations between characters even when their skeletal structures and proportions are completely different. Because it relies on a Binder File and isn\'t code based it gives you the flexibility to manage any skeleton structure, allowing you to add custom bind nodes between any character specific joint and it\'s relative Rig Controller. Finally because the bind is a preset file it makes it very easy to bulk process animations, casting CharacterA\'s animation library straight to CharacterB.\\"</i><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/1407054789026932542-7910970030129955628?l=markj3d.blogspot.com\\" width=\\"1\\" /></div>", "summary": "A few folk have mailed to ask when the MasterClass is being presented so I thought I\'d do some blatant self promotion and spill the beans...... The MasterClasses are now online only, Autodesk figure they get a bigger audience this way and it stops me looking like an arse doing it live! (well, less o", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-7910970030129955628", "categories": ["Mark Jackson (markj3d@gmail.com)"], "metadata": {"guid": "ebebe083-02e7-4f2b-a588-412d3cbfb61f", "likes": 0, "is_published": true}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/08/03/you-fed-up-and-deleted-script-editor-history/", "title": "So You F@%$\\u2019ed Up and Deleted Script Editor History", "datetime": "2011-08-03T22:17:20", "html": "<!-- Start LikeButtonSetTop --><div style=\\"clear: both; height: 2px; width: 100%;\\"></div><div class=\\"shareaholic-like-buttonset\\" style=\\"float: right; height: 30px;\\"><a class=\\"shareaholic-fblike\\"></a><a class=\\"shareaholic-googleplusone\\"></a></div><div style=\\"clear: both; height: 2px; width: 100%;\\"></div><!-- End LikeButtonSetTop --><p><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2010/08/maya2011_thumb.png\\" rel=\\"lightbox[2652]\\"><img alt=\\"maya2011_thumb\\" class=\\"alignleft size-full wp-image-165\\" height=\\"99\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2010/08/maya2011_thumb.png\\" title=\\"maya2011_thumb\\" width=\\"76\\" /></a>What do you do when you screw up and delete all your history and input code in Maya script editor usually do to a right-click muscle memory FAIL?\\u00a0 First of all, DON&#8217;T close Maya!\\u00a0 Navigate to your prefs directory, depending on the system you&#8217;re using that is in different locations, and then open up the handy little mel file called &#8220;commandExecuter&#8221;, and that file name may have a hyphen and some numbers behind it depending on how many tabs you have going.\\u00a0 Open the corresponding file based on the tab you mistakenly erased in notepad or favorite text editor and then copy the contents back into your script editor.</p>\\n<p>This won&#8217;t get you everything back however, sad, I know, but if you can get back to where you were before the melt-down without too much hassle this way then that&#8217;s better than nothing.\\u00a0 That&#8217;s why I like using external IDE&#8217;s for longer coding sessions and the script editor for little things that make my life easier in the particular scene I&#8217;m working on.</p>\\n<div class=\\"shr-publisher-2652\\"></div><!-- Start LikeButtonSetBottom --><!-- End LikeButtonSetBottom --><div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "What do you do when you screw up and delete all your history and input code in Maya script editor usually do to a right-click muscle memory FAIL?\\u00a0 First of all, DON&#8217;T close Maya!\\u00a0 Navigate to your prefs directory, depending on the system you&#8217;re using that is in different locations, and t", "id": "http://www.jonasavrin.com/?p=2652", "categories": ["Jonas Avrin"], "metadata": {"guid": "33e2880e-e03e-4ab5-944f-68392040d88a", "likes": 0, "is_published": true}}]'
09-10 23:31 root         INFO     Handling CGI request.
09-10 23:31 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:31 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Optional parameters can be harmful", "url": "http:\/\/www.robg3d.com\/?p=750", "author": "Rob Galanakis", "summary": "I&#8217;ve come around on optional parameters after being an opponent of adding them to .NET. \u00a0They can be very helpful, clean up the code by not needing overloads, and inform the caller what the defaults are. \u00a0They are an integral part of python and why it is easy to use. \u00a0This is great. Except whe", "html": "<p>I&#8217;ve come around on optional parameters after being an opponent of adding them to .NET. \u00a0They can be very helpful, clean up the code by not needing overloads, and inform the caller what the defaults are. \u00a0They are an integral part of python and why it is easy to use. \u00a0This is great.<\/p>\n<h6>Except when you abuse them.<\/h6>\n<h5>And you may be abusing them without knowing it.<\/h5>\n<h3>Parameters should only be optional if a valid default value can be determined by looking only at the contents of the method.<\/h3>\n<p>What do I mean? \u00a0Well, if your default value is &#8216;None&#8217;, and you call another module to create the actual default value, this is not good practice. \u00a0It negatively impacts two important software metrics: it increases coupling by adding a dependency on your module, and it increases cyclomatic complexity by creating an &#8216;if&#8217; statement.<\/p>\n<p>It is better, in these cases, to just force the user to pass in a valid value. \u00a0If you&#8217;re jumping through hoops to determine a default value, odds are it is too specific and also breaks the reusability and dependability of the method. \u00a0The caller has a higher chance of already having a dependency to what you would be depending on for your default value (any chance is higher than the 0% chance your method has of needing it). \u00a0To demonstrate:<\/p>\n<pre>def exportFile(filename, branch=None, depotRoot=None):\n    if branch is None:\n        branch = os.environ['EXPORT_BRANCH']\n    if depotRoot is None:\n        depotRoot = someScmModule.singleton.depotRoot\n    ...<\/pre>\n<p>This code is not unusual but it is really difficult to understand and maintain. \u00a0The default values determined for branch and depotRoot are entirely outside the logic and goal of the method.<\/p>\n<p>Don&#8217;t do stuff like this and you (and especially others!) will have a much easier time maintaining and supporting code.<\/p>", "datetime": "2011-08-08T01:13:18", "id": "http:\/\/www.robg3d.com\/?p=750", "categories": [], "metadata": {"guid": "fdd0a080-f46b-4d9c-9878-89716b48ab48", "likes": 0, "is_published": false}}], {}]"
09-10 23:31 SocketClient INFO     Received from service: "true"
09-10 23:31 SocketClient INFO     Returning(as str): 'true'
09-10 23:31 root         INFO     Handling CGI request.
09-10 23:31 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:31 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Maya Bevel Plus and Curve Fillet Tutorial", "url": "http:\/\/www.jonasavrin.com\/2011\/08\/09\/maya-bevel-plus-and-curve-fillet-tutorial\/", "author": "Jonas Avrin", "summary": "Find Out How to Turn Custom Text to Realistic Metallic Objects &#160;&#160;&#160; This is for those of you interested in working with custom curves exported from Illustrator or created in Maya to make a custom logo or raised text for a reel or for work. I&#8217;m actually doing this type of thing fo", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\"clear: both; height: 3px; width: 100%;\"><\/div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"><\/a><a class=\"shareaholic-googleplusone\"><\/a><\/div><div style=\"clear: both; height: 3px; width: 100%;\"><\/div><!-- End Shareaholic LikeButtonSetTop --><h2>Find Out How to Turn Custom Text to Realistic Metallic Objects<\/h2>\n<hr \/>\n&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nThis is for those of you interested in working with custom curves exported from Illustrator or created in Maya to make a custom logo or raised text for a reel or for work.  I&#8217;m actually doing this type of thing for some extra cash and maybe I will throw a little into my demo reel at some point just to have some more professional looking animated text.  Have fun, and I hope you find it useful!  You can even download the curves to get started.  Read on!\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>This:<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_000.png\" rel=\"lightbox[2680]\"><img alt=\"custom curves\" height=\"193\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_000.png\" title=\"custom curves\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>To this:<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/metallica_redMetallicFlake.jpg\" rel=\"lightbox[2680]\"><img alt=\"\" height=\"376\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/metallica_redMetallicFlake.jpg\" title=\"metallica_redMetallicFlake\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<p><span id=\"more-2680\"><\/span><\/p>\n<h2>Getting Started with Nurbs Curves<\/h2>\n<hr \/>\n&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nHere&#8217;s kinda where we start.  These are linear curves that are perfectly capable of being extruded.  They were custom made in Illustrator using a reference image.  Using the flat image of the text, I absorbed what makes the shapes work and made my best attempt at reproducing the lines in a way that unifies the whole design.  The whole design of Ride the Lightning album cover is awesome but there are knock-offs that are completely weak looking like someone drew it on a napkin and that&#8217;s unfortunately what I had to use to start with.\n<\/div>\n<p>&nbsp;<\/p>\n<p><a href=\"http:\/\/bit.ly\/qcYq58\" title=\"Illustrator File\">Download<\/a> the actual curves if you wanna try it out yourself!<\/p>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/metallica.jpg\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone size-medium wp-image-2743\" height=\"225\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/metallica-300x225.jpg\" title=\"metallica\" width=\"300\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_000.png\" rel=\"lightbox[2680]\"><img alt=\"custom curves\" height=\"193\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_000.png\" title=\"custom curves\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>The final output I&#8217;m going for is similar to the Ride the Lightning cover.  These are the <a href=\"http:\/\/bit.ly\/qcYq58\" title=\"download the Illustrator file\">curves<\/a>.  If you are using your own curves, it is important to save them as an Illustrator CS file and turn off all the options as you save.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_001.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"238\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_001.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>&#8230;and what I get from doing a Bevel Plus directly on those curves.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nA Pretty good version of 3d text using Bevel Plus, but what&#8217;s missing?  Filleted corners you say?  Yeah!  Here&#8217;s how to go about doing that.  Because I use Vray in Max for final render output, I need to find a way to fillet the corners to add the solid, heavy, metal, realistic feel to block letters for a project.  I&#8217;m thinking of my final output and render software at this stage and Mental Ray has the mia_roundcorners node, recently demoed <a href=\"http:\/\/bit.ly\/q3EJgh\" title=\"mi_roundedCorners\">here<\/a> at around 34:30, that&#8217;ll produce a similar result, but I prefer Vray and Vray doesn&#8217;t really have anything (built-in) that&#8217;s comparable.  The technique I will show is good since I can tweak the result many times, zoom in and out to really inspect what&#8217;s happening, and be very specific about the values without being too limited.  Maybe later I can try to write a shader to do the same thing in Vray.\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_012.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"306\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_012.png\" width=\"200\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Example: The M with rounded corners.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_022.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"361\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_022.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Determine the curve that needs to be beveled.  Here&#8217;s an example of one done already.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_002.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"263\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_002.png\" width=\"200\" \/><\/a><\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>The letter for beveling comprised of one continuous curve built in Illustrator.  They are purposely linear so that it&#8217;s easier and cleaner to round the corners.\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_024.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"480\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_024.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Select all the curve corners edit points.  Do not select intermediary edit points.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_025.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"500\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_025.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Detach Curves with preferences set at default.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_026.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"414\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_026.png\" width=\"279\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Sometimes you have to delete the original curve after detaching, but not the detachedCurve(s).<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_027.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"400\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_027.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<div>Fillet Curve Options<\/div>\n<ul>\n<li>Trim on = delete what&#8217;s left over automatically<\/li>\n<li>Circular on = easier<\/li>\n<li>Radius = your preferred radius<\/li>\n<\/ul>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_028.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"178\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_028.png\" width=\"178\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Filleted curve example.  There are a total of three curves after doing a fillet.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_002.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"654\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_002.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>After <strong>all<\/strong> corners are filleted, delete one edge, preferably the straight one.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_003.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"244\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_003.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>After selecting all the curves at once Attach Curves with the default settings tweaked slightly.  Connect is turned on and Keep Originals is off.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div><a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_004.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"518\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_004.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Unhide the attached curve and Open\/Close Curves to close the curve.  This step is <strong>essential<\/strong> for getting the edit points right.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div><a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_005.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"459\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_005.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Of course delete history and rename your curve to something manageable.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<h2>Bevel Plus Options<\/h2>\n<hr \/>\n&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nOpen up Bevel Plus Options, Output Options.  The important part is the sampling controls, but make sure setting for output get is set to Polygons and Tessellation is set to sampling.  Under Along Extrusion Samples put something like 5, and under Along Curve Samples pick a higher number usually if your letters are fat like mine.  It&#8217;s all relative to the bevel depth and extrude distance.  The default leaves letters looking blocky and low res.\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_007.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"335\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_007.png\" width=\"250\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_006.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"323\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_006.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nSome good settings to get started with creating really blocky letters with nice rounded fillets, fine tuning with be needed with the bevel width etc.  If you want a script to help you adjust the attributes on multiple bevels simultaneously, then read on!\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_009.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"543\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_009.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Final Fillet.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<h2>Bevel Plus Possible Issues<\/h2>\n<hr \/>\n&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_010.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"337\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_010.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nKeep in mind: Keep it clean. Remember to keep the outliner clean of clutter so that things don&#8217;t get unnecessarily complex. Stages of creation process get a little hairy because of all the nodes Maya doesn&#8217;t do a good job of cleaning up. You always need to keep an eye on that plus selection order does count sometimes so if curves are coming out funky, check the order of selection and deleting of history.\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_011.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"317\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_011.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nLetters like this A, select the outer curve and then the inner curve before hitting Bevel Plus.  The inner curve needs to be beveled differently from the outer curve so setting this before hand is a good tip or just change it afterwards in the channel box inputs by clicking Style and changing it to Concave In.  Remember to delete history before beveling and all unnecessary objects after beveling.  Keep the bevel history on your objects so that you can tweak the attributes on them.  It&#8217;s easy to create a script to tweak them all at the same time if you want to.  I also recommend version-ing up after each letter to avoid having to start all over again.  The process can get tedious if you don&#8217;t know what you&#8217;re doing at first.\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_013.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"size-full wp-image-2719 alignnone\" height=\"435\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_013.png\" title=\"bevelPlusTut_image_013\" width=\"500\" \/><\/a><\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nHere&#8217;s another problem that you may encounter.  If a letter appears reversed after doing a bevel then select the curve that made the bevel and hit Reverse Curve Direction in the Edit Curves Menu.\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nIf you have to recreate a fillet by duplicating another fillet then be sure to freeze transforms on the duplicated curve before proceeding to Attach Curves.  This will lead to unpredictable results.\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_014.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"455\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_014.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nWhen working with Nurbs Curves in Maya things are inevitably going to get wierd.  Try not to panic and use Reverse Curve Direction, Attach, and Detach Curves, Delete History, and Freeze Transforms till you get the results you want.  Sometimes it&#8217;s impossible to know which way the curve is going and it makes a difference when you&#8217;re trying to create the final filleted curve.  So persevere, you have to jostle Maya a little bit for it to want to cooperate and till there&#8217;s an easier solution, like if Vray had a good auto fillet shader which is why I had to do this, then this solution works just fine.\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>For speeding up workflow, use the G key to repeat the last command.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>The semi-final result (viewport screenshot):<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_015.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"199\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_015.png\" width=\"550\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Here&#8217;s an image of an earlier attempt with the reference image as well just so you have a shot of the reference I used:<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_015_1.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"251\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_015_1.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nAfter I made a change to have the text extrude a little deeper, if you look you can see it in the reference image that it is indeed deeper than my image, there is funkiness going on with the faces not knowing where to attach themselves to.  A simple tweak to the bevel depth can fix that.  But is it going to take forever to select each object and apply this simple change?  No, not if you have this simple script!  Here&#8217;s how you do it:\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Break out the pymel and do a:<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<pre class=\"brush: python; auto-links: true; title: ; toolbar: true; notranslate\">from pymel.core import *<\/pre>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\nThen type some code like this.  These lines are just setting attrs directly on ALL bevelPlus nodes in the scene at one.  If you have more than one instance of text, then you better be sure that you know that this is going to change everything globally.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<pre class=\"brush: python; auto-links: true; title: ; toolbar: true; notranslate\">\nfor b in range(len(ls(type='bevelPlus'))+1):\n    if b == 0: continue\n        bevnode = PyNode('bevelPlus' + str(b)\n        setAttr(bevnode+'.width', .009)\n        setAttr(bevnode+'.depth', .010)\n        setAttr(bevnode+'.extrudeDepth', 2.7)\n        setAttr(bevnode+'.polyOutExtrusionSamples',5)\n        setAttr(bevnode+'.polyOutCurveSamples',25)\n<\/pre>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Take a look at the width attr and bump that down a hundredth.  Now take a look:<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_019.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"184\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_019.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Awesome I say!  But it&#8217;s too high res, no need for all those polys.  So tweak the script again and in seconds have the result you want.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<pre class=\"brush: python; auto-links: true; highlight: [4,8]; title: ; toolbar: true; notranslate\">\nfor b in range(len(ls(type='bevelPlus'))+1):\n    if b == 0: continue\n        bevnode = PyNode('bevelPlus' + str(b)\n        setAttr(bevnode+'.width', .008)\n        setAttr(bevnode+'.depth', .010)\n        setAttr(bevnode+'.extrudeDepth', 2.7)\n        setAttr(bevnode+'.polyOutExtrusionSamples',5)\n        setAttr(bevnode+'.polyOutCurveSamples',11)\n<\/pre>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Probably the most important attributes to tweak are going to be the polyOutExtrusionSamples and the polyOutCurveSamples so fine tune those to get the cleanest result.  Keep the extrusion samples higher for curved surfaces because polys will quickly become blocky.  Tweak those objects separately and, if more than one, have a separate script to handle just those.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_021.png\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone\" height=\"196\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/bevelPlusTut_image_021.png\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Now THAT&#8217;s butta!  Also, check your bevels especially on the inner curves, they can sometimes flip and not be right.<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>Render time!<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div>\n<a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/metallica_redMetallicFlake.jpg\" rel=\"lightbox[2680]\"><img alt=\"\" class=\"alignnone size-full wp-image-2706\" height=\"376\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/08\/metallica_redMetallicFlake.jpg\" title=\"metallica_redMetallicFlake\" width=\"500\" \/><\/a>\n<\/div>\n<p>&nbsp;&nbsp;&nbsp;<\/p>\n<div><strong>Stay tuned for more tips on rendering with Vray later.<\/strong><\/div>\n<div class=\"shr-publisher-2680\"><\/div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http:\/\/static.evernote.com\/article-clipper-remember.png\" \/>\n\t\t\t\t<\/a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;<\/div>\n<\/div>", "datetime": "2011-08-10T04:16:32", "id": "http:\/\/www.jonasavrin.com\/?p=2680", "categories": [], "metadata": {"guid": "5fbb7509-fa16-45b5-b6e5-806f0450c392", "likes": 0, "is_published": false}}], {}]"
09-10 23:31 SocketClient INFO     Received from service: "true"
09-10 23:31 SocketClient INFO     Returning(as str): 'true'
09-10 23:31 root         INFO     Handling CGI request.
09-10 23:31 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:31 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Character Development and Rigging for Facial Animation Part 1", "url": "http:\/\/www.jonasavrin.com\/2011\/08\/12\/character-development-and-rigging-for-facial-animation-part-1\/", "author": "Jonas Avrin", "summary": "This demo illustrates the steps taken to develop a character from concept sketches to finished facial rig in a simplified format. This is an actual rig I developed with the use of proprietary rigging tools in Maya utilized daily at work so I&#8217;m not going to demo those tools. However, future ins", "html": "<!-- Start Shareaholic LikeButtonSetTop --><div style=\"clear: both; height: 3px; width: 100%;\"><\/div><div class=\"shareaholic-like-buttonset\" style=\"float: right; height: 30px;\"><a class=\"shareaholic-fblike\"><\/a><a class=\"shareaholic-googleplusone\"><\/a><\/div><div style=\"clear: both; height: 3px; width: 100%;\"><\/div><!-- End Shareaholic LikeButtonSetTop --><p>This demo illustrates the steps taken to develop a character from concept sketches to finished facial rig in a simplified format. This is an actual rig I developed with the use of proprietary rigging tools in Maya utilized daily at work so I&#8217;m not going to demo those tools. However, future installments will incorporate the use of tools that I have written and that you can use to aide the building of complex facial rigs such as this, and include overviews of more advanced rigging techniques. I would also like to break the process down into chunks to really go into more detail about things you should be thinking about if you are trying to rig a face. This is an ongoing process so stay tuned, I have lot&#8217;s of useful tips to share.<\/p>\n<p><\/p>\n<p><span id=\"more-2761\"><\/span><\/p>\n<p>The simple breakdown:<\/p>\n<p>Concept Art<br \/>\n1) Concept painting in photoshop is the first step to try and figure out a solid direction. I had nothing to go on except it needed to be a sexy female which is difficult because what makes just a head sexy? A lot of fashion models have killer bodies that obviously encorporate a lot of the determining factors, so blocking out and finessing the important attributes of a desirable face is imperative and what make this exercise challenging.<\/p>\n<p>2) Orthographic views and 3\/4 of the type of head I was going for. It turns out that I didn&#8217;t make the design decision of sticking with a pinup style female until after I sketched the head turnaround drawing inspiration from another concept painting I liked. Thus, I use the head turnaround purely as a generic starting point. Getting it into 3d was more important at this stage than making a final decision on the character design. Sculpting tools make it easier to finalize the design anyway, at least for me.<\/p>\n<p>Concept Sculpt and Texturing<br \/>\n3) It&#8217;s hard to really nail down a 2d design before you get it into 3d especially when you have a couple of different genres competing for your affections. I was fighting with making a supermodel or a pinup style face. Luckily Mudbox made that process easier. The final probably looks like a mashup of both.<\/p>\n<p>Sculpting the head is really where I made my design decisions take on an afterlife from their inception, attempting to distill organic forms that looked more finalized.<\/p>\n<p>4) Texture painting with ptex as an experimental process was useful in further exploration of the design. Since I didn&#8217;t have to fully commit and make UVs, and I already had good sculpting topology, the freedom to experiment was limitless.<\/p>\n<p>Model Rigging Prep<br \/>\n5) Retopology of the low res mesh using Modo produced the best and the cleanest generic mesh result in the least amount of time. This simple mesh is also highly reusable as a starting point for other designs.<\/p>\n<p>6) The final mesh to be rigged needs to have just enough loops for an optimal resulting deformation after skinning, most importantly the mouth followed by the eyes etcetera. The low res retop is not a good choice for good deformation except if you are trying to output a low poly game rig.<\/p>\n<p>Since I was under the gun to get the model and rig done in a week or two I had to continue to refine the proportions at the same time as modeling good topology. The resulting workflow is a sculpting approach to modeling low res whereby slowly adding more loops, followed by a pass of smoothing and carving the subdivision preview available in Modo, and then stepping back down to the lower res geo, got the job done. Beware when trying this technique in Zbrush or other software because editing proportions and sculpting high res and then deleting the higher divisions will indirectly smooth the resulting mesh thereby erasing the detail. I suggest using this workflow only in Modo where you can hit Tab to toggle on an off subdivisions, Catmull Clark being the best (Shift-Tab). I have to say Modo is supreme for modeling not only for these cababilities, but also the superior advantage of quickly lighting and rendering a preview with occlusion and GI. The physical lighting makes the model feel more real with a sense of scale from cast shadows and a simple skin texture. Blemishes and undesirable defects become glaringly more obvious as well, making it easier to spot and fix.<\/p>\n<p>Rigging with Joints<br \/>\n7) Rigging Starts with joints only with a control rig that either drives the joints directly via constraints or by constraining parent controls so that they drive groups of child controls. Some controls around the mouth are driven by SDK as well so a system of using multiple null buffer nodes is used to get proper tranformations and rotations of the controls or else there would be not so desirable or predictable results.<\/p>\n<p> <img alt=\"8)\" class=\"wp-smiley\" src=\"http:\/\/www.jonasavrin.com\/wp-includes\/images\/smilies\/icon_cool.gif\" \/> The weighting process is time consuming but with adequate practice and great topology like this some people can get it done in literally hours. I&#8217;m slower but that&#8217;s because I am a perfectionist when it comes to weighting.<\/p>\n<p>9) The control rig is a series of stock curves constrained to the rig when the rig gets built so it&#8217;s easy to modify and save those curves for a perfectly fast result that is highly reusable.<\/p>\n<p>The Osipa style face rig is preferred a lot by animators and the next demo will go over how I use multiple styles of UI on the same rig and the tools to generate said controls.<\/p>\n<p>Subsequent demos will include facial poses and blends and making this rig work with both also known as a hybrid rig. The advantage of poses made with joints only are great because its less computationally expensive but blends are necessary for folding, wrinkling, and some minor correctives.<\/p>\n<div class=\"shr-publisher-2761\"><\/div><!-- Start Shareaholic LikeButtonSetBottom --><!-- End Shareaholic LikeButtonSetBottom --><div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http:\/\/static.evernote.com\/article-clipper-remember.png\" \/>\n\t\t\t\t<\/a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;<\/div>\n<\/div>", "datetime": "2011-08-13T05:50:13", "id": "http:\/\/www.jonasavrin.com\/?p=2761", "categories": [], "metadata": {"guid": "151618b7-e734-4383-bd45-8b97002a40d9", "likes": 0, "is_published": false}}], {}]"
09-10 23:31 SocketClient INFO     Received from service: "true"
09-10 23:31 SocketClient INFO     Returning(as str): 'true'
09-10 23:32 root         INFO     Handling CGI request.
09-10 23:32 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:32 SocketClient INFO     Sending to service: "["publish_content", [{"title": "read only registry browser", "url": "http:\/\/blarg.robertkist.com\/?p=80", "author": "Robert", "summary": "A handy registry browser that works in read only mode: http:\/\/www.softspotsoftware.com\/pages\/downloads\/RegBrowser.zip (including source in Delphi) When do you want to use this? If IT blocked write access to a PC&#8217;s registry. Windows&#8217; own registry editor isn&#8217;t clever enough to operat", "html": "<p>A handy registry browser that works in read only mode:<br \/>\n<a href=\"http:\/\/www.softspotsoftware.com\/pages\/downloads\/RegBrowser.zip\">http:\/\/www.softspotsoftware.com\/pages\/downloads\/RegBrowser.zip<\/a> (including source in Delphi)<\/p>\n<p>When do you want to use this? If IT blocked write access to a PC&#8217;s registry. Windows&#8217; own registry editor isn&#8217;t clever enough to operate in a read only mode and refuses to launch. That&#8217;s when you can use this tool.<\/p>", "datetime": "2011-08-15T04:19:16", "id": "http:\/\/blarg.robertkist.com\/?p=80", "categories": [], "metadata": {"guid": "f3209357-cf61-4430-add0-237ee05d1985", "likes": 0, "is_published": false}}], {}]"
09-10 23:32 SocketClient INFO     Received from service: "true"
09-10 23:32 SocketClient INFO     Returning(as str): 'true'
09-10 23:32 root         INFO     Handling CGI request.
09-10 23:32 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:32 SocketClient INFO     Sending to service: "["publish_content", [{"title": "An Open Letter To Andy Serkis", "url": "http:\/\/strongmanimator.blogspot.com\/2011\/08\/open-letter-to-andy-serkis.html", "author": "anim8d (timborrelli@gmail.com)", "summary": "Dear Mr. Serkis,<br \/><br \/>If you deserve to be considered for an Academy Award nomination for Acting in regards to your performance motion capture, then every animator who has ever animated a character in any movie deserves consideration as well.<br \/><br \/>Sincerely,<br \/><br \/>Tim Borrelli<br \/>", "html": "Dear Mr. Serkis,<br \/><br \/>If you deserve to be considered for an Academy Award nomination for Acting in regards to your performance motion capture, then every animator who has ever animated a character in any movie deserves consideration as well.<br \/><br \/>Sincerely,<br \/><br \/>Tim Borrelli<br \/><br \/>P.S., Let me clarify:<br \/><br \/><div class=\"\" style=\"clear: both; text-align: left;\">Recently, you have been quoted as claiming that performance capture actors deserve to be considered for the Academy Awards in Acting categories:<\/div><div class=\"MsoNormal\"><\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\"><a href=\"http:\/\/www.guardian.co.uk\/film\/2011\/aug\/12\/andy-serkis-motion-capture-acting\">http:\/\/www.guardian.co.uk\/film\/2011\/aug\/12\/andy-serkis-motion-capture-acting<\/a><u><span style=\"color: blue;\"><\/span><\/u><\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Before I even start, let me say that I feel that you are a great actor. I don\u2019t doubt your acting ability, both on stage and on film. But that\u2019s not the debate here.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">From what I gather, here is what you are suggesting. You seem to feel that performances like yours in Lord of the Rings (Gollum), King Kong (King Kong), and Rise of the Planet of the Apes (Caesar) should be recognized by The Academy as an individual effort in excellence of acting performance.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Wait. What?<\/div><div class=\"MsoNormal\"><br \/>Let\u2019s ignore the fact that animators have been doing this without motion capture longer than you have been suiting up for it.<br \/><br \/><\/div><div class=\"MsoNormal\">Performance capture is the digital capture of a performance of an individual actor, to be later applied to a digital character. Yet according to you, \u201c\u2026there are two parts to the process. The first part is capturing the performance. Only later down the line do you start seeing the characters being painted over frame by frame using pixels.\" <\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">First, that doesn\u2019t sound like an individual performance to me.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Second, painted over? Using pixels? For a guy who has positioned himself to be the spokesperson for performance capture, it sounds like you don't <i>quite <\/i>understand what goes into the entire process.<br \/><br \/><\/div><div class=\"MsoNormal\">Ignoring the fact that there is nothing \u201cbeing painted over frame by frame using pixels\u201d (almost) anywhere in the process, you seem to be ignorant of what happens to your performance data after you walk off the set. Many times, chunks of data need to be thrown out entirely and done by hand. Also, it is quite often that the actor\u2019s proportions don\u2019t match that of the digital characters, requiring a remapping of the motion. This may not seem like it affects a performance, but it in fact does. Different proportions means poses don\u2019t read the same. It means a slouch on a short actor is a hunchback on a tall character. It means delicate interactions often need to be heavily modified or redone with animation due to differing limb lengths. I could go on.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Long story short, it means the performance is not 1-to-1 from performance capture to screen.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Furthermore, you claim that \"Performance-capture technology is really the only way that we could bring these characters to life\u2026 It's the way that Gollum was brought to life, and King Kong, and the Na'vi in Avatar and so on and it's really another way of capturing an actor's performance.\u201d<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">You then go on to say, \u201cThat's all it is, digital make-up.\"<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">What. The. Hell. <\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Well, makeup artists HAVE an Oscar category. So are you also suggesting that the people behind taking his performance to the big screen be considered in that category? When you say \u201cthat success using the technique can be rewarded with current accolades,\u201d is that what you mean? Should the modelers, animators, painters, shader TDs, lighters, etc., be considered for Makeup and Costume Design?<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Makeup and Costume Design teams do&nbsp;<i>amazing <\/i>work. I just have trouble seeing how modelers, animators, painters, shader TDs, lighters, etc. fit into those categories.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Or are you referring to the VFX category (which, while valid, is a much broader category than acting), or even the lesser known, non-televised technology categories? Are you basically saying that your performance, which wouldn\u2019t even be viewable without those aforementioned teams of people, is more deserving of public recognition? <\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">I, as well as many others, won\u2019t argue that motion capture data is only as good as the actor in the suit. I have directed and worked with motion capture data from actors on both ends of the talent spectrum. I agree that without the proper direction and performance, the end result that I produced wouldn\u2019t be as emotional, as powerful, or as accurate.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">However, I also know that without a talented digital character team (animators, modelers, TDs, etc.), that performance will NEVER look as intended.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">What you've done here, Mr. Serkis, is downplay the contribution that the whole team makes to bring a character like Gollum to life. What\u2019s worse is that you aren\u2019t alone. In this featurette on the making of Rise of the Planet of the Apes, the animation team is completely overlooked!<br \/><br \/><\/div><div class=\"MsoNormal\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><\/div><br \/><\/div><div class=\"MsoNormal\">Is the technology that Weta developed awe-inspiring and exciting? Hell yes it is. I\u2019d love to be on set just for a day and see what the technology is like from start to finish. It would be amazing (and after writing this I may never get the chance). But to see the contribution of an entire discipline glossed over so readily by both a recognizable name (your own, Andy Serkis!) AND a production team is disheartening and frustrating.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Yet, as infuriating as that may be, this is not the point I want to make here. That point is:<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\"><span class=\"Apple-style-span\" style=\"font-size: large;\">If you deserve to be considered for an Academy Award nomination for Acting, then every animator who has ever animated a character in any movie deserves consideration as well.<\/span><\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Animators, both hand-keyed and motion capture artists, breathe life into their characters. They push performances of their characters to an artistic limit, based on the direction they are given. Many even use video reference- animators often of themselves performing (yes, ACTING) the scenes they are working on, mocap artists using video shot on set.<\/div><div class=\"MsoNormal\"><\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Not to single one person out, but some do it REALLY WELL, like this example (password: education):<\/div><div class=\"MsoNormal\"><br \/><\/div><br \/><div style=\"text-align: center;\"><\/div><a href=\"http:\/\/vimeo.com\/27379093\">Rio Comparison Reel<\/a> from <a href=\"http:\/\/vimeo.com\/user8028778\">jeff gabor<\/a> on <a href=\"http:\/\/vimeo.com\/\">Vimeo<\/a>.<br \/><br \/><div class=\"MsoNormal\">And this one:<\/div><div class=\"MsoNormal\"><br \/><\/div><br \/><div class=\"separator\" style=\"clear: both; text-align: center;\"><\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">It should be clear that this guy is an amazing animator. He\u2019s also a great example of an animator using his own performance to bring characters to life (in the case of Rio, a female lead, and supporting male, and a bird.) As animators, we\u2019ve been taught that video reference is a powerful tool. Like any tool, however, it requires training and practice to get right.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Some things may come more naturally (in a male animator\u2019s case, the supporting male). Some things may take more creativity (like humanizing a creature, such as a bird). Even other things may take a bigger investment into the movement and emotion of the character (the female lead).<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">However, the end result in Rio didn\u2019t come from just an animator\u2019s performance. It came from the ability to translate that acting into what the digital character warranted.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Like you, Mr. Serkis, animators use their performance to improve and sell the characters they are acting for, in the interest of the whole story.<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">So my question for you is this:<\/div><div class=\"MsoNormal\"><br \/><\/div><div class=\"MsoNormal\">Don\u2019t animators also deserve individual recognition from the Academy for Acting?<br \/><br \/>Mr. Serkis, please leave a comment here, or drop me a line. I welcome the discussion, as would many others who do and do not share my opinion.<\/div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/4248341596629159263-6180644853011344220?l=strongmanimator.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-08-15T12:32:03.957000", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-6180644853011344220", "categories": [], "metadata": {"guid": "c11523f6-836e-4f20-8207-ac2a12c54e15", "likes": 0, "is_published": false}}], {}]"
09-10 23:32 SocketClient INFO     Received from service: "true"
09-10 23:32 SocketClient INFO     Returning(as str): 'true'
09-10 23:32 root         INFO     Handling CGI request.
09-10 23:32 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:32 SocketClient INFO     Sending to service: "["publish_content", [{"title": "What\u2019s Eating OOP?", "url": "http:\/\/www.robg3d.com\/?p=755", "author": "Rob Galanakis", "summary": "Repost from altdevblogaday. Also of note that this was my first blog post that I know of that was reposted on reddit\/hackernews, and on reddit especially the comments were sort of brutal&#8230; oh, internets. Anyway, I&#8217;d suggest heading over the altdevblogaday to read the comments when you&#82", "html": "<p>Repost from altdevblogaday. Also of note that this was my first blog post that I know of that was reposted on reddit\/hackernews, and on reddit especially the comments were sort of brutal&#8230; oh, internets. Anyway, I&#8217;d suggest heading over the altdevblogaday to <a href=\"http:\/\/altdevblogaday.com\/2011\/08\/15\/whats-eating-oop\/#disqus_thread\">read the comments<\/a> when you&#8217;re done with the article.<\/p>\n<hr \/>\n<p>It has been commonplace over the past few years to bash Object Oriented Programming. \u00a0Functional programming going mainstream. \u00a0Data oriented design becoming commonplace for performance. \u00a0The resurgence of dynamic languages. \u00a0OO bastions going multi-paradigm. \u00a0Why is everything going wrong for traditional OOP?<\/p>\n<p>Because it took a while but we realized that canonical OOP sucks. \u00a0Let&#8217;s look at .NET&#8217;s humble <a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/system.diagnostics.process.aspx\">System.Diagnostics.Process class<\/a>.<\/p>\n<ol>\n<li><strong>The sin of statefulness.<\/strong>\u00a0 ProcessStartInfo, the mutable type that represents the filename, args, std io, and other state of the Process, has 20 mutable (get\/set) properties. \u00a0The Process type itself has over 50 properties (mostly immutable). \u00a0The problem here is that the Process itself transitions between three states- not started, running, and finished- and only a subset of properties are valid at any given time. \u00a0This whole situation is impossible to reason about- you either need to look at the extensive tests that would need to be written to test all the combinations of state, or you&#8217;d need to look at it under the debugger to know what&#8217;s going on.<\/li>\n<li><strong>Inheritance.<\/strong>\u00a0 This situation is bad enough. \u00a0But have you ever seen someone subclass Process? \u00a0I have, a few times, and it makes things even more impossible to reason about. \u00a0You presumably subclass it to ensure certain state is set up by default, such as Filename. \u00a0What if someone mutates that default, though? \u00a0You either allow it, which makes your class sort of pointless and breaks its invariant (Filename won&#8217;t change), or you don&#8217;t allow it by raising an Exception, or even worse, just silently returning, which would break the fundamental contract of your base class and the Liskov Substitution Principle (you are quite clearly changing the behavior if you are raising an exception or not fulfilling the contracts the base class makes). \u00a0There&#8217;s no point to inherit stateful objects like this, but that is canonical OOP.<\/li>\n<li><strong>Code reuse through inheritance\/polymorphism.<\/strong>\u00a0 Obviously code reuse is a good thing. \u00a0The problem is the way OOP encourages it, through polymorphism via inheritance. \u00a0Process does not implement any interfaces. \u00a0You could not pass Process to a method or class that, say, is responsible for managing IO and std streams in general, not just for Process. \u00a0Actually, this isn&#8217;t a big problem- just either wrap the Process in something (don&#8217;t subclass it!), or pass in only the actual data\/methods needed. \u00a0The ease of getting around this quite clearly demonstrates that, if you were to take away inheritance, it really wouldn&#8217;t be such a big deal- would it?<\/li>\n<li><strong>Messy contracts and abstractions.<\/strong>\u00a0 What are the contracts on Process? \u00a0Good luck trying to figure them out by reading the documentation (which is extensive). \u00a0I think everyone has put an asynchronous process into a deadlock, even when following MSFT&#8217;s directions. \u00a0Understanding how to use Process still requires a pretty thorough understanding of the underlying system, and it ends up in a no-man&#8217;s land between simplicity and power. \u00a0These messy (not just leaky) abstractions are the major problem when consuming other people&#8217;s code- I can&#8217;t count how many 3rd party modules I&#8217;ve seen crashes or problems in, if they have a reasonable enough API to figure out in the first place.<\/li>\n<\/ol>\n<p>I&#8217;m aware I&#8217;m picking on Process here. \u00a0It is a .NET 1.0 type, and the .NET framework (and programming in general) has matured immeasurably. \u00a0I&#8217;m sure if the team were to do it again, they would do it quite differently. \u00a0Process is a simple thing but obviously technically not easy- look at the dozens of ways Python had to launch a process, until <em>subprocess.POpen<\/em> simplified things into a wonderfully simple yet powerful way. \u00a0But that&#8217;s another good point, isn&#8217;t it- even Microsoft, who are supposed to be the leaders in these things (they are the ones training people and publishing the guides), &#8216;get it wrong,&#8217; if it&#8217;s even possible to get right (it isn&#8217;t). \u00a0How is Sammy the Scripter supposed to learn these lessons easily? \u00a0He won&#8217;t. \u00a0It will take him years, and he&#8217;s not going to learn it from OOP, he&#8217;s going to learn it (like the C# team did) from other languages and concepts. \u00a0But this whole time, we&#8217;re telling him these fallacies about the wonders of OOP, with inheritance, polymorphism, code reuse, abstraction, patterns, and every other buzzword.<\/p>\n<p>So what are we gonna do? \u00a0Well, the first thing is to throw out ideological purity when it comes to OOP. \u00a0The language designers are way ahead of us. \u00a0Dynamic languages like python and Ruby have long been multi-paradigm. \u00a0C# has been making big strides in the area, with anonymous methods\/lambdas in 3.5, and even adding dynamic typing support in 4.0. \u00a0Java and even <a href=\"http:\/\/en.wikipedia.org\/wiki\/C%2B%2B0x\">C++<\/a> are following suit. \u00a0On the opposite end of the spectrum, people are also taking <a href=\"http:\/\/en.wikipedia.org\/wiki\/Code_contracts\">hints from Eiffel<\/a>, the most thorough and pure OO language around, with things like .NET&#8217;s Code Contracts.<\/p>\n<p>We&#8217;re still lagging behind with education (the education we give at work, not just universities). \u00a0We need to expand our toolbox by looking at other languages and other concepts. \u00a0We need to throw out much of the traditional OOP approach we&#8217;ve taken that hasn&#8217;t worked. \u00a0(As a commenter pointed out- ideological purity is an aid for new people, but we too often label it as best practices.) \u00a0But I also don&#8217;t want to throw the baby out with the bathwater and start declaring that <a href=\"http:\/\/www.google.com\/search?btnG=1&amp;pws=0&amp;q=oop+is+dead\">OOP is dead<\/a>, or all around \u00a0inferior. \u00a0The practical applications of OOP languages (and not necessarily their ideological underpinnings) make them natural for multi-paradigm implementations, and this is something I think it&#8217;d be hard to say of procedural, or even functional, languages.<\/p>\n<p>I&#8217;d love to see us start to branch out in how we educate and teach to include these non-OO concepts, so we can better use the generally excellent OO languages available. \u00a0Let&#8217;s take the lack of state from functional programming. \u00a0That&#8217;s easy enough to\u00a0do. \u00a0Let&#8217;s take the modularity and specificity of data oriented design solutions. \u00a0Not everything has to fit into some grande, reusable abstraction. \u00a0Let&#8217;s be honest about the fact that most of our code does a particular thing and isn&#8217;t reused. \u00a0Let&#8217;s take design by contract from Eiffel, and stress how important contracts are for a clear and well abstracted API. \u00a0Let&#8217;s take duck typing from dynamic languages, so we don&#8217;t have to write a new interface to use our code somewhere (interfaces are great, except when you want some small overlap or subset of functionality- look at how even though .Add isn&#8217;t part of .NET&#8217;s IEnumerable, it gets special treatment by the compiler). \u00a0On the other hand, let&#8217;s not forget that formal interfaces are important, and make sure we have those (like ABC&#8217;s in python).<\/p>\n<p>We have most of these things already, because the language designers are really quite smart people and are way ahead of where the mainstream usage and understanding of these concepts are. \u00a0We just need to start using and teaching them more intelligently. \u00a0Maybe it is a PR thing? \u00a0Stop calling our languages &#8216;object oriented&#8217; and take the focus off of the &#8217;4 principles&#8217;, and start teaching people how to program effectively using a variety of paradigms.<\/p>\n<p>Likewise, I&#8217;d like to see caution when talking about the style-a-la-mode, whether that&#8217;s AOP, DOD, FP, whatever, so we don&#8217;t start treating it as a golden hammer. \u00a0As modern programmers, we live in a complex world, and it is our duty to continually educate ourselves and others using all the information we can find.<\/p>\n<p>&nbsp;<\/p>", "datetime": "2011-08-16T00:26:34", "id": "http:\/\/www.robg3d.com\/?p=755", "categories": [], "metadata": {"guid": "b67cb173-117f-471f-826f-12c82566311f", "likes": 0, "is_published": false}}], {}]"
09-10 23:32 SocketClient INFO     Received from service: "true"
09-10 23:32 SocketClient INFO     Returning(as str): 'true'
09-10 23:32 root         INFO     Handling CGI request.
09-10 23:32 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:32 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Management: Bored People Quit", "url": "http:\/\/rubenhenares.404fs.com\/management-bored-people-quit\/", "author": "admin", "summary": "I have read this extremely interesting article, via RobG3D blog. It&#8217;s amazing how sometimes, there are situations that you have been seeing during years but, you just haven&#8217;t taken a step back to think about the words to describe them and therefore analyze them and look for a solution. W", "html": "<p>I have read this <a href=\"http:\/\/www.randsinrepose.com\/archives\/2011\/07\/12\/bored_people_quit.html\">extremely interesting article<\/a>, via <a href=\"http:\/\/www.robg3d.com\/\">RobG3D<\/a> blog. It&#8217;s amazing how sometimes, there are situations that you have been seeing during years but, you just haven&#8217;t taken a step back to think about the words to describe them and therefore analyze them and look for a solution. When you see them broken-down, clearly written, it all seems so obvious , it all makes sense.<\/p>", "datetime": "2011-08-16T11:35:47", "id": "http:\/\/rubenhenares.404fs.com\/?p=233", "categories": [], "metadata": {"guid": "53266a3b-fa3b-4263-ab67-f3fc1b8e8c7f", "likes": 0, "is_published": false}}], {}]"
09-10 23:32 SocketClient INFO     Received from service: "true"
09-10 23:32 SocketClient INFO     Returning(as str): 'true'
09-10 23:32 root         INFO     Handling CGI request.
09-10 23:32 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:32 SocketClient INFO     Sending to service: "["publish_content", [{"title": "the importance of rig encapsulation", "url": "http:\/\/www.macaronikazoo.com\/?p=798", "author": "hamish", "summary": "Being able to write good animation tools relies on being able to easily make queries about a rig. Animation tools often need a high level understanding about how a rig works for many reasons. But obviously you want to maintain a loose coupling between the two. You want rigging to have the freedom to", "html": "<p>Being able to write good animation tools relies on being able to easily make queries about a rig.  Animation tools often need a high level understanding about how a rig works for many reasons.  But obviously you want to maintain a loose coupling between the two.  You want rigging to have the freedom to be able to change the way the rigs work without having to worry about breaking animation tools.  Conversely you don&#8217;t want animation tools to be hamstrung by the lack of ability to encapsulate the complexity of the rig.<\/p>\n<p>For example, is there a way to query the FK controls from a given IK control and vice-versa?  What about pole vector controls?  Is there a way to ask which controls have space switching?  If so can you query what the spaces are?  What about which controls are affected by a given space switch?  Given a joint can you get a list of the rig controls that drive it?  You get the idea.<\/p>\n<p>Animation tools are basically a layer that build on top of the rig layer.  If the rig layer isn&#8217;t rock solid, then animation tools will be unstable or feature restricted or both.<\/p>\n<p>Having some sort of programmatic interface to encapsulate the implementation details of your rig features is incredibly important if you want to be able to write useful and robust animation tools.  Without this sort of high level rig API you&#8217;ll most likely make it difficult or impossible to write the sort of tools that will enable your animators to be more productive.<\/p>\n<p>So if you&#8217;re writing a rigging system, try taking a break from it and building some animation tools.  Exercise that rigging API you&#8217;ve been spending so much time on.  Better yet, use all the animation tools you write as part of your unit testing to validate changes made to your rigging API.  Remember, as a rigger your customers are both your animators and anyone who might write animation tools.<\/p>", "datetime": "2011-08-16T21:34:15", "id": "http:\/\/www.macaronikazoo.com\/?p=798", "categories": [], "metadata": {"guid": "f77143ea-7622-448b-906d-159f686e9cb1", "likes": 0, "is_published": false}}], {}]"
09-10 23:32 SocketClient INFO     Received from service: "true"
09-10 23:32 SocketClient INFO     Returning(as str): 'true'
09-10 23:33 root         INFO     Handling CGI request.
09-10 23:33 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:33 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Management: Why work doesn\u2019t happen at work", "url": "http:\/\/rubenhenares.404fs.com\/management-why-work-doesnt-happen-at-work\/", "author": "admin", "summary": "Nice talk from Jason Fried at Ted.com about interrupting employees and breaking their creativity flow. How many times have you reached the end of the day and you have asked yourself: &#8220;what did I do today?&#8221;. Creating the right atmosphere that allow employees to work without interruptions ", "html": "<p>Nice <a href=\"http:\/\/www.ted.com\/talks\/jason_fried_why_work_doesn_t_happen_at_work.html\">talk<\/a> from Jason Fried at <a href=\"http:\/\/www.ted.com\">Ted.com<\/a> about interrupting employees and breaking their creativity flow.<\/p>\n<p>How many times have you reached the end of the day and you have asked yourself: &#8220;what did I do today?&#8221;.<br \/>\nCreating the right atmosphere that allow employees to work without interruptions ain&#8217;t easy.<\/p>\n<p>&#8220;M&#038;Ms Managers and Meetings, those are the real problems today&#8230;&#8221; Jason says.<\/p>\n<p>In my opinion, it&#8217;s not just limited to that, software crashes, server hangs, also break your flow. This is specially important when you are trying to collect metrics data. Hey, let&#8217;s find how many times our editor crashes and how long it takes for it to load.<\/p>\n<p><del datetime=\"2011-08-17T10:14:36+00:00\">Loading time * Number of Crashes = Time Lost * Average Employees Salary = MONEY LOST.<\/del><\/p>\n<p>Well&#8230; As my brother <a href=\"http:\/\/oliverhenares.tumblr.com\/\">Oliver Henares<\/a> says, &#8220;Life is not in an Excel file&#8221;. Add to that formula the fact that when your editor crashes your employee is breaking his\/her creative flow, and it could take him\/her hours to reach back that climax. That has an impact on the quality of the product which is not easy to represent in numbers.<\/p>\n<p>Explaining something that can&#8217;t be shown in numbers, to people who think in numbers, isn&#8217;t an easy task. But it&#8217;s a philosophy that must be applied up to certain degree, to any creative development environment if you want to add that extra shiny touch to the final product.<\/p>", "datetime": "2011-08-17T10:20:06", "id": "http:\/\/rubenhenares.404fs.com\/?p=237", "categories": [], "metadata": {"guid": "b8168487-e4cb-4e18-9c3b-252c463d9e2f", "likes": 0, "is_published": false}}], {}]"
09-10 23:33 SocketClient INFO     Received from service: "true"
09-10 23:33 SocketClient INFO     Returning(as str): 'true'
09-10 23:33 root         INFO     Handling CGI request.
09-10 23:33 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:33 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Designing an API: Is JSON\/JSONP an and\/or decision?", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/Q3oVow9Rt6s\/", "author": "Kyle Baley", "summary": "Executive Summary: Who knew serving up JSON for a public API was so complicatedly anti-hillbilly? Our next major phase at BookedIN\u2019s plan for world-except-for-Edmonton-and-certain-parts-of-Winnipeg-domination is underway. That\u2019s the public-facing site which will provide a way for YOU THE PUBLIC to&#", "html": "<p>Executive Summary: Who knew serving up JSON for a public API was so complicatedly anti-hillbilly?<\/p>\n<p>Our next major phase at <a href=\"http:\/\/getbookedin.com\">BookedIN\u2019s<\/a> plan for world-except-for-Edmonton-and-certain-parts-of-Winnipeg-domination is underway. That\u2019s the public-facing site which will provide a way for <strong><em><u>YOU THE PUBLIC<\/u><\/em><\/strong> to book appointments online at your favorite\u2026ahem\u2026\u201dservice providers\u201d. Let me explain our marketing strategy in detail.<\/p>\n<p>Ha ha, I jest of course. That last sentence is the sum-total of what I know about our marketing strategy. I have a hard enough time trying to keep myself entertained through code. (As a general rule, I start with the code reviews.)<\/p>\n<p>To populate the public site, we\u2019re building an API around our appointment manager. And we\u2019ve opted for JSON as the default format mostly because I love the way people pronounce it, accenting both syllables like badly-translated anime.<\/p>\n<p>In this app, we are making two API calls from two different places. When we first load the page for a particular vendor, the server makes a call to retrieve the company details and a list of services. After the page is loaded, jQuery comes along and populates the list of available appointment times. In this way, we get the benefit of SEO being able to see the vendor details and services and a snappy user interface when the user navigates to different dates within a particular vendor page, as outlined on the <a href=\"http:\/\/googlewebmastercentral.blogspot.com\/2007\/11\/spiders-view-of-web-20.html\">Google Webmaster Blog<\/a> (though I didn\u2019t actually discover that link until after we decided on the structure).<\/p>\n<p>In the appointment manager, serving up JSON is pretty simple. Configure the servlet, get the data, convert to JSON (we\u2019re using <a href=\"http:\/\/jackson.codehaus.org\/\">Jackson<\/a>), and write it to the response. This is working just fine with the server-side company details call.<\/p>\n<p>For the client-side call, it\u2019s not. Depending on how you configure the AJAX call in jQuery, we get one of the following:<\/p>\n<ul>\n<li>The API call is never made\n<li>The call is made but cancelled\n<li>The call is made and returns but has no data<\/li>\n<\/ul>\n<p>All are symptoms of the same issue: cross-domain client calls, which aren\u2019t allowed. I read that it\u2019s for security reasons which, due to my loathing of all things security-related, was enough for me not to read further.<\/p>\n<p>From what I can tell, you can\u2019t make a call to another domain in jQuery (or likely any JavaScript library) and expect to get JSON back.<\/p>\n<p>Here\u2019s an example. Follow this link in your browser: <a href=\"https:\/\/github.com\/api\/v2\/json\/repos\/search\/zenboard\">https:\/\/github.com\/api\/v2\/json\/repos\/search\/zenboard<\/a><\/p>\n<p>You\u2019ll probably get this back: <\/p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:<\/span> {<span style=\"color: #006080;\">\"repositories\"<\/span>:[{<span style=\"color: #006080;\">\"type\"<\/span>:<span style=\"color: #006080;\">\"repo\"<\/span>,<span style=\"color: #006080;\">\"username\"<\/span>:<span style=\"color: #006080;\">\"amirci\"<\/span>,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:<\/span> <span style=\"color: #006080;\">\"url\"<\/span>:<span style=\"color: #006080;\">\"https:\/\/github.com\/amirci\/zenboard\"<\/span>,<span style=\"color: #006080;\">\"watchers\"<\/span>:5,<span style=\"color: #006080;\">\"owner\"<\/span>:<span style=\"color: #006080;\">\"amirci\"<\/span>,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:<\/span> <span style=\"color: #006080;\">\"has_wiki\"<\/span>:<span style=\"color: #0000ff;\">true<\/span>,<span style=\"color: #006080;\">\"open_issues\"<\/span>:0,<span style=\"color: #006080;\">\"score\"<\/span>:6.994658,<span style=\"color: #006080;\">\"followers\"<\/span>:5,<span style=\"color: #006080;\">\"forks\"<\/span>:3,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:<\/span> <span style=\"color: #006080;\">\"has_issues\"<\/span>:<span style=\"color: #0000ff;\">true<\/span>,<span style=\"color: #006080;\">\"language\"<\/span>:<span style=\"color: #006080;\">\"Ruby\"<\/span>,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:<\/span> <span style=\"color: #006080;\">\"description\"<\/span>:<span style=\"color: #006080;\">\"Companion to agile zen to provide extra calculations and functionality\"<\/span>,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:<\/span> <span style=\"color: #006080;\">\"pushed\"<\/span>:<span style=\"color: #006080;\">\"2011\/05\/18 15:25:54 -0700\"<\/span>,<span style=\"color: #006080;\">\"fork\"<\/span>:<span style=\"color: #0000ff;\">false<\/span>,<span style=\"color: #006080;\">\"size\"<\/span>:1348,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:<\/span> <span style=\"color: #006080;\">\"created_at\"<\/span>:<span style=\"color: #006080;\">\"2010\/11\/24 17:28:33 -0800\"<\/span>,<span style=\"color: #006080;\">\"name\"<\/span>:<span style=\"color: #006080;\">\"zenboard\"<\/span>,<span style=\"color: #006080;\">\"has_downloads\"<\/span>:<span style=\"color: #0000ff;\">true<\/span>,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:<\/span> <span style=\"color: #006080;\">\"private\"<\/span>:<span style=\"color: #0000ff;\">false<\/span>,<span style=\"color: #006080;\">\"pushed_at\"<\/span>:<span style=\"color: #006080;\">\"2011\/05\/18 15:25:54 -0700\"<\/span>,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:<\/span> <span style=\"color: #006080;\">\"created\"<\/span>:<span style=\"color: #006080;\">\"2010\/11\/24 17:28:33 -0800\"<\/span>,<span style=\"color: #006080;\">\"homepage\"<\/span>:<span style=\"color: #006080;\">\"\"<\/span>}]}<\/pre>\n<p><!--CRLF--><\/div>\n<\/div>\n<p>(Side note: If you\u2019re using <a href=\"http:\/\/agilezen.com\">AgileZen<\/a>, the project above, <a href=\"http:\/\/zenboard.heroku.com\">ZenBoard<\/a>, is an awesome companion for it.)<\/p>\n<p>Now let\u2019s try this in jQuery:<\/p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:<\/span> <span style=\"color: #0000ff;\">function<\/span> loadProjects( ) {<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:<\/span>     <span style=\"color: #0000ff;\">var<\/span> url= <span style=\"color: #006080;\">\"https:\/\/github.com\/api\/v2\/json\/repos\/search\/zenboard\"<\/span>;<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:<\/span>   $.ajax({<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:<\/span>       url: url,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:<\/span>       type: <span style=\"color: #006080;\">\"GET\"<\/span>,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:<\/span>       dataType: <span style=\"color: #006080;\">\"json\"<\/span>,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:<\/span>       success: <span style=\"color: #0000ff;\">function<\/span>(data) {<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:<\/span>           alert( <span style=\"color: #006080;\">'moo'<\/span> );<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:<\/span>       }<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  10:<\/span>   });<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  11:<\/span> }<\/pre>\n<p><!--CRLF--><\/div>\n<\/div>\n<p>Throw this into a $( document ).ready call, load it up, and you get nothing. The browser developer tools give you a vague hint of what\u2019s going on:<\/p>\n<p><a href=\"http:\/\/codebetter.com\/kylebaley\/files\/2011\/08\/CanceledRequest.png\"><img alt=\"CanceledRequest\" border=\"0\" height=\"304\" src=\"http:\/\/codebetter.com\/kylebaley\/files\/2011\/08\/CanceledRequest_thumb.png\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"644\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>The request to the GitHub API was canceled. Let\u2019s make one small change to the JavaScript:<\/p>\n<div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px;\">\n<div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\">\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   1:<\/span> <span style=\"color: #0000ff;\">function<\/span> loadAppointmentTimes( ) {<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   2:<\/span>     <span style=\"color: #0000ff;\">var<\/span> url= <span style=\"color: #006080;\">\"https:\/\/github.com\/api\/v2\/json\/repos\/search\/zenboard\"<\/span>;<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   3:<\/span>   $.ajax({<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   4:<\/span>       url: url,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   5:<\/span>       type: <span style=\"color: #006080;\">\"GET\"<\/span>,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   6:<\/span>       dataType: <span style=\"color: #006080;\">\"jsonp\"<\/span>,<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   7:<\/span>       success: <span style=\"color: #0000ff;\">function<\/span>(data) {<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   8:<\/span>           alert( <span style=\"color: #006080;\">'moo'<\/span> );<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">   9:<\/span>       }<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  10:<\/span>   });<\/pre>\n<p><!--CRLF-->\n<pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px;\"><span style=\"color: #606060;\">  11:<\/span> }<\/pre>\n<p><!--CRLF--><\/div>\n<\/div>\n<p>The only difference here is the datatype is now jsonp instead of json. Load this page up and we get a hearty \u201cmoo\u201d alert.<\/p>\n<p>But take a look at the headers for the request we\u2019ve made:<\/p>\n<p><a href=\"http:\/\/codebetter.com\/kylebaley\/files\/2011\/08\/RequestWithURL.png\"><img alt=\"RequestWithURL\" border=\"0\" height=\"306\" src=\"http:\/\/codebetter.com\/kylebaley\/files\/2011\/08\/RequestWithURL_thumb.png\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"644\" \/><\/a><\/p>\n<p>There\u2019s an extra parameter: callback. jQuery added this. Furthermore, here\u2019s the response:<\/p>\n<p><a href=\"http:\/\/codebetter.com\/kylebaley\/files\/2011\/08\/RequestWithResponse.png\"><img alt=\"RequestWithResponse\" border=\"0\" height=\"306\" src=\"http:\/\/codebetter.com\/kylebaley\/files\/2011\/08\/RequestWithResponse_thumb.png\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"644\" \/><\/a><\/p>\n<p>This ain\u2019t quite JSON. It\u2019s a JavaScript function call wrapped around JSON.<\/p>\n<p>The upshot of all this: When you make a request without the callback parameter, GitHub will give you JSON. Unless it\u2019s called from JavaScript from the browser in which case, I believe it\u2019s the browser itself that says \u201cPapa don\u2019t preach that way\u201d and cancels the request completely because it won\u2019t allow JSON to come back.<\/p>\n<p>But when you tell jQuery to make the call as jsonp, it adds an auto-generated callback parameter (I believe you can specify the name of the callback if you so desire). GitHub is nice enough to adjust the response accordingly, wrapping the JSON in the callback function. Further, jQuery is nice enough to strip it off again and give you back the intended JSON.<\/p>\n<p>When I first started this post, it was going to lead up to this point where I ask: When creating an API, is it normal to support both JSON and JSONP requests? In fact, I ask the question in the title already.<\/p>\n<p>But it appears the answer is yes based on other services that offer APIs. Obviously, GitHub supports it. So does <a href=\"https:\/\/api.bitbucket.org\/1.0\/users\/kbaley?callback=moo\">BitBucket<\/a>, <a href=\"http:\/\/api.twitter.com\/1\/statuses\/user_timeline\/kbaley.json?callback=moo\">Twitter<\/a>, <a href=\"http:\/\/dev.agilezen.com\/concepts\/formatting.html#jsonp_support\">AgileZen<\/a>, and Flickr (though Flickr uses a different <a href=\"http:\/\/www.flickr.com\/services\/api\/response.json.html\">callback parameter name<\/a>). So\u2026thanks for listening, I guess\u2026<\/p>\n<h2>Final Note<\/h2>\n<p>JSONP (and any cross-domain request, I believe) is read-only. I.e. it supports GET requests only, not POSTs (or PUT or DELETE, I suppose). The odd thing is: I only discovered this today while researching for this post. This baffles me because I\u2019ve been doing AJAX apps since 2000 and don\u2019t remember ever having to deal with this. I suppose they were all same-domain, or if they were cross-domain, it was read-only. Anyway, score one for blogging because within the next two days, we would have run into this very issue at BookedIN and wasted a bunch of time tracking down the cause.<\/p>\n<p>To get around this limitation, there are two options (probably more depending on how academic you want to make your research):<\/p>\n<h3>Use a proxy<\/h3>\n<p>That is, you POST the request to the same domain and in the server code, forward the request on to the other domain. Remember, cross-domain security is only on the browser.<\/p>\n<h3>Cross-Origin Resource Sharing<\/h3>\n<p>This is new to me as well as of this morning. It\u2019s a draft specification to get around the same origin policy I\u2019ve spent these many minutes describing. I know nothing about except what I read on <a href=\"http:\/\/dev.agilezen.com\/concepts\/authentication.html#crossorigin_resource_sharing\">AgileZen\u2019s documentation<\/a>. The salient points are:<\/p>\n<ul>\n<li>Works on newer browsers only. This essentially translates into \u201cWorks on IE8 or higher and all versions of Firefox and Chrome that you\u2019re likely to see in the wild.\u201d<\/li>\n<li>May have issues with some proxy servers and firewalls<\/li>\n<\/ul>\n<p>This was enough for us to postpone this route to a future release when our client isn\u2019t the only one for the API.<\/p>\n<p>Kyle the Applicable<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/Q3oVow9Rt6s\" width=\"1\" \/>", "datetime": "2011-08-17T14:02:26", "id": "http:\/\/codebetter.com\/kylebaley\/2011\/08\/17\/designing-an-api-is-jsonjsonp-an-andor-decision\/", "categories": [], "metadata": {"guid": "11312078-47b7-42e3-97f9-6dee04a50571", "likes": 0, "is_published": false}}], {}]"
09-10 23:33 SocketClient INFO     Received from service: "true"
09-10 23:33 SocketClient INFO     Returning(as str): 'true'
09-10 23:33 root         INFO     Handling CGI request.
09-10 23:33 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:33 SocketClient INFO     Sending to service: "["publish_content", [{"title": "More Playblast issues - Frame Syncing issues with Xvid", "url": "http:\/\/markj3d.blogspot.com\/2011\/08\/more-playblast-issues-frame-syncing.html", "author": "Mark Jackson (markj3d@gmail.com)", "summary": "So we thought all was good, we've moved from wrapping the FFDS encoder to using a native 64bit version of Xvid in playblasts and all is good.... or so we thought. It turns out that the default Xvid Encoder settings DO NOT maintain frame counts correctly, randomly inserting padding frames into the Av", "html": "So we thought all was good, we've moved from wrapping the FFDS encoder to using a native 64bit version of Xvid in playblasts and all is good.... or so we thought. It turns out that the default Xvid Encoder settings DO NOT maintain frame counts correctly, randomly inserting padding frames into the Avi. So if you load an avi with baked in FrameCounter from Maya into Virtual Dub and step through it you'll see the frame counters get out of sync. We're only talking 2 or 3 frames but that's enough to completely stuff facial lip sync up and cause anybody using these avi's as master guides to have problems.<br \/><br \/><br \/>The cure is simple, launch the Configure Encoder settingsUI from your Start&gt;Programs&gt;Xvid folder and make sure you turn OFF the B-VOP's (b-frames) under the Profiles@level&gt;more&gt;profile UI. All of a sudden all is in sync and happy. God damned all the time we've wasted getting these working!<br \/><br \/>Mark<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/1407054789026932542-1447026508580877184?l=markj3d.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-08-18T04:59:02.097000", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-1447026508580877184", "categories": [], "metadata": {"guid": "1fee526f-d11f-4da9-a38e-828c27ec13ed", "likes": 0, "is_published": false}}], {}]"
09-10 23:33 SocketClient INFO     Received from service: "true"
09-10 23:33 SocketClient INFO     Returning(as str): 'true'
09-10 23:33 root         INFO     Handling CGI request.
09-10 23:33 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:33 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Maya Command Completion issues in Python", "url": "http:\/\/markj3d.blogspot.com\/2011\/08\/maya-command-completion-issues-in.html", "author": "Mark Jackson (markj3d@gmail.com)", "summary": "Something Dave discovered a while ago and has just come back to bite us again is that the dot code completion in the scriptEditor in Maya is actually RUNNING the code inside Python property blocks when you call a dot complete (Ctrl+Space). It's not just returning the function\/property list by using ", "html": "Something Dave discovered a while ago and has just come back to bite us again is that the dot code completion in the scriptEditor in Maya is actually RUNNING the code inside Python property blocks when you call a dot complete (Ctrl+Space). It's not just returning the function\/property list by using something like the inspect module, but actually running the property itself. The same is true when<br \/>you hit return to accept and fill that function\/property in the script editor.<br \/><br \/>Test it, add this in a Python Script window:<br \/><br \/><pre class=\"python\" name=\"code\">import pymel.core as pCore\n<br \/>\n<br \/>class AutoCompleteTest(object):\n<br \/>\n<br \/>    def __init__(self):\n<br \/>        pass\n<br \/>\n<br \/>    @property\n<br \/>    def Test(self):\n<br \/>        print \"Im being CALLED Multiple times!!!!!\\n\" \n<br \/>        pCore.newFile(force=True)\n<br \/>\n<br \/><\/pre><br \/>Now do the following:<br \/><br \/>com=AutoCompleteTest()<br \/><br \/>turn on \u2019Command Completion\u2019 and do a dot complete to inspect the com object you just made!<br \/><br \/>The property is now being RUN. So what you ask? Well lets say you are doing something stupid like the fileNew example above, just by trying to get code completion you've actually nuked your scene. Also because it's doing this for all the inspect calls it means that it's running all code, in all property blocks which makes it very, very slow!<br \/><br \/>Mark<br \/><br \/><br \/><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/1407054789026932542-6682116681588518415?l=markj3d.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-08-18T04:59:26.944000", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-6682116681588518415", "categories": [], "metadata": {"guid": "1bda313a-0f46-4f94-9591-b6d1fcf9d461", "likes": 0, "is_published": false}}], {}]"
09-10 23:33 SocketClient INFO     Received from service: "true"
09-10 23:33 SocketClient INFO     Returning(as str): 'true'
09-10 23:33 root         INFO     Handling CGI request.
09-10 23:33 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:33 SocketClient INFO     Sending to service: "["publish_content", [{"title": "\u2018Fake\u2019 callbacks in 3DSMAX", "url": "http:\/\/somosposmodernos.com\/blog\/?p=380&utm_source=rss&utm_medium=rss&utm_campaign=fake-callbacks-in-3dsmax", "author": "ike", "summary": "I haven&#8217;t used callbacks a lot. I guess I barely needed them, but for advanced behaviours they are amazing. According to MAXScript help&#8230; Callbacks are used to register with 3ds Max functions that are called when specific events occur within 3ds Max. Events that can be monitored are chang", "html": "<p>I haven&#8217;t used callbacks a lot. I guess I barely needed them, but for advanced behaviours they are amazing. According to MAXScript help&#8230;<\/p>\n<blockquote><p><strong>Callbacks<\/strong> are used to register with 3ds Max functions that are called when specific events occur within 3ds Max. <strong>Events <\/strong>that can be monitored are changes to the time slider time and redrawing of viewports. Callbacks are not stored in a 3ds Max scene.<\/p><\/blockquote>\n<p>So here I present you an easy way to have a piece of code running without digging too much into complex stuff&#8230;<\/p>\n<p><span id=\"more-380\"><\/span><\/p>\n<p>In the same way having a lot of callbacks could make your scene refresh slower, having a lot of these &#8216;fake&#8217; callbacks could make MAX behave the same way. So be careful when using this &#8216;perpetual&#8217; behaviours.<\/p>\n<p>Basically the trick consists on executing some code inside a <strong>Script Controller<\/strong>, and then returning something according to the property that holds the controller. I&#8217;ve used external objects that are not related to the rig to run some calculations that modify it. Just create an object to hold the script, let&#8217;s say a <em>Point<\/em>. Assign a Script Controller to any property, for example, <em>Box<\/em>. That parameter can be True (returns 1) or False (returns 0). If you open the controller it&#8217;s quite probable that says 0. Your last line always has to return the type of value that property is expecting to. If you set this controller on XPosition, it will expect a float. If you put it on a Diffuse channel of a material, it will expect a vector. In this case, it will ask for a boolean. <\/p>\n<p>But before that line you can write whatever you want. For example, a function to change the wirecolor of an object depending of the distance between it and another one. And that&#8217;s nice, because the wirecolor property is not animatable, so you are not able to set a controller on it! And that&#8217;s brought to you by the magic of Script Controllers, which evaluates non-stop.<\/p>\n<p>This widens your possibilities when building a rig. I tend to use this to prototype quick ideas. And to sum up, the main point is<strong> you can use external objects to continuously run code that affects a system<\/strong>.<\/p>", "datetime": "2011-08-20T02:33:28", "id": "http:\/\/somosposmodernos.com\/blog\/?p=380", "categories": [], "metadata": {"guid": "7492dcf2-97a3-4279-800c-6941e51ce1ea", "likes": 0, "is_published": false}}], {}]"
09-10 23:33 SocketClient INFO     Received from service: "true"
09-10 23:33 SocketClient INFO     Returning(as str): 'true'
09-10 23:33 root         INFO     Handling CGI request.
09-10 23:33 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:33 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Saturday night sketch: FK+IK Simultaneous Chain", "url": "http:\/\/somosposmodernos.com\/blog\/?p=387&utm_source=rss&utm_medium=rss&utm_campaign=saturday-night-sketch-fkik-simultaneous-chain", "author": "ike", "summary": "To prove the technique described on the last post I built a little thing: a couple of bones with FK and IK behaviour at the same time. It&#8217;s just a quick sketch based on one of the videos from ToonKit. It could be developed further to make it animation friendly since it&#8217;s a rough prototyp", "html": "<p>To prove the technique described on the last post I built a little thing: a couple of bones with FK and IK behaviour at the same time. It&#8217;s just a quick sketch based on one of the videos from <a href=\"http:\/\/www.toonkit-studio.com\/\" target=\"_blank\">ToonKit<\/a>. It could be developed further to make it animation friendly since it&#8217;s a rough prototype. But let me explain you how I did this&#8230;<\/p>\n<p style=\"text-align: center;\"><\/p>\n<p><span id=\"more-387\"><\/span><br \/>\nOne of the videos from ToonKit features this behaviour, and from what it&#8217;s shown I reckon the IK control is purely used to drive the rotation of the bones. Well, this is how an IK system actually behaves. But rather than controlling\/overwriting the rotation of the bones by using an IK Solver, we could do the whole calculations &#8216;by hand&#8217; and then tell the EulerXYZ controller of both bones (just the Z Rotation in this case) how many degrees they should rotate.<\/p>\n<p>After doing some research, I found a complete mathematical explanation on how an IK system works <a href=\"http:\/\/www.ryanjuckett.com\/programming\/animation\/16-analytic-two-bone-ik-in-2d?showall=1\" target=\"_blank\">here<\/a>. As one might expect, everything is based on trigonometry. I really recommend you to follow Ryan Juckett&#8217;s explanations here to try to understand&#8230; which I barely did since I wanted to finish this sketch before going to bed, so I went straight to the code he provides and translated it to MAXScript. I know, I&#8217;m going to hell for this <img alt=\":-)\" class=\"wp-smiley\" src=\"http:\/\/somosposmodernos.com\/blog\/wp-includes\/images\/smilies\/icon_smile.gif\" \/> <\/p>\n<pre class=\"brush: jscript; title: ; notranslate\">\nfn clampValue value upperLimit lowerLimit =\n(\n\tif value &gt; upperLimit then return upperLimit else\n\t(\n\t\tif value &lt; lowerLimit then return lowerLimit else\n\t\t(\n\t\t\treturn value\n\t\t)\n\t)\n)\n\nfn CalcIK_2D_TwoBoneAnalytic length1 length2 targetX targetY=\n(\n\t-- variables\n\tlocal angle1 -- angle of bone 1\n\tlocal angle2 -- angle of bone 2\n\tlocal solvePosAngle2 = true -- solve for positive angle 2 instead of negative angle 2\n\tlocal epsilon = 0.0001 -- used to prevent division by small numbers\n\n\tlocal foundValidSolution = true\n\tlocal targetDistSqr = (targetX*targetX + targetY*targetY)\n\n   -- Compute a new value for angle2 along with its cosine\n    local sinAngle2\n    local cosAngle2\n\n    local cosAngle2_denom = 2*length1*length2;\n    if cosAngle2_denom &gt; epsilon then\n\t(\n        cosAngle2 =  (targetDistSqr - length1*length1 - length2*length2)\/(cosAngle2_denom)\n\n        -- if our result is not in the legal cosine range, we can not find a legal solution for the target\n        if( (cosAngle2 &lt; -1.0) or (cosAngle2 &gt; 1.0) ) do foundValidSolution = false\n\n        -- clamp our value into range so we can calculate the best solution when there are no valid ones\n        cosAngle2 = clampValue cosAngle2 1 -1\n\n        --compute a new value for angle2\n        angle2 = acos cosAngle2\t\t\n\n        -- adjust for the desired bend direction\n        if solvePosAngle2 do\n\t\t(\n            angle2 = -angle2\n\t\t)\n\n        -- compute the sine of our angle\n        sinAngle2 = Sin angle2\n    )\n    else\n    (\n        --At leaset one of the bones had a zero length. This means our\n        --solvable domain is a circle around the origin with a radius\n        --equal to the sum of our bone lengths.\n        local totalLenSqr = (length1 + length2) * (length1 + length2)\n        if targetDistSqr &lt; (totalLenSqr-epsilon) or targetDistSqr &gt; (totalLenSqr+epsilon) do foundValidSolution = false\n    )\n\n    -- Compute the value of angle1 based on the sine and cosine of angle2\n    local triAdjacent = length1 + length2*cosAngle2\n    local triOpposite = length2*sinAngle2\n\n    local tanY = targetY*triAdjacent - targetX*triOpposite\n    local tanX = targetX*triAdjacent + targetY*triOpposite\n\n    -- Note that it is safe to call Atan2(0,0) which will happen if targetX and targetY are zero\n    angle1 = atan2 tanY tanX\n\treturn #(angle1, angle2)\n   --return foundValidSolution\n)\n\nvalues = CalcIK_2D_TwoBoneAnalytic $Bone01.length $Bone02.length $Point01.pos.x -$Point01.pos.z \n\nif selection[1] == GetNodeByName(&quot;Point01&quot;) then\n(\n\t$Bone01.rotation.controller[1].controller.y_rotation = values[1]\n\t$Bone02.rotation.controller[1].controller.y_rotation = values[2]\n\t$Point01.position = $Bone03.position\n)\nelse\n(\n\t$Point01.position = $Bone03.position\n-- \t$Bone01.rotation.controller[1].controller.y_rotation = values[1]\n-- \t$Bone02.rotation.controller[1].controller.y_rotation = values[2]\n)\n<\/pre>\n<p>You can try this code on a scene with 2 bones and 1 point. Each time you execute it the whole thing will align. So we need something to run it one time and another and another&#8230; without evaluating it on the MAXScript Editor. So now it&#8217;s the time to use the info provided on the previous post. Create another object (the red point on the video), throw a Script Controller on some property you do not plan to use (Box), and paste that code, leaving the 0 as the last line. And voil\u00e0!<\/p>", "datetime": "2011-08-20T13:28:37", "id": "http:\/\/somosposmodernos.com\/blog\/?p=387", "categories": [], "metadata": {"guid": "a7d64fd2-e1c9-441b-9fcb-1c3fe8d1ae8c", "likes": 0, "is_published": false}}], {}]"
09-10 23:33 SocketClient INFO     Received from service: "true"
09-10 23:33 SocketClient INFO     Returning(as str): 'true'
09-10 23:34 root         INFO     Handling CGI request.
09-10 23:34 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:34 SocketClient INFO     Sending to service: "["publish_content", [{"title": "The Tech Artist\u2019s Creed", "url": "http:\/\/www.robg3d.com\/?p=760", "author": "Rob Galanakis", "summary": "Repost of my most recent from altdevblogaday:\u00a0http:\/\/altdevblogaday.com\/2011\/08\/26\/the-tech-artists-creed Last month we started a thread on tech-artists.org about creating a tech artist&#8217;s creed. \u00a0After several weeks of back and forth, we finally came up with something we could all agree upon. ", "html": "<p>Repost of my most recent from altdevblogaday:\u00a0<a href=\"http:\/\/altdevblogaday.com\/2011\/08\/26\/the-tech-artists-creed\">http:\/\/altdevblogaday.com\/2011\/08\/26\/the-tech-artists-creed<\/a><\/p>\n<hr \/>\n<p>Last month we started a <a href=\"http:\/\/tech-artists.org\/forum\/showthread.php?t=1819\">thread<\/a> on <a href=\"http:\/\/www.tech-artists.org\">tech-artists.org<\/a> about creating a tech artist&#8217;s creed. \u00a0After several weeks of back and forth, we finally came up with something we could all agree upon. \u00a0Here it is:<\/p>\n<p style=\"padding-left: 30px;\">I am a Tech Artist,<br \/>\nEvery day I will teach, learn, and assist,<br \/>\nAnd build bridges between teams, people, and ideas.<br \/>\nI will observe without interrupting and mediate without judging.<br \/>\nI may not give exactly what you ask for,<br \/>\nBut I will provide what you need.<\/p>\n<p style=\"padding-left: 30px;\">I am a Tech Artist,<br \/>\nI will approach every problem with mind and ears open<br \/>\nTo my colleagues and peers across the industry.<br \/>\nI will solve the problems of today,<br \/>\nImprove the solutions of yesterday,<br \/>\nAnd design the answers of tomorrow.<\/p>\n<p style=\"padding-left: 30px;\">I am a Tech Artist,<br \/>\nI am a leader for my team,<br \/>\nAnd a standard-bearer for my community.<br \/>\nI will do what needs to be done,<br \/>\nI will advocate for what should be done,<br \/>\nAnd my decisions will be in the best interest of the production.<\/p>\n<p>My goal for the creed was to have the community come up with a code of ethics and standards for tech art in general. \u00a0We are a diverse group and there are as many specialties as there are TA&#8217;s. \u00a0So it was necessary to create something widely applicable, but still meaningful.<\/p>\n<p>My hope is that we can hold ourselves to, and judge our actions against, this creed. \u00a0I think it says everything vital about what a tech artist should strive for. \u00a0I know I have not always lived up to it, and I want my fellow TA&#8217;s to call me out when I do not. \u00a0I expect that other tech artists will share that sentiment. \u00a0I want to keep pushing our craft forward, bettering ourselves and our community, and I think this creed embodies that.<\/p>\n<p>So, a short post today because so much brain power and effort went into those words above. \u00a0They are not mine alone (or even primarily), they are those of the tech-artists.org community which represents and advocates for the tech art community at large. \u00a0I am just fortunate enough to have the honor and privilege of posting the creed here, on behalf of an amazing and incredibly creative group of people.<\/p>\n<p>So read it over, tell me what you think, and if you have something to suggest, suggest away- the creed should continually grow and evolve just as our role does.<\/p>", "datetime": "2011-08-26T22:27:46", "id": "http:\/\/www.robg3d.com\/?p=760", "categories": [], "metadata": {"guid": "437c6afe-01ba-4770-a740-c24d4bda8a11", "likes": 0, "is_published": false}}], {}]"
09-10 23:34 SocketClient INFO     Received from service: "true"
09-10 23:34 SocketClient INFO     Returning(as str): 'true'
09-10 23:34 root         INFO     Handling CGI request.
09-10 23:34 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:34 SocketClient INFO     Sending to service: "["publish_content", [{"title": "New tutorial: Texturing with MetaSL in 3dsMax", "url": "http:\/\/www.zspline.net\/blog\/2011\/08\/29\/new-tutorial-texturing-with-metasl-in-3dsma\/", "author": "Zoltan", "summary": "I&#8217;ve been trying to establish a reliable MetaSL based texturing workflow since 3dsMax 2010 but only recently got close to a practical solution. This tutorial is the fruit of that journey. If you find problems or solutions, have suggestions or opinions, please let me know. UPDATE: I&#8217;ve ju", "html": "<p>I&#8217;ve been trying to establish a reliable MetaSL based texturing workflow since 3dsMax 2010 but only recently got close to a practical solution. This tutorial is the fruit of that journey.<\/p>\n<div class=\"caption \"><span class=\"caption-title\">MetaSL based texturing<\/span><a href=\"http:\/\/www.zspline.net\/blog\/metasl-based-texturing-part-i\/\">Part I<\/a>: Overview<br \/>\n<a href=\"http:\/\/www.zspline.net\/blog\/metasl-based-texturing-part-ii\/\">Part II<\/a>: A basic example<br \/>\n<a href=\"http:\/\/www.zspline.net\/blog\/metasl-based-texturing-part-iii\/\">Part III<\/a>: Baking<br \/>\n<a href=\"http:\/\/www.zspline.net\/blog\/metasl-based-texturing-part-iv\/\">Part IV<\/a>: Displacement<br \/>\n<a href=\"http:\/\/www.zspline.net\/blog\/metasl-based-texturing-part-v\/\">Part V<\/a>: An advanced example<br \/>\n<a href=\"http:\/\/www.zspline.net\/blog\/metasl-based-texturing-part-vi\/\">Part VI<\/a>: Tips and tricks<br \/>\n<a href=\"http:\/\/www.zspline.net\/blog\/metasl-based-texturing-part-vii\/\">Part VII<\/a>: Known issues<br \/>\n<a href=\"http:\/\/www.zspline.net\/blog\/metasl-based-texturing-part-viii\/\">Part VIII<\/a>: Node reference<\/div>\n<p>If you find problems or solutions, have suggestions or opinions, please <a href=\"http:\/\/www.zspline.net\/blog\/contact\/\" target=\"_blank\">let me know<\/a>.<\/p>\n<p><em>UPDATE: I&#8217;ve just fixed the download links in part I. Sorry for the inconvenience.<\/em><!-- PHP 5.x --><\/p>", "datetime": "2011-08-29T14:21:59", "id": "http:\/\/www.zspline.net\/blog\/?p=1477", "categories": [], "metadata": {"guid": "dafe7410-f10a-4760-a4d7-2efe95e1d18b", "likes": 0, "is_published": false}}], {}]"
09-10 23:34 SocketClient INFO     Received from service: "true"
09-10 23:34 SocketClient INFO     Returning(as str): 'true'
09-10 23:34 root         INFO     Handling CGI request.
09-10 23:34 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:34 SocketClient INFO     Sending to service: "["publish_content", [{"title": "A Lesson from Operating System Design", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/dHqbYhoNuS0\/", "author": "Dru Sellers", "summary": "The concept of the Kernel. In an operating system, it is my understanding, the kernel provides a small but critical set of services to the software running on top of it. In most systems this would be stuff like memory&#160;&#8230; <a href=\"http:\/\/codebetter.com\/drusellers\/2011\/08\/30\/a-lesson-from-op", "html": "<p>The concept of the Kernel.<\/p>\n<p>In an operating system, it is my understanding, the kernel provides a small but critical set of services to the software running on top of it. In most systems this would be stuff like memory management,<\/p>\n<p>When I am designing a line of business application this would include persistence (i.e. save this to disk\/database\/etc), communication (with humans, with other machines), and I can only imagine a whole host of other ones for each different app. Something to note is that these systems are not &#8216;business logic&#8217; but merely allow the business logic to get outside the system. The business processes use these to get the job done.<\/p>\n<p>Not a big idea, or a new one. Just rethinking previous ideas.<\/p>\n<p>-d<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/dHqbYhoNuS0\" width=\"1\" \/>", "datetime": "2011-08-30T23:25:14", "id": "http:\/\/codebetter.com\/drusellers\/?p=161", "categories": [], "metadata": {"guid": "7eab7849-4095-413f-a7fe-f8e2b68aacc2", "likes": 0, "is_published": false}}], {}]"
09-10 23:34 SocketClient INFO     Received from service: "true"
09-10 23:34 SocketClient INFO     Returning(as str): 'true'
09-10 23:34 root         INFO     Handling CGI request.
09-10 23:34 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:34 SocketClient INFO     Sending to service: "["publish_content", [{"title": "MasterClass links now up!", "url": "http:\/\/markj3d.blogspot.com\/2011\/08\/masterclass-links-now-up.html", "author": "Mark Jackson (markj3d@gmail.com)", "summary": "Just checked on TheArea and it looks like the MasterClass links are up a day early:<br \/><br \/><a href=\"http:\/\/area.autodesk.com\/siggraph2011\/masterclasses\">http:\/\/area.autodesk.com\/siggraph2011\/masterclasses<\/a><br \/><br \/>Also it looks like Autodesk forgot to add the download link to the Python Mo", "html": "Just checked on TheArea and it looks like the MasterClass links are up a day early:<br \/><br \/><a href=\"http:\/\/area.autodesk.com\/siggraph2011\/masterclasses\">http:\/\/area.autodesk.com\/siggraph2011\/masterclasses<\/a><br \/><br \/>Also it looks like Autodesk forgot to add the download link to the Python Module so I've added it here for the time being until they sort the site out:<br \/><br \/><a href=\"https:\/\/docs.google.com\/leaf?id=0B-IBE7QQ3hVPNjRmODBkMmEtN2QzMi00ZGUzLTg2NmQtNTgwNWE0YWM1MjIy&amp;hl=en_US\">AnimationBinder.py<\/a> <br \/><br \/>Hope you enjoy....and yes you do have to register to see them, I think they're tracking numbers.<br \/><br \/>If you're having issues logging in please be aware that when you've registered you have to logout and log back in to view it, as per the banner that Autodesk put up which nobody, including me has read:<br \/><br \/><br \/><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http:\/\/3.bp.blogspot.com\/-S3jW6npohrM\/Tl5VgoVZSBI\/AAAAAAAAFKQ\/ki_NiX3fa0E\/s1600\/MasterClassBanner.jpg\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"34\" src=\"http:\/\/3.bp.blogspot.com\/-S3jW6npohrM\/Tl5VgoVZSBI\/AAAAAAAAFKQ\/ki_NiX3fa0E\/s400\/MasterClassBanner.jpg\" width=\"500\" \/><\/a><\/div><br \/><br \/><br \/>Mark<br \/><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/1407054789026932542-3598542780568638806?l=markj3d.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-08-31T08:43:56.137000", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-3598542780568638806", "categories": [], "metadata": {"guid": "f9476b5d-2bdf-4dc5-8f40-6b2272df76fd", "likes": 0, "is_published": false}}], {}]"
09-10 23:34 SocketClient INFO     Received from service: "true"
09-10 23:34 SocketClient INFO     Returning(as str): 'true'
09-10 23:34 root         INFO     Handling CGI request.
09-10 23:34 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:34 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Book review: Learning Monotouch by Michael Bluestein", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/GAoORHmbYxw\/", "author": "Peter van Ooijen", "summary": "Monotouch is a powerful tool to create native iOS (iPhone\/iPad\/iPod) apps written in C# backed by (a native version of) the .net framework. I have been using it for some time now to my great satisfaction. Learning Monotouch was a&#160;&#8230; <a href=\"http:\/\/codebetter.com\/petervanooijen\/2011\/09\/04\/", "html": "<p><a href=\"http:\/\/ios.xamarin.com\/\">Monotouch<\/a> is a powerful tool to create native iOS (iPhone\/iPad\/iPod) apps written in C# backed by (a native version of) the .net framework. I have been using it for some time now to my great satisfaction. Learning Monotouch was a somewhat bumpy road. The native language for iOS is objective C and the majority of the resources on iOS development use that language. Objective C is on itself not a bad language at all. But the syntax is somewhat awkward and the philosophy differs enough from C# to make the learning curve for us .net-ers rather steep.<\/p>\n<p>There are a lot of resources on the web on Monotouch, a lot with practical hands on examples. They do learn you how to build working (and appstore accepted apps) but not many of them spend any attention on the background or architecture of iOS. Making it hard to understand all Objective C resources, even having learned the syntax.<\/p>\n<p><a href=\"http:\/\/www.informit.com\/store\/product.aspx?isbn=0321719921\">Learning Monotouch<\/a> \u201cA hand-On Guide to Building iOS Applications with C# and .NET\u201d, by <a href=\"http:\/\/mikebluestein.wordpress.com\/\">Michael Bluestein<\/a> ,\u00a0 is the book I wish I had had when I started working with Monotouch.<\/p>\n<p><a href=\"http:\/\/codebetter.com\/petervanooijen\/files\/2011\/09\/LM.png\"><img alt=\"LM\" border=\"0\" height=\"608\" src=\"http:\/\/codebetter.com\/petervanooijen\/files\/2011\/09\/LM_thumb.png\" style=\"margin: 0px 0px 24px; padding-left: 0px; padding-right: 0px; padding-top: 0px; border: 0px;\" width=\"466\" \/><\/a><\/p>\n<p>The book is a hands-on guide, everything is explained in clear example apps. In the first chapters the same app is demonstrated in XCODE-Objective C (Apple\u2019s tools)and in Monotouch. Doing so it both explains the architecture of an iOS app and explains the way Monotouch handles that. In case you are already working with Monotouch: do get this book and do not skip these first chapters. Besides a better understanding of your apps Michael also spends a lot of attention to the details, there is a lot of quality to be won in fine tuning the result of the default app template.<\/p>\n<p>The book assumes you are familiar with C#, lambda expressions and extension functions are used without introduction. Those things show how good an idea Monotouch is, these are powerful language features not offered by objective C. The book also assumes you are familiar with the .Net framework. Parts are used throughout the chapters. \u201cOur\u201d framework really has more to offer than the native Apple tools, especially when it comes to webservice clients and xml.<\/p>\n<p>The components which make up iOS, visual and non visual, are wrapped up by Monotouch in C# classes. In a number of chapters all pass the revue, ranging from views to the music player. Tables and navigation get a chapter of their own, they are the backbone of almost any iOS app. Thank goodness Michael does start a navigation app with the default windowed app template. Xcode (and thus Monotouch) has a template for a navigation based app, my experience with that is not that good. The way Michael treats navigation in an app works completely outshines all I have ever found so far on the subject. Working through it results in an app that is easy to understand, well integrated and is guarded against common problems. Like popping to a view which has unintended been garbage collected in the mean time. Leading to a blank screen, many an app (including mine..) can suffer from this behavior. Having worked through this chapter I now know how to (really) solve this.<\/p>\n<p>Monotouch and Michael\u2019s coverage don\u2019 stop with of-the shelf components. You can also do hard core bare graphics and animations yourself, the chapter \u201cGraphics and Animations\u201d provide a good start for that. Locations (using GPS) and a chapter on Google Maps using the MapKit follow. Again all very clear and complete containing the essential secrets like how to keep recording location data when your apps switches to the background. Again, this is the book I should have had when I started <img alt=\"Smile\" class=\"wlEmoticon wlEmoticon-smile\" src=\"http:\/\/codebetter.com\/petervanooijen\/files\/2011\/09\/wlEmoticon-smile.png\" style=\"margin: 0px 0px 24px; border-style: none;\" \/><\/p>\n<p>A whole chapter is spent on connecting to webservices. SOAP style as well as REST style. Here the .net framework shines again. Networking has a chapter of its own. Which treats the iOS GameKit, which turns out to be a complete peer to peer networking API, and Bonjour, Apple\u2019s networking infrastructure API. In a demo app a client-server scenario, using two iOS devices (!). is demonstrated.<\/p>\n<p>Storage has a chapter of its own. Which describe how to work with app settings (like app.config in .net) and SQLite. SQLlite is not a part of iOS itself, it\u2019s a third party open source database. Using that, will give your app ADO.NET style database access. The nice thing is that several apps can share one and the same database file, a good way to reach out of your app\u2019s sandbox.<\/p>\n<p>A final chapter is spent on the iPad. Having a larger screen it offers specific\u00a0 components to fully utilize that. Michael covers these components and explains how to make your app device aware, with specific screens for iPhone and for iPad.<\/p>\n<p>The book is not about cross-platform development. Monotouch is not a tool for a straightforward port of a Windows phone or MonoDroid (C# for Android) app. Such a tool does not exist, simply because these platforms are different. They are different in the way an user works with apps, they are different in how the user expects the apps to behave. Windows Phone has the Metro interface, which works different as navigating through tables as an iPhone user is used to. You cannot port that, you have to rethink your UI. What can be ported is the non-visual part of the app, where the business logic should be. These parts can be ported, Michael does spend some writing on that, though not that much. Needless to say a good architecture pays of and is beyond the scope of this book.<\/p>\n<p>Some words on the style of the book. It is a hands-on book where your teacher is talking to you, using words like \u201cLet\u2019s create an app\u201d and recipe style fragments. This is a way of writing I do appreciate being \u201cguilty\u201d of doing it myself too. But feedback I received, both from readers and editors, indicates that not everybody does favor it.<\/p>\n<p>To conclude: I can only be lyrical about this book. Once more: I wish I had read it last year. In case you do anything with iOS and .net, just get it. In case you don\u2019t do anything with iOS yet, get it too and expend your C#\/.net skills. I hope my walkthrough\u00a0 of the book, and thus of the platform has hinted at the richness of iOS. Let Michael enlighten you to bring it more great apps.<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/GAoORHmbYxw\" width=\"1\" \/>", "datetime": "2011-09-04T18:51:16", "id": "http:\/\/codebetter.com\/petervanooijen\/2011\/09\/04\/book-review-learning-monotouch-by-michael-bluestein\/", "categories": [], "metadata": {"guid": "2ede3c58-127c-4017-af98-5e7dce04e394", "likes": 0, "is_published": false}}], {}]"
09-10 23:35 SocketClient INFO     Received from service: "true"
09-10 23:35 SocketClient INFO     Returning(as str): 'true'
09-10 23:35 root         INFO     Handling CGI request.
09-10 23:35 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:35 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Technically, It's Creative!", "url": "http:\/\/strongmanimator.blogspot.com\/2011\/09\/technically-its-creative.html", "author": "anim8d (timborrelli@gmail.com)", "summary": "<span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><\/span><br \/><span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-", "html": "<span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><\/span><br \/><span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><em>This blog was cross-posted <a href=\"http:\/\/altdevblogaday.com\/2011\/09\/05\/technically-its-creative\/\">here<\/a>.<\/em><\/span><br \/><br \/><span class=\"Apple-style-span\">While waiting for a reply to my open letter from a few weeks ago (I still haven\u2019t heard back from you, Andy<span class=\"Apple-style-span\" style=\"font-family: inherit;\">!), I&nbsp;<\/span><\/span><span class=\"Apple-style-span\" style=\"font-family: inherit; line-height: 19px;\">gave a talk <\/span><span class=\"Apple-style-span\"><span class=\"Apple-style-span\" style=\"font-family: inherit;\">at PAXDev<\/span> regarding how to animate quickly for design, which contained both creative and technical approaches to game animation. After the talk, I received an email asking two things:<\/span><br \/><br \/><div style=\"padding-left: 30px;\">&nbsp;\u201cHow do I get into video game animation? I've always found animation to be a very interesting discipline. The problem is that I'm not even sure where to begin training for such a thing.\u201d<\/div>And:<br \/><br \/><div style=\"padding-left: 30px;\">\u201cIs animation more technical than artistic, or is it the other way around?\u201d<\/div><div style=\"padding-left: 30px;\"><br \/><\/div>The first question is something I am asked often, and am glad to help with. I responded to the inquiry with this:<br \/><br \/><div style=\"padding-left: 30px;\">\u201cThe first thing to do is learn the basics- read up on the 12 Principles of Animation (read The Illusion of Life- it's the animation holy bible). If you can draw, you could start doing the basic animation tests (bouncing ball, flour sack, etc.) that way w\/o needing to buy Max or Maya (though both have 30 day trials!) I've seen far too many beginners jump right in with a walk cycle and not be able to take or understand critique on their work because they don't understand the principles and the vocabulary.<\/div><div style=\"padding-left: 30px;\"><br \/><\/div><div style=\"padding-left: 30px;\">http:\/\/www.11secondclub.com\/forum\/ is a great place to share animation, as well, once you feel comfortable with it. Online schools like http:\/\/www.animationmentor.com\/ and http:\/\/ianimate.net\/ are good, but they are not cheap.<\/div><div style=\"padding-left: 30px;\"><br \/><\/div><div style=\"padding-left: 30px;\">Also, watch movies! Watch old WB classics, watch Disney, Pixar, and study the animation. If you see something cool, rewind and step through frame by frame to see what they did. Deconstructing the masters is a great teaching tool.\u201d<\/div><div style=\"padding-left: 30px;\"><br \/><\/div>However, second part really made me think. Is animation more technical than artistic, or is it the other way around?<br \/><br \/>The easy answer to this very good question is \u201cyes.\u201d Game animation is both creative AND technical. Animation is creative by nature-we\u2019re figuring out timing of our motions, developing poses that communicate emotion and intent to the player, and ultimately, we\u2019re delivering the look and feel that design wants. In all, we are breathing life into our characters!<br \/><br \/><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: right;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/master-thespian-jon-lovitz-500x378.jpg\" style=\"clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-15728\" height=\"378\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/master-thespian-jon-lovitz-500x378.jpg\" style=\"border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"500\" \/><\/a><\/td><\/tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Nah, we're just painting pixels, really<\/td><\/tr><\/tbody><\/table><br \/>However, it helps if you have some proficiency with understanding the technical side of things (though I\u2019m not talking about rigging and other technical animation specialties - those have their own discipline separate from animation). In some engines, your timing in that walk cycle needs to match the timing for the rest of your walk cycles so it blends properly, or your footstep events need to be setup so time-scale blending to your run cycle works properly. In other engines, your poses need to be setup so that they makes sense against other poses they will blend to, unless you want to create countless 3 to 6 frame transition animations.<br \/><br \/>And you better know what state machines and blendtrees are. If you know how to build them, that\u2019s a big advantage. Know a little scripting? That\u2019s even better.<br \/><div class=\"mceTemp mceIEcenter\" style=\"text-align: center;\"><br \/><dl class=\"wp-caption aligncenter\" id=\"attachment_15733\" style=\"background-color: #f3f3f3; border-bottom-color: rgb(221, 221, 221); border-bottom-left-radius: 3px 3px; border-bottom-right-radius: 3px 3px; border-bottom-style: solid; border-bottom-width: 1px; border-left-color: rgb(221, 221, 221); border-left-style: solid; border-left-width: 1px; border-right-color: rgb(221, 221, 221); border-right-style: solid; border-right-width: 1px; border-top-color: rgb(221, 221, 221); border-top-left-radius: 3px 3px; border-top-right-radius: 3px 3px; border-top-style: solid; border-top-width: 1px; display: block; margin-bottom: 10px; margin-left: auto; margin-right: auto; margin-top: 10px; padding-top: 4px; text-align: center; width: 310px;\"><dt class=\"wp-caption-dt\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/basic_state_flow-300x107.png\"><img alt=\"\" class=\"size-full wp-image-15733\" height=\"107\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/basic_state_flow-300x107.png\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"300\" \/><\/a><\/dt><dd class=\"wp-caption-dd\" style=\"font-size: 11px; line-height: 17px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 5px; padding-left: 4px; padding-right: 4px; padding-top: 0px;\">Oh hey, I can handle that!<\/dd><\/dl><\/div>This begs the question, however, of where exactly the line drawn is between the two, and how important it is as an animator to BE technically trained. Sure, you can create the best looking run cycle in the history of run cycles, but how does it work with animation layers in-game, how does it transition, and does it hold up to speed changes?<br \/><br \/>Or does it really matter? Who\u2019s to say that a game animator NEEDS to build those blendtrees? Or that they have to understand how to set up an IK chain in-engine? Or know how the aiming system works?<br \/><br \/>In my opinion, animators will be far more successful if they have that knowledge.<br \/><br \/>I don't expect them to have it right off the bat, mind you. Entry level folks should be concentrating on creating good motion and letting their leads dictate the technical details. I also don't think it's a requirement to know scripting or understand how to build a complex state machine in order to be a successful game animator.<br \/><br \/><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: left;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/havokbehaviortool.jpg\" style=\"clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-15734\" height=\"244\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/havokbehaviortool.jpg\" style=\"border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-width: 0px; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"400\" \/><\/a><\/td><\/tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">SWEET JEBUS THIS IS BEYOND ME HALPS!<\/td><\/tr><\/tbody><\/table><br \/>However, those animators at any level should be learning WHY those technical details exist. Why a pose needs to be oriented one way or the other, or how their motions will be used in game and why it works that way. They should know what scripting can do for them, at the least so they can request a tool from a tech artist. All the while, continuing to hone the creative side of their craft, in order to become the best game animator possible.<br \/><br \/>Marrying the creative side of animation with the technical side makes an animator even MORE creative. For example, on a project early in my career, I was tasked with giving the attack animations of a character \u201cmore flair.\u201d This was all the direction I was given from my offsite corporate producer. I worked for weeks on just adjusting and presenting the animations with no success. By shear \u201che was a close friend\u201d luck, I spoke with the VFX artist on the project on how we could push the attack animations further. He told me that I could attach VFX to my animations! I immediately added ridiculously exaggerated spinning weapon movements to the attacks, and worked with that VFX artist to create trails for the weapons. We hooked it up in game, showed it to our producer a week later and he exclaimed \u201cthat\u2019s it!\u201d Had I not known about that ability to tie VFX to an animation, I may never have succeeded in bringing my producer\u2019s vision to life.<br \/><br \/><div class=\"separator\" style=\"clear: both; text-align: center;\"><\/div><div style=\"text-align: center;\">(at 3:16) More flair, Taurgis, MORE FLAIR! :)<\/div><br \/>Understanding what happens after your animation is done and makes its way into the game will allow an animator to devise new and interesting ways to make a character move. It also allows them to do it more efficiently, leaving more time for polishing animation or sneaking in that fidget animation that everyone keeps saying they should do.<br \/><br \/>Understanding both sides also creates the opportunity to be creative with the most tedious, technical animations, like those aforementioned transition animations. Mike Jungbluth does an excellent job discussing how to inject more character into those animations in <a href=\"http:\/\/altdevblogaday.com\/2011\/04\/10\/growing-game-animation-transitions-player-input\/\">a separate post<\/a>.&nbsp;By not treating those animations as a technical requirement and instead as an opportunity to communicate a character\u2019s personality, they become a creative necessity, not a technical one.<br \/><br \/>Use of motion capture is another opportunity to push beyond the technical. If treated like nothing more than technical data, the motion will stay as it was captured, and the performance delivered will fall short, no matter how good the actor (and we all know my opinion on THAT). Inject the creativity of an animator, and you have the opportunity to punch out poses, adjust timing for bigger impact, and even change shots after the fact. Yes, this opens up the <a href=\"http:\/\/www.motivesinmovement.com\/blog\/2011\/09\/who-owns-the-pixel-digital-rights-and-performance\/\">\"ownership\" debate<\/a>,&nbsp;but it\u2019s the end result that matters. It\u2019s important to remember that it\u2019s a creative, collaborative effort, and not a technical hurdle that gets in the way of a performance.<br \/><br \/><div class=\"separator\" style=\"clear: both; text-align: center;\"><\/div><div style=\"text-align: center;\">Well, usually. :)<\/div><br \/>In the end, it\u2019s best to approach both the creative and technical sides as wholly creative. The technical side varies from studio to studio, engine to engine, and it's ultimately a teachable process. The creative part comes from you, and you take that to whatever studio you work at and use it in whatever engine you work with.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/4248341596629159263-8977062883261323042?l=strongmanimator.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-09-05T11:54:41.522000", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-8977062883261323042", "categories": [], "metadata": {"guid": "71687686-b4d8-4dbb-a350-c41a12681052", "likes": 0, "is_published": false}}], {}]"
09-10 23:35 SocketClient INFO     Received from service: "true"
09-10 23:35 SocketClient INFO     Returning(as str): 'true'
09-10 23:35 root         INFO     Handling CGI request.
09-10 23:35 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:35 SocketClient INFO     Sending to service: "["publish_content", [{"title": "The .Net community and the negative view on assembly references", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/PDwLESDJLv8\/", "author": "Dru Sellers", "summary": "Why is it that we abhor large numbers of references in our .Net projects? Beyond the obvious that is (I don&#8217;t care about start up time, or any other performance hogwash). It seems that early in my career I thought&#160;&#8230; <a href=\"http:\/\/codebetter.com\/drusellers\/2011\/09\/05\/the-net-commun", "html": "<p>Why is it that we abhor large numbers of references in our .Net projects? Beyond the obvious that is (I don&#8217;t care about start up time, or any other performance hogwash). It seems that early in my career I thought 10 assembly references was absurd, now that number is MUCH higher (almost without limit) but this view is intensely not the view held by the larger .net community. I take a look at other communities outside of .net and see people doing a much better job of pulling together a multitude of libraries to construct even simple sites versus the vast majority of .net projects I have seen that seem to go out of their way to avoid a dependency hit. Not to mention the enterprise projects that build massive systems and taking no more dependencies than exist in the BCL.<\/p>\n<p>This bias of not wanting to import a larger number of references has impacted the way I design my .net code, and I am not sure I would do the same if I were in another language. For instance, I have a library called Magnum that is a junk drawer of functionality for my other projects. Every now and then someone will see the reference in another project and will go take a look at it. To there surprise, it contains a vast and deep amount of code that could be very useful to them. But to import it means to import a LOT of stuff. Why don&#8217;t I break up this codebase? Because of my negative view on assembly references. &#8220;Le sigh.&#8221; Should I just start splitting things up more? How does this splintering of Magnum effect other things?<\/p>\n<p>A part of me wonders if this isn&#8217;t caused by the same effects of &#8216;The Tale of J. Random Newbie&#8217; in the Art of Unix Programming pg 415. Go read the 4 pages or so. I will wait.<\/p>\n<p><a href=\"http:\/\/catb.org\/esr\/writings\/taoup\/html\/graphics\/taoup.pdf\">The Art of Unix Programming<\/a><\/p>\n<p>It would not surprise me if the lack of OSS experience and transparency in the large part of the .Net community isn&#8217;t responsible for this.<\/p>\n<p>Of course, I can&#8217;t, in practice, ignore the impacts of additional assembly references on the performance of my applications. Has anyone actually measured this?<\/p>\n<p>Thoughts?<\/p>\n<p>-d<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/PDwLESDJLv8\" width=\"1\" \/>", "datetime": "2011-09-05T19:43:43", "id": "http:\/\/codebetter.com\/drusellers\/?p=163", "categories": [], "metadata": {"guid": "08ba5c3f-7aba-4f7e-8370-282000bf52d6", "likes": 0, "is_published": false}}], {}]"
09-10 23:35 SocketClient INFO     Received from service: "true"
09-10 23:35 SocketClient INFO     Returning(as str): 'true'
09-10 23:35 root         INFO     Handling CGI request.
09-10 23:35 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:35 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Python software metrics- my first useful OS project?", "url": "http:\/\/www.robg3d.com\/?p=764", "author": "Rob Galanakis", "summary": "I&#8217;ve tried to open-source code quite a few times, but the projects have been niche enough that they haven&#8217;t been very useful. \u00a0Well, I finally\u00a0have something universally useful. I&#8217;ve take an interest in code metrics recently (as documented on this blog) and I have been quite upset ", "html": "<p>I&#8217;ve tried to open-source code quite a few times, but the projects have been niche enough that they haven&#8217;t been very useful. \u00a0Well, I <em>finally<\/em>\u00a0have something universally useful.<\/p>\n<p>I&#8217;ve take an interest in code metrics recently (as documented on this blog) and I have been quite upset to learn that there are few good tools for measuring them in Python code. \u00a0PyLint and PyChecker and the like are not what I&#8217;m talking about- I want dependency graphs, measure of cyclomatic complexity, automatic coverage analysis, etc.<\/p>\n<p>So basically what I&#8217;m doing is creating a framework that wraps a bunch of existing functionality into an easy-to-use system, and expands or refactors it where necessary. \u00a0My goal is to make it a &#8216;drop in&#8217; system to it will be trivial to get thorough code metrics for your codebase (similar to how simple it is to do in Visual Studio).<\/p>\n<p>Right now I&#8217;ve created a SLOC (Source Lines of Code) generater, a wrapper for nose and coverage, and hooked it up to pygenie to measure Cyclomatic Complexity- which is unfortunately going to need a significant refactoring, so I won&#8217;t be able to fork it directly. \u00a0I&#8217;ll be hooking it up into our automated test framework at work this week as well for some battle testing. \u00a0I&#8217;m 100% sure there&#8217;s a good deal of extensibility and configuration adjustments I&#8217;ll need to make to support alternative setups. \u00a0Next up will be automatic generation of dependency graphs (which doesn&#8217;t look easy at all, unfortunately). \u00a0And writing tests (this is the first project that I didn&#8217;t sort-of-TDD in a while). \u00a0Oh, and getting it into Google Code.<\/p>\n<p>Is this something you guys can see hooking into your codebases? \u00a0Do you see the value of and want to find out metrics of your codebases?<\/p>\n<p>Oh and it&#8217;s tentatively called &#8216;pynocle&#8217;, if you have a better name I&#8217;d love to hear it.<\/p>", "datetime": "2011-09-06T03:59:48", "id": "http:\/\/www.robg3d.com\/?p=764", "categories": [], "metadata": {"guid": "f9380a24-09be-4116-9149-6105d90d8609", "likes": 0, "is_published": false}}], {}]"
09-10 23:35 SocketClient INFO     Received from service: "true"
09-10 23:35 SocketClient INFO     Returning(as str): 'true'
09-10 23:35 root         INFO     Handling CGI request.
09-10 23:35 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:35 SocketClient INFO     Sending to service: "["publish_content", [{"title": "iDev Listener \u2013 Control objects with iPhone", "url": "http:\/\/dimensao3.com\/al\/?p=552", "author": "Artur Le\u00e3o", "summary": "Hey guys, I had something on my mind for some time now and yesterday I decided to create a proof of concept and it worked! The video is nothing special, I&#8217;ll try posting one later where you see the iPhone and viewport at the same time but I can tell you something, it&#8217;s REALLY cool [...]", "html": "<div class=\"alignleft\"><p><a href=\"http:\/\/dimensao3.com\/al\/?p=552\"><em>Click here to view the embedded video.<\/em><\/a><\/p><\/div>\n<p>Hey guys, I had something on my mind for some time now and yesterday I decided to create a proof of concept and it worked!<br \/>\nThe video is nothing special, I&#8217;ll try posting one later where you see the iPhone and viewport at the same time but I can tell you something, it&#8217;s REALLY cool to control the camera with the iPhone<br \/>\nAs I&#8217;ve said before, this is only a proof of concept and I&#8217;ll start working on the movements and later on on capturing and keyframing the data, but that&#8217;s later on.<\/p>\n<p>In the video it&#8217;s a bit (a lot) slow, but that&#8217;s because my laptop is shit and the screen capture software didn&#8217;t help, also outputing to the listener makes it even slower.<\/p>\n<p>Hope you like it, cheers!<\/p>\n<p>Oh yeah&#8230; for 3dsmax of course <img alt=\":D\" class=\"wp-smiley\" src=\"http:\/\/dimensao3.com\/wptest\/wp-includes\/images\/smilies\/icon_biggrin.gif\" \/> <\/p>", "datetime": "2011-09-06T10:18:10", "id": "http:\/\/dimensao3.com\/al\/?p=552", "categories": [], "metadata": {"guid": "528a8a68-8643-4391-bd39-23021e6b3170", "likes": 0, "is_published": false}}], {}]"
09-10 23:35 SocketClient INFO     Received from service: "true"
09-10 23:35 SocketClient INFO     Returning(as str): 'true'
09-10 23:35 root         INFO     Handling CGI request.
09-10 23:35 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:35 SocketClient INFO     Sending to service: "["publish_content", [{"title": "iDev Listener \u2013 Another video", "url": "http:\/\/dimensao3.com\/al\/?p=556", "author": "Artur Le\u00e3o", "summary": "Another video&#8230; just doing some major advertising to my Autodesk cover&#8230;. well AUTODESK I need a new workstation you know&#8230;. Remember, still early development, it has some lag on my laptop but it works fine on my workstation at work.", "html": "<div class=\"alignleft\"><p><a href=\"http:\/\/dimensao3.com\/al\/?p=556\"><em>Click here to view the embedded video.<\/em><\/a><\/p><\/div>\n<p>Another video&#8230; just doing some major advertising to my Autodesk cover&#8230;. well AUTODESK I need a new workstation you know&#8230;. <img alt=\":P\" class=\"wp-smiley\" src=\"http:\/\/dimensao3.com\/wptest\/wp-includes\/images\/smilies\/icon_razz.gif\" \/> <\/p>\n<p>Remember, still early development, it has some lag on my laptop but it works fine on my workstation at work.<\/p>", "datetime": "2011-09-06T19:28:55", "id": "http:\/\/dimensao3.com\/al\/?p=556", "categories": [], "metadata": {"guid": "18265d1a-2d29-4bfb-8e3f-ffe7eeedd513", "likes": 0, "is_published": false}}], {}]"
09-10 23:36 SocketClient INFO     Received from service: "true"
09-10 23:36 SocketClient INFO     Returning(as str): 'true'
09-10 23:36 root         INFO     Handling CGI request.
09-10 23:36 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-10 23:36 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Coast to Coast!  Blue Sky here I come!", "url": "http:\/\/www.jonasavrin.com\/2011\/09\/08\/coast-to-coast-blue-sky-here-i-come\/", "author": "Jonas Avrin", "summary": "Done! \u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \u00a0It&#8217;s everything I could ask for in an employer and more. Don&#8217;t think that it", "html": "<div class=\"wp-caption aligncenter\" id=\"attachment_2890\" style=\"width: 310px;\"><a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/09\/scrat_cont_crackup.jpg\" rel=\"lightbox[2889]\"><img alt=\"Scrat Continental Crackup\" class=\"size-medium wp-image-2890 \" height=\"127\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/09\/scrat_cont_crackup-300x127.jpg\" title=\"scrat_cont_crackup\" width=\"300\" \/><\/a><p class=\"wp-caption-text\">How I've felt for so long about working in VFX\/Anim industry.<\/p><\/div>\n<div class=\"wp-caption aligncenter\" id=\"attachment_2891\" style=\"width: 310px;\"><a href=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/09\/ice_age_continental_drift.jpg\" rel=\"lightbox[2889]\"><img alt=\"Ice Age: Continental Drift\" class=\"size-medium wp-image-2891 \" height=\"127\" src=\"http:\/\/www.jonasavrin.com\/wp-content\/uploads\/2011\/09\/ice_age_continental_drift-300x127.jpg\" title=\"ice_age_continental_drift\" width=\"300\" \/><\/a><p class=\"wp-caption-text\">My first project<\/p><\/div>\n<p>Done! \u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \u00a0It&#8217;s everything I could ask for in an employer and more.<\/p>\n<p>Don&#8217;t think that it&#8217;s going to stop me from being active on my blog though, quite the opposite! \u00a0Well, maybe the first month or two starting now there will be a pause, but after that it will increase. \u00a0I&#8217;m super excited to learn and share knowledge with people and stay really connected and dedicated to innovating personal and industry wide workflows, tech, and of course animation. \u00a0Technical animation and tech art to be specific is what I&#8217;ll be working on in the coming months, same as usual.<\/p>\n<p>Thanks to everyone that&#8217;s been involved in the process of landing this, you know who you are! \u00a0I don&#8217;t think they know yet what a valuable asset they just\u00a0acquired but soon they will find out just how serious I am about the work I do and how inspired I can be!<\/p>\n<div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http:\/\/static.evernote.com\/article-clipper-remember.png\" \/>\n\t\t\t\t<\/a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;<\/div>\n<\/div>", "datetime": "2011-09-08T18:27:29", "id": "http:\/\/www.jonasavrin.com\/?p=2889", "categories": [], "metadata": {"guid": "af6033e3-25e1-4153-9754-83f7548bd986", "likes": 0, "is_published": false}}], {}]"
09-10 23:36 SocketClient INFO     Received from service: "true"
09-10 23:36 SocketClient INFO     Returning(as str): 'true'
09-15 23:21 root         INFO     Handling CGI request.
09-15 23:21 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-15 23:21 SocketClient INFO     Sending to service: "["downloadedcontent_count", [], {}]"
09-15 23:23 SocketClient INFO     Received from service: "964"
09-15 23:23 SocketClient INFO     Returning(as str): '964'
09-15 23:23 root         INFO     Handling CGI request.
09-15 23:23 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-15 23:23 SocketClient INFO     Sending to service: "["request_content_slice", [0, 15], {}]"
09-15 23:23 SocketClient INFO     Received from service: "[{"author": "johnvpetersen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/RTZI-UVm0y0/", "title": "Thanks to CodeBetter for having me aboard!!", "datetime": "2011-09-15T16:46:20", "html": "<p>I have moved my blog from Los Techies and am looking forward to participating in the CodeBetter Community! I&#8217;ve long been a follower of CodeBetter and have cited many posts here in my never ending quest to be a better software developer. Recently, I joined Scott Hanselman, Jon Galloway and Peter Mourfield as part of the core team that maintains the NerdDinner Project. As part of those efforts, we were graciously invited by Hadi Hariri to host the project on CodeBetter&#8217;s TeamCity CI server.</p>\n<p>I&#8217;ve very much enjoyed my time at Los Techies and am glad to count many of the bloggers there as good\u00a0friends. I&#8217;m grateful for being considered an honorary member of the group I affectionately call the &#8220;Austin Tech Mafia&#8221;!</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/RTZI-UVm0y0\" width=\"1\" />", "summary": "I have moved my blog from Los Techies and am looking forward to participating in the CodeBetter Community! I&#8217;ve long been a follower of CodeBetter and have cited many posts here in my never ending quest to be a better&#160;&#8230; <a href=\"http://codebetter.com/johnpetersen/2011/09/15/thanks-t", "id": "http://codebetter.com/johnpetersen/?p=64", "categories": [], "metadata": {"guid": "ecd8a378-ab96-47bb-ba00-0e5b78e1529b", "likes": 0, "is_published": false}}, {"author": "Patrick Smacchia", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/hWyLXx0fryc/", "title": "A first glance at Visual Studio vNext (dev11)", "datetime": "2011-09-15T14:12:59", "html": "<p>In case you are not aware, <a href=\"http://blogs.msdn.com/b/jasonz/archive/2011/09/14/announcing-visual-studio-11-developer-preview.aspx\" target=\"_blank\">a <em>developer preview</em> version of Visual Studio vNext has been released yesterday</a>. I just played an hour with it and it seems that <strong>performances are finally here</strong>! The same way I skipped Vista to jump from XP to <em>Wnd7 that I love</em>, I am (as much as I can) skipping VS2010 and I&#8217;ll jump from VS2008 to <em>VS2012 that I&#8217;ll hopefully love</em>. A few random notes:</p>\n<p>The startup time is damn fast, on a pretty large 50K <em>lines of code</em> VS solution: 4 seconds, and I am ready to type!</p>\n<p>The solution explorer (derived from VS2010 power tools) just rocks.</p>\n<p>The Ctrl+I search/replace in file rocks as well.</p>\n<p>The main button menu now just contains 7 buttons per default, and of course you can configure it by adding your preferred buttons.</p>\n<p>The find code duplicate is somewhat slow, 5 minutes on my 50K LoC, and didn&#8217;t give me any relevant result. But honestly the solution analyzed shouldn&#8217;t contain any duplicate and being slow is not so much an issue since it is not meant to be run at every build.</p>\n<p>The Ctrl+Alt+E exception dialog takes 2 seconds to open compared to 6 seconds with VS2010 and 4 seconds with VS 2008.</p>\n<p>The architecture explorer graph seems even slower than in VS 2010, and the\u00a0 embryo of dependency matrix seems to have been discarded. This is a good news for my business, <a href=\"http://www.ndepend.com/Doc_VS_Arch.aspx\" target=\"_blank\">generating a graph with NDepend</a> is instantaneous in most situations, and it is a matter of dozens of seconds to minutes with VS 2010 and 2012.</p>\n<p>The product contains many minor bugs, which is normal at a pre-beta stage.</p>\n<p>The install process is still super slow (&gt; an hour on my fast SSD laptop). I wish VS features could be grain-partitioned (Wnd8 tools, TFS, SQL-tools, F# tools, Game dev tools, Web dev tools&#8230;). The minimal installation takes more than 8GB on hard-drive!</p>\n<p>I didn&#8217;t test all the Wnd8/WPF/ASP.NET/WCF fancy new features, since I won&#8217;t develop with these until VS vNextNextNext is released! I believe I am like many real-world developers, developing an existing product that depends on a well defined set of <em>not so new</em> technologies, yet still passionated about what&#8217;s next. What really matters to developers in my situation, is to get bonus on what I am already using today (performance, solution explorer, quick search, code clone&#8230;) and VS 2012 seems to offer many of these bonus!</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/hWyLXx0fryc\" width=\"1\" />", "summary": "In case you are not aware, a developer preview version of Visual Studio vNext has been released yesterday. I just played an hour with it and it seems that performances are finally here! The same way I skipped Vista to&#160;&#8230; <a href=\"http://codebetter.com/patricksmacchia/2011/09/15/a-first-gla", "id": "http://codebetter.com/patricksmacchia/?p=370", "categories": [], "metadata": {"guid": "2bda21ae-6134-4cc7-a08f-9d88d358dbb7", "likes": 0, "is_published": false}}, {"author": "Howard Dierking", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/ISFFbcTq8Vw/", "title": "Web API Preview 5 Is Now Available", "datetime": "2011-09-15T00:41:09", "html": "<p>Today, <a href=\"http://codebetter.com/glennblock/\">Glenn</a> is announcing at the <a href=\"http://www.buildwindows.com/\">BUILD conference</a> that <a href=\"http://wcf.codeplex.com/releases/view/73399\">Web API preview 5</a> is available both on <a href=\"http://wcf.codeplex.com/\">CodePlex</a> and <a href=\"http://nuget.org/\">Nuget</a>.&nbsp; If you\u2019ve been following the project for while, you\u2019ll note that we went through a dry spell there for a while regarding updates.&nbsp; This was due primarily to the level of manual effort involved in updating our bits.&nbsp; Fortunately, we <a href=\"http://codebetter.com/howarddierking/2011/09/11/one-of-the-small-costs-of-transparency/\">recently automated away all of that manual effort</a> and are excited to get you new bits (and excited about getting bits to you much more frequently going forward). Here is a high level list of what you can expect to see in preview 5 as well as some notable changes.</p>\n<h2>New Features/Enhancements</h2>\n<ul>\n<li>OData Formatter\n<li>Dependency refactoring from host common code\n<li>Support for Batch with mime/mixed content where every part has a Get request\n<li>Web API code-based configuration (simplifications)\n<li>Web-based test client for WCF Web API\n<li>Http File upload\n<li>Refactored formatters\n<li>Better IoC support\n<li>Additional samples for specific features such as file upload\n<li>Content negotiation now supports qualifiers\n<li>ActionOfStreamContent \u2013 Enables accessing the raw content stream </li>\n</ul>\n<h2>New Prototype Features (on WebAPI-Prototype branch)</h2>\n<ul>\n<li>WebApiConfiguration includes conventions for WebGet/WebInvoke\n<li>WebApiRoute provides better side by side integration with MVC routes\n<li>MapServiceRoute extension method simplified registration and usage of WebApiConfiguration\n<li>SetDefaultHttpConfiguration / GetDefaultHttpConfiguration extension methods enable the getting and setting of a global configuration object that will be used by default by MapServiceRoute unless a specific one is provided\n<li>MediaTypeFormatterCollectionExtensions.AddRange enables a more compact way to add formatters\n<li>FormUrlEncodingMediaTypeFormatter\n<li>Task&lt;T&gt; for Web API operations and sample </li>\n</ul>\n<h2>Breaking Changes</h2>\n<ul>\n<li>DelegatingChannel renamed to DelegatingHandler\n<li>HttpChannel renamed to HttpMessageHandler\n<li>FormUrlEncodingMediaTypeFormatter and JsonValueMediaTypeFormatter were moved from the default branch to the WebAPI-Prototype branch as they are not currently part of the core product source\n<li>DelegatingHandler no longer require passing in a channel in the constructor making it more friendly to inversion of control (IoC) containers\n<li>New constructor overload on HttpMessageHandlerFactory overload which accepts a Func&lt;IEnumerable&lt;DelegatingHandler&gt;&gt; to allow user code or IoC containers to construct handlers.\n<li>IQueryable previously supported case-insensitive matches on operators. In the current drop we only will match on lowercase operators i.e. \u201c$top\u201d but not \u201c$Top\u201d. According to the spec this is correct behavior however we could relax it in the future. </li>\n</ul>\n<h2>Nuget</h2>\n<p>Like I mentioned above, preview 5 is also being released on Nuget today. Here\u2019s the breakdown of the Nuget packages that will be available:\n<ul>\n<li><strong>HttpClient</strong> \u2013 like it sounds, this gives you the HttpClient object model, which can be used by both the server and the client for a symmetric Http programming experience.\n<li><strong>JsonValue</strong> \u2013 Contains JsonValue api for typeless / dynamic access to Json.\n<li><strong>WebApi</strong> \u2013 The server-side object model for Web API\n<li><strong>WebApi.All</strong> \u2013 preserved for backwards compatibility; basically just pulls in everything.\n<li><strong>WebApi.Core</strong> \u2013 preserved for backwards compatibility; pulls in WebApi.0.5.0\n<li><strong>WebApi.Enhancements</strong> \u2013 gives you the Web API core product code plus the enhancements library (from the prototype branch)\n<li><strong>WebApi.OData</strong> \u2013 enables returning OData from a Web API. </li>\n</ul>\n<p>In addition to the core Nuget packages, we\u2019re also pushing up a set of symbol packages so that you can more easily debug through Web API source code.</p>\n<ul>\n<li>HttpClient.0.5.0.symbols.nupkg\n<li>JsonValue.0.5.0.symbols.nupkg\n<li>WebApi.0.5.0.symbols.nupkg\n<li>WebApi.Enhancements.0.5.0.symbols.nupkg\n<li>WebApi.OData.0.5.0.symbols.nupkg </li>\n</ul>\n<h2>Updated Content</h2>\n<p>In addition to updating the source code and binaries, we\u2019ve pushed up a more current set of <a href=\"http://wcf.codeplex.com/documentation\">getting started material</a>, including both information on getting started with the core product bits and information on getting started using the Http enhancements library on the prototype branch.&nbsp; There\u2019s even <a href=\"http://vimeo.com/28139763\">this video</a> on how to take advantage of our built-in test client.</p>\n<h2>Navigating Our CodePlex Repository \u2013 the WebAPI-Prototype branch</h2>\n<p>One thing that we wanted to improve with this push was a more clear view of what was product code and what was prototype or proof-of-concept code.&nbsp; Therefore, we created a &#8216;WebAPI-Prototype&#8217; branch and pulled all non-product code (which translates into all code that is not checked into our internal source control) out of the default branch and into the prototype branch.&nbsp; </p>\n<p><a href=\"http://codebetter.com/howarddierking/files/2011/09/clip_image001.jpg\"><img alt=\"clip_image001\" border=\"0\" height=\"197\" src=\"http://codebetter.com/howarddierking/files/2011/09/clip_image001_thumb.jpg\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"240\" /></a></p>\n<p>This structure provides 2 main benefits: </p>\n<ul>\n<li>As mentioned above, better transparency between supported product bits and proof-of-concept bits\n<li>By having the default branch be a reflection of our internal repository, we can update it much more frequently because we won&#8217;t have to account for any changes that would have happened outside of our internal repo.\n<p>One thing to note about the introduction of this branch is that samples currently live in the prototype branch \u2013 so if you want to use the samples as a way to get started building with Web API, you\u2019ll want to update to the prototype branch.&nbsp; That said, there are samples that exist in the &#8216;Tests/*/Scenarios&#8217; folders.&nbsp; For example, the Mime multipart sample can be found at <a href=\"http://wcf.codeplex.com/SourceControl/changeset/view/1e77229b0064#WCFWebApi%2fHttp%2fTest%2fMicrosoft.Net.Http.Formatting%2fScenarios%2fMimeMultipart%2fProgram.cs\">&#8216;Test\\Microsoft.Net.Http.Formatting\\Scenarios\\MimeMultipart&#8217;</a>.</p>\n</li>\n</ul>\n<p>As you can see, we\u2019ve added a lot of new goodness with preview 5 and are excited to have you test-drive the bits and let us know what you think.&nbsp; And again, now that we\u2019ve automated the process of getting our code pushed to CodePlex, expect to see updates coming regularly.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/ISFFbcTq8Vw\" width=\"1\" />", "summary": "Today, Glenn is announcing at the BUILD conference that Web API preview 5 is available both on CodePlex and Nuget.&#160; If you\u2019ve been following the project for while, you\u2019ll note that we went through a dry spell there for a&#160;&#8230; <a href=\"http://codebetter.com/howarddierking/2011/09/15/web-", "id": "http://codebetter.com/howarddierking/?p=146", "categories": [], "metadata": {"guid": "1178f0ef-3b8f-48d5-a407-c3bd62c293ff", "likes": 0, "is_published": false}}, {"author": "Sebastien Lambla", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/4MapDEElQYs/", "title": "Extending configuration in OpenRasta 2.1", "datetime": "2011-09-14T17:17:11", "html": "<p><em>[Updated to clarify what the configuration meta-model actually is.]</em></p>\n<p>The latest OpenRasta 2.1 code contains some changes that make extending the fluent API easier, and provide a supported way for you to write those extensions in a way that won\u2019t break with OpenRasta 3.0.</p>\n<h2>OpenRasta configuration meta-model</h2>\n<p>The one thing everyone knows about OpenRasta is it\u2019s resource-oriented fluent configuration API. What few people know is how it works behind the scene.</p>\n<p>Whenever you configure a resource, the fluent API creates a ResourceModel instance and stores it. Once all the configurations are done, a set of objects process those registrations to initialize OpenRasta itself, such as registering types in the container, mapping URIs or creating a list of codecs.</p>\n<p>Each of the configuration elements of OpenRasta is represented by one configuration object, and the set of all those configuration bits is what we call the configuration meta-model, and is stored in the IMetaModelRepository service.</p>\n<p>The astute reader will have noticed that in practice this means that the use of the fluent API is optional, and indeed the astute reader would be absolutely right.</p>\n<p>One of the things that was not easily doable in 2.0 was extending that meta-model by extending the existing fluent configuration API. Why would we want to do this? Let\u2019s take an example that will expose the whole stack of extension points in OpenRasta and add support for authentication at the configuration level.</p>\n<h2>Understanding the new extension points</h2>\n<p>A typical 2.x era configuration for a resource contains multiple chained methods, one per thing you want to configure for a resource.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">using</span><span style=\"color: #e0e0e0;\"> (</span><span style=\"color: #c2a0fa;\">OpenRastaConfiguration</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Manual</span><span style=\"color: #e0e0e0;\">)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #c2a0fa;\">ResourceSpace</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Has</span><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bdb76b;\">// IHas</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">ResourcesOfType</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">UserDocument</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\">()\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bdb76b;\">// IResource</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">AtUri</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #fa8072;\">&quot;/public/{filename}&quot;</span><span style=\"color: #e0e0e0;\">)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bdb76b;\">// IUri</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">HandledBy</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">UserDocumentHandler</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\">()\u00a0\u00a0\u00a0</span><span style=\"color: #bdb76b;\">// IHandler</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">AsXmlDataContract</span><span style=\"color: #e0e0e0;\">();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bdb76b;\">// ICodec</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></div>\n</p></div>\n</p></div>\n<p>The interfaces that you see on the right are new to 2.1 and are where the magic happens.</p>\n<p>Let\u2019s say we want to require authentication for any UserDocument resource. The recommended way to do this is to attach an extension method in your namespace and attach it to IResource.</p>\n<p>To prevent intellisense from showing a lot of rubbish on those interfaces, to gain access to the extensibility points of the configuration API you need to cast the instance you get to IXxxTarget. In our example, let\u2019s create a RequiresAuthentication method and add some metadata to that resource registration.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">static</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">class</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #c2a0fa;\">AuthenticationConfiguration</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">static</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #5391ee;\">T</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffc488;\">RequiresAuthentication</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #5391ee;\">T</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #00bfff;\">this</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #5391ee;\">T</span><span style=\"color: #e0e0e0;\"> root) </span><span style=\"color: #00bfff;\">where</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #5391ee;\">T</span><span style=\"color: #e0e0e0;\">:</span><span style=\"color: #71ffff;\">IResourceDefinition</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">var</span><span style=\"color: #e0e0e0;\"> target </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> root </span><span style=\"color: #00bfff;\">as</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #71ffff;\">IResourceTarget</span><span style=\"color: #e0e0e0;\">;</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0target</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Resource</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Properties</span><span style=\"color: #e0e0e0;\">[</span><span style=\"color: #fa8072;\">&quot;caffeineit.demos.fluentauth.enabled&quot;</span><span style=\"color: #e0e0e0;\">] </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">true</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">return</span><span style=\"color: #e0e0e0;\"> root;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0}</span></div>\n</p></div>\n</p></div>\n<p>The IResourceTarget interface contains about everything you need to add anything you want to the configuration model: the meta-model repository, the current resource registration and its list of URIs, Handlers and Codecs.</p>\n<p>Here we\u2019ve added some additional data to enable authentication that we need to process from somewhere else.</p>\n<h2>Platform-wide operation interceptors</h2>\n<p>The second extension point we\u2019ll use is the support for operation interceptors, which are small components that can interact and make decisions before your handler code gets called.</p>\n<p>You may have seen them being used in OpenRasta on a per-method basis, usually together with an attribute that creates them, such as [RequiresAuthentication] or [RequiresRole]</p>\n<p>Whenver a URI is matched by OpenRasta, it is associated with a <strong>resource key</strong>. This is the cornerstone of the OpenRasta model, as with a resource key we can find all handlers, URIs, codecs and anything else associated with the resource we have. We\u2019re going to be using this to get the information we\u2019ve added in our configuration.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">class</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00d2d2;\">FluentAuthenticationInterceptor</span><span style=\"color: #e0e0e0;\"> : </span><span style=\"color: #71ffff;\">IOperationInterceptor</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #71ffff;\">IMetaModelRepository</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #bfbfff;\">_configuration</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #71ffff;\">ICommunicationContext</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #bfbfff;\">_env</span><span style=\"color: #e0e0e0;\">;</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00d2d2;\">FluentAuthenticationInterceptor</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #71ffff;\">IMetaModelRepository</span><span style=\"color: #e0e0e0;\"> configuration, </span><span style=\"color: #71ffff;\">ICommunicationContext</span><span style=\"color: #e0e0e0;\"> env)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bfbfff;\">_configuration</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> configuration;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bfbfff;\">_env</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> env;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">bool</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffb7db;\">BeforeExecute</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #71ffff;\">IOperation</span><span style=\"color: #e0e0e0;\"> operation)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">var</span><span style=\"color: #e0e0e0;\"> currentResource </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #bfbfff;\">_env</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">PipelineData</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">ResourceKey</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">var</span><span style=\"color: #e0e0e0;\"> registration </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #bfbfff;\">_configuration</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">ResourceRegistrations</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">FirstOrDefault</span><span style=\"color: #e0e0e0;\">(x </span><span style=\"color: #a6a0e0;\">=&gt;</span><span style=\"color: #e0e0e0;\"> x</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">ResourceKey</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">==</span><span style=\"color: #e0e0e0;\"> currentResource);</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">object</span><span style=\"color: #e0e0e0;\"> authEnabled;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">if</span><span style=\"color: #e0e0e0;\"> (registration </span><span style=\"color: #a6a0e0;\">!=</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">null</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">&amp;&amp;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0registration</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Properties</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">TryGetValue</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #fa8072;\">&quot;caffeineit.demos.fluentauth.enabled&quot;</span><span style=\"color: #e0e0e0;\">, </span><span style=\"color: #00bfff;\">out</span><span style=\"color: #e0e0e0;\"> authEnabled) </span><span style=\"color: #a6a0e0;\">&amp;&amp;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(</span><span style=\"color: #00bfff;\">bool</span><span style=\"color: #e0e0e0;\">)authEnabled)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">if</span><span style=\"color: #e0e0e0;\"> (</span><span style=\"color: #bfbfff;\">_env</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">User</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Identity</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">IsAuthenticated</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">==</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">false</span><span style=\"color: #e0e0e0;\">)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bfbfff;\">_env</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">OperationResult</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">new</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00d2d2;\">OperationResult</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #00d2d2;\">Unauthorized</span><span style=\"color: #e0e0e0;\">();</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">return</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">false</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">return</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">true</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffff80;\">Func</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #71ffff;\">IEnumerable</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">OutputMember</span><span style=\"color: #a6a0e0;\">&gt;&gt;</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffb7db;\">RewriteOperation</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #ffff80;\">Func</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #71ffff;\">IEnumerable</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">OutputMember</span><span style=\"color: #a6a0e0;\">&gt;&gt;</span><span style=\"color: #e0e0e0;\"> operationBuilder)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">return</span><span style=\"color: #e0e0e0;\"> operationBuilder;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">bool</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffb7db;\">AfterExecute</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #71ffff;\">IOperation</span><span style=\"color: #e0e0e0;\"> operation, </span><span style=\"color: #71ffff;\">IEnumerable</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">OutputMember</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\"> outputMembers)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">return</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">true</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0}</span></div>\n</p></div>\n</p></div>\n<p>A few things are happening here. Of course we use <strong>dependency injection</strong> to take a dependency on the meta-model repository, where our configuration is stored, and on the ICommunicationContext, which gives us the principal of the current user, and which we need to know if someone has authenticated. On a side-note, that property is populated based on your hosting environment, so if you run on asp.net and have Forms authentication enabled, that will flow automatically with no work on your part.</p>\n<p>We do the work in BeforeExecute so we can stop execution before any other code runs, be it other interceptors or our handler. Finally, if a user is not authenticated, we override the OperationResult for the current connection and return <strong>false</strong>, which instructs OpenRasta to stop processing anything and start writing the response back to the client.</p>\n<h2>Hooking up the interceptor</h2>\n<p>The last bit we have to do is to give the interceptor to OpenRasta, and like everything else, it is handled by the IoC container. We can register custom dependencies in a unified fashion using the fluent configuration API.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #c2a0fa;\">ResourceSpace</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Uses</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">CustomDependency</span><span style=\"color: #a6a0e0;\">&lt;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #71ffff;\">IOperationInterceptor</span><span style=\"color: #e0e0e0;\">, </span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00d2d2;\">FluentAuthenticationInterceptor</span><span style=\"color: #a6a0e0;\">&gt;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(</span><span style=\"color: #8080c0;\">DependencyLifetime</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #8080c0;\">Transient</span><span style=\"color: #e0e0e0;\">);</span></div>\n</p></div>\n</p></div>\n<p>&nbsp;</p>\n<h2>Cleaning up and ready for packaging</h2>\n<p>Finally, like most plugins in OpenRasta, you should do all your configuration work as an extension on IUses, so we wrap the work that was done in the last bit into a nice extension method.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">static</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">void</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffc488;\">FluentAuthentication</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #00bfff;\">this</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #71ffff;\">IUses</span><span style=\"color: #e0e0e0;\"> uses)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">var</span><span style=\"color: #e0e0e0;\"> target </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> (</span><span style=\"color: #71ffff;\">IFluentTarget</span><span style=\"color: #e0e0e0;\">)uses;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0target</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Repository</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">CustomRegistrations</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">Add</span><span style=\"color: #e0e0e0;\">(</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">new</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00d2d2;\">DependencyRegistrationModel</span><span style=\"color: #e0e0e0;\">(</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">typeof</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #71ffff;\">IOperationInterceptor</span><span style=\"color: #e0e0e0;\">),</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">typeof</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #00d2d2;\">FluentAuthenticationInterceptor</span><span style=\"color: #e0e0e0;\">),</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #8080c0;\">DependencyLifetime</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #8080c0;\">Transient</span><span style=\"color: #e0e0e0;\">)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0);</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></div>\n</p></div>\n</p></div>\n<p>&nbsp;</p>\n<p>And now our configuration looks nice and understandable.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">using</span><span style=\"color: #e0e0e0;\"> (</span><span style=\"color: #c2a0fa;\">OpenRastaConfiguration</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Manual</span><span style=\"color: #e0e0e0;\">)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #c2a0fa;\">ResourceSpace</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Uses</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">FluentAuthentication</span><span style=\"color: #e0e0e0;\">();</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #c2a0fa;\">ResourceSpace</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Has</span><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">ResourcesOfType</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">UserDocument</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\">() </span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">RequiresAuthentication</span><span style=\"color: #e0e0e0;\">()</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">AtUri</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #fa8072;\">&quot;/public/{filename}&quot;</span><span style=\"color: #e0e0e0;\">)\u00a0\u00a0\u00a0\u00a0\u00a0</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">HandledBy</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">UserDocumentHandler</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\">()</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">AsXmlDataContract</span><span style=\"color: #e0e0e0;\">();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></div>\n</p></div>\n</p></div>\n<h2>Conclusion</h2>\n<p>The same extension points are available for URIs, for handlers, codecs, media type definitions and any other configuration model that exists. If you hang off those interfaces, your extensions will still work for the new compact configuration API and the convention-based configuration API that will be part of OpenRasta 3.0.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/4MapDEElQYs\" width=\"1\" />", "summary": "[Updated to clarify what the configuration meta-model actually is.] The latest OpenRasta 2.1 code contains some changes that make extending the fluent API easier, and provide a supported way for you to write those extensions in a way that won\u2019t&#160;&#8230; <a href=\"http://codebetter.com/sebastienla", "id": "http://codebetter.com/sebastienlambla/2011/09/14/extending-configuration-in-openrasta-2-1/", "categories": [], "metadata": {"guid": "34e6a688-3518-43f9-957b-eae600e75e4b", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://rubenhenares.404fs.com/get-into-electronics/", "title": "Get into Electronics", "datetime": "2011-09-14T11:06:57", "html": "<p>Creating applications is challenging and fun. But what about creating your own hardware to interact with them?<br />\nIf you want to get into electronics, but it sounds like rocket science to you. <a href=\"http://www.sparklelabs.com/\">Sparkle Labs</a> has released its <a href=\"http://sparklelabs.com/index_store.php#Discover%20Electronics\">Discover Electronics Kit</a> version 2.<br />\nThe <a href=\"http://learn.sparklelabs.com/\">Sparkle Labs Education</a> site has a bunch of interesting information and great video tutorials that will help you understand the basics, current, resistors, capacitors, etc.</p>", "summary": "Creating applications is challenging and fun. But what about creating your own hardware to interact with them? If you want to get into electronics, but it sounds like rocket science to you. Sparkle Labs has released its Discover Electronics Kit version 2. The Sparkle Labs Education site has a bunch ", "id": "http://rubenhenares.404fs.com/?p=244", "categories": [], "metadata": {"guid": "ed19590a-71e5-4fe0-83f9-ea3f41ddd30c", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/14/possible-downtime/", "title": "Possible downtime", "datetime": "2011-09-14T09:00:23", "html": "<div class=\"note tools\">I&#8217;m about to change hosts so some downtime in the next 72 hours is expected.</p>\n<p>I&#8217;m also cleaning up my domains and folder structure so certain links might be broken but I&#8217;ll fix them soon.</p></div>\n<p><!-- PHP 5.x --></p>", "summary": "I&#8217;m about to change hosts so some downtime in the next 72 hours is expected.\nI&#8217;m also cleaning up my domains and folder structure so certain links might be broken but I&#8217;ll fix them soon.\n PHP 5.x ", "id": "http://www.zspline.net/blog/?p=1521", "categories": [], "metadata": {"guid": "bbbd90fb-0322-4835-b4d6-f874f24b1968", "likes": 0, "is_published": false}}, {"author": "JayG (noreply@blogger.com)", "url": "http://feedproxy.google.com/~r/ScriptSwell/~3/ixPXczKpc8Q/webinar-with-zbrush-guru-ryan-kingslien.html", "title": "Webinar with ZBrush Guru Ryan Kingslien", "datetime": "2011-09-13T19:01:36.678000", "html": "<div dir=\"ltr\" style=\"text-align: left;\">\nRecently <a href=\"http://image-metrics.com/\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\"http://zbrushworkshops.com/\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry's most sought after artists and it was a pleasure to hear his take on how to tackle learning facial anatomy. &nbsp;He has even recently started a new class on his <a href=\"http://zbrushworkshops.com/\">website</a> based on the content of the webinar. &nbsp;Check out the video below.\n\n<br />\n<br />\n<a href=\"http://vimeo.com/28949284\">Sculpting The Face - Anatomy &amp; Form</a><br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://vimeo.com/28949284\"><span id=\"goog_1004908762\"></span><span id=\"goog_1004908763\"></span><img border=\"0\" height=\"298\" src=\"http://3.bp.blogspot.com/-VZbhgmM9wKw/TnAIChhqyfI/AAAAAAAAAfY/kvyVy_wGroU/s400/ryan_webinar.jpg\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nYou can find videos of some of the other <a href=\"http://vimeo.com/user6082681/videos\">webinars</a> we've done at Image Metrics in the right-hand side column.</div>\n</div>\n<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/9194959783867453392-8985862413181732524?l=www.scriptswell.net\" width=\"1\" /></div>\n<p><a href=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/da\"><img border=\"0\" ismap=\"true\" src=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/di\" /></a><br />\n<a href=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/da\"><img border=\"0\" ismap=\"true\" src=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/di\" /></a></p><img height=\"1\" src=\"http://feeds.feedburner.com/~r/ScriptSwell/~4/ixPXczKpc8Q\" width=\"1\" />", "summary": "<div dir=\"ltr\" style=\"text-align: left;\">\nRecently <a href=\"http://image-metrics.com/\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\"http://zbrushworkshops.com/\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry's most sought after artists and", "id": "tag:blogger.com,1999:blog-9194959783867453392.post-8985862413181732524", "categories": [], "metadata": {"guid": "6ebec914-724a-4a68-bf74-df6845814b09", "likes": 0, "is_published": false}}, {"author": "JayG (noreply@blogger.com)", "url": "http://feedproxy.google.com/~r/ScriptSwell/~3/ixPXczKpc8Q/webinar-with-zbrush-guru-ryan-kingslien.html", "title": "Webinar with ZBrush Guru Ryan Kingslien", "datetime": "2011-09-13T19:01:36.678000", "html": "<div dir=\"ltr\" style=\"text-align: left;\">\nRecently <a href=\"http://image-metrics.com/\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\"http://zbrushworkshops.com/\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry's most sought after artists and it was a pleasure to hear his take on how to tackle learning facial anatomy. &nbsp;He has even recently started a new class on his <a href=\"http://zbrushworkshops.com/\">website</a> based on the content of the webinar. &nbsp;Check out the video below.\n\n<br />\n<br />\n<a href=\"http://vimeo.com/28949284\">Sculpting The Face - Anatomy &amp; Form</a><br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://vimeo.com/28949284\"><span id=\"goog_1004908762\"></span><span id=\"goog_1004908763\"></span><img border=\"0\" height=\"298\" src=\"http://3.bp.blogspot.com/-VZbhgmM9wKw/TnAIChhqyfI/AAAAAAAAAfY/kvyVy_wGroU/s400/ryan_webinar.jpg\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nYou can find videos of some of the other <a href=\"http://vimeo.com/user6082681/videos\">webinars</a> we've done at Image Metrics in the right-hand side column.</div>\n</div>\n<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/9194959783867453392-8985862413181732524?l=www.scriptswell.net\" width=\"1\" /></div>\n<p><a href=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/da\"><img border=\"0\" ismap=\"true\" src=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/di\" /></a><br />\n<a href=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/da\"><img border=\"0\" ismap=\"true\" src=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/di\" /></a></p><img height=\"1\" src=\"http://feeds.feedburner.com/~r/ScriptSwell/~4/ixPXczKpc8Q\" width=\"1\" />", "summary": "<div dir=\"ltr\" style=\"text-align: left;\">\nRecently <a href=\"http://image-metrics.com/\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\"http://zbrushworkshops.com/\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry's most sought after artists and", "id": "tag:blogger.com,1999:blog-9194959783867453392.post-8985862413181732524", "categories": [], "metadata": {"guid": "34764f57-b4bc-41b1-9079-7477ed6f2302", "likes": 0, "is_published": false}}, {"author": "Dave Ferner", "url": "http://www.supermono-studios.com/2011/09/forever-drive-official-trailer/", "title": "FOREVER DRIVE!!!!!! Official trailer", "datetime": "2011-09-13T13:06:18", "html": "<p><a href=\"http://www.youtube.com/watch?v=iYCMGa5x5oA\"><img height=\"298\" src=\"http://supermono-studios.com/wp-content/uploads/2011/09/youtube.jpg\" width=\"480\" /></a></p>\n<p>Hey, check it out! Official trailer for our very-soon-to-be-released arcade driving future game! Lots of never-seen-before footage. Well, we&#8217;ve seen it before, cos we made it, but you haven&#8217;t. So watch it.</p>", "summary": "Hey, check it out! Official trailer for our very-soon-to-be-released arcade driving future game! Lots of never-seen-before footage. Well, we&#8217;ve seen it before, cos we made it, but you haven&#8217;t. So watch it.", "id": "http://www.supermono-studios.com/?p=1019", "categories": [], "metadata": {"guid": "04ca7002-b0cf-434b-9bc5-6fe35aa7de7e", "likes": 0, "is_published": false}}, {"author": "Sebastien Lambla", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/OGdGTuJ80l4/", "title": "Trying out OpenWrap 2.0", "datetime": "2011-09-12T21:11:56", "html": "<p><font color=\"#ff0000\"><em>[Update 3: github is not pushing the changes to openwrap.org properly, I\u2019ve updated the link to the shell in the post to point to the correct file.]</em></font></p>\n<p><font color=\"#ff0000\"><em>[Update 2: The problems with side-by-side of 2.0 and 1.0 seem to be mostly resolved. Do not install 2.0 in your system repository just yet, keep it in a test project, and please update OpenWrap to the newly released 1.0.1 version which solves some of those issues.]</em></font></p>\n<p><font color=\"#ff0000\"><em>[Update: I\u2019ve temporarily removed the 2.0 packages from the beta server due to unforeseen 1.0.0 / 2.0 side-by-side execution due to a bug in 1.0.0. Expect a new set of packages soon.]</em></font></p>\n<p>We\u2019ve come a long way since the initial work started on OpenWrap 1.1 that turned into 2.0.</p>\n<p>We now have ReSharper 6 support and a whole lot of new features, and we\u2019re 50 open issues from being feature complete. Still, it\u2019s time to announce a few things.</p>\n<p>First, the shell has been updated to 2.0, and bring back the possibility of deleting your /wraps folder when something goes bad to force an update, as well as fix a bunch of bugs that existed in the 1.1 release. Go <a href=\"http://github.com/OpenWrap/openwrap.github.com/raw/master/o.exe\">download it now</a>.</p>\n<p>The second thing is that test packages of OpenWrap 2.0 are available for testing, but not on the main repository. If you have OpenWrap 1.0 installed, you can upgrade a specific project to OpenWrap 2.0 by adding the beta repository.</p>\n<pre>C:\\src&gt; o add-remote beta http://wraps.openwrap.org/beta/\n# OpenWrap Shell 2.0.0.8\n# Copyright \u00a9 naughtyProd Limited 2009-2011\n# Using C:\\Users\\sebastien.lambla\\AppData\\Local\\openwrap\\wraps\\_cache\\openwrap-2.0.0.81133579\\bin-net35\\OpenWrap.dll (2.0.0.0)\nRemote repository 'beta' added.\n\n<font color=\"#444444\" face=\"Georgia\" size=\"3\">Then you can update your project to the new test version.</font></pre>\n<pre><font color=\"#444444\" face=\"Georgia\" size=\"3\"></font>&nbsp;</pre>\n<pre>C:\\src\\myProject&gt; o update-wrap openwrap -project\n</pre>\n<p>&nbsp;</p>\n<p>If you want to install 2.0 in your system repository, and at this stage it is not recommended as those are early previews that do not guarantee that side-by-side execution will work, then any 1.0 project may fail with <strong>noun not found</strong> errors. If this is your case:</p>\n<ul>\n<li>Change your wrap descriptor to force 1.0, so \u201cdepends: openwrap content\u201d should be changed to \u201cdepends: openwrap = 1.0 content\u201d\n<li>Force an update to 1.0.1 by doing \u201co update-wrap openwrap \u2013proj \u2013usesystem\u201d\n<li>If this fails, let us know how, then simply reset your system repository to a known state using the \u2013shellpanic flag before executing your update-wrap command. </li>\n</ul>\n<p>In the next couple of weeks there will be very long blog posts about all the new features we have in there for you, but if you\u2019ve been dying to test out the alpha releases, now you know how.</p>\n<p>As usual, contributors are welcome, bug reports should be filled on <a href=\"http://github.com/openrasta/openwrap/\">http://github.com/openrasta/openwrap/</a>. If you\u2019ve not involved yourself in real open source, by the people, for the people, in the open and in all honesty, now is the time.</p>\n<p>OpenWrap is the longest running and most open package manager on .net, come and have a look.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/OGdGTuJ80l4\" width=\"1\" />", "summary": "[Update 3: github is not pushing the changes to openwrap.org properly, I\u2019ve updated the link to the shell in the post to point to the correct file.] [Update 2: The problems with side-by-side of 2.0 and 1.0 seem to be&#160;&#8230; <a href=\"http://codebetter.com/sebastienlambla/2011/09/12/trying-out-o", "id": "http://codebetter.com/sebastienlambla/2011/09/12/trying-out-openwrap-2-0-2/", "categories": [], "metadata": {"guid": "44db5f56-4096-4ac4-b12d-4a2a5acbb3c9", "likes": 0, "is_published": false}}, {"author": "Howard Dierking", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/r8j_Lvbp0Uk/", "title": "One of the small costs of transparency", "datetime": "2011-09-11T18:23:34", "html": "<p>If you\u2019ve been following wcf.codeplex.com, you\u2019ll notice that we\u2019ve had a flurry of activity over the last couple of weeks, culminating in the release of Web API preview 5.&nbsp; If you\u2019ve been following our Codeplex repository for a while, you\u2019ll also note that this flurry of activity was preceded by months of inactivity.&nbsp; This wasn\u2019t because we were just sitting around talking waiting for the code to update itself.&nbsp; We had been wanting to update the repo for a while.&nbsp; The problem was that the process to update the code was very hard and very manual (meaning it was also very error prone).&nbsp; This is largely due to the fact that our source code is completely self-contained in its repository.&nbsp; Usually, you would think of self-containment as a good thing.&nbsp; However, in the scenario where you want to be able to share your code with others (like on Codeplex, for example), this property becomes a major problem.&nbsp; This is because code in our repository takes 0 dependencies on anything outside of our repository \u2013 including things like .NET Framework assemblies.&nbsp; Additionally, our build files contain all sorts of includes to custom tools, custom build targets/properties, etc.&nbsp; As a result, getting code out of our repository and then updating it so that it will actually build is a non-trivial task \u2013 until now.</p>\n<p>I went through this manual process once and quickly decided that I would never do that again.&nbsp; I already had an interest in PowerShell, so decided to kill multiple birds with one stone and automate the process using PowerShell.&nbsp; Additionally, because one of the major steps in the automation workflow is transforming the project files to remove internal assembly and tool references, I called into some XSLT from my PowerShell script.</p>\n<p>At a high level, the workflow looks as follows:</p>\n<ol>\n<li>Sync our product code from our internal repository</li>\n<li>Build our product code (this will generate needed files that rely on internal build tools)</li>\n<li>Create a new clone of the Codeplex repository</li>\n<li>In the Codeplex clone, delete everything in the source and test folders (this will better help to identify delete files in the hg repo when committing)</li>\n<li>Copy all source and test files from our internal repo to our hg clone</li>\n<li>Run XSLT over all *.csproj files in the hg repository to remove all internal references</li>\n<li>Run RegEx over all AssemblyInfo.cs files to remove delay signed info from InternalsVisibleTo attributes</li>\n<li>Run RegEx to clean up some assembly strong name references in some test config files</li>\n<li>Open the solution in Visual Studio and make sure that all projects build and that all tests run</li>\n</ol>\n<p>As you can see, there are a few things going on here \u2013 even with the automation \u2013 so imagine what the manual process looked like.&nbsp; </p>\n<p>Like I mentioned earlier, this automation project gave me an excuse to do something that I had been wanting to do anyway \u2013 learn PowerShell.&nbsp; As such, I want to show you the PowerShell script in part because you may currently (or one day) be facing a similar challenge, and in (larger) part because I want your feedback on how I can improve the PowerShell (like I said, I was learning).</p>\n<p>Anyways, here\u2019s the PowerShell:</p>\n<noscript><div class=\"gist\" id=\"gist-1209919\">\n  \n  \n    \n      \n        \n        \n\n        <div class=\"gist-file\">\n          <div class=\"gist-data gist-syntax\">\n            \n            \n            \n              <div class=\"highlight\"><pre><div class=\"line\" id=\"LC1\">Import-Module Pscx</div><div class=\"line\" id=\"LC2\"><br /></div><div class=\"line\" id=\"LC3\"><span class=\"c\"># the variables you'll likely need to change on your local machine</span></div><div class=\"line\" id=\"LC4\"><span class=\"nv\">$afroot</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;D:\\AppFabric&quot;</span></div><div class=\"line\" id=\"LC5\"><span class=\"nv\">$hgroot</span> <span class=\"o\">=</span> <span class=\"s1\">'D:\\Programming Projects'</span></div><div class=\"line\" id=\"LC6\"><span class=\"c\"># $hgremote = &quot;https://hg01.codeplex.com/wcf&quot;</span></div><div class=\"line\" id=\"LC7\"><span class=\"nv\">$hgremote</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;D:\\Programming Projects\\wcf-codeplex-baseline_RC2&quot;</span></div><div class=\"line\" id=\"LC8\"><br /></div><div class=\"line\" id=\"LC9\"><span class=\"c\"># derived paths</span></div><div class=\"line\" id=\"LC10\"><span class=\"nv\">$afwcfsource</span> <span class=\"o\">=</span> <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;\\private\\source\\WCF&quot;</span></div><div class=\"line\" id=\"LC11\"><span class=\"nv\">$afcommonsource</span> <span class=\"o\">=</span> <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;\\private\\source\\Common\\Microsoft.Server.Common&quot;</span></div><div class=\"line\" id=\"LC12\"><span class=\"nv\">$afwcftestsource</span> <span class=\"o\">=</span> <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;\\private\\CIT\\WCF&quot;</span></div><div class=\"line\" id=\"LC13\"><span class=\"nv\">$afcommontest</span> <span class=\"o\">=</span> <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;\\private\\testcommon&quot;</span></div><div class=\"line\" id=\"LC14\"><br /></div><div class=\"line\" id=\"LC15\"><span class=\"nv\">$clonename</span> <span class=\"o\">=</span> Get-Date -f yyyyMMdd-hhmmss</div><div class=\"line\" id=\"LC16\"><span class=\"nv\">$hgclonepath</span> <span class=\"o\">=</span> <span class=\"nv\">$hgroot</span> + <span class=\"s2\">&quot;\\wcf-codeplex-baseline_&quot;</span> + <span class=\"nv\">$clonename</span></div><div class=\"line\" id=\"LC17\"><span class=\"nv\">$hgsrc</span> <span class=\"o\">=</span> <span class=\"nv\">$hgclonepath</span> + <span class=\"s2\">&quot;\\WCFWebApi\\Http\\Src&quot;</span></div><div class=\"line\" id=\"LC18\"><span class=\"nv\">$hgtest</span> <span class=\"o\">=</span> <span class=\"nv\">$hgclonepath</span> + <span class=\"s2\">&quot;\\WCFWebApi\\Http\\Test&quot;</span></div><div class=\"line\" id=\"LC19\"><span class=\"nv\">$enlistmentcmdargs</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/C set inetroot=&quot;</span> + <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;&amp;set corextbranch=appserver&amp;&quot;</span> + <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;\\tools\\path1st\\myenv.cmd&quot;</span></div><div class=\"line\" id=\"LC20\"><span class=\"nv\">$enlistmentcmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;C:\\Windows\\SysWOW64\\cmd.exe&quot;</span></div><div class=\"line\" id=\"LC21\"><span class=\"nv\">$bcca</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;msbuildcmd /c /a amd64&quot;</span></div><div class=\"line\" id=\"LC22\"><br /></div><div class=\"line\" id=\"LC23\"><span class=\"nv\">$currentpath</span> <span class=\"o\">=</span> Get-Location</div><div class=\"line\" id=\"LC24\"><br /></div><div class=\"line\" id=\"LC25\"><span class=\"c\"># 1. </span></div><div class=\"line\" id=\"LC26\">Start-Process <span class=\"nv\">$enlistmentcmd</span> -ArgumentList <span class=\"o\">(</span><span class=\"nv\">$enlistmentcmdargs</span> + <span class=\"s2\">&quot;&amp;sd sync&quot;</span><span class=\"o\">)</span> -Wait</div><div class=\"line\" id=\"LC27\"><br /></div><div class=\"line\" id=\"LC28\"><span class=\"c\"># 2.</span></div><div class=\"line\" id=\"LC29\">Start-Process <span class=\"nv\">$enlistmentcmd</span> -ArgumentList <span class=\"o\">(</span><span class=\"nv\">$enlistmentcmdargs</span> + <span class=\"s2\">&quot;&amp;cd private/source/wcf&amp;&quot;</span> + <span class=\"nv\">$bcca</span><span class=\"o\">)</span> -Wait</div><div class=\"line\" id=\"LC30\"><br /></div><div class=\"line\" id=\"LC31\"><span class=\"c\"># 3.</span></div><div class=\"line\" id=\"LC32\">Start-Process <span class=\"nv\">$enlistmentcmd</span> -ArgumentList <span class=\"o\">(</span><span class=\"nv\">$enlistmentcmdargs</span> + <span class=\"s2\">&quot;&amp;cd private/source/common/microsoft.server.common&amp;&quot;</span> + <span class=\"nv\">$bcca</span><span class=\"o\">)</span> -Wait</div><div class=\"line\" id=\"LC33\"><br /></div><div class=\"line\" id=\"LC34\"><span class=\"c\"># 4.</span></div><div class=\"line\" id=\"LC35\">Start-Process <span class=\"nv\">$enlistmentcmd</span> -ArgumentList <span class=\"o\">(</span><span class=\"nv\">$enlistmentcmdargs</span> + <span class=\"s2\">&quot;&amp;cd private/cit/wcf&amp;&quot;</span> + <span class=\"nv\">$bcca</span><span class=\"o\">)</span> -Wait</div><div class=\"line\" id=\"LC36\"><br /></div><div class=\"line\" id=\"LC37\"><span class=\"c\"># 5.</span></div><div class=\"line\" id=\"LC38\">Start-Process <span class=\"nv\">$enlistmentcmd</span> -ArgumentList <span class=\"o\">(</span><span class=\"nv\">$enlistmentcmdargs</span> + <span class=\"s2\">&quot;&amp;cd private/testcommon&amp;&quot;</span> + <span class=\"nv\">$bcca</span><span class=\"o\">)</span> -Wait</div><div class=\"line\" id=\"LC39\"><br /></div><div class=\"line\" id=\"LC40\">Set-Location <span class=\"nv\">$currentpath</span></div><div class=\"line\" id=\"LC41\"><br /></div><div class=\"line\" id=\"LC42\"><span class=\"c\">#6. (assuming the build is clean) todo: add error handling here</span></div><div class=\"line\" id=\"LC43\"><br /></div><div class=\"line\" id=\"LC44\"><span class=\"c\"># 7.</span></div><div class=\"line\" id=\"LC45\">hg clone <span class=\"nv\">$hgremote</span> <span class=\"nv\">$hgclonepath</span></div><div class=\"line\" id=\"LC46\"><br /></div><div class=\"line\" id=\"LC47\"><span class=\"c\"># 8.</span></div><div class=\"line\" id=\"LC48\">Get-ChildItem <span class=\"nv\">$hgsrc</span> | Remove-Item -Recurse</div><div class=\"line\" id=\"LC49\"><br /></div><div class=\"line\" id=\"LC50\"><span class=\"c\"># 9.</span></div><div class=\"line\" id=\"LC51\">Get-ChildItem <span class=\"nv\">$afwcfsource</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC52\">&nbsp;&nbsp;&nbsp;&nbsp;| where<span class=\"o\">{</span><span class=\"nv\">$_</span>.Name -notlike <span class=\"s2\">&quot;Tools*&quot;</span> -and <span class=\"nv\">$_</span>.Name -notlike <span class=\"s2\">&quot;*Resharper*&quot;</span><span class=\"o\">}</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC53\">&nbsp;&nbsp;&nbsp;&nbsp;| Copy-Item -Destination <span class=\"nv\">$hgsrc</span> -Recurse</div><div class=\"line\" id=\"LC54\"><br /></div><div class=\"line\" id=\"LC55\">Copy-Item -Path <span class=\"nv\">$afcommonsource</span> -Destination <span class=\"nv\">$hgsrc</span> -Recurse</div><div class=\"line\" id=\"LC56\"><br /></div><div class=\"line\" id=\"LC57\"><span class=\"c\"># 10.</span></div><div class=\"line\" id=\"LC58\">Get-ChildItem <span class=\"nv\">$hgtest</span> | Remove-Item -Recurse -Force</div><div class=\"line\" id=\"LC59\"><br /></div><div class=\"line\" id=\"LC60\"><span class=\"c\"># 11.</span></div><div class=\"line\" id=\"LC61\">Get-ChildItem <span class=\"nv\">$afwcftestsource</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC62\">&nbsp;&nbsp;&nbsp;&nbsp;| where<span class=\"o\">{</span><span class=\"nv\">$_</span>.Name -notlike <span class=\"s2\">&quot;Tools*&quot;</span> -and <span class=\"nv\">$_</span>.Name -notlike <span class=\"s2\">&quot;*Resharper*&quot;</span><span class=\"o\">}</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC63\">&nbsp;&nbsp;&nbsp;&nbsp;| Copy-Item -Destination <span class=\"nv\">$hgtest</span> -Recurse</div><div class=\"line\" id=\"LC64\"><br /></div><div class=\"line\" id=\"LC65\">Copy-Item -Path <span class=\"o\">(</span><span class=\"nv\">$afcommontest</span> + <span class=\"s2\">&quot;\\Common&quot;</span><span class=\"o\">)</span> -Destination <span class=\"o\">(</span><span class=\"nv\">$hgtest</span> + <span class=\"s2\">&quot;\\testcommon\\Common&quot;</span><span class=\"o\">)</span> -Recurse</div><div class=\"line\" id=\"LC66\">Copy-Item -Path <span class=\"o\">(</span><span class=\"nv\">$afcommontest</span> + <span class=\"s2\">&quot;\\WCF&quot;</span><span class=\"o\">)</span> -Destination <span class=\"o\">(</span><span class=\"nv\">$hgtest</span> + <span class=\"s2\">&quot;\\testcommon\\WCF&quot;</span><span class=\"o\">)</span> -Recurse</div><div class=\"line\" id=\"LC67\"><br /></div><div class=\"line\" id=\"LC68\"><span class=\"c\"># 12.</span></div><div class=\"line\" id=\"LC69\"><span class=\"c\"># may be able to do this without the temp file hop (http://stackoverflow.com/questions/750449/converting-xml-from-utf-16-to-utf-8-using-powershell)</span></div><div class=\"line\" id=\"LC70\"><span class=\"c\"># -&gt; nope, tried and it still fails with an insufficient access error</span></div><div class=\"line\" id=\"LC71\"><span class=\"nv\">$tempfilesuffix</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;_TEMP&quot;</span></div><div class=\"line\" id=\"LC72\"><br /></div><div class=\"line\" id=\"LC73\"><span class=\"nv\">$projectfiles</span> <span class=\"o\">=</span> Get-ChildItem <span class=\"nv\">$hgsrc</span> -Recurse -Include *.csproj</div><div class=\"line\" id=\"LC74\"><span class=\"nv\">$projectfiles</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC75\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span> <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$_</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC76\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Convert-Xml -XsltPath .<span class=\"se\">\\E</span>nlistedCITProj2CodePlexCITProj.xslt <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC77\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Out-File <span class=\"o\">(</span><span class=\"nv\">$filename</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> <span class=\"o\">}</span></div><div class=\"line\" id=\"LC78\"><br /></div><div class=\"line\" id=\"LC79\"><span class=\"nv\">$projectfiles</span> | Remove-Item -Force</div><div class=\"line\" id=\"LC80\"><br /></div><div class=\"line\" id=\"LC81\">Get-ChildItem <span class=\"nv\">$hgsrc</span> -Recurse -Include <span class=\"o\">(</span><span class=\"s1\">'*.csproj'</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> | <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC82\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{</span> <span class=\"nv\">$filepath</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.Name; <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC83\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC84\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC85\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename</span>.Substring<span class=\"o\">(</span>0, <span class=\"nv\">$filename</span>.LastIndexOf<span class=\"o\">(</span><span class=\"nv\">$tempfilesuffix</span><span class=\"o\">))</span> <span class=\"o\">}</span></div><div class=\"line\" id=\"LC86\"><br /></div><div class=\"line\" id=\"LC87\"><span class=\"nv\">$testprojectfiles</span> <span class=\"o\">=</span> Get-ChildItem <span class=\"nv\">$hgtest</span> -Recurse -Include *.csproj</div><div class=\"line\" id=\"LC88\"><span class=\"nv\">$testprojectfiles</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC89\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span> <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$_</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC90\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Convert-Xml -XsltPath .<span class=\"se\">\\E</span>nlistedCITProj2CodePlexCITProj.xslt <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC91\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Out-File <span class=\"o\">(</span><span class=\"nv\">$filename</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> <span class=\"o\">}</span></div><div class=\"line\" id=\"LC92\"><br /></div><div class=\"line\" id=\"LC93\"><span class=\"nv\">$testprojectfiles</span> | Remove-Item -Force</div><div class=\"line\" id=\"LC94\"><br /></div><div class=\"line\" id=\"LC95\">Get-ChildItem <span class=\"nv\">$hgtest</span> -Recurse -Include <span class=\"o\">(</span><span class=\"s1\">'*.csproj'</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> | <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC96\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{</span> <span class=\"nv\">$filepath</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.Name; <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC97\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC98\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC99\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename</span>.Substring<span class=\"o\">(</span>0, <span class=\"nv\">$filename</span>.LastIndexOf<span class=\"o\">(</span><span class=\"nv\">$tempfilesuffix</span><span class=\"o\">))</span> <span class=\"o\">}</span>        </div><div class=\"line\" id=\"LC100\"><br /></div><div class=\"line\" id=\"LC101\"><span class=\"c\"># 13.</span></div><div class=\"line\" id=\"LC102\"><span class=\"nv\">$regex</span> <span class=\"o\">=</span> <span class=\"s1\">'(\\[assembly:\\s?InternalsVisibleTo\\(\\&quot;[\\w\\d\\.]+)\\s?,\\s?.+'</span></div><div class=\"line\" id=\"LC103\"><br /></div><div class=\"line\" id=\"LC104\"><span class=\"nv\">$assemblyInfoFiles</span> <span class=\"o\">=</span> Get-ChildItem <span class=\"nv\">$hgsrc</span> -Recurse | where<span class=\"o\">{</span><span class=\"nv\">$_</span>.Name -eq <span class=\"s2\">&quot;AssemblyInfo.cs&quot;</span><span class=\"o\">}</span></div><div class=\"line\" id=\"LC105\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\"line\" id=\"LC106\"><span class=\"nv\">$assemblyInfoFiles</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC107\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span> <span class=\"nv\">$filename</span> <span class=\"o\">=</span> <span class=\"nv\">$_</span>.FullName; <span class=\"o\">(</span>Get-Content <span class=\"nv\">$filename</span><span class=\"o\">)</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC108\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span><span class=\"nv\">$_</span> -replace <span class=\"nv\">$regex</span>, <span class=\"s1\">'$1&quot;)]'</span><span class=\"o\">}</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC109\">&nbsp;&nbsp;&nbsp;&nbsp;| Set-Content <span class=\"o\">(</span><span class=\"nv\">$filename</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)}</span></div><div class=\"line\" id=\"LC110\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\"line\" id=\"LC111\"><span class=\"nv\">$assemblyInfoFiles</span> | Remove-Item -Force</div><div class=\"line\" id=\"LC112\"><br /></div><div class=\"line\" id=\"LC113\">Get-ChildItem <span class=\"nv\">$hgsrc</span> -Recurse -Include <span class=\"o\">(</span><span class=\"s1\">'AssemblyInfo.cs'</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> | <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC114\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{</span> <span class=\"nv\">$filepath</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.Name; <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC115\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC116\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC117\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename</span>.Substring<span class=\"o\">(</span>0, <span class=\"nv\">$filename</span>.LastIndexOf<span class=\"o\">(</span><span class=\"nv\">$tempfilesuffix</span><span class=\"o\">))</span> <span class=\"o\">}</span>    </div><div class=\"line\" id=\"LC118\"><br /></div><div class=\"line\" id=\"LC119\"><span class=\"c\"># 14.</span></div><div class=\"line\" id=\"LC120\"><span class=\"nv\">$configregex</span> <span class=\"o\">=</span> <span class=\"s1\">'\\&quot;([\\w\\.\\d]+\\s*,\\s*[\\w\\.\\d]+)[,\\w\\s\\d\\.=]+\\&quot;'</span></div><div class=\"line\" id=\"LC121\"><br /></div><div class=\"line\" id=\"LC122\"><span class=\"nv\">$testconfigpath</span> <span class=\"o\">=</span> <span class=\"nv\">$hgtest</span> + <span class=\"s2\">&quot;\\Microsoft.ApplicationServer.Http\\Unit\\ConfigFiles&quot;</span></div><div class=\"line\" id=\"LC123\"><span class=\"nv\">$testconfigfiles</span> <span class=\"o\">=</span> Get-ChildItem <span class=\"nv\">$testconfigpath</span> -Recurse | where<span class=\"o\">{</span><span class=\"nv\">$_</span>.Name -like <span class=\"s2\">&quot;*.config&quot;</span><span class=\"o\">}</span></div><div class=\"line\" id=\"LC124\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\"line\" id=\"LC125\"><span class=\"nv\">$testconfigfiles</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC126\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span> <span class=\"nv\">$filename</span> <span class=\"o\">=</span> <span class=\"nv\">$_</span>.FullName; <span class=\"o\">(</span>Get-Content <span class=\"nv\">$filename</span><span class=\"o\">)</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC127\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span><span class=\"nv\">$_</span> -replace <span class=\"nv\">$configregex</span>, <span class=\"s1\">'&quot;$1&quot;'</span><span class=\"o\">}</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC128\">&nbsp;&nbsp;&nbsp;&nbsp;| Set-Content <span class=\"o\">(</span><span class=\"nv\">$filename</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)}</span></div><div class=\"line\" id=\"LC129\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\"line\" id=\"LC130\"><span class=\"nv\">$testconfigfiles</span> | Remove-Item -Force</div><div class=\"line\" id=\"LC131\"><br /></div><div class=\"line\" id=\"LC132\">Get-ChildItem <span class=\"nv\">$testconfigpath</span> -Recurse -Include <span class=\"o\">(</span><span class=\"s1\">'*.config'</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> | <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC133\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{</span> <span class=\"nv\">$filepath</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.Name; <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC134\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC135\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC136\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename</span>.Substring<span class=\"o\">(</span>0, <span class=\"nv\">$filename</span>.LastIndexOf<span class=\"o\">(</span><span class=\"nv\">$tempfilesuffix</span><span class=\"o\">))</span> <span class=\"o\">}</span> </div></pre></div>\n            \n          </div>\n\n          <div class=\"gist-meta\">\n            <a href=\"https://gist.github.com/raw/1209919/2f8c6ae8e8a416017d9fc130f44555b3b19a3b22/gistfile1.sh\" style=\"float: right;\">view raw</a>\n            <a href=\"https://gist.github.com/1209919#file_gistfile1.sh\" style=\"float: right; margin-right: 10px; color: #666;\">gistfile1.sh</a>\n            <a href=\"https://gist.github.com/1209919\">This Gist</a> brought to you by <a href=\"http://github.com\">GitHub</a>.\n          </div>\n        </div>\n      \n    \n  \n</div>\n</noscript>\n<p>Additionally, a big part of the workflow is transforming project files to remove any dependencies on internal libraries and tools.&nbsp; For this workflow task, XSLT was the right fit \u2013 and that XSLT looks like this:</p>\n<noscript><div class=\"gist\" id=\"gist-1209930\">\n  \n  \n    \n      \n        \n        \n\n        <div class=\"gist-file\">\n          <div class=\"gist-data gist-syntax\">\n            \n            \n            \n              <div class=\"highlight\"><pre><div class=\"line\" id=\"LC1\"><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></div><div class=\"line\" id=\"LC2\"><span class=\"nt\">&lt;xsl:stylesheet</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.0&quot;</span></div><div class=\"line\" id=\"LC3\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"na\">xmlns:xsl=</span><span class=\"s\">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span></div><div class=\"line\" id=\"LC4\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"na\">xmlns:msxsl=</span><span class=\"s\">&quot;urn:schemas-microsoft-com:xslt&quot;</span> <span class=\"na\">exclude-result-prefixes=</span><span class=\"s\">&quot;msxsl b&quot;</span></div><div class=\"line\" id=\"LC5\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"na\">xmlns:b=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC6\"><br /></div><div class=\"line\" id=\"LC7\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:output</span> <span class=\"na\">method=</span><span class=\"s\">&quot;xml&quot;</span> <span class=\"na\">indent=</span><span class=\"s\">&quot;yes&quot;</span> <span class=\"na\">encoding=</span><span class=\"s\">&quot;UTF-8&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC8\"><br /></div><div class=\"line\" id=\"LC9\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;/b:Project&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC10\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:copy&gt;</span></div><div class=\"line\" id=\"LC11\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates</span> <span class=\"na\">select=</span><span class=\"s\">&quot;@*&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC12\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:PropertyGroup&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC13\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:ItemGroup&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC14\"><br /></div><div class=\"line\" id=\"LC15\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"c\">&lt;!-- Add the import for common C# build targets --&gt;</span></div><div class=\"line\" id=\"LC16\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Import&quot;</span> <span class=\"na\">namespace=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC17\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Project&quot;</span><span class=\"nt\">&gt;</span>$(MSBuildToolsPath)\\Microsoft.CSharp.targets<span class=\"nt\">&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC18\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:element&gt;</span></div><div class=\"line\" id=\"LC19\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:copy&gt;</span></div><div class=\"line\" id=\"LC20\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC21\"><br /></div><div class=\"line\" id=\"LC22\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:PropertyGroup[./b:ProjectGuid]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC23\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;PropertyGroup</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC24\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;HgRootDirectory&gt;</span>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), '.hgignore'))<span class=\"nt\">&lt;/HgRootDirectory&gt;</span></div><div class=\"line\" id=\"LC25\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Configuration</span> <span class=\"na\">Condition=</span><span class=\"s\">&quot; '$(Configuration)' == '' &quot;</span><span class=\"nt\">&gt;</span>Debug<span class=\"nt\">&lt;/Configuration&gt;</span></div><div class=\"line\" id=\"LC26\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Platform</span> <span class=\"na\">Condition=</span><span class=\"s\">&quot; '$(Platform)' == '' &quot;</span><span class=\"nt\">&gt;</span>AnyCPU<span class=\"nt\">&lt;/Platform&gt;</span></div><div class=\"line\" id=\"LC27\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProductVersion&gt;</span>8.0.30703<span class=\"nt\">&lt;/ProductVersion&gt;</span></div><div class=\"line\" id=\"LC28\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;SchemaVersion&gt;</span>2.0<span class=\"nt\">&lt;/SchemaVersion&gt;</span></div><div class=\"line\" id=\"LC29\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if</span> <span class=\"na\">test=</span><span class=\"s\">&quot;b:AllowUnsafeBlocks&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC30\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AllowUnsafeBlocks&gt;</span></div><div class=\"line\" id=\"LC31\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:AllowUnsafeBlocks&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC32\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/AllowUnsafeBlocks&gt;</span></div><div class=\"line\" id=\"LC33\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:if&gt;</span></div><div class=\"line\" id=\"LC34\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectGuid&gt;</span></div><div class=\"line\" id=\"LC35\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:ProjectGuid&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC36\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/ProjectGuid&gt;</span></div><div class=\"line\" id=\"LC37\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;OutputType&gt;</span></div><div class=\"line\" id=\"LC38\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:OutputType&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC39\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/OutputType&gt;</span></div><div class=\"line\" id=\"LC40\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AppDesignerFolder&gt;</span></div><div class=\"line\" id=\"LC41\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:AppDesignerFolder&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC42\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/AppDesignerFolder&gt;</span></div><div class=\"line\" id=\"LC43\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;RootNamespace&gt;</span></div><div class=\"line\" id=\"LC44\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:RootNamespace&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC45\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/RootNamespace&gt;</span></div><div class=\"line\" id=\"LC46\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AssemblyName&gt;</span></div><div class=\"line\" id=\"LC47\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:AssemblyName&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC48\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/AssemblyName&gt;</span></div><div class=\"line\" id=\"LC49\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if</span> <span class=\"na\">test=</span><span class=\"s\">&quot;b:ProjectTypeGuids&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC50\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectTypeGuids&gt;</span></div><div class=\"line\" id=\"LC51\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:ProjectTypeGuids&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC52\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/ProjectTypeGuids&gt;</span></div><div class=\"line\" id=\"LC53\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:if&gt;</span></div><div class=\"line\" id=\"LC54\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if</span> <span class=\"na\">test=</span><span class=\"s\">&quot;b:AssemblyClsCompliant&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC55\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AssemblyClsCompliant&gt;</span></div><div class=\"line\" id=\"LC56\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:AssemblyClsCompliant&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC57\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/AssemblyClsCompliant&gt;</span></div><div class=\"line\" id=\"LC58\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:if&gt;</span></div><div class=\"line\" id=\"LC59\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;TargetFrameworkVersion&gt;</span>v4.0<span class=\"nt\">&lt;/TargetFrameworkVersion&gt;</span></div><div class=\"line\" id=\"LC60\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;FileAlignment&gt;</span>512<span class=\"nt\">&lt;/FileAlignment&gt;</span></div><div class=\"line\" id=\"LC61\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/PropertyGroup&gt;</span></div><div class=\"line\" id=\"LC62\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;PropertyGroup</span> <span class=\"na\">Condition=</span><span class=\"s\">&quot; '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' &quot;</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC63\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DebugSymbols&gt;</span>true<span class=\"nt\">&lt;/DebugSymbols&gt;</span></div><div class=\"line\" id=\"LC64\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DebugType&gt;</span>full<span class=\"nt\">&lt;/DebugType&gt;</span></div><div class=\"line\" id=\"LC65\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Optimize&gt;</span>false<span class=\"nt\">&lt;/Optimize&gt;</span></div><div class=\"line\" id=\"LC66\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;OutputPath&gt;</span>bin\\Debug\\<span class=\"nt\">&lt;/OutputPath&gt;</span></div><div class=\"line\" id=\"LC67\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DefineConstants&gt;</span>DEBUG;TRACE;NET_4<span class=\"nt\">&lt;/DefineConstants&gt;</span></div><div class=\"line\" id=\"LC68\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ErrorReport&gt;</span>prompt<span class=\"nt\">&lt;/ErrorReport&gt;</span></div><div class=\"line\" id=\"LC69\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;WarningLevel&gt;</span>4<span class=\"nt\">&lt;/WarningLevel&gt;</span></div><div class=\"line\" id=\"LC70\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/PropertyGroup&gt;</span></div><div class=\"line\" id=\"LC71\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;PropertyGroup</span> <span class=\"na\">Condition=</span><span class=\"s\">&quot; '$(Configuration)|$(Platform)' == 'Release|AnyCPU' &quot;</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC72\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DebugType&gt;</span>pdbonly<span class=\"nt\">&lt;/DebugType&gt;</span></div><div class=\"line\" id=\"LC73\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Optimize&gt;</span>true<span class=\"nt\">&lt;/Optimize&gt;</span></div><div class=\"line\" id=\"LC74\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;OutputPath&gt;</span>bin\\Release\\<span class=\"nt\">&lt;/OutputPath&gt;</span></div><div class=\"line\" id=\"LC75\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DefineConstants&gt;</span>TRACE;NET_4<span class=\"nt\">&lt;/DefineConstants&gt;</span></div><div class=\"line\" id=\"LC76\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ErrorReport&gt;</span>prompt<span class=\"nt\">&lt;/ErrorReport&gt;</span></div><div class=\"line\" id=\"LC77\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;WarningLevel&gt;</span>4<span class=\"nt\">&lt;/WarningLevel&gt;</span></div><div class=\"line\" id=\"LC78\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DocumentationFile&gt;</span>bin\\Release\\Microsoft.ApplicationServer.Http.XML<span class=\"nt\">&lt;/DocumentationFile&gt;</span></div><div class=\"line\" id=\"LC79\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/PropertyGroup&gt;</span></div><div class=\"line\" id=\"LC80\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC81\"><br /></div><div class=\"line\" id=\"LC82\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Assembly reference patterns--&gt;</span></div><div class=\"line\" id=\"LC83\">&nbsp;&nbsp;</div><div class=\"line\" id=\"LC84\">&nbsp;&nbsp;<span class=\"c\">&lt;!--GAC (assembly name) references--&gt;</span></div><div class=\"line\" id=\"LC85\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:Reference[not(contains(@Include, '\\'))]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC86\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC87\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Include&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC88\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;@Include&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC89\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC90\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if</span> <span class=\"na\">test=</span><span class=\"s\">&quot;b:HintPath&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC91\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;HintPath&gt;&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:HintPath&quot;</span><span class=\"nt\">/&gt;&lt;/HintPath&gt;</span></div><div class=\"line\" id=\"LC92\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:if&gt;</span></div><div class=\"line\" id=\"LC93\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Reference&gt;</span></div><div class=\"line\" id=\"LC94\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC95\">&nbsp;&nbsp;</div><div class=\"line\" id=\"LC96\">&nbsp;&nbsp;<span class=\"c\">&lt;!--.NET 4.0 framework assemblies--&gt;</span></div><div class=\"line\" id=\"LC97\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:Reference[contains(@Include,'\\public\\ext\\sdk\\CLR\\netfx40rtm\\')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC98\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC99\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Include&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC100\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;substring-after(@Include, '\\public\\ext\\sdk\\CLR\\netfx40rtm\\')&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC101\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC102\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Reference&gt;</span></div><div class=\"line\" id=\"LC103\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC104\"><br /></div><div class=\"line\" id=\"LC105\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Visual Studio 2010 SDK assemblies--&gt;</span></div><div class=\"line\" id=\"LC106\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:Reference[contains(@Include,'$(INETROOT)\\public\\ext\\VisualStudio\\VS10RTM\\PublicAssemblies\\')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC107\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC108\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Include&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC109\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;substring-after(@Include, '$(INETROOT)\\public\\ext\\VisualStudio\\VS10RTM\\PublicAssemblies\\')&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC110\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC111\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Reference&gt;</span></div><div class=\"line\" id=\"LC112\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC113\"><br /></div><div class=\"line\" id=\"LC114\">&nbsp;&nbsp;<span class=\"c\">&lt;!--ODataLib --&gt;</span></div><div class=\"line\" id=\"LC115\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:Reference[contains(@Include, 'System.Data.OData.dll')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC116\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference</span> <span class=\"na\">Include=</span><span class=\"s\">&quot;$(HgRootDirectory)\\Lib\\Odata\\System.Data.OData.dll&quot;</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC117\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC118\"><br /></div><div class=\"line\" id=\"LC119\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Unrecognized assembly reference--&gt;</span></div><div class=\"line\" id=\"LC120\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:Reference&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC121\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;</span>Reference to an unrecognized assembly: <span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;./@Include&quot;</span><span class=\"nt\">/&gt;&lt;/xsl:comment&gt;</span></div><div class=\"line\" id=\"LC122\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC123\"><br /></div><div class=\"line\" id=\"LC124\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Project reference patterns--&gt;</span></div><div class=\"line\" id=\"LC125\">&nbsp;&nbsp;</div><div class=\"line\" id=\"LC126\">&nbsp;&nbsp;<span class=\"c\">&lt;!--ODataLib project reference--&gt;</span></div><div class=\"line\" id=\"LC127\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:ProjectReference[./b:Name='ODataLib']&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC128\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;</span>commenting out odatalib project reference<span class=\"nt\">&lt;/xsl:comment&gt;</span></div><div class=\"line\" id=\"LC129\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC130\"><br /></div><div class=\"line\" id=\"LC131\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Product code project references --&gt;</span></div><div class=\"line\" id=\"LC132\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:ProjectReference[contains(@Include, '\\source\\') or contains(@Include, '$(WCFSource)')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC133\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectReference</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC134\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Include&quot;</span><span class=\"nt\">&gt;</span>$(HgRootDirectory)\\WCFWebApi\\Http\\Src\\<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Name&quot;</span><span class=\"nt\">/&gt;</span>\\<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Name&quot;</span><span class=\"nt\">/&gt;</span>.csproj<span class=\"nt\">&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC135\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Project&gt;</span></div><div class=\"line\" id=\"LC136\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Project&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC137\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Project&gt;</span></div><div class=\"line\" id=\"LC138\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Name&gt;</span></div><div class=\"line\" id=\"LC139\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Name&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC140\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Name&gt;</span></div><div class=\"line\" id=\"LC141\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/ProjectReference&gt;</span></div><div class=\"line\" id=\"LC142\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC143\">&nbsp;&nbsp;</div><div class=\"line\" id=\"LC144\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Testcommon project references --&gt;</span></div><div class=\"line\" id=\"LC145\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:ProjectReference[contains(@Include, '\\testcommon\\')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC146\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectReference</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC147\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Include&quot;</span><span class=\"nt\">&gt;</span>$(HgRootDirectory)\\WCFWebApi\\Http\\Test\\testcommon\\<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;substring-after(@Include, '\\testcommon\\')&quot;</span> <span class=\"nt\">/&gt;&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC148\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Project&gt;</span></div><div class=\"line\" id=\"LC149\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Project&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC150\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Project&gt;</span></div><div class=\"line\" id=\"LC151\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Name&gt;</span></div><div class=\"line\" id=\"LC152\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Name&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC153\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Name&gt;</span></div><div class=\"line\" id=\"LC154\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/ProjectReference&gt;</span></div><div class=\"line\" id=\"LC155\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC156\">&nbsp;&nbsp;</div><div class=\"line\" id=\"LC157\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Internal Moles project references - ignore --&gt;</span></div><div class=\"line\" id=\"LC158\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:ProjectReference[contains(./b:Name, '.Moles')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC159\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;</span>Reference to internal Moles project: <span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;@Include&quot;</span><span class=\"nt\">/&gt;&lt;/xsl:comment&gt;</span></div><div class=\"line\" id=\"LC160\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC161\"><br /></div><div class=\"line\" id=\"LC162\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Moles assembly includes--&gt;</span></div><div class=\"line\" id=\"LC163\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:ItemGroup/b:Moles&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC164\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;</span>Temporarily removing ItemGroup/<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;@Include&quot;</span><span class=\"nt\">/&gt;</span> reference<span class=\"nt\">&lt;/xsl:comment&gt;</span></div><div class=\"line\" id=\"LC165\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC166\"><br /></div><div class=\"line\" id=\"LC167\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Identity xform--&gt;</span></div><div class=\"line\" id=\"LC168\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;@* | node()&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC169\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:copy&gt;</span></div><div class=\"line\" id=\"LC170\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates</span> <span class=\"na\">select=</span><span class=\"s\">&quot;@* | node()&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC171\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:copy&gt;</span></div><div class=\"line\" id=\"LC172\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC173\"><span class=\"nt\">&lt;/xsl:stylesheet&gt;</span></div></pre></div>\n            \n          </div>\n\n          <div class=\"gist-meta\">\n            <a href=\"https://gist.github.com/raw/1209930/e94df9b3279f606166a3d7b7375c9526d8ed9f37/gistfile1.xml\" style=\"float: right;\">view raw</a>\n            <a href=\"https://gist.github.com/1209930#file_gistfile1.xml\" style=\"float: right; margin-right: 10px; color: #666;\">gistfile1.xml</a>\n            <a href=\"https://gist.github.com/1209930\">This Gist</a> brought to you by <a href=\"http://github.com\">GitHub</a>.\n          </div>\n        </div>\n      \n    \n  \n</div>\n</noscript>\n<p>I hope that this proves helpful if you ever find yourself in the position where you have to regularly keep code in sync between 2 different repositories (or even the same repositories with different folder structures).&nbsp; And like I said, I welcome feedback on how I can improve my PowerShell.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/r8j_Lvbp0Uk\" width=\"1\" />", "summary": "If you\u2019ve been following wcf.codeplex.com, you\u2019ll notice that we\u2019ve had a flurry of activity over the last couple of weeks, culminating in the release of Web API preview 5.&#160; If you\u2019ve been following our Codeplex repository for a while, you\u2019ll&#160;&#8230; <a href=\"http://codebetter.com/howarddi", "id": "http://codebetter.com/howarddierking/2011/09/11/one-of-the-small-costs-of-transparency/", "categories": [], "metadata": {"guid": "d73fbf88-5f1c-46ab-b18e-c6409e14742a", "likes": 0, "is_published": false}}, {"author": "Scott Wilson (noreply@blogger.com)", "url": "http://pixelmaniacuk.blogspot.com/2011/09/september-update.html", "title": "September Update", "datetime": "2011-09-11T18:23:26.453000", "html": "Hey guys! Again, it's been a long time since&nbsp;I've done a blog update!<br /><br />So what's new?<br /><br />I've continued to work heavily with Spiral Game Studios and been making a massive impact on their game \"Orion: Prelude\" and have been offered a studio job. Here is some recent progress of the game!<br /><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">Note that Spiral Games have recently been at GamesCom and PAX! Was very busy times for our CEO..</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">I have now moved back to England to finish my university masters degree so hopefully that goes smooth along with my work with Spiral.. My main masters project will be based on creating a customisable character creation system for UE3 and I will post updates later in the year on that!</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">Game creator \"Dan Da Rocha has asked me to create the outro cut scene for the up-comming puzzle game Q.U.B.E, so I also look forward to that =)</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">That's it really! I also have two new blogs, one on the spiral game studios forums and one on the game dev forum! Links are below..</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><a href=\"http://spiralforums.com/viewtopic.php?f=3&amp;t=1876\">http://spiralforums.com/viewtopic.php?f=3&amp;t=1876</a></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><a href=\"http://www.games-dev.com/forum/topic/2498-scotts-tech-blog/page__fromsearch__1\">http://www.games-dev.com/forum/topic/2498-scotts-tech-blog/page__fromsearch__1</a></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4062822994372279709-8640331304899460507?l=pixelmaniacuk.blogspot.com\" width=\"1\" /></div>", "summary": "Hey guys! Again, it's been a long time since&nbsp;I've done a blog update!<br /><br />So what's new?<br /><br />I've continued to work heavily with Spiral Game Studios and been making a massive impact on their game \"Orion: Prelude\" and have been offered a studio job. Here is some recent progress of ", "id": "tag:blogger.com,1999:blog-4062822994372279709.post-8640331304899460507", "categories": [], "metadata": {"guid": "a6845ad6-4f93-4bed-aca1-f1b1cdb5e60b", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/11/seamless-tiling-filter/", "title": "Seamless tiling filter", "datetime": "2011-09-11T16:19:32", "html": "<p>I made a filter for Filter Forge which makes an image seamlessly tiling.</p>\n<table align=\"center\" border=\"0\">\n<tbody>\n<tr>\n<td>\n<div class=\"wp-caption aligncenter\" style=\"width: 170px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04a.jpg\" rel=\"prettyphoto[1515]\" title=\"example04a.jpg\"><img alt=\"\" class=\"thumb  \" height=\"160\" id=\"thumb755\" src=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04a.jpg?22742010\" width=\"160\" /></a>\n<p class=\"wp-caption-text\">Original</p>\n</div>\n</td>\n<td>\n<div class=\"wp-caption aligncenter\" style=\"width: 170px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04b.jpg\" rel=\"prettyphoto[1515]\" title=\"example04b.jpg\"><img alt=\"\" class=\"thumb \" height=\"160\" id=\"thumb756\" src=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04b.jpg\" width=\"160\" /></a>\n<p class=\"wp-caption-text\">Seams</p>\n</div>\n</td>\n<td>\n<div class=\"wp-caption aligncenter\" style=\"width: 170px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04c.jpg\" rel=\"prettyphoto[1515]\" title=\"example04c.jpg\"><img alt=\"\" class=\"thumb \" height=\"160\" id=\"thumb757\" src=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04c.jpg\" width=\"160\" /></a>\n<p class=\"wp-caption-text\">Fixed seams</p>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>It can be downloaded from <a href=\"http://www.filterforge.com/filters/9908.html\" target=\"_blank\">here</a> while the discussion thread is <a href=\"http://www.filterforge.com/forum/read.php?FID=11&amp;TID=8785&amp;MID=95230#message95230\" target=\"_blank\">here</a>. The explanation of the filter parameters can be found in the <a href=\"http://www.zspline.net/blog/the-seamless-tiling-filter/\">Seamless tiling filter reference</a> article.<!-- PHP 5.x --></p>", "summary": "I made a filter for Filter Forge which makes an image seamlessly tiling. It can be downloaded from here while the discussion thread is here. The explanation of the filter parameters can be found in the Seamless tiling filter reference article.", "id": "http://www.zspline.net/blog/?p=1515", "categories": [], "metadata": {"guid": "f64394f4-67d7-4d42-a0ec-53c2bd621dcf", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/10071612426", "title": "\"When a man walks into a room, he brings his whole life with him. He has a million reasons for being...\"", "datetime": "2011-09-11T01:55:21", "html": "\u201cWhen a man walks into a room, he brings his whole life with him. He has a million reasons for being anywhere, just ask him. If you listen, he\u2019ll tell you how he got there. How he forgot where he was going, and that he woke up. If you listen, he\u2019ll tell you about the time he thought he was an angel or dreamt of being perfect. And then he\u2019ll smile with wisdom, content that he realized the world isn\u2019t perfect. We\u2019re flawed, because we want so much more. We\u2019re ruined, because we get these things, and wish for what we had.\u201d<br /><br /> - <em>Don Draper Season 4 Episode 8</em>", "summary": "\u201cWhen a man walks into a room, he brings his whole life with him. He has a million reasons for being anywhere, just ask him. If you listen, he\u2019ll tell you how he got there. How he forgot where he was going, and that he woke up. If you listen, he\u2019ll tell you about the time he thought he was an angel ", "id": "http://shawnkirsch.tumblr.com/post/10071612426", "categories": [], "metadata": {"guid": "29318c31-8d7f-4bf6-be31-1b6a8568b1fb", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/09/08/coast-to-coast-blue-sky-here-i-come/", "title": "Coast to Coast!  Blue Sky here I come!", "datetime": "2011-09-08T18:27:29", "html": "<div class=\"wp-caption aligncenter\" id=\"attachment_2890\" style=\"width: 310px;\"><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup.jpg\" rel=\"lightbox[2889]\"><img alt=\"Scrat Continental Crackup\" class=\"size-medium wp-image-2890 \" height=\"127\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup-300x127.jpg\" title=\"scrat_cont_crackup\" width=\"300\" /></a><p class=\"wp-caption-text\">How I've felt for so long about working in VFX/Anim industry.</p></div>\n<div class=\"wp-caption aligncenter\" id=\"attachment_2891\" style=\"width: 310px;\"><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift.jpg\" rel=\"lightbox[2889]\"><img alt=\"Ice Age: Continental Drift\" class=\"size-medium wp-image-2891 \" height=\"127\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift-300x127.jpg\" title=\"ice_age_continental_drift\" width=\"300\" /></a><p class=\"wp-caption-text\">My first project</p></div>\n<p>Done! \u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \u00a0It&#8217;s everything I could ask for in an employer and more.</p>\n<p>Don&#8217;t think that it&#8217;s going to stop me from being active on my blog though, quite the opposite! \u00a0Well, maybe the first month or two starting now there will be a pause, but after that it will increase. \u00a0I&#8217;m super excited to learn and share knowledge with people and stay really connected and dedicated to innovating personal and industry wide workflows, tech, and of course animation. \u00a0Technical animation and tech art to be specific is what I&#8217;ll be working on in the coming months, same as usual.</p>\n<p>Thanks to everyone that&#8217;s been involved in the process of landing this, you know who you are! \u00a0I don&#8217;t think they know yet what a valuable asset they just\u00a0acquired but soon they will find out just how serious I am about the work I do and how inspired I can be!</p>\n<div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "Done! \u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \u00a0It&#8217;s everything I could ask for in an employer and more. Don&#8217;t think that it", "id": "http://www.jonasavrin.com/?p=2889", "categories": ["Jonas Avrin"], "metadata": {"guid": "af6033e3-25e1-4153-9754-83f7548bd986", "likes": 0, "is_published": true}}]"
09-15 23:23 SocketClient INFO     Returning(as str): '[{"author": "johnvpetersen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/RTZI-UVm0y0/", "title": "Thanks to CodeBetter for having me aboard!!", "datetime": "2011-09-15T16:46:20", "html": "<p>I have moved my blog from Los Techies and am looking forward to participating in the CodeBetter Community! I&#8217;ve long been a follower of CodeBetter and have cited many posts here in my never ending quest to be a better software developer. Recently, I joined Scott Hanselman, Jon Galloway and Peter Mourfield as part of the core team that maintains the NerdDinner Project. As part of those efforts, we were graciously invited by Hadi Hariri to host the project on CodeBetter&#8217;s TeamCity CI server.</p>\\n<p>I&#8217;ve very much enjoyed my time at Los Techies and am glad to count many of the bloggers there as good\\u00a0friends. I&#8217;m grateful for being considered an honorary member of the group I affectionately call the &#8220;Austin Tech Mafia&#8221;!</p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/RTZI-UVm0y0\\" width=\\"1\\" />", "summary": "I have moved my blog from Los Techies and am looking forward to participating in the CodeBetter Community! I&#8217;ve long been a follower of CodeBetter and have cited many posts here in my never ending quest to be a better&#160;&#8230; <a href=\\"http://codebetter.com/johnpetersen/2011/09/15/thanks-t", "id": "http://codebetter.com/johnpetersen/?p=64", "categories": [], "metadata": {"guid": "ecd8a378-ab96-47bb-ba00-0e5b78e1529b", "likes": 0, "is_published": false}}, {"author": "Patrick Smacchia", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/hWyLXx0fryc/", "title": "A first glance at Visual Studio vNext (dev11)", "datetime": "2011-09-15T14:12:59", "html": "<p>In case you are not aware, <a href=\\"http://blogs.msdn.com/b/jasonz/archive/2011/09/14/announcing-visual-studio-11-developer-preview.aspx\\" target=\\"_blank\\">a <em>developer preview</em> version of Visual Studio vNext has been released yesterday</a>. I just played an hour with it and it seems that <strong>performances are finally here</strong>! The same way I skipped Vista to jump from XP to <em>Wnd7 that I love</em>, I am (as much as I can) skipping VS2010 and I&#8217;ll jump from VS2008 to <em>VS2012 that I&#8217;ll hopefully love</em>. A few random notes:</p>\\n<p>The startup time is damn fast, on a pretty large 50K <em>lines of code</em> VS solution: 4 seconds, and I am ready to type!</p>\\n<p>The solution explorer (derived from VS2010 power tools) just rocks.</p>\\n<p>The Ctrl+I search/replace in file rocks as well.</p>\\n<p>The main button menu now just contains 7 buttons per default, and of course you can configure it by adding your preferred buttons.</p>\\n<p>The find code duplicate is somewhat slow, 5 minutes on my 50K LoC, and didn&#8217;t give me any relevant result. But honestly the solution analyzed shouldn&#8217;t contain any duplicate and being slow is not so much an issue since it is not meant to be run at every build.</p>\\n<p>The Ctrl+Alt+E exception dialog takes 2 seconds to open compared to 6 seconds with VS2010 and 4 seconds with VS 2008.</p>\\n<p>The architecture explorer graph seems even slower than in VS 2010, and the\\u00a0 embryo of dependency matrix seems to have been discarded. This is a good news for my business, <a href=\\"http://www.ndepend.com/Doc_VS_Arch.aspx\\" target=\\"_blank\\">generating a graph with NDepend</a> is instantaneous in most situations, and it is a matter of dozens of seconds to minutes with VS 2010 and 2012.</p>\\n<p>The product contains many minor bugs, which is normal at a pre-beta stage.</p>\\n<p>The install process is still super slow (&gt; an hour on my fast SSD laptop). I wish VS features could be grain-partitioned (Wnd8 tools, TFS, SQL-tools, F# tools, Game dev tools, Web dev tools&#8230;). The minimal installation takes more than 8GB on hard-drive!</p>\\n<p>I didn&#8217;t test all the Wnd8/WPF/ASP.NET/WCF fancy new features, since I won&#8217;t develop with these until VS vNextNextNext is released! I believe I am like many real-world developers, developing an existing product that depends on a well defined set of <em>not so new</em> technologies, yet still passionated about what&#8217;s next. What really matters to developers in my situation, is to get bonus on what I am already using today (performance, solution explorer, quick search, code clone&#8230;) and VS 2012 seems to offer many of these bonus!</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/hWyLXx0fryc\\" width=\\"1\\" />", "summary": "In case you are not aware, a developer preview version of Visual Studio vNext has been released yesterday. I just played an hour with it and it seems that performances are finally here! The same way I skipped Vista to&#160;&#8230; <a href=\\"http://codebetter.com/patricksmacchia/2011/09/15/a-first-gla", "id": "http://codebetter.com/patricksmacchia/?p=370", "categories": [], "metadata": {"guid": "2bda21ae-6134-4cc7-a08f-9d88d358dbb7", "likes": 0, "is_published": false}}, {"author": "Howard Dierking", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/ISFFbcTq8Vw/", "title": "Web API Preview 5 Is Now Available", "datetime": "2011-09-15T00:41:09", "html": "<p>Today, <a href=\\"http://codebetter.com/glennblock/\\">Glenn</a> is announcing at the <a href=\\"http://www.buildwindows.com/\\">BUILD conference</a> that <a href=\\"http://wcf.codeplex.com/releases/view/73399\\">Web API preview 5</a> is available both on <a href=\\"http://wcf.codeplex.com/\\">CodePlex</a> and <a href=\\"http://nuget.org/\\">Nuget</a>.&nbsp; If you\\u2019ve been following the project for while, you\\u2019ll note that we went through a dry spell there for a while regarding updates.&nbsp; This was due primarily to the level of manual effort involved in updating our bits.&nbsp; Fortunately, we <a href=\\"http://codebetter.com/howarddierking/2011/09/11/one-of-the-small-costs-of-transparency/\\">recently automated away all of that manual effort</a> and are excited to get you new bits (and excited about getting bits to you much more frequently going forward). Here is a high level list of what you can expect to see in preview 5 as well as some notable changes.</p>\\n<h2>New Features/Enhancements</h2>\\n<ul>\\n<li>OData Formatter\\n<li>Dependency refactoring from host common code\\n<li>Support for Batch with mime/mixed content where every part has a Get request\\n<li>Web API code-based configuration (simplifications)\\n<li>Web-based test client for WCF Web API\\n<li>Http File upload\\n<li>Refactored formatters\\n<li>Better IoC support\\n<li>Additional samples for specific features such as file upload\\n<li>Content negotiation now supports qualifiers\\n<li>ActionOfStreamContent \\u2013 Enables accessing the raw content stream </li>\\n</ul>\\n<h2>New Prototype Features (on WebAPI-Prototype branch)</h2>\\n<ul>\\n<li>WebApiConfiguration includes conventions for WebGet/WebInvoke\\n<li>WebApiRoute provides better side by side integration with MVC routes\\n<li>MapServiceRoute extension method simplified registration and usage of WebApiConfiguration\\n<li>SetDefaultHttpConfiguration / GetDefaultHttpConfiguration extension methods enable the getting and setting of a global configuration object that will be used by default by MapServiceRoute unless a specific one is provided\\n<li>MediaTypeFormatterCollectionExtensions.AddRange enables a more compact way to add formatters\\n<li>FormUrlEncodingMediaTypeFormatter\\n<li>Task&lt;T&gt; for Web API operations and sample </li>\\n</ul>\\n<h2>Breaking Changes</h2>\\n<ul>\\n<li>DelegatingChannel renamed to DelegatingHandler\\n<li>HttpChannel renamed to HttpMessageHandler\\n<li>FormUrlEncodingMediaTypeFormatter and JsonValueMediaTypeFormatter were moved from the default branch to the WebAPI-Prototype branch as they are not currently part of the core product source\\n<li>DelegatingHandler no longer require passing in a channel in the constructor making it more friendly to inversion of control (IoC) containers\\n<li>New constructor overload on HttpMessageHandlerFactory overload which accepts a Func&lt;IEnumerable&lt;DelegatingHandler&gt;&gt; to allow user code or IoC containers to construct handlers.\\n<li>IQueryable previously supported case-insensitive matches on operators. In the current drop we only will match on lowercase operators i.e. \\u201c$top\\u201d but not \\u201c$Top\\u201d. According to the spec this is correct behavior however we could relax it in the future. </li>\\n</ul>\\n<h2>Nuget</h2>\\n<p>Like I mentioned above, preview 5 is also being released on Nuget today. Here\\u2019s the breakdown of the Nuget packages that will be available:\\n<ul>\\n<li><strong>HttpClient</strong> \\u2013 like it sounds, this gives you the HttpClient object model, which can be used by both the server and the client for a symmetric Http programming experience.\\n<li><strong>JsonValue</strong> \\u2013 Contains JsonValue api for typeless / dynamic access to Json.\\n<li><strong>WebApi</strong> \\u2013 The server-side object model for Web API\\n<li><strong>WebApi.All</strong> \\u2013 preserved for backwards compatibility; basically just pulls in everything.\\n<li><strong>WebApi.Core</strong> \\u2013 preserved for backwards compatibility; pulls in WebApi.0.5.0\\n<li><strong>WebApi.Enhancements</strong> \\u2013 gives you the Web API core product code plus the enhancements library (from the prototype branch)\\n<li><strong>WebApi.OData</strong> \\u2013 enables returning OData from a Web API. </li>\\n</ul>\\n<p>In addition to the core Nuget packages, we\\u2019re also pushing up a set of symbol packages so that you can more easily debug through Web API source code.</p>\\n<ul>\\n<li>HttpClient.0.5.0.symbols.nupkg\\n<li>JsonValue.0.5.0.symbols.nupkg\\n<li>WebApi.0.5.0.symbols.nupkg\\n<li>WebApi.Enhancements.0.5.0.symbols.nupkg\\n<li>WebApi.OData.0.5.0.symbols.nupkg </li>\\n</ul>\\n<h2>Updated Content</h2>\\n<p>In addition to updating the source code and binaries, we\\u2019ve pushed up a more current set of <a href=\\"http://wcf.codeplex.com/documentation\\">getting started material</a>, including both information on getting started with the core product bits and information on getting started using the Http enhancements library on the prototype branch.&nbsp; There\\u2019s even <a href=\\"http://vimeo.com/28139763\\">this video</a> on how to take advantage of our built-in test client.</p>\\n<h2>Navigating Our CodePlex Repository \\u2013 the WebAPI-Prototype branch</h2>\\n<p>One thing that we wanted to improve with this push was a more clear view of what was product code and what was prototype or proof-of-concept code.&nbsp; Therefore, we created a &#8216;WebAPI-Prototype&#8217; branch and pulled all non-product code (which translates into all code that is not checked into our internal source control) out of the default branch and into the prototype branch.&nbsp; </p>\\n<p><a href=\\"http://codebetter.com/howarddierking/files/2011/09/clip_image001.jpg\\"><img alt=\\"clip_image001\\" border=\\"0\\" height=\\"197\\" src=\\"http://codebetter.com/howarddierking/files/2011/09/clip_image001_thumb.jpg\\" style=\\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\\" width=\\"240\\" /></a></p>\\n<p>This structure provides 2 main benefits: </p>\\n<ul>\\n<li>As mentioned above, better transparency between supported product bits and proof-of-concept bits\\n<li>By having the default branch be a reflection of our internal repository, we can update it much more frequently because we won&#8217;t have to account for any changes that would have happened outside of our internal repo.\\n<p>One thing to note about the introduction of this branch is that samples currently live in the prototype branch \\u2013 so if you want to use the samples as a way to get started building with Web API, you\\u2019ll want to update to the prototype branch.&nbsp; That said, there are samples that exist in the &#8216;Tests/*/Scenarios&#8217; folders.&nbsp; For example, the Mime multipart sample can be found at <a href=\\"http://wcf.codeplex.com/SourceControl/changeset/view/1e77229b0064#WCFWebApi%2fHttp%2fTest%2fMicrosoft.Net.Http.Formatting%2fScenarios%2fMimeMultipart%2fProgram.cs\\">&#8216;Test\\\\Microsoft.Net.Http.Formatting\\\\Scenarios\\\\MimeMultipart&#8217;</a>.</p>\\n</li>\\n</ul>\\n<p>As you can see, we\\u2019ve added a lot of new goodness with preview 5 and are excited to have you test-drive the bits and let us know what you think.&nbsp; And again, now that we\\u2019ve automated the process of getting our code pushed to CodePlex, expect to see updates coming regularly.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/ISFFbcTq8Vw\\" width=\\"1\\" />", "summary": "Today, Glenn is announcing at the BUILD conference that Web API preview 5 is available both on CodePlex and Nuget.&#160; If you\\u2019ve been following the project for while, you\\u2019ll note that we went through a dry spell there for a&#160;&#8230; <a href=\\"http://codebetter.com/howarddierking/2011/09/15/web-", "id": "http://codebetter.com/howarddierking/?p=146", "categories": [], "metadata": {"guid": "1178f0ef-3b8f-48d5-a407-c3bd62c293ff", "likes": 0, "is_published": false}}, {"author": "Sebastien Lambla", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/4MapDEElQYs/", "title": "Extending configuration in OpenRasta 2.1", "datetime": "2011-09-14T17:17:11", "html": "<p><em>[Updated to clarify what the configuration meta-model actually is.]</em></p>\\n<p>The latest OpenRasta 2.1 code contains some changes that make extending the fluent API easier, and provide a supported way for you to write those extensions in a way that won\\u2019t break with OpenRasta 3.0.</p>\\n<h2>OpenRasta configuration meta-model</h2>\\n<p>The one thing everyone knows about OpenRasta is it\\u2019s resource-oriented fluent configuration API. What few people know is how it works behind the scene.</p>\\n<p>Whenever you configure a resource, the fluent API creates a ResourceModel instance and stores it. Once all the configurations are done, a set of objects process those registrations to initialize OpenRasta itself, such as registering types in the container, mapping URIs or creating a list of codecs.</p>\\n<p>Each of the configuration elements of OpenRasta is represented by one configuration object, and the set of all those configuration bits is what we call the configuration meta-model, and is stored in the IMetaModelRepository service.</p>\\n<p>The astute reader will have noticed that in practice this means that the use of the fluent API is optional, and indeed the astute reader would be absolutely right.</p>\\n<p>One of the things that was not easily doable in 2.0 was extending that meta-model by extending the existing fluent configuration API. Why would we want to do this? Let\\u2019s take an example that will expose the whole stack of extension points in OpenRasta and add support for authentication at the configuration level.</p>\\n<h2>Understanding the new extension points</h2>\\n<p>A typical 2.x era configuration for a resource contains multiple chained methods, one per thing you want to configure for a resource.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">using</span><span style=\\"color: #e0e0e0;\\"> (</span><span style=\\"color: #c2a0fa;\\">OpenRastaConfiguration</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Manual</span><span style=\\"color: #e0e0e0;\\">)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #c2a0fa;\\">ResourceSpace</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Has</span><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bdb76b;\\">// IHas</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">ResourcesOfType</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">UserDocument</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\">()\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bdb76b;\\">// IResource</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">AtUri</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #fa8072;\\">&quot;/public/{filename}&quot;</span><span style=\\"color: #e0e0e0;\\">)\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bdb76b;\\">// IUri</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">HandledBy</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">UserDocumentHandler</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\">()\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bdb76b;\\">// IHandler</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">AsXmlDataContract</span><span style=\\"color: #e0e0e0;\\">();\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bdb76b;\\">// ICodec</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></div>\\n</p></div>\\n</p></div>\\n<p>The interfaces that you see on the right are new to 2.1 and are where the magic happens.</p>\\n<p>Let\\u2019s say we want to require authentication for any UserDocument resource. The recommended way to do this is to attach an extension method in your namespace and attach it to IResource.</p>\\n<p>To prevent intellisense from showing a lot of rubbish on those interfaces, to gain access to the extensibility points of the configuration API you need to cast the instance you get to IXxxTarget. In our example, let\\u2019s create a RequiresAuthentication method and add some metadata to that resource registration.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">static</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">class</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #c2a0fa;\\">AuthenticationConfiguration</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">static</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #5391ee;\\">T</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffc488;\\">RequiresAuthentication</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #5391ee;\\">T</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #00bfff;\\">this</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #5391ee;\\">T</span><span style=\\"color: #e0e0e0;\\"> root) </span><span style=\\"color: #00bfff;\\">where</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #5391ee;\\">T</span><span style=\\"color: #e0e0e0;\\">:</span><span style=\\"color: #71ffff;\\">IResourceDefinition</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">var</span><span style=\\"color: #e0e0e0;\\"> target </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> root </span><span style=\\"color: #00bfff;\\">as</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #71ffff;\\">IResourceTarget</span><span style=\\"color: #e0e0e0;\\">;</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0target</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Resource</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Properties</span><span style=\\"color: #e0e0e0;\\">[</span><span style=\\"color: #fa8072;\\">&quot;caffeineit.demos.fluentauth.enabled&quot;</span><span style=\\"color: #e0e0e0;\\">] </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">true</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">return</span><span style=\\"color: #e0e0e0;\\"> root;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0}</span></div>\\n</p></div>\\n</p></div>\\n<p>The IResourceTarget interface contains about everything you need to add anything you want to the configuration model: the meta-model repository, the current resource registration and its list of URIs, Handlers and Codecs.</p>\\n<p>Here we\\u2019ve added some additional data to enable authentication that we need to process from somewhere else.</p>\\n<h2>Platform-wide operation interceptors</h2>\\n<p>The second extension point we\\u2019ll use is the support for operation interceptors, which are small components that can interact and make decisions before your handler code gets called.</p>\\n<p>You may have seen them being used in OpenRasta on a per-method basis, usually together with an attribute that creates them, such as [RequiresAuthentication] or [RequiresRole]</p>\\n<p>Whenver a URI is matched by OpenRasta, it is associated with a <strong>resource key</strong>. This is the cornerstone of the OpenRasta model, as with a resource key we can find all handlers, URIs, codecs and anything else associated with the resource we have. We\\u2019re going to be using this to get the information we\\u2019ve added in our configuration.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">class</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00d2d2;\\">FluentAuthenticationInterceptor</span><span style=\\"color: #e0e0e0;\\"> : </span><span style=\\"color: #71ffff;\\">IOperationInterceptor</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #71ffff;\\">IMetaModelRepository</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #bfbfff;\\">_configuration</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #71ffff;\\">ICommunicationContext</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #bfbfff;\\">_env</span><span style=\\"color: #e0e0e0;\\">;</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00d2d2;\\">FluentAuthenticationInterceptor</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #71ffff;\\">IMetaModelRepository</span><span style=\\"color: #e0e0e0;\\"> configuration, </span><span style=\\"color: #71ffff;\\">ICommunicationContext</span><span style=\\"color: #e0e0e0;\\"> env)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bfbfff;\\">_configuration</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> configuration;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bfbfff;\\">_env</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> env;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">bool</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffb7db;\\">BeforeExecute</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #71ffff;\\">IOperation</span><span style=\\"color: #e0e0e0;\\"> operation)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">var</span><span style=\\"color: #e0e0e0;\\"> currentResource </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #bfbfff;\\">_env</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">PipelineData</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">ResourceKey</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">var</span><span style=\\"color: #e0e0e0;\\"> registration </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #bfbfff;\\">_configuration</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">ResourceRegistrations</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">FirstOrDefault</span><span style=\\"color: #e0e0e0;\\">(x </span><span style=\\"color: #a6a0e0;\\">=&gt;</span><span style=\\"color: #e0e0e0;\\"> x</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">ResourceKey</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">==</span><span style=\\"color: #e0e0e0;\\"> currentResource);</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">object</span><span style=\\"color: #e0e0e0;\\"> authEnabled;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">if</span><span style=\\"color: #e0e0e0;\\"> (registration </span><span style=\\"color: #a6a0e0;\\">!=</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">null</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">&amp;&amp;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0registration</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Properties</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">TryGetValue</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #fa8072;\\">&quot;caffeineit.demos.fluentauth.enabled&quot;</span><span style=\\"color: #e0e0e0;\\">, </span><span style=\\"color: #00bfff;\\">out</span><span style=\\"color: #e0e0e0;\\"> authEnabled) </span><span style=\\"color: #a6a0e0;\\">&amp;&amp;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0(</span><span style=\\"color: #00bfff;\\">bool</span><span style=\\"color: #e0e0e0;\\">)authEnabled)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">if</span><span style=\\"color: #e0e0e0;\\"> (</span><span style=\\"color: #bfbfff;\\">_env</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">User</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Identity</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">IsAuthenticated</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">==</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">false</span><span style=\\"color: #e0e0e0;\\">)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bfbfff;\\">_env</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">OperationResult</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">new</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00d2d2;\\">OperationResult</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #00d2d2;\\">Unauthorized</span><span style=\\"color: #e0e0e0;\\">();</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">return</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">false</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">return</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">true</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffff80;\\">Func</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #71ffff;\\">IEnumerable</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">OutputMember</span><span style=\\"color: #a6a0e0;\\">&gt;&gt;</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffb7db;\\">RewriteOperation</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #ffff80;\\">Func</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #71ffff;\\">IEnumerable</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">OutputMember</span><span style=\\"color: #a6a0e0;\\">&gt;&gt;</span><span style=\\"color: #e0e0e0;\\"> operationBuilder)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">return</span><span style=\\"color: #e0e0e0;\\"> operationBuilder;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">bool</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffb7db;\\">AfterExecute</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #71ffff;\\">IOperation</span><span style=\\"color: #e0e0e0;\\"> operation, </span><span style=\\"color: #71ffff;\\">IEnumerable</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">OutputMember</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\"> outputMembers)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">return</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">true</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0}</span></div>\\n</p></div>\\n</p></div>\\n<p>A few things are happening here. Of course we use <strong>dependency injection</strong> to take a dependency on the meta-model repository, where our configuration is stored, and on the ICommunicationContext, which gives us the principal of the current user, and which we need to know if someone has authenticated. On a side-note, that property is populated based on your hosting environment, so if you run on asp.net and have Forms authentication enabled, that will flow automatically with no work on your part.</p>\\n<p>We do the work in BeforeExecute so we can stop execution before any other code runs, be it other interceptors or our handler. Finally, if a user is not authenticated, we override the OperationResult for the current connection and return <strong>false</strong>, which instructs OpenRasta to stop processing anything and start writing the response back to the client.</p>\\n<h2>Hooking up the interceptor</h2>\\n<p>The last bit we have to do is to give the interceptor to OpenRasta, and like everything else, it is handled by the IoC container. We can register custom dependencies in a unified fashion using the fluent configuration API.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #c2a0fa;\\">ResourceSpace</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Uses</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">CustomDependency</span><span style=\\"color: #a6a0e0;\\">&lt;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #71ffff;\\">IOperationInterceptor</span><span style=\\"color: #e0e0e0;\\">, </span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00d2d2;\\">FluentAuthenticationInterceptor</span><span style=\\"color: #a6a0e0;\\">&gt;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0(</span><span style=\\"color: #8080c0;\\">DependencyLifetime</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #8080c0;\\">Transient</span><span style=\\"color: #e0e0e0;\\">);</span></div>\\n</p></div>\\n</p></div>\\n<p>&nbsp;</p>\\n<h2>Cleaning up and ready for packaging</h2>\\n<p>Finally, like most plugins in OpenRasta, you should do all your configuration work as an extension on IUses, so we wrap the work that was done in the last bit into a nice extension method.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">static</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">void</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffc488;\\">FluentAuthentication</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #00bfff;\\">this</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #71ffff;\\">IUses</span><span style=\\"color: #e0e0e0;\\"> uses)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">var</span><span style=\\"color: #e0e0e0;\\"> target </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> (</span><span style=\\"color: #71ffff;\\">IFluentTarget</span><span style=\\"color: #e0e0e0;\\">)uses;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0target</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Repository</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">CustomRegistrations</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">Add</span><span style=\\"color: #e0e0e0;\\">(</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">new</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00d2d2;\\">DependencyRegistrationModel</span><span style=\\"color: #e0e0e0;\\">(</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">typeof</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #71ffff;\\">IOperationInterceptor</span><span style=\\"color: #e0e0e0;\\">),</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">typeof</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #00d2d2;\\">FluentAuthenticationInterceptor</span><span style=\\"color: #e0e0e0;\\">),</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #8080c0;\\">DependencyLifetime</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #8080c0;\\">Transient</span><span style=\\"color: #e0e0e0;\\">)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0);</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></div>\\n</p></div>\\n</p></div>\\n<p>&nbsp;</p>\\n<p>And now our configuration looks nice and understandable.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">using</span><span style=\\"color: #e0e0e0;\\"> (</span><span style=\\"color: #c2a0fa;\\">OpenRastaConfiguration</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Manual</span><span style=\\"color: #e0e0e0;\\">)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #c2a0fa;\\">ResourceSpace</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Uses</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">FluentAuthentication</span><span style=\\"color: #e0e0e0;\\">();</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #c2a0fa;\\">ResourceSpace</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Has</span><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">ResourcesOfType</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">UserDocument</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\">() </span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">RequiresAuthentication</span><span style=\\"color: #e0e0e0;\\">()</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">AtUri</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #fa8072;\\">&quot;/public/{filename}&quot;</span><span style=\\"color: #e0e0e0;\\">)\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">HandledBy</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">UserDocumentHandler</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\">()</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">AsXmlDataContract</span><span style=\\"color: #e0e0e0;\\">();\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></div>\\n</p></div>\\n</p></div>\\n<h2>Conclusion</h2>\\n<p>The same extension points are available for URIs, for handlers, codecs, media type definitions and any other configuration model that exists. If you hang off those interfaces, your extensions will still work for the new compact configuration API and the convention-based configuration API that will be part of OpenRasta 3.0.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/4MapDEElQYs\\" width=\\"1\\" />", "summary": "[Updated to clarify what the configuration meta-model actually is.] The latest OpenRasta 2.1 code contains some changes that make extending the fluent API easier, and provide a supported way for you to write those extensions in a way that won\\u2019t&#160;&#8230; <a href=\\"http://codebetter.com/sebastienla", "id": "http://codebetter.com/sebastienlambla/2011/09/14/extending-configuration-in-openrasta-2-1/", "categories": [], "metadata": {"guid": "34e6a688-3518-43f9-957b-eae600e75e4b", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://rubenhenares.404fs.com/get-into-electronics/", "title": "Get into Electronics", "datetime": "2011-09-14T11:06:57", "html": "<p>Creating applications is challenging and fun. But what about creating your own hardware to interact with them?<br />\\nIf you want to get into electronics, but it sounds like rocket science to you. <a href=\\"http://www.sparklelabs.com/\\">Sparkle Labs</a> has released its <a href=\\"http://sparklelabs.com/index_store.php#Discover%20Electronics\\">Discover Electronics Kit</a> version 2.<br />\\nThe <a href=\\"http://learn.sparklelabs.com/\\">Sparkle Labs Education</a> site has a bunch of interesting information and great video tutorials that will help you understand the basics, current, resistors, capacitors, etc.</p>", "summary": "Creating applications is challenging and fun. But what about creating your own hardware to interact with them? If you want to get into electronics, but it sounds like rocket science to you. Sparkle Labs has released its Discover Electronics Kit version 2. The Sparkle Labs Education site has a bunch ", "id": "http://rubenhenares.404fs.com/?p=244", "categories": [], "metadata": {"guid": "ed19590a-71e5-4fe0-83f9-ea3f41ddd30c", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/14/possible-downtime/", "title": "Possible downtime", "datetime": "2011-09-14T09:00:23", "html": "<div class=\\"note tools\\">I&#8217;m about to change hosts so some downtime in the next 72 hours is expected.</p>\\n<p>I&#8217;m also cleaning up my domains and folder structure so certain links might be broken but I&#8217;ll fix them soon.</p></div>\\n<p><!-- PHP 5.x --></p>", "summary": "I&#8217;m about to change hosts so some downtime in the next 72 hours is expected.\\nI&#8217;m also cleaning up my domains and folder structure so certain links might be broken but I&#8217;ll fix them soon.\\n PHP 5.x ", "id": "http://www.zspline.net/blog/?p=1521", "categories": [], "metadata": {"guid": "bbbd90fb-0322-4835-b4d6-f874f24b1968", "likes": 0, "is_published": false}}, {"author": "JayG (noreply@blogger.com)", "url": "http://feedproxy.google.com/~r/ScriptSwell/~3/ixPXczKpc8Q/webinar-with-zbrush-guru-ryan-kingslien.html", "title": "Webinar with ZBrush Guru Ryan Kingslien", "datetime": "2011-09-13T19:01:36.678000", "html": "<div dir=\\"ltr\\" style=\\"text-align: left;\\">\\nRecently <a href=\\"http://image-metrics.com/\\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\\"http://zbrushworkshops.com/\\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry\'s most sought after artists and it was a pleasure to hear his take on how to tackle learning facial anatomy. &nbsp;He has even recently started a new class on his <a href=\\"http://zbrushworkshops.com/\\">website</a> based on the content of the webinar. &nbsp;Check out the video below.\\n\\n<br />\\n<br />\\n<a href=\\"http://vimeo.com/28949284\\">Sculpting The Face - Anatomy &amp; Form</a><br />\\n<br />\\n<div class=\\"separator\\" style=\\"clear: both; text-align: center;\\">\\n<a href=\\"http://vimeo.com/28949284\\"><span id=\\"goog_1004908762\\"></span><span id=\\"goog_1004908763\\"></span><img border=\\"0\\" height=\\"298\\" src=\\"http://3.bp.blogspot.com/-VZbhgmM9wKw/TnAIChhqyfI/AAAAAAAAAfY/kvyVy_wGroU/s400/ryan_webinar.jpg\\" width=\\"400\\" /></a></div>\\n<div class=\\"separator\\" style=\\"clear: both; text-align: center;\\">\\n<br /></div>\\n<div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">\\nYou can find videos of some of the other <a href=\\"http://vimeo.com/user6082681/videos\\">webinars</a> we\'ve done at Image Metrics in the right-hand side column.</div>\\n</div>\\n<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/9194959783867453392-8985862413181732524?l=www.scriptswell.net\\" width=\\"1\\" /></div>\\n<p><a href=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/da\\"><img border=\\"0\\" ismap=\\"true\\" src=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/di\\" /></a><br />\\n<a href=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/da\\"><img border=\\"0\\" ismap=\\"true\\" src=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/di\\" /></a></p><img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/ScriptSwell/~4/ixPXczKpc8Q\\" width=\\"1\\" />", "summary": "<div dir=\\"ltr\\" style=\\"text-align: left;\\">\\nRecently <a href=\\"http://image-metrics.com/\\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\\"http://zbrushworkshops.com/\\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry\'s most sought after artists and", "id": "tag:blogger.com,1999:blog-9194959783867453392.post-8985862413181732524", "categories": [], "metadata": {"guid": "6ebec914-724a-4a68-bf74-df6845814b09", "likes": 0, "is_published": false}}, {"author": "JayG (noreply@blogger.com)", "url": "http://feedproxy.google.com/~r/ScriptSwell/~3/ixPXczKpc8Q/webinar-with-zbrush-guru-ryan-kingslien.html", "title": "Webinar with ZBrush Guru Ryan Kingslien", "datetime": "2011-09-13T19:01:36.678000", "html": "<div dir=\\"ltr\\" style=\\"text-align: left;\\">\\nRecently <a href=\\"http://image-metrics.com/\\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\\"http://zbrushworkshops.com/\\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry\'s most sought after artists and it was a pleasure to hear his take on how to tackle learning facial anatomy. &nbsp;He has even recently started a new class on his <a href=\\"http://zbrushworkshops.com/\\">website</a> based on the content of the webinar. &nbsp;Check out the video below.\\n\\n<br />\\n<br />\\n<a href=\\"http://vimeo.com/28949284\\">Sculpting The Face - Anatomy &amp; Form</a><br />\\n<br />\\n<div class=\\"separator\\" style=\\"clear: both; text-align: center;\\">\\n<a href=\\"http://vimeo.com/28949284\\"><span id=\\"goog_1004908762\\"></span><span id=\\"goog_1004908763\\"></span><img border=\\"0\\" height=\\"298\\" src=\\"http://3.bp.blogspot.com/-VZbhgmM9wKw/TnAIChhqyfI/AAAAAAAAAfY/kvyVy_wGroU/s400/ryan_webinar.jpg\\" width=\\"400\\" /></a></div>\\n<div class=\\"separator\\" style=\\"clear: both; text-align: center;\\">\\n<br /></div>\\n<div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">\\nYou can find videos of some of the other <a href=\\"http://vimeo.com/user6082681/videos\\">webinars</a> we\'ve done at Image Metrics in the right-hand side column.</div>\\n</div>\\n<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/9194959783867453392-8985862413181732524?l=www.scriptswell.net\\" width=\\"1\\" /></div>\\n<p><a href=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/da\\"><img border=\\"0\\" ismap=\\"true\\" src=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/di\\" /></a><br />\\n<a href=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/da\\"><img border=\\"0\\" ismap=\\"true\\" src=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/di\\" /></a></p><img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/ScriptSwell/~4/ixPXczKpc8Q\\" width=\\"1\\" />", "summary": "<div dir=\\"ltr\\" style=\\"text-align: left;\\">\\nRecently <a href=\\"http://image-metrics.com/\\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\\"http://zbrushworkshops.com/\\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry\'s most sought after artists and", "id": "tag:blogger.com,1999:blog-9194959783867453392.post-8985862413181732524", "categories": [], "metadata": {"guid": "34764f57-b4bc-41b1-9079-7477ed6f2302", "likes": 0, "is_published": false}}, {"author": "Dave Ferner", "url": "http://www.supermono-studios.com/2011/09/forever-drive-official-trailer/", "title": "FOREVER DRIVE!!!!!! Official trailer", "datetime": "2011-09-13T13:06:18", "html": "<p><a href=\\"http://www.youtube.com/watch?v=iYCMGa5x5oA\\"><img height=\\"298\\" src=\\"http://supermono-studios.com/wp-content/uploads/2011/09/youtube.jpg\\" width=\\"480\\" /></a></p>\\n<p>Hey, check it out! Official trailer for our very-soon-to-be-released arcade driving future game! Lots of never-seen-before footage. Well, we&#8217;ve seen it before, cos we made it, but you haven&#8217;t. So watch it.</p>", "summary": "Hey, check it out! Official trailer for our very-soon-to-be-released arcade driving future game! Lots of never-seen-before footage. Well, we&#8217;ve seen it before, cos we made it, but you haven&#8217;t. So watch it.", "id": "http://www.supermono-studios.com/?p=1019", "categories": [], "metadata": {"guid": "04ca7002-b0cf-434b-9bc5-6fe35aa7de7e", "likes": 0, "is_published": false}}, {"author": "Sebastien Lambla", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/OGdGTuJ80l4/", "title": "Trying out OpenWrap 2.0", "datetime": "2011-09-12T21:11:56", "html": "<p><font color=\\"#ff0000\\"><em>[Update 3: github is not pushing the changes to openwrap.org properly, I\\u2019ve updated the link to the shell in the post to point to the correct file.]</em></font></p>\\n<p><font color=\\"#ff0000\\"><em>[Update 2: The problems with side-by-side of 2.0 and 1.0 seem to be mostly resolved. Do not install 2.0 in your system repository just yet, keep it in a test project, and please update OpenWrap to the newly released 1.0.1 version which solves some of those issues.]</em></font></p>\\n<p><font color=\\"#ff0000\\"><em>[Update: I\\u2019ve temporarily removed the 2.0 packages from the beta server due to unforeseen 1.0.0 / 2.0 side-by-side execution due to a bug in 1.0.0. Expect a new set of packages soon.]</em></font></p>\\n<p>We\\u2019ve come a long way since the initial work started on OpenWrap 1.1 that turned into 2.0.</p>\\n<p>We now have ReSharper 6 support and a whole lot of new features, and we\\u2019re 50 open issues from being feature complete. Still, it\\u2019s time to announce a few things.</p>\\n<p>First, the shell has been updated to 2.0, and bring back the possibility of deleting your /wraps folder when something goes bad to force an update, as well as fix a bunch of bugs that existed in the 1.1 release. Go <a href=\\"http://github.com/OpenWrap/openwrap.github.com/raw/master/o.exe\\">download it now</a>.</p>\\n<p>The second thing is that test packages of OpenWrap 2.0 are available for testing, but not on the main repository. If you have OpenWrap 1.0 installed, you can upgrade a specific project to OpenWrap 2.0 by adding the beta repository.</p>\\n<pre>C:\\\\src&gt; o add-remote beta http://wraps.openwrap.org/beta/\\n# OpenWrap Shell 2.0.0.8\\n# Copyright \\u00a9 naughtyProd Limited 2009-2011\\n# Using C:\\\\Users\\\\sebastien.lambla\\\\AppData\\\\Local\\\\openwrap\\\\wraps\\\\_cache\\\\openwrap-2.0.0.81133579\\\\bin-net35\\\\OpenWrap.dll (2.0.0.0)\\nRemote repository \'beta\' added.\\n\\n<font color=\\"#444444\\" face=\\"Georgia\\" size=\\"3\\">Then you can update your project to the new test version.</font></pre>\\n<pre><font color=\\"#444444\\" face=\\"Georgia\\" size=\\"3\\"></font>&nbsp;</pre>\\n<pre>C:\\\\src\\\\myProject&gt; o update-wrap openwrap -project\\n</pre>\\n<p>&nbsp;</p>\\n<p>If you want to install 2.0 in your system repository, and at this stage it is not recommended as those are early previews that do not guarantee that side-by-side execution will work, then any 1.0 project may fail with <strong>noun not found</strong> errors. If this is your case:</p>\\n<ul>\\n<li>Change your wrap descriptor to force 1.0, so \\u201cdepends: openwrap content\\u201d should be changed to \\u201cdepends: openwrap = 1.0 content\\u201d\\n<li>Force an update to 1.0.1 by doing \\u201co update-wrap openwrap \\u2013proj \\u2013usesystem\\u201d\\n<li>If this fails, let us know how, then simply reset your system repository to a known state using the \\u2013shellpanic flag before executing your update-wrap command. </li>\\n</ul>\\n<p>In the next couple of weeks there will be very long blog posts about all the new features we have in there for you, but if you\\u2019ve been dying to test out the alpha releases, now you know how.</p>\\n<p>As usual, contributors are welcome, bug reports should be filled on <a href=\\"http://github.com/openrasta/openwrap/\\">http://github.com/openrasta/openwrap/</a>. If you\\u2019ve not involved yourself in real open source, by the people, for the people, in the open and in all honesty, now is the time.</p>\\n<p>OpenWrap is the longest running and most open package manager on .net, come and have a look.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/OGdGTuJ80l4\\" width=\\"1\\" />", "summary": "[Update 3: github is not pushing the changes to openwrap.org properly, I\\u2019ve updated the link to the shell in the post to point to the correct file.] [Update 2: The problems with side-by-side of 2.0 and 1.0 seem to be&#160;&#8230; <a href=\\"http://codebetter.com/sebastienlambla/2011/09/12/trying-out-o", "id": "http://codebetter.com/sebastienlambla/2011/09/12/trying-out-openwrap-2-0-2/", "categories": [], "metadata": {"guid": "44db5f56-4096-4ac4-b12d-4a2a5acbb3c9", "likes": 0, "is_published": false}}, {"author": "Howard Dierking", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/r8j_Lvbp0Uk/", "title": "One of the small costs of transparency", "datetime": "2011-09-11T18:23:34", "html": "<p>If you\\u2019ve been following wcf.codeplex.com, you\\u2019ll notice that we\\u2019ve had a flurry of activity over the last couple of weeks, culminating in the release of Web API preview 5.&nbsp; If you\\u2019ve been following our Codeplex repository for a while, you\\u2019ll also note that this flurry of activity was preceded by months of inactivity.&nbsp; This wasn\\u2019t because we were just sitting around talking waiting for the code to update itself.&nbsp; We had been wanting to update the repo for a while.&nbsp; The problem was that the process to update the code was very hard and very manual (meaning it was also very error prone).&nbsp; This is largely due to the fact that our source code is completely self-contained in its repository.&nbsp; Usually, you would think of self-containment as a good thing.&nbsp; However, in the scenario where you want to be able to share your code with others (like on Codeplex, for example), this property becomes a major problem.&nbsp; This is because code in our repository takes 0 dependencies on anything outside of our repository \\u2013 including things like .NET Framework assemblies.&nbsp; Additionally, our build files contain all sorts of includes to custom tools, custom build targets/properties, etc.&nbsp; As a result, getting code out of our repository and then updating it so that it will actually build is a non-trivial task \\u2013 until now.</p>\\n<p>I went through this manual process once and quickly decided that I would never do that again.&nbsp; I already had an interest in PowerShell, so decided to kill multiple birds with one stone and automate the process using PowerShell.&nbsp; Additionally, because one of the major steps in the automation workflow is transforming the project files to remove internal assembly and tool references, I called into some XSLT from my PowerShell script.</p>\\n<p>At a high level, the workflow looks as follows:</p>\\n<ol>\\n<li>Sync our product code from our internal repository</li>\\n<li>Build our product code (this will generate needed files that rely on internal build tools)</li>\\n<li>Create a new clone of the Codeplex repository</li>\\n<li>In the Codeplex clone, delete everything in the source and test folders (this will better help to identify delete files in the hg repo when committing)</li>\\n<li>Copy all source and test files from our internal repo to our hg clone</li>\\n<li>Run XSLT over all *.csproj files in the hg repository to remove all internal references</li>\\n<li>Run RegEx over all AssemblyInfo.cs files to remove delay signed info from InternalsVisibleTo attributes</li>\\n<li>Run RegEx to clean up some assembly strong name references in some test config files</li>\\n<li>Open the solution in Visual Studio and make sure that all projects build and that all tests run</li>\\n</ol>\\n<p>As you can see, there are a few things going on here \\u2013 even with the automation \\u2013 so imagine what the manual process looked like.&nbsp; </p>\\n<p>Like I mentioned earlier, this automation project gave me an excuse to do something that I had been wanting to do anyway \\u2013 learn PowerShell.&nbsp; As such, I want to show you the PowerShell script in part because you may currently (or one day) be facing a similar challenge, and in (larger) part because I want your feedback on how I can improve the PowerShell (like I said, I was learning).</p>\\n<p>Anyways, here\\u2019s the PowerShell:</p>\\n<noscript><div class=\\"gist\\" id=\\"gist-1209919\\">\\n  \\n  \\n    \\n      \\n        \\n        \\n\\n        <div class=\\"gist-file\\">\\n          <div class=\\"gist-data gist-syntax\\">\\n            \\n            \\n            \\n              <div class=\\"highlight\\"><pre><div class=\\"line\\" id=\\"LC1\\">Import-Module Pscx</div><div class=\\"line\\" id=\\"LC2\\"><br /></div><div class=\\"line\\" id=\\"LC3\\"><span class=\\"c\\"># the variables you\'ll likely need to change on your local machine</span></div><div class=\\"line\\" id=\\"LC4\\"><span class=\\"nv\\">$afroot</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;D:\\\\AppFabric&quot;</span></div><div class=\\"line\\" id=\\"LC5\\"><span class=\\"nv\\">$hgroot</span> <span class=\\"o\\">=</span> <span class=\\"s1\\">\'D:\\\\Programming Projects\'</span></div><div class=\\"line\\" id=\\"LC6\\"><span class=\\"c\\"># $hgremote = &quot;https://hg01.codeplex.com/wcf&quot;</span></div><div class=\\"line\\" id=\\"LC7\\"><span class=\\"nv\\">$hgremote</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;D:\\\\Programming Projects\\\\wcf-codeplex-baseline_RC2&quot;</span></div><div class=\\"line\\" id=\\"LC8\\"><br /></div><div class=\\"line\\" id=\\"LC9\\"><span class=\\"c\\"># derived paths</span></div><div class=\\"line\\" id=\\"LC10\\"><span class=\\"nv\\">$afwcfsource</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;\\\\private\\\\source\\\\WCF&quot;</span></div><div class=\\"line\\" id=\\"LC11\\"><span class=\\"nv\\">$afcommonsource</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;\\\\private\\\\source\\\\Common\\\\Microsoft.Server.Common&quot;</span></div><div class=\\"line\\" id=\\"LC12\\"><span class=\\"nv\\">$afwcftestsource</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;\\\\private\\\\CIT\\\\WCF&quot;</span></div><div class=\\"line\\" id=\\"LC13\\"><span class=\\"nv\\">$afcommontest</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;\\\\private\\\\testcommon&quot;</span></div><div class=\\"line\\" id=\\"LC14\\"><br /></div><div class=\\"line\\" id=\\"LC15\\"><span class=\\"nv\\">$clonename</span> <span class=\\"o\\">=</span> Get-Date -f yyyyMMdd-hhmmss</div><div class=\\"line\\" id=\\"LC16\\"><span class=\\"nv\\">$hgclonepath</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$hgroot</span> + <span class=\\"s2\\">&quot;\\\\wcf-codeplex-baseline_&quot;</span> + <span class=\\"nv\\">$clonename</span></div><div class=\\"line\\" id=\\"LC17\\"><span class=\\"nv\\">$hgsrc</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$hgclonepath</span> + <span class=\\"s2\\">&quot;\\\\WCFWebApi\\\\Http\\\\Src&quot;</span></div><div class=\\"line\\" id=\\"LC18\\"><span class=\\"nv\\">$hgtest</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$hgclonepath</span> + <span class=\\"s2\\">&quot;\\\\WCFWebApi\\\\Http\\\\Test&quot;</span></div><div class=\\"line\\" id=\\"LC19\\"><span class=\\"nv\\">$enlistmentcmdargs</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;/C set inetroot=&quot;</span> + <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;&amp;set corextbranch=appserver&amp;&quot;</span> + <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;\\\\tools\\\\path1st\\\\myenv.cmd&quot;</span></div><div class=\\"line\\" id=\\"LC20\\"><span class=\\"nv\\">$enlistmentcmd</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;C:\\\\Windows\\\\SysWOW64\\\\cmd.exe&quot;</span></div><div class=\\"line\\" id=\\"LC21\\"><span class=\\"nv\\">$bcca</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;msbuildcmd /c /a amd64&quot;</span></div><div class=\\"line\\" id=\\"LC22\\"><br /></div><div class=\\"line\\" id=\\"LC23\\"><span class=\\"nv\\">$currentpath</span> <span class=\\"o\\">=</span> Get-Location</div><div class=\\"line\\" id=\\"LC24\\"><br /></div><div class=\\"line\\" id=\\"LC25\\"><span class=\\"c\\"># 1. </span></div><div class=\\"line\\" id=\\"LC26\\">Start-Process <span class=\\"nv\\">$enlistmentcmd</span> -ArgumentList <span class=\\"o\\">(</span><span class=\\"nv\\">$enlistmentcmdargs</span> + <span class=\\"s2\\">&quot;&amp;sd sync&quot;</span><span class=\\"o\\">)</span> -Wait</div><div class=\\"line\\" id=\\"LC27\\"><br /></div><div class=\\"line\\" id=\\"LC28\\"><span class=\\"c\\"># 2.</span></div><div class=\\"line\\" id=\\"LC29\\">Start-Process <span class=\\"nv\\">$enlistmentcmd</span> -ArgumentList <span class=\\"o\\">(</span><span class=\\"nv\\">$enlistmentcmdargs</span> + <span class=\\"s2\\">&quot;&amp;cd private/source/wcf&amp;&quot;</span> + <span class=\\"nv\\">$bcca</span><span class=\\"o\\">)</span> -Wait</div><div class=\\"line\\" id=\\"LC30\\"><br /></div><div class=\\"line\\" id=\\"LC31\\"><span class=\\"c\\"># 3.</span></div><div class=\\"line\\" id=\\"LC32\\">Start-Process <span class=\\"nv\\">$enlistmentcmd</span> -ArgumentList <span class=\\"o\\">(</span><span class=\\"nv\\">$enlistmentcmdargs</span> + <span class=\\"s2\\">&quot;&amp;cd private/source/common/microsoft.server.common&amp;&quot;</span> + <span class=\\"nv\\">$bcca</span><span class=\\"o\\">)</span> -Wait</div><div class=\\"line\\" id=\\"LC33\\"><br /></div><div class=\\"line\\" id=\\"LC34\\"><span class=\\"c\\"># 4.</span></div><div class=\\"line\\" id=\\"LC35\\">Start-Process <span class=\\"nv\\">$enlistmentcmd</span> -ArgumentList <span class=\\"o\\">(</span><span class=\\"nv\\">$enlistmentcmdargs</span> + <span class=\\"s2\\">&quot;&amp;cd private/cit/wcf&amp;&quot;</span> + <span class=\\"nv\\">$bcca</span><span class=\\"o\\">)</span> -Wait</div><div class=\\"line\\" id=\\"LC36\\"><br /></div><div class=\\"line\\" id=\\"LC37\\"><span class=\\"c\\"># 5.</span></div><div class=\\"line\\" id=\\"LC38\\">Start-Process <span class=\\"nv\\">$enlistmentcmd</span> -ArgumentList <span class=\\"o\\">(</span><span class=\\"nv\\">$enlistmentcmdargs</span> + <span class=\\"s2\\">&quot;&amp;cd private/testcommon&amp;&quot;</span> + <span class=\\"nv\\">$bcca</span><span class=\\"o\\">)</span> -Wait</div><div class=\\"line\\" id=\\"LC39\\"><br /></div><div class=\\"line\\" id=\\"LC40\\">Set-Location <span class=\\"nv\\">$currentpath</span></div><div class=\\"line\\" id=\\"LC41\\"><br /></div><div class=\\"line\\" id=\\"LC42\\"><span class=\\"c\\">#6. (assuming the build is clean) todo: add error handling here</span></div><div class=\\"line\\" id=\\"LC43\\"><br /></div><div class=\\"line\\" id=\\"LC44\\"><span class=\\"c\\"># 7.</span></div><div class=\\"line\\" id=\\"LC45\\">hg clone <span class=\\"nv\\">$hgremote</span> <span class=\\"nv\\">$hgclonepath</span></div><div class=\\"line\\" id=\\"LC46\\"><br /></div><div class=\\"line\\" id=\\"LC47\\"><span class=\\"c\\"># 8.</span></div><div class=\\"line\\" id=\\"LC48\\">Get-ChildItem <span class=\\"nv\\">$hgsrc</span> | Remove-Item -Recurse</div><div class=\\"line\\" id=\\"LC49\\"><br /></div><div class=\\"line\\" id=\\"LC50\\"><span class=\\"c\\"># 9.</span></div><div class=\\"line\\" id=\\"LC51\\">Get-ChildItem <span class=\\"nv\\">$afwcfsource</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC52\\">&nbsp;&nbsp;&nbsp;&nbsp;| where<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span>.Name -notlike <span class=\\"s2\\">&quot;Tools*&quot;</span> -and <span class=\\"nv\\">$_</span>.Name -notlike <span class=\\"s2\\">&quot;*Resharper*&quot;</span><span class=\\"o\\">}</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC53\\">&nbsp;&nbsp;&nbsp;&nbsp;| Copy-Item -Destination <span class=\\"nv\\">$hgsrc</span> -Recurse</div><div class=\\"line\\" id=\\"LC54\\"><br /></div><div class=\\"line\\" id=\\"LC55\\">Copy-Item -Path <span class=\\"nv\\">$afcommonsource</span> -Destination <span class=\\"nv\\">$hgsrc</span> -Recurse</div><div class=\\"line\\" id=\\"LC56\\"><br /></div><div class=\\"line\\" id=\\"LC57\\"><span class=\\"c\\"># 10.</span></div><div class=\\"line\\" id=\\"LC58\\">Get-ChildItem <span class=\\"nv\\">$hgtest</span> | Remove-Item -Recurse -Force</div><div class=\\"line\\" id=\\"LC59\\"><br /></div><div class=\\"line\\" id=\\"LC60\\"><span class=\\"c\\"># 11.</span></div><div class=\\"line\\" id=\\"LC61\\">Get-ChildItem <span class=\\"nv\\">$afwcftestsource</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC62\\">&nbsp;&nbsp;&nbsp;&nbsp;| where<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span>.Name -notlike <span class=\\"s2\\">&quot;Tools*&quot;</span> -and <span class=\\"nv\\">$_</span>.Name -notlike <span class=\\"s2\\">&quot;*Resharper*&quot;</span><span class=\\"o\\">}</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC63\\">&nbsp;&nbsp;&nbsp;&nbsp;| Copy-Item -Destination <span class=\\"nv\\">$hgtest</span> -Recurse</div><div class=\\"line\\" id=\\"LC64\\"><br /></div><div class=\\"line\\" id=\\"LC65\\">Copy-Item -Path <span class=\\"o\\">(</span><span class=\\"nv\\">$afcommontest</span> + <span class=\\"s2\\">&quot;\\\\Common&quot;</span><span class=\\"o\\">)</span> -Destination <span class=\\"o\\">(</span><span class=\\"nv\\">$hgtest</span> + <span class=\\"s2\\">&quot;\\\\testcommon\\\\Common&quot;</span><span class=\\"o\\">)</span> -Recurse</div><div class=\\"line\\" id=\\"LC66\\">Copy-Item -Path <span class=\\"o\\">(</span><span class=\\"nv\\">$afcommontest</span> + <span class=\\"s2\\">&quot;\\\\WCF&quot;</span><span class=\\"o\\">)</span> -Destination <span class=\\"o\\">(</span><span class=\\"nv\\">$hgtest</span> + <span class=\\"s2\\">&quot;\\\\testcommon\\\\WCF&quot;</span><span class=\\"o\\">)</span> -Recurse</div><div class=\\"line\\" id=\\"LC67\\"><br /></div><div class=\\"line\\" id=\\"LC68\\"><span class=\\"c\\"># 12.</span></div><div class=\\"line\\" id=\\"LC69\\"><span class=\\"c\\"># may be able to do this without the temp file hop (http://stackoverflow.com/questions/750449/converting-xml-from-utf-16-to-utf-8-using-powershell)</span></div><div class=\\"line\\" id=\\"LC70\\"><span class=\\"c\\"># -&gt; nope, tried and it still fails with an insufficient access error</span></div><div class=\\"line\\" id=\\"LC71\\"><span class=\\"nv\\">$tempfilesuffix</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;_TEMP&quot;</span></div><div class=\\"line\\" id=\\"LC72\\"><br /></div><div class=\\"line\\" id=\\"LC73\\"><span class=\\"nv\\">$projectfiles</span> <span class=\\"o\\">=</span> Get-ChildItem <span class=\\"nv\\">$hgsrc</span> -Recurse -Include *.csproj</div><div class=\\"line\\" id=\\"LC74\\"><span class=\\"nv\\">$projectfiles</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC75\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span> <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$_</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC76\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Convert-Xml -XsltPath .<span class=\\"se\\">\\\\E</span>nlistedCITProj2CodePlexCITProj.xslt <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC77\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Out-File <span class=\\"o\\">(</span><span class=\\"nv\\">$filename</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> <span class=\\"o\\">}</span></div><div class=\\"line\\" id=\\"LC78\\"><br /></div><div class=\\"line\\" id=\\"LC79\\"><span class=\\"nv\\">$projectfiles</span> | Remove-Item -Force</div><div class=\\"line\\" id=\\"LC80\\"><br /></div><div class=\\"line\\" id=\\"LC81\\">Get-ChildItem <span class=\\"nv\\">$hgsrc</span> -Recurse -Include <span class=\\"o\\">(</span><span class=\\"s1\\">\'*.csproj\'</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> | <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC82\\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\\"o\\">{</span> <span class=\\"nv\\">$filepath</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.Name; <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC83\\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC84\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\\"nv\\">$filepath</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC85\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\\"nv\\">$filename</span>.Substring<span class=\\"o\\">(</span>0, <span class=\\"nv\\">$filename</span>.LastIndexOf<span class=\\"o\\">(</span><span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">))</span> <span class=\\"o\\">}</span></div><div class=\\"line\\" id=\\"LC86\\"><br /></div><div class=\\"line\\" id=\\"LC87\\"><span class=\\"nv\\">$testprojectfiles</span> <span class=\\"o\\">=</span> Get-ChildItem <span class=\\"nv\\">$hgtest</span> -Recurse -Include *.csproj</div><div class=\\"line\\" id=\\"LC88\\"><span class=\\"nv\\">$testprojectfiles</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC89\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span> <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$_</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC90\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Convert-Xml -XsltPath .<span class=\\"se\\">\\\\E</span>nlistedCITProj2CodePlexCITProj.xslt <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC91\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Out-File <span class=\\"o\\">(</span><span class=\\"nv\\">$filename</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> <span class=\\"o\\">}</span></div><div class=\\"line\\" id=\\"LC92\\"><br /></div><div class=\\"line\\" id=\\"LC93\\"><span class=\\"nv\\">$testprojectfiles</span> | Remove-Item -Force</div><div class=\\"line\\" id=\\"LC94\\"><br /></div><div class=\\"line\\" id=\\"LC95\\">Get-ChildItem <span class=\\"nv\\">$hgtest</span> -Recurse -Include <span class=\\"o\\">(</span><span class=\\"s1\\">\'*.csproj\'</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> | <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC96\\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\\"o\\">{</span> <span class=\\"nv\\">$filepath</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.Name; <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC97\\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC98\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\\"nv\\">$filepath</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC99\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\\"nv\\">$filename</span>.Substring<span class=\\"o\\">(</span>0, <span class=\\"nv\\">$filename</span>.LastIndexOf<span class=\\"o\\">(</span><span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">))</span> <span class=\\"o\\">}</span>        </div><div class=\\"line\\" id=\\"LC100\\"><br /></div><div class=\\"line\\" id=\\"LC101\\"><span class=\\"c\\"># 13.</span></div><div class=\\"line\\" id=\\"LC102\\"><span class=\\"nv\\">$regex</span> <span class=\\"o\\">=</span> <span class=\\"s1\\">\'(\\\\[assembly:\\\\s?InternalsVisibleTo\\\\(\\\\&quot;[\\\\w\\\\d\\\\.]+)\\\\s?,\\\\s?.+\'</span></div><div class=\\"line\\" id=\\"LC103\\"><br /></div><div class=\\"line\\" id=\\"LC104\\"><span class=\\"nv\\">$assemblyInfoFiles</span> <span class=\\"o\\">=</span> Get-ChildItem <span class=\\"nv\\">$hgsrc</span> -Recurse | where<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span>.Name -eq <span class=\\"s2\\">&quot;AssemblyInfo.cs&quot;</span><span class=\\"o\\">}</span></div><div class=\\"line\\" id=\\"LC105\\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC106\\"><span class=\\"nv\\">$assemblyInfoFiles</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC107\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span> <span class=\\"nv\\">$filename</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$_</span>.FullName; <span class=\\"o\\">(</span>Get-Content <span class=\\"nv\\">$filename</span><span class=\\"o\\">)</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC108\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span> -replace <span class=\\"nv\\">$regex</span>, <span class=\\"s1\\">\'$1&quot;)]\'</span><span class=\\"o\\">}</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC109\\">&nbsp;&nbsp;&nbsp;&nbsp;| Set-Content <span class=\\"o\\">(</span><span class=\\"nv\\">$filename</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)}</span></div><div class=\\"line\\" id=\\"LC110\\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC111\\"><span class=\\"nv\\">$assemblyInfoFiles</span> | Remove-Item -Force</div><div class=\\"line\\" id=\\"LC112\\"><br /></div><div class=\\"line\\" id=\\"LC113\\">Get-ChildItem <span class=\\"nv\\">$hgsrc</span> -Recurse -Include <span class=\\"o\\">(</span><span class=\\"s1\\">\'AssemblyInfo.cs\'</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> | <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC114\\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\\"o\\">{</span> <span class=\\"nv\\">$filepath</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.Name; <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC115\\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC116\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\\"nv\\">$filepath</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC117\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\\"nv\\">$filename</span>.Substring<span class=\\"o\\">(</span>0, <span class=\\"nv\\">$filename</span>.LastIndexOf<span class=\\"o\\">(</span><span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">))</span> <span class=\\"o\\">}</span>    </div><div class=\\"line\\" id=\\"LC118\\"><br /></div><div class=\\"line\\" id=\\"LC119\\"><span class=\\"c\\"># 14.</span></div><div class=\\"line\\" id=\\"LC120\\"><span class=\\"nv\\">$configregex</span> <span class=\\"o\\">=</span> <span class=\\"s1\\">\'\\\\&quot;([\\\\w\\\\.\\\\d]+\\\\s*,\\\\s*[\\\\w\\\\.\\\\d]+)[,\\\\w\\\\s\\\\d\\\\.=]+\\\\&quot;\'</span></div><div class=\\"line\\" id=\\"LC121\\"><br /></div><div class=\\"line\\" id=\\"LC122\\"><span class=\\"nv\\">$testconfigpath</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$hgtest</span> + <span class=\\"s2\\">&quot;\\\\Microsoft.ApplicationServer.Http\\\\Unit\\\\ConfigFiles&quot;</span></div><div class=\\"line\\" id=\\"LC123\\"><span class=\\"nv\\">$testconfigfiles</span> <span class=\\"o\\">=</span> Get-ChildItem <span class=\\"nv\\">$testconfigpath</span> -Recurse | where<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span>.Name -like <span class=\\"s2\\">&quot;*.config&quot;</span><span class=\\"o\\">}</span></div><div class=\\"line\\" id=\\"LC124\\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC125\\"><span class=\\"nv\\">$testconfigfiles</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC126\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span> <span class=\\"nv\\">$filename</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$_</span>.FullName; <span class=\\"o\\">(</span>Get-Content <span class=\\"nv\\">$filename</span><span class=\\"o\\">)</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC127\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span> -replace <span class=\\"nv\\">$configregex</span>, <span class=\\"s1\\">\'&quot;$1&quot;\'</span><span class=\\"o\\">}</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC128\\">&nbsp;&nbsp;&nbsp;&nbsp;| Set-Content <span class=\\"o\\">(</span><span class=\\"nv\\">$filename</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)}</span></div><div class=\\"line\\" id=\\"LC129\\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC130\\"><span class=\\"nv\\">$testconfigfiles</span> | Remove-Item -Force</div><div class=\\"line\\" id=\\"LC131\\"><br /></div><div class=\\"line\\" id=\\"LC132\\">Get-ChildItem <span class=\\"nv\\">$testconfigpath</span> -Recurse -Include <span class=\\"o\\">(</span><span class=\\"s1\\">\'*.config\'</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> | <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC133\\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\\"o\\">{</span> <span class=\\"nv\\">$filepath</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.Name; <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC134\\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC135\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\\"nv\\">$filepath</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC136\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\\"nv\\">$filename</span>.Substring<span class=\\"o\\">(</span>0, <span class=\\"nv\\">$filename</span>.LastIndexOf<span class=\\"o\\">(</span><span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">))</span> <span class=\\"o\\">}</span> </div></pre></div>\\n            \\n          </div>\\n\\n          <div class=\\"gist-meta\\">\\n            <a href=\\"https://gist.github.com/raw/1209919/2f8c6ae8e8a416017d9fc130f44555b3b19a3b22/gistfile1.sh\\" style=\\"float: right;\\">view raw</a>\\n            <a href=\\"https://gist.github.com/1209919#file_gistfile1.sh\\" style=\\"float: right; margin-right: 10px; color: #666;\\">gistfile1.sh</a>\\n            <a href=\\"https://gist.github.com/1209919\\">This Gist</a> brought to you by <a href=\\"http://github.com\\">GitHub</a>.\\n          </div>\\n        </div>\\n      \\n    \\n  \\n</div>\\n</noscript>\\n<p>Additionally, a big part of the workflow is transforming project files to remove any dependencies on internal libraries and tools.&nbsp; For this workflow task, XSLT was the right fit \\u2013 and that XSLT looks like this:</p>\\n<noscript><div class=\\"gist\\" id=\\"gist-1209930\\">\\n  \\n  \\n    \\n      \\n        \\n        \\n\\n        <div class=\\"gist-file\\">\\n          <div class=\\"gist-data gist-syntax\\">\\n            \\n            \\n            \\n              <div class=\\"highlight\\"><pre><div class=\\"line\\" id=\\"LC1\\"><span class=\\"cp\\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></div><div class=\\"line\\" id=\\"LC2\\"><span class=\\"nt\\">&lt;xsl:stylesheet</span> <span class=\\"na\\">version=</span><span class=\\"s\\">&quot;1.0&quot;</span></div><div class=\\"line\\" id=\\"LC3\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"na\\">xmlns:xsl=</span><span class=\\"s\\">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span></div><div class=\\"line\\" id=\\"LC4\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"na\\">xmlns:msxsl=</span><span class=\\"s\\">&quot;urn:schemas-microsoft-com:xslt&quot;</span> <span class=\\"na\\">exclude-result-prefixes=</span><span class=\\"s\\">&quot;msxsl b&quot;</span></div><div class=\\"line\\" id=\\"LC5\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"na\\">xmlns:b=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC6\\"><br /></div><div class=\\"line\\" id=\\"LC7\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:output</span> <span class=\\"na\\">method=</span><span class=\\"s\\">&quot;xml&quot;</span> <span class=\\"na\\">indent=</span><span class=\\"s\\">&quot;yes&quot;</span> <span class=\\"na\\">encoding=</span><span class=\\"s\\">&quot;UTF-8&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC8\\"><br /></div><div class=\\"line\\" id=\\"LC9\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;/b:Project&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC10\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:copy&gt;</span></div><div class=\\"line\\" id=\\"LC11\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:apply-templates</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;@*&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC12\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:apply-templates</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:PropertyGroup&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC13\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:apply-templates</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:ItemGroup&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC14\\"><br /></div><div class=\\"line\\" id=\\"LC15\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"c\\">&lt;!-- Add the import for common C# build targets --&gt;</span></div><div class=\\"line\\" id=\\"LC16\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:element</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Import&quot;</span> <span class=\\"na\\">namespace=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC17\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Project&quot;</span><span class=\\"nt\\">&gt;</span>$(MSBuildToolsPath)\\\\Microsoft.CSharp.targets<span class=\\"nt\\">&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC18\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:element&gt;</span></div><div class=\\"line\\" id=\\"LC19\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:copy&gt;</span></div><div class=\\"line\\" id=\\"LC20\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC21\\"><br /></div><div class=\\"line\\" id=\\"LC22\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:PropertyGroup[./b:ProjectGuid]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC23\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;PropertyGroup</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC24\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;HgRootDirectory&gt;</span>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), \'.hgignore\'))<span class=\\"nt\\">&lt;/HgRootDirectory&gt;</span></div><div class=\\"line\\" id=\\"LC25\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Configuration</span> <span class=\\"na\\">Condition=</span><span class=\\"s\\">&quot; \'$(Configuration)\' == \'\' &quot;</span><span class=\\"nt\\">&gt;</span>Debug<span class=\\"nt\\">&lt;/Configuration&gt;</span></div><div class=\\"line\\" id=\\"LC26\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Platform</span> <span class=\\"na\\">Condition=</span><span class=\\"s\\">&quot; \'$(Platform)\' == \'\' &quot;</span><span class=\\"nt\\">&gt;</span>AnyCPU<span class=\\"nt\\">&lt;/Platform&gt;</span></div><div class=\\"line\\" id=\\"LC27\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ProductVersion&gt;</span>8.0.30703<span class=\\"nt\\">&lt;/ProductVersion&gt;</span></div><div class=\\"line\\" id=\\"LC28\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;SchemaVersion&gt;</span>2.0<span class=\\"nt\\">&lt;/SchemaVersion&gt;</span></div><div class=\\"line\\" id=\\"LC29\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:if</span> <span class=\\"na\\">test=</span><span class=\\"s\\">&quot;b:AllowUnsafeBlocks&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC30\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;AllowUnsafeBlocks&gt;</span></div><div class=\\"line\\" id=\\"LC31\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:AllowUnsafeBlocks&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC32\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/AllowUnsafeBlocks&gt;</span></div><div class=\\"line\\" id=\\"LC33\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:if&gt;</span></div><div class=\\"line\\" id=\\"LC34\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ProjectGuid&gt;</span></div><div class=\\"line\\" id=\\"LC35\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:ProjectGuid&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC36\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/ProjectGuid&gt;</span></div><div class=\\"line\\" id=\\"LC37\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;OutputType&gt;</span></div><div class=\\"line\\" id=\\"LC38\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:OutputType&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC39\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/OutputType&gt;</span></div><div class=\\"line\\" id=\\"LC40\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;AppDesignerFolder&gt;</span></div><div class=\\"line\\" id=\\"LC41\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:AppDesignerFolder&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC42\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/AppDesignerFolder&gt;</span></div><div class=\\"line\\" id=\\"LC43\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;RootNamespace&gt;</span></div><div class=\\"line\\" id=\\"LC44\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:RootNamespace&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC45\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/RootNamespace&gt;</span></div><div class=\\"line\\" id=\\"LC46\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;AssemblyName&gt;</span></div><div class=\\"line\\" id=\\"LC47\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:AssemblyName&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC48\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/AssemblyName&gt;</span></div><div class=\\"line\\" id=\\"LC49\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:if</span> <span class=\\"na\\">test=</span><span class=\\"s\\">&quot;b:ProjectTypeGuids&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC50\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ProjectTypeGuids&gt;</span></div><div class=\\"line\\" id=\\"LC51\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:ProjectTypeGuids&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC52\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/ProjectTypeGuids&gt;</span></div><div class=\\"line\\" id=\\"LC53\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:if&gt;</span></div><div class=\\"line\\" id=\\"LC54\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:if</span> <span class=\\"na\\">test=</span><span class=\\"s\\">&quot;b:AssemblyClsCompliant&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC55\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;AssemblyClsCompliant&gt;</span></div><div class=\\"line\\" id=\\"LC56\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:AssemblyClsCompliant&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC57\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/AssemblyClsCompliant&gt;</span></div><div class=\\"line\\" id=\\"LC58\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:if&gt;</span></div><div class=\\"line\\" id=\\"LC59\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;TargetFrameworkVersion&gt;</span>v4.0<span class=\\"nt\\">&lt;/TargetFrameworkVersion&gt;</span></div><div class=\\"line\\" id=\\"LC60\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;FileAlignment&gt;</span>512<span class=\\"nt\\">&lt;/FileAlignment&gt;</span></div><div class=\\"line\\" id=\\"LC61\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/PropertyGroup&gt;</span></div><div class=\\"line\\" id=\\"LC62\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;PropertyGroup</span> <span class=\\"na\\">Condition=</span><span class=\\"s\\">&quot; \'$(Configuration)|$(Platform)\' == \'Debug|AnyCPU\' &quot;</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC63\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DebugSymbols&gt;</span>true<span class=\\"nt\\">&lt;/DebugSymbols&gt;</span></div><div class=\\"line\\" id=\\"LC64\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DebugType&gt;</span>full<span class=\\"nt\\">&lt;/DebugType&gt;</span></div><div class=\\"line\\" id=\\"LC65\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Optimize&gt;</span>false<span class=\\"nt\\">&lt;/Optimize&gt;</span></div><div class=\\"line\\" id=\\"LC66\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;OutputPath&gt;</span>bin\\\\Debug\\\\<span class=\\"nt\\">&lt;/OutputPath&gt;</span></div><div class=\\"line\\" id=\\"LC67\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DefineConstants&gt;</span>DEBUG;TRACE;NET_4<span class=\\"nt\\">&lt;/DefineConstants&gt;</span></div><div class=\\"line\\" id=\\"LC68\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ErrorReport&gt;</span>prompt<span class=\\"nt\\">&lt;/ErrorReport&gt;</span></div><div class=\\"line\\" id=\\"LC69\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;WarningLevel&gt;</span>4<span class=\\"nt\\">&lt;/WarningLevel&gt;</span></div><div class=\\"line\\" id=\\"LC70\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/PropertyGroup&gt;</span></div><div class=\\"line\\" id=\\"LC71\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;PropertyGroup</span> <span class=\\"na\\">Condition=</span><span class=\\"s\\">&quot; \'$(Configuration)|$(Platform)\' == \'Release|AnyCPU\' &quot;</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC72\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DebugType&gt;</span>pdbonly<span class=\\"nt\\">&lt;/DebugType&gt;</span></div><div class=\\"line\\" id=\\"LC73\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Optimize&gt;</span>true<span class=\\"nt\\">&lt;/Optimize&gt;</span></div><div class=\\"line\\" id=\\"LC74\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;OutputPath&gt;</span>bin\\\\Release\\\\<span class=\\"nt\\">&lt;/OutputPath&gt;</span></div><div class=\\"line\\" id=\\"LC75\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DefineConstants&gt;</span>TRACE;NET_4<span class=\\"nt\\">&lt;/DefineConstants&gt;</span></div><div class=\\"line\\" id=\\"LC76\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ErrorReport&gt;</span>prompt<span class=\\"nt\\">&lt;/ErrorReport&gt;</span></div><div class=\\"line\\" id=\\"LC77\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;WarningLevel&gt;</span>4<span class=\\"nt\\">&lt;/WarningLevel&gt;</span></div><div class=\\"line\\" id=\\"LC78\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DocumentationFile&gt;</span>bin\\\\Release\\\\Microsoft.ApplicationServer.Http.XML<span class=\\"nt\\">&lt;/DocumentationFile&gt;</span></div><div class=\\"line\\" id=\\"LC79\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/PropertyGroup&gt;</span></div><div class=\\"line\\" id=\\"LC80\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC81\\"><br /></div><div class=\\"line\\" id=\\"LC82\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Assembly reference patterns--&gt;</span></div><div class=\\"line\\" id=\\"LC83\\">&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC84\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--GAC (assembly name) references--&gt;</span></div><div class=\\"line\\" id=\\"LC85\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:Reference[not(contains(@Include, \'\\\\\'))]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC86\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Reference</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC87\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Include&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC88\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;@Include&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC89\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC90\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:if</span> <span class=\\"na\\">test=</span><span class=\\"s\\">&quot;b:HintPath&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC91\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;HintPath&gt;&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:HintPath&quot;</span><span class=\\"nt\\">/&gt;&lt;/HintPath&gt;</span></div><div class=\\"line\\" id=\\"LC92\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:if&gt;</span></div><div class=\\"line\\" id=\\"LC93\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Reference&gt;</span></div><div class=\\"line\\" id=\\"LC94\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC95\\">&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC96\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--.NET 4.0 framework assemblies--&gt;</span></div><div class=\\"line\\" id=\\"LC97\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:Reference[contains(@Include,\'\\\\public\\\\ext\\\\sdk\\\\CLR\\\\netfx40rtm\\\\\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC98\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Reference</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC99\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Include&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC100\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;substring-after(@Include, \'\\\\public\\\\ext\\\\sdk\\\\CLR\\\\netfx40rtm\\\\\')&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC101\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC102\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Reference&gt;</span></div><div class=\\"line\\" id=\\"LC103\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC104\\"><br /></div><div class=\\"line\\" id=\\"LC105\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Visual Studio 2010 SDK assemblies--&gt;</span></div><div class=\\"line\\" id=\\"LC106\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:Reference[contains(@Include,\'$(INETROOT)\\\\public\\\\ext\\\\VisualStudio\\\\VS10RTM\\\\PublicAssemblies\\\\\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC107\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Reference</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC108\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Include&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC109\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;substring-after(@Include, \'$(INETROOT)\\\\public\\\\ext\\\\VisualStudio\\\\VS10RTM\\\\PublicAssemblies\\\\\')&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC110\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC111\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Reference&gt;</span></div><div class=\\"line\\" id=\\"LC112\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC113\\"><br /></div><div class=\\"line\\" id=\\"LC114\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--ODataLib --&gt;</span></div><div class=\\"line\\" id=\\"LC115\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:Reference[contains(@Include, \'System.Data.OData.dll\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC116\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Reference</span> <span class=\\"na\\">Include=</span><span class=\\"s\\">&quot;$(HgRootDirectory)\\\\Lib\\\\Odata\\\\System.Data.OData.dll&quot;</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC117\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC118\\"><br /></div><div class=\\"line\\" id=\\"LC119\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Unrecognized assembly reference--&gt;</span></div><div class=\\"line\\" id=\\"LC120\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:Reference&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC121\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:comment&gt;</span>Reference to an unrecognized assembly: <span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;./@Include&quot;</span><span class=\\"nt\\">/&gt;&lt;/xsl:comment&gt;</span></div><div class=\\"line\\" id=\\"LC122\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC123\\"><br /></div><div class=\\"line\\" id=\\"LC124\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Project reference patterns--&gt;</span></div><div class=\\"line\\" id=\\"LC125\\">&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC126\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--ODataLib project reference--&gt;</span></div><div class=\\"line\\" id=\\"LC127\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:ProjectReference[./b:Name=\'ODataLib\']&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC128\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:comment&gt;</span>commenting out odatalib project reference<span class=\\"nt\\">&lt;/xsl:comment&gt;</span></div><div class=\\"line\\" id=\\"LC129\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC130\\"><br /></div><div class=\\"line\\" id=\\"LC131\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Product code project references --&gt;</span></div><div class=\\"line\\" id=\\"LC132\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:ProjectReference[contains(@Include, \'\\\\source\\\\\') or contains(@Include, \'$(WCFSource)\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC133\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ProjectReference</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC134\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Include&quot;</span><span class=\\"nt\\">&gt;</span>$(HgRootDirectory)\\\\WCFWebApi\\\\Http\\\\Src\\\\<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Name&quot;</span><span class=\\"nt\\">/&gt;</span>\\\\<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Name&quot;</span><span class=\\"nt\\">/&gt;</span>.csproj<span class=\\"nt\\">&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC135\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Project&gt;</span></div><div class=\\"line\\" id=\\"LC136\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Project&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC137\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Project&gt;</span></div><div class=\\"line\\" id=\\"LC138\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Name&gt;</span></div><div class=\\"line\\" id=\\"LC139\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Name&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC140\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Name&gt;</span></div><div class=\\"line\\" id=\\"LC141\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/ProjectReference&gt;</span></div><div class=\\"line\\" id=\\"LC142\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC143\\">&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC144\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Testcommon project references --&gt;</span></div><div class=\\"line\\" id=\\"LC145\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:ProjectReference[contains(@Include, \'\\\\testcommon\\\\\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC146\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ProjectReference</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC147\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Include&quot;</span><span class=\\"nt\\">&gt;</span>$(HgRootDirectory)\\\\WCFWebApi\\\\Http\\\\Test\\\\testcommon\\\\<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;substring-after(@Include, \'\\\\testcommon\\\\\')&quot;</span> <span class=\\"nt\\">/&gt;&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC148\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Project&gt;</span></div><div class=\\"line\\" id=\\"LC149\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Project&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC150\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Project&gt;</span></div><div class=\\"line\\" id=\\"LC151\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Name&gt;</span></div><div class=\\"line\\" id=\\"LC152\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Name&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC153\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Name&gt;</span></div><div class=\\"line\\" id=\\"LC154\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/ProjectReference&gt;</span></div><div class=\\"line\\" id=\\"LC155\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC156\\">&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC157\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Internal Moles project references - ignore --&gt;</span></div><div class=\\"line\\" id=\\"LC158\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:ProjectReference[contains(./b:Name, \'.Moles\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC159\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:comment&gt;</span>Reference to internal Moles project: <span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;@Include&quot;</span><span class=\\"nt\\">/&gt;&lt;/xsl:comment&gt;</span></div><div class=\\"line\\" id=\\"LC160\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC161\\"><br /></div><div class=\\"line\\" id=\\"LC162\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Moles assembly includes--&gt;</span></div><div class=\\"line\\" id=\\"LC163\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:ItemGroup/b:Moles&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC164\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:comment&gt;</span>Temporarily removing ItemGroup/<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;@Include&quot;</span><span class=\\"nt\\">/&gt;</span> reference<span class=\\"nt\\">&lt;/xsl:comment&gt;</span></div><div class=\\"line\\" id=\\"LC165\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC166\\"><br /></div><div class=\\"line\\" id=\\"LC167\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Identity xform--&gt;</span></div><div class=\\"line\\" id=\\"LC168\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;@* | node()&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC169\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:copy&gt;</span></div><div class=\\"line\\" id=\\"LC170\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:apply-templates</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;@* | node()&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC171\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:copy&gt;</span></div><div class=\\"line\\" id=\\"LC172\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC173\\"><span class=\\"nt\\">&lt;/xsl:stylesheet&gt;</span></div></pre></div>\\n            \\n          </div>\\n\\n          <div class=\\"gist-meta\\">\\n            <a href=\\"https://gist.github.com/raw/1209930/e94df9b3279f606166a3d7b7375c9526d8ed9f37/gistfile1.xml\\" style=\\"float: right;\\">view raw</a>\\n            <a href=\\"https://gist.github.com/1209930#file_gistfile1.xml\\" style=\\"float: right; margin-right: 10px; color: #666;\\">gistfile1.xml</a>\\n            <a href=\\"https://gist.github.com/1209930\\">This Gist</a> brought to you by <a href=\\"http://github.com\\">GitHub</a>.\\n          </div>\\n        </div>\\n      \\n    \\n  \\n</div>\\n</noscript>\\n<p>I hope that this proves helpful if you ever find yourself in the position where you have to regularly keep code in sync between 2 different repositories (or even the same repositories with different folder structures).&nbsp; And like I said, I welcome feedback on how I can improve my PowerShell.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/r8j_Lvbp0Uk\\" width=\\"1\\" />", "summary": "If you\\u2019ve been following wcf.codeplex.com, you\\u2019ll notice that we\\u2019ve had a flurry of activity over the last couple of weeks, culminating in the release of Web API preview 5.&#160; If you\\u2019ve been following our Codeplex repository for a while, you\\u2019ll&#160;&#8230; <a href=\\"http://codebetter.com/howarddi", "id": "http://codebetter.com/howarddierking/2011/09/11/one-of-the-small-costs-of-transparency/", "categories": [], "metadata": {"guid": "d73fbf88-5f1c-46ab-b18e-c6409e14742a", "likes": 0, "is_published": false}}, {"author": "Scott Wilson (noreply@blogger.com)", "url": "http://pixelmaniacuk.blogspot.com/2011/09/september-update.html", "title": "September Update", "datetime": "2011-09-11T18:23:26.453000", "html": "Hey guys! Again, it\'s been a long time since&nbsp;I\'ve done a blog update!<br /><br />So what\'s new?<br /><br />I\'ve continued to work heavily with Spiral Game Studios and been making a massive impact on their game \\"Orion: Prelude\\" and have been offered a studio job. Here is some recent progress of the game!<br /><br /><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">Note that Spiral Games have recently been at GamesCom and PAX! Was very busy times for our CEO..</div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">I have now moved back to England to finish my university masters degree so hopefully that goes smooth along with my work with Spiral.. My main masters project will be based on creating a customisable character creation system for UE3 and I will post updates later in the year on that!</div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">Game creator \\"Dan Da Rocha has asked me to create the outro cut scene for the up-comming puzzle game Q.U.B.E, so I also look forward to that =)</div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">That\'s it really! I also have two new blogs, one on the spiral game studios forums and one on the game dev forum! Links are below..</div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><a href=\\"http://spiralforums.com/viewtopic.php?f=3&amp;t=1876\\">http://spiralforums.com/viewtopic.php?f=3&amp;t=1876</a></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><a href=\\"http://www.games-dev.com/forum/topic/2498-scotts-tech-blog/page__fromsearch__1\\">http://www.games-dev.com/forum/topic/2498-scotts-tech-blog/page__fromsearch__1</a></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/4062822994372279709-8640331304899460507?l=pixelmaniacuk.blogspot.com\\" width=\\"1\\" /></div>", "summary": "Hey guys! Again, it\'s been a long time since&nbsp;I\'ve done a blog update!<br /><br />So what\'s new?<br /><br />I\'ve continued to work heavily with Spiral Game Studios and been making a massive impact on their game \\"Orion: Prelude\\" and have been offered a studio job. Here is some recent progress of ", "id": "tag:blogger.com,1999:blog-4062822994372279709.post-8640331304899460507", "categories": [], "metadata": {"guid": "a6845ad6-4f93-4bed-aca1-f1b1cdb5e60b", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/11/seamless-tiling-filter/", "title": "Seamless tiling filter", "datetime": "2011-09-11T16:19:32", "html": "<p>I made a filter for Filter Forge which makes an image seamlessly tiling.</p>\\n<table align=\\"center\\" border=\\"0\\">\\n<tbody>\\n<tr>\\n<td>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 170px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04a.jpg\\" rel=\\"prettyphoto[1515]\\" title=\\"example04a.jpg\\"><img alt=\\"\\" class=\\"thumb  \\" height=\\"160\\" id=\\"thumb755\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04a.jpg?22742010\\" width=\\"160\\" /></a>\\n<p class=\\"wp-caption-text\\">Original</p>\\n</div>\\n</td>\\n<td>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 170px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04b.jpg\\" rel=\\"prettyphoto[1515]\\" title=\\"example04b.jpg\\"><img alt=\\"\\" class=\\"thumb \\" height=\\"160\\" id=\\"thumb756\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04b.jpg\\" width=\\"160\\" /></a>\\n<p class=\\"wp-caption-text\\">Seams</p>\\n</div>\\n</td>\\n<td>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 170px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04c.jpg\\" rel=\\"prettyphoto[1515]\\" title=\\"example04c.jpg\\"><img alt=\\"\\" class=\\"thumb \\" height=\\"160\\" id=\\"thumb757\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04c.jpg\\" width=\\"160\\" /></a>\\n<p class=\\"wp-caption-text\\">Fixed seams</p>\\n</div>\\n</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>It can be downloaded from <a href=\\"http://www.filterforge.com/filters/9908.html\\" target=\\"_blank\\">here</a> while the discussion thread is <a href=\\"http://www.filterforge.com/forum/read.php?FID=11&amp;TID=8785&amp;MID=95230#message95230\\" target=\\"_blank\\">here</a>. The explanation of the filter parameters can be found in the <a href=\\"http://www.zspline.net/blog/the-seamless-tiling-filter/\\">Seamless tiling filter reference</a> article.<!-- PHP 5.x --></p>", "summary": "I made a filter for Filter Forge which makes an image seamlessly tiling. It can be downloaded from here while the discussion thread is here. The explanation of the filter parameters can be found in the Seamless tiling filter reference article.", "id": "http://www.zspline.net/blog/?p=1515", "categories": [], "metadata": {"guid": "f64394f4-67d7-4d42-a0ec-53c2bd621dcf", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/10071612426", "title": "\\"When a man walks into a room, he brings his whole life with him. He has a million reasons for being...\\"", "datetime": "2011-09-11T01:55:21", "html": "\\u201cWhen a man walks into a room, he brings his whole life with him. He has a million reasons for being anywhere, just ask him. If you listen, he\\u2019ll tell you how he got there. How he forgot where he was going, and that he woke up. If you listen, he\\u2019ll tell you about the time he thought he was an angel or dreamt of being perfect. And then he\\u2019ll smile with wisdom, content that he realized the world isn\\u2019t perfect. We\\u2019re flawed, because we want so much more. We\\u2019re ruined, because we get these things, and wish for what we had.\\u201d<br /><br /> - <em>Don Draper Season 4 Episode 8</em>", "summary": "\\u201cWhen a man walks into a room, he brings his whole life with him. He has a million reasons for being anywhere, just ask him. If you listen, he\\u2019ll tell you how he got there. How he forgot where he was going, and that he woke up. If you listen, he\\u2019ll tell you about the time he thought he was an angel ", "id": "http://shawnkirsch.tumblr.com/post/10071612426", "categories": [], "metadata": {"guid": "29318c31-8d7f-4bf6-be31-1b6a8568b1fb", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/09/08/coast-to-coast-blue-sky-here-i-come/", "title": "Coast to Coast!  Blue Sky here I come!", "datetime": "2011-09-08T18:27:29", "html": "<div class=\\"wp-caption aligncenter\\" id=\\"attachment_2890\\" style=\\"width: 310px;\\"><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup.jpg\\" rel=\\"lightbox[2889]\\"><img alt=\\"Scrat Continental Crackup\\" class=\\"size-medium wp-image-2890 \\" height=\\"127\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup-300x127.jpg\\" title=\\"scrat_cont_crackup\\" width=\\"300\\" /></a><p class=\\"wp-caption-text\\">How I\'ve felt for so long about working in VFX/Anim industry.</p></div>\\n<div class=\\"wp-caption aligncenter\\" id=\\"attachment_2891\\" style=\\"width: 310px;\\"><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift.jpg\\" rel=\\"lightbox[2889]\\"><img alt=\\"Ice Age: Continental Drift\\" class=\\"size-medium wp-image-2891 \\" height=\\"127\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift-300x127.jpg\\" title=\\"ice_age_continental_drift\\" width=\\"300\\" /></a><p class=\\"wp-caption-text\\">My first project</p></div>\\n<p>Done! \\u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \\u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \\u00a0It&#8217;s everything I could ask for in an employer and more.</p>\\n<p>Don&#8217;t think that it&#8217;s going to stop me from being active on my blog though, quite the opposite! \\u00a0Well, maybe the first month or two starting now there will be a pause, but after that it will increase. \\u00a0I&#8217;m super excited to learn and share knowledge with people and stay really connected and dedicated to innovating personal and industry wide workflows, tech, and of course animation. \\u00a0Technical animation and tech art to be specific is what I&#8217;ll be working on in the coming months, same as usual.</p>\\n<p>Thanks to everyone that&#8217;s been involved in the process of landing this, you know who you are! \\u00a0I don&#8217;t think they know yet what a valuable asset they just\\u00a0acquired but soon they will find out just how serious I am about the work I do and how inspired I can be!</p>\\n<div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "Done! \\u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \\u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \\u00a0It&#8217;s everything I could ask for in an employer and more. Don&#8217;t think that it", "id": "http://www.jonasavrin.com/?p=2889", "categories": ["Jonas Avrin"], "metadata": {"guid": "af6033e3-25e1-4153-9754-83f7548bd986", "likes": 0, "is_published": true}}]'
09-15 23:24 root         INFO     Handling CGI request.
09-15 23:24 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-15 23:24 SocketClient INFO     Sending to service: "["publish_content", [{"title": "One of the small costs of transparency", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/r8j_Lvbp0Uk\/", "author": "Howard Dierking", "summary": "If you\u2019ve been following wcf.codeplex.com, you\u2019ll notice that we\u2019ve had a flurry of activity over the last couple of weeks, culminating in the release of Web API preview 5.&#160; If you\u2019ve been following our Codeplex repository for a while, you\u2019ll&#160;&#8230; <a href=\"http:\/\/codebetter.com\/howarddi", "html": "<p>If you\u2019ve been following wcf.codeplex.com, you\u2019ll notice that we\u2019ve had a flurry of activity over the last couple of weeks, culminating in the release of Web API preview 5.&nbsp; If you\u2019ve been following our Codeplex repository for a while, you\u2019ll also note that this flurry of activity was preceded by months of inactivity.&nbsp; This wasn\u2019t because we were just sitting around talking waiting for the code to update itself.&nbsp; We had been wanting to update the repo for a while.&nbsp; The problem was that the process to update the code was very hard and very manual (meaning it was also very error prone).&nbsp; This is largely due to the fact that our source code is completely self-contained in its repository.&nbsp; Usually, you would think of self-containment as a good thing.&nbsp; However, in the scenario where you want to be able to share your code with others (like on Codeplex, for example), this property becomes a major problem.&nbsp; This is because code in our repository takes 0 dependencies on anything outside of our repository \u2013 including things like .NET Framework assemblies.&nbsp; Additionally, our build files contain all sorts of includes to custom tools, custom build targets\/properties, etc.&nbsp; As a result, getting code out of our repository and then updating it so that it will actually build is a non-trivial task \u2013 until now.<\/p>\n<p>I went through this manual process once and quickly decided that I would never do that again.&nbsp; I already had an interest in PowerShell, so decided to kill multiple birds with one stone and automate the process using PowerShell.&nbsp; Additionally, because one of the major steps in the automation workflow is transforming the project files to remove internal assembly and tool references, I called into some XSLT from my PowerShell script.<\/p>\n<p>At a high level, the workflow looks as follows:<\/p>\n<ol>\n<li>Sync our product code from our internal repository<\/li>\n<li>Build our product code (this will generate needed files that rely on internal build tools)<\/li>\n<li>Create a new clone of the Codeplex repository<\/li>\n<li>In the Codeplex clone, delete everything in the source and test folders (this will better help to identify delete files in the hg repo when committing)<\/li>\n<li>Copy all source and test files from our internal repo to our hg clone<\/li>\n<li>Run XSLT over all *.csproj files in the hg repository to remove all internal references<\/li>\n<li>Run RegEx over all AssemblyInfo.cs files to remove delay signed info from InternalsVisibleTo attributes<\/li>\n<li>Run RegEx to clean up some assembly strong name references in some test config files<\/li>\n<li>Open the solution in Visual Studio and make sure that all projects build and that all tests run<\/li>\n<\/ol>\n<p>As you can see, there are a few things going on here \u2013 even with the automation \u2013 so imagine what the manual process looked like.&nbsp; <\/p>\n<p>Like I mentioned earlier, this automation project gave me an excuse to do something that I had been wanting to do anyway \u2013 learn PowerShell.&nbsp; As such, I want to show you the PowerShell script in part because you may currently (or one day) be facing a similar challenge, and in (larger) part because I want your feedback on how I can improve the PowerShell (like I said, I was learning).<\/p>\n<p>Anyways, here\u2019s the PowerShell:<\/p>\n<noscript><div class=\"gist\" id=\"gist-1209919\">\n  \n  \n    \n      \n        \n        \n\n        <div class=\"gist-file\">\n          <div class=\"gist-data gist-syntax\">\n            \n            \n            \n              <div class=\"highlight\"><pre><div class=\"line\" id=\"LC1\">Import-Module Pscx<\/div><div class=\"line\" id=\"LC2\"><br \/><\/div><div class=\"line\" id=\"LC3\"><span class=\"c\"># the variables you'll likely need to change on your local machine<\/span><\/div><div class=\"line\" id=\"LC4\"><span class=\"nv\">$afroot<\/span> <span class=\"o\">=<\/span> <span class=\"s2\">&quot;D:\\AppFabric&quot;<\/span><\/div><div class=\"line\" id=\"LC5\"><span class=\"nv\">$hgroot<\/span> <span class=\"o\">=<\/span> <span class=\"s1\">'D:\\Programming Projects'<\/span><\/div><div class=\"line\" id=\"LC6\"><span class=\"c\"># $hgremote = &quot;https:\/\/hg01.codeplex.com\/wcf&quot;<\/span><\/div><div class=\"line\" id=\"LC7\"><span class=\"nv\">$hgremote<\/span> <span class=\"o\">=<\/span> <span class=\"s2\">&quot;D:\\Programming Projects\\wcf-codeplex-baseline_RC2&quot;<\/span><\/div><div class=\"line\" id=\"LC8\"><br \/><\/div><div class=\"line\" id=\"LC9\"><span class=\"c\"># derived paths<\/span><\/div><div class=\"line\" id=\"LC10\"><span class=\"nv\">$afwcfsource<\/span> <span class=\"o\">=<\/span> <span class=\"nv\">$afroot<\/span> + <span class=\"s2\">&quot;\\private\\source\\WCF&quot;<\/span><\/div><div class=\"line\" id=\"LC11\"><span class=\"nv\">$afcommonsource<\/span> <span class=\"o\">=<\/span> <span class=\"nv\">$afroot<\/span> + <span class=\"s2\">&quot;\\private\\source\\Common\\Microsoft.Server.Common&quot;<\/span><\/div><div class=\"line\" id=\"LC12\"><span class=\"nv\">$afwcftestsource<\/span> <span class=\"o\">=<\/span> <span class=\"nv\">$afroot<\/span> + <span class=\"s2\">&quot;\\private\\CIT\\WCF&quot;<\/span><\/div><div class=\"line\" id=\"LC13\"><span class=\"nv\">$afcommontest<\/span> <span class=\"o\">=<\/span> <span class=\"nv\">$afroot<\/span> + <span class=\"s2\">&quot;\\private\\testcommon&quot;<\/span><\/div><div class=\"line\" id=\"LC14\"><br \/><\/div><div class=\"line\" id=\"LC15\"><span class=\"nv\">$clonename<\/span> <span class=\"o\">=<\/span> Get-Date -f yyyyMMdd-hhmmss<\/div><div class=\"line\" id=\"LC16\"><span class=\"nv\">$hgclonepath<\/span> <span class=\"o\">=<\/span> <span class=\"nv\">$hgroot<\/span> + <span class=\"s2\">&quot;\\wcf-codeplex-baseline_&quot;<\/span> + <span class=\"nv\">$clonename<\/span><\/div><div class=\"line\" id=\"LC17\"><span class=\"nv\">$hgsrc<\/span> <span class=\"o\">=<\/span> <span class=\"nv\">$hgclonepath<\/span> + <span class=\"s2\">&quot;\\WCFWebApi\\Http\\Src&quot;<\/span><\/div><div class=\"line\" id=\"LC18\"><span class=\"nv\">$hgtest<\/span> <span class=\"o\">=<\/span> <span class=\"nv\">$hgclonepath<\/span> + <span class=\"s2\">&quot;\\WCFWebApi\\Http\\Test&quot;<\/span><\/div><div class=\"line\" id=\"LC19\"><span class=\"nv\">$enlistmentcmdargs<\/span> <span class=\"o\">=<\/span> <span class=\"s2\">&quot;\/C set inetroot=&quot;<\/span> + <span class=\"nv\">$afroot<\/span> + <span class=\"s2\">&quot;&amp;set corextbranch=appserver&amp;&quot;<\/span> + <span class=\"nv\">$afroot<\/span> + <span class=\"s2\">&quot;\\tools\\path1st\\myenv.cmd&quot;<\/span><\/div><div class=\"line\" id=\"LC20\"><span class=\"nv\">$enlistmentcmd<\/span> <span class=\"o\">=<\/span> <span class=\"s2\">&quot;C:\\Windows\\SysWOW64\\cmd.exe&quot;<\/span><\/div><div class=\"line\" id=\"LC21\"><span class=\"nv\">$bcca<\/span> <span class=\"o\">=<\/span> <span class=\"s2\">&quot;msbuildcmd \/c \/a amd64&quot;<\/span><\/div><div class=\"line\" id=\"LC22\"><br \/><\/div><div class=\"line\" id=\"LC23\"><span class=\"nv\">$currentpath<\/span> <span class=\"o\">=<\/span> Get-Location<\/div><div class=\"line\" id=\"LC24\"><br \/><\/div><div class=\"line\" id=\"LC25\"><span class=\"c\"># 1. <\/span><\/div><div class=\"line\" id=\"LC26\">Start-Process <span class=\"nv\">$enlistmentcmd<\/span> -ArgumentList <span class=\"o\">(<\/span><span class=\"nv\">$enlistmentcmdargs<\/span> + <span class=\"s2\">&quot;&amp;sd sync&quot;<\/span><span class=\"o\">)<\/span> -Wait<\/div><div class=\"line\" id=\"LC27\"><br \/><\/div><div class=\"line\" id=\"LC28\"><span class=\"c\"># 2.<\/span><\/div><div class=\"line\" id=\"LC29\">Start-Process <span class=\"nv\">$enlistmentcmd<\/span> -ArgumentList <span class=\"o\">(<\/span><span class=\"nv\">$enlistmentcmdargs<\/span> + <span class=\"s2\">&quot;&amp;cd private\/source\/wcf&amp;&quot;<\/span> + <span class=\"nv\">$bcca<\/span><span class=\"o\">)<\/span> -Wait<\/div><div class=\"line\" id=\"LC30\"><br \/><\/div><div class=\"line\" id=\"LC31\"><span class=\"c\"># 3.<\/span><\/div><div class=\"line\" id=\"LC32\">Start-Process <span class=\"nv\">$enlistmentcmd<\/span> -ArgumentList <span class=\"o\">(<\/span><span class=\"nv\">$enlistmentcmdargs<\/span> + <span class=\"s2\">&quot;&amp;cd private\/source\/common\/microsoft.server.common&amp;&quot;<\/span> + <span class=\"nv\">$bcca<\/span><span class=\"o\">)<\/span> -Wait<\/div><div class=\"line\" id=\"LC33\"><br \/><\/div><div class=\"line\" id=\"LC34\"><span class=\"c\"># 4.<\/span><\/div><div class=\"line\" id=\"LC35\">Start-Process <span class=\"nv\">$enlistmentcmd<\/span> -ArgumentList <span class=\"o\">(<\/span><span class=\"nv\">$enlistmentcmdargs<\/span> + <span class=\"s2\">&quot;&amp;cd private\/cit\/wcf&amp;&quot;<\/span> + <span class=\"nv\">$bcca<\/span><span class=\"o\">)<\/span> -Wait<\/div><div class=\"line\" id=\"LC36\"><br \/><\/div><div class=\"line\" id=\"LC37\"><span class=\"c\"># 5.<\/span><\/div><div class=\"line\" id=\"LC38\">Start-Process <span class=\"nv\">$enlistmentcmd<\/span> -ArgumentList <span class=\"o\">(<\/span><span class=\"nv\">$enlistmentcmdargs<\/span> + <span class=\"s2\">&quot;&amp;cd private\/testcommon&amp;&quot;<\/span> + <span class=\"nv\">$bcca<\/span><span class=\"o\">)<\/span> -Wait<\/div><div class=\"line\" id=\"LC39\"><br \/><\/div><div class=\"line\" id=\"LC40\">Set-Location <span class=\"nv\">$currentpath<\/span><\/div><div class=\"line\" id=\"LC41\"><br \/><\/div><div class=\"line\" id=\"LC42\"><span class=\"c\">#6. (assuming the build is clean) todo: add error handling here<\/span><\/div><div class=\"line\" id=\"LC43\"><br \/><\/div><div class=\"line\" id=\"LC44\"><span class=\"c\"># 7.<\/span><\/div><div class=\"line\" id=\"LC45\">hg clone <span class=\"nv\">$hgremote<\/span> <span class=\"nv\">$hgclonepath<\/span><\/div><div class=\"line\" id=\"LC46\"><br \/><\/div><div class=\"line\" id=\"LC47\"><span class=\"c\"># 8.<\/span><\/div><div class=\"line\" id=\"LC48\">Get-ChildItem <span class=\"nv\">$hgsrc<\/span> | Remove-Item -Recurse<\/div><div class=\"line\" id=\"LC49\"><br \/><\/div><div class=\"line\" id=\"LC50\"><span class=\"c\"># 9.<\/span><\/div><div class=\"line\" id=\"LC51\">Get-ChildItem <span class=\"nv\">$afwcfsource<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC52\">&nbsp;&nbsp;&nbsp;&nbsp;| where<span class=\"o\">{<\/span><span class=\"nv\">$_<\/span>.Name -notlike <span class=\"s2\">&quot;Tools*&quot;<\/span> -and <span class=\"nv\">$_<\/span>.Name -notlike <span class=\"s2\">&quot;*Resharper*&quot;<\/span><span class=\"o\">}<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC53\">&nbsp;&nbsp;&nbsp;&nbsp;| Copy-Item -Destination <span class=\"nv\">$hgsrc<\/span> -Recurse<\/div><div class=\"line\" id=\"LC54\"><br \/><\/div><div class=\"line\" id=\"LC55\">Copy-Item -Path <span class=\"nv\">$afcommonsource<\/span> -Destination <span class=\"nv\">$hgsrc<\/span> -Recurse<\/div><div class=\"line\" id=\"LC56\"><br \/><\/div><div class=\"line\" id=\"LC57\"><span class=\"c\"># 10.<\/span><\/div><div class=\"line\" id=\"LC58\">Get-ChildItem <span class=\"nv\">$hgtest<\/span> | Remove-Item -Recurse -Force<\/div><div class=\"line\" id=\"LC59\"><br \/><\/div><div class=\"line\" id=\"LC60\"><span class=\"c\"># 11.<\/span><\/div><div class=\"line\" id=\"LC61\">Get-ChildItem <span class=\"nv\">$afwcftestsource<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC62\">&nbsp;&nbsp;&nbsp;&nbsp;| where<span class=\"o\">{<\/span><span class=\"nv\">$_<\/span>.Name -notlike <span class=\"s2\">&quot;Tools*&quot;<\/span> -and <span class=\"nv\">$_<\/span>.Name -notlike <span class=\"s2\">&quot;*Resharper*&quot;<\/span><span class=\"o\">}<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC63\">&nbsp;&nbsp;&nbsp;&nbsp;| Copy-Item -Destination <span class=\"nv\">$hgtest<\/span> -Recurse<\/div><div class=\"line\" id=\"LC64\"><br \/><\/div><div class=\"line\" id=\"LC65\">Copy-Item -Path <span class=\"o\">(<\/span><span class=\"nv\">$afcommontest<\/span> + <span class=\"s2\">&quot;\\Common&quot;<\/span><span class=\"o\">)<\/span> -Destination <span class=\"o\">(<\/span><span class=\"nv\">$hgtest<\/span> + <span class=\"s2\">&quot;\\testcommon\\Common&quot;<\/span><span class=\"o\">)<\/span> -Recurse<\/div><div class=\"line\" id=\"LC66\">Copy-Item -Path <span class=\"o\">(<\/span><span class=\"nv\">$afcommontest<\/span> + <span class=\"s2\">&quot;\\WCF&quot;<\/span><span class=\"o\">)<\/span> -Destination <span class=\"o\">(<\/span><span class=\"nv\">$hgtest<\/span> + <span class=\"s2\">&quot;\\testcommon\\WCF&quot;<\/span><span class=\"o\">)<\/span> -Recurse<\/div><div class=\"line\" id=\"LC67\"><br \/><\/div><div class=\"line\" id=\"LC68\"><span class=\"c\"># 12.<\/span><\/div><div class=\"line\" id=\"LC69\"><span class=\"c\"># may be able to do this without the temp file hop (http:\/\/stackoverflow.com\/questions\/750449\/converting-xml-from-utf-16-to-utf-8-using-powershell)<\/span><\/div><div class=\"line\" id=\"LC70\"><span class=\"c\"># -&gt; nope, tried and it still fails with an insufficient access error<\/span><\/div><div class=\"line\" id=\"LC71\"><span class=\"nv\">$tempfilesuffix<\/span> <span class=\"o\">=<\/span> <span class=\"s2\">&quot;_TEMP&quot;<\/span><\/div><div class=\"line\" id=\"LC72\"><br \/><\/div><div class=\"line\" id=\"LC73\"><span class=\"nv\">$projectfiles<\/span> <span class=\"o\">=<\/span> Get-ChildItem <span class=\"nv\">$hgsrc<\/span> -Recurse -Include *.csproj<\/div><div class=\"line\" id=\"LC74\"><span class=\"nv\">$projectfiles<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC75\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{<\/span> <span class=\"nv\">$filename<\/span><span class=\"o\">=<\/span><span class=\"nv\">$_<\/span>.FullName; <span class=\"nv\">$_<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC76\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Convert-Xml -XsltPath .<span class=\"se\">\\E<\/span>nlistedCITProj2CodePlexCITProj.xslt <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC77\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Out-File <span class=\"o\">(<\/span><span class=\"nv\">$filename<\/span> + <span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">)<\/span> <span class=\"o\">}<\/span><\/div><div class=\"line\" id=\"LC78\"><br \/><\/div><div class=\"line\" id=\"LC79\"><span class=\"nv\">$projectfiles<\/span> | Remove-Item -Force<\/div><div class=\"line\" id=\"LC80\"><br \/><\/div><div class=\"line\" id=\"LC81\">Get-ChildItem <span class=\"nv\">$hgsrc<\/span> -Recurse -Include <span class=\"o\">(<\/span><span class=\"s1\">'*.csproj'<\/span> + <span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">)<\/span> | <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC82\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{<\/span> <span class=\"nv\">$filepath<\/span><span class=\"o\">=<\/span><span class=\"nv\">$_<\/span>.FullName; <span class=\"nv\">$filename<\/span><span class=\"o\">=<\/span><span class=\"nv\">$_<\/span>.Name; <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC83\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC84\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC85\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename<\/span>.Substring<span class=\"o\">(<\/span>0, <span class=\"nv\">$filename<\/span>.LastIndexOf<span class=\"o\">(<\/span><span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">))<\/span> <span class=\"o\">}<\/span><\/div><div class=\"line\" id=\"LC86\"><br \/><\/div><div class=\"line\" id=\"LC87\"><span class=\"nv\">$testprojectfiles<\/span> <span class=\"o\">=<\/span> Get-ChildItem <span class=\"nv\">$hgtest<\/span> -Recurse -Include *.csproj<\/div><div class=\"line\" id=\"LC88\"><span class=\"nv\">$testprojectfiles<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC89\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{<\/span> <span class=\"nv\">$filename<\/span><span class=\"o\">=<\/span><span class=\"nv\">$_<\/span>.FullName; <span class=\"nv\">$_<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC90\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Convert-Xml -XsltPath .<span class=\"se\">\\E<\/span>nlistedCITProj2CodePlexCITProj.xslt <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC91\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Out-File <span class=\"o\">(<\/span><span class=\"nv\">$filename<\/span> + <span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">)<\/span> <span class=\"o\">}<\/span><\/div><div class=\"line\" id=\"LC92\"><br \/><\/div><div class=\"line\" id=\"LC93\"><span class=\"nv\">$testprojectfiles<\/span> | Remove-Item -Force<\/div><div class=\"line\" id=\"LC94\"><br \/><\/div><div class=\"line\" id=\"LC95\">Get-ChildItem <span class=\"nv\">$hgtest<\/span> -Recurse -Include <span class=\"o\">(<\/span><span class=\"s1\">'*.csproj'<\/span> + <span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">)<\/span> | <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC96\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{<\/span> <span class=\"nv\">$filepath<\/span><span class=\"o\">=<\/span><span class=\"nv\">$_<\/span>.FullName; <span class=\"nv\">$filename<\/span><span class=\"o\">=<\/span><span class=\"nv\">$_<\/span>.Name; <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC97\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC98\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC99\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename<\/span>.Substring<span class=\"o\">(<\/span>0, <span class=\"nv\">$filename<\/span>.LastIndexOf<span class=\"o\">(<\/span><span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">))<\/span> <span class=\"o\">}<\/span>        <\/div><div class=\"line\" id=\"LC100\"><br \/><\/div><div class=\"line\" id=\"LC101\"><span class=\"c\"># 13.<\/span><\/div><div class=\"line\" id=\"LC102\"><span class=\"nv\">$regex<\/span> <span class=\"o\">=<\/span> <span class=\"s1\">'(\\[assembly:\\s?InternalsVisibleTo\\(\\&quot;[\\w\\d\\.]+)\\s?,\\s?.+'<\/span><\/div><div class=\"line\" id=\"LC103\"><br \/><\/div><div class=\"line\" id=\"LC104\"><span class=\"nv\">$assemblyInfoFiles<\/span> <span class=\"o\">=<\/span> Get-ChildItem <span class=\"nv\">$hgsrc<\/span> -Recurse | where<span class=\"o\">{<\/span><span class=\"nv\">$_<\/span>.Name -eq <span class=\"s2\">&quot;AssemblyInfo.cs&quot;<\/span><span class=\"o\">}<\/span><\/div><div class=\"line\" id=\"LC105\">&nbsp;&nbsp;&nbsp;&nbsp;<\/div><div class=\"line\" id=\"LC106\"><span class=\"nv\">$assemblyInfoFiles<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC107\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{<\/span> <span class=\"nv\">$filename<\/span> <span class=\"o\">=<\/span> <span class=\"nv\">$_<\/span>.FullName; <span class=\"o\">(<\/span>Get-Content <span class=\"nv\">$filename<\/span><span class=\"o\">)<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC108\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{<\/span><span class=\"nv\">$_<\/span> -replace <span class=\"nv\">$regex<\/span>, <span class=\"s1\">'$1&quot;)]'<\/span><span class=\"o\">}<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC109\">&nbsp;&nbsp;&nbsp;&nbsp;| Set-Content <span class=\"o\">(<\/span><span class=\"nv\">$filename<\/span> + <span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">)}<\/span><\/div><div class=\"line\" id=\"LC110\">&nbsp;&nbsp;&nbsp;&nbsp;<\/div><div class=\"line\" id=\"LC111\"><span class=\"nv\">$assemblyInfoFiles<\/span> | Remove-Item -Force<\/div><div class=\"line\" id=\"LC112\"><br \/><\/div><div class=\"line\" id=\"LC113\">Get-ChildItem <span class=\"nv\">$hgsrc<\/span> -Recurse -Include <span class=\"o\">(<\/span><span class=\"s1\">'AssemblyInfo.cs'<\/span> + <span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">)<\/span> | <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC114\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{<\/span> <span class=\"nv\">$filepath<\/span><span class=\"o\">=<\/span><span class=\"nv\">$_<\/span>.FullName; <span class=\"nv\">$filename<\/span><span class=\"o\">=<\/span><span class=\"nv\">$_<\/span>.Name; <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC115\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC116\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC117\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename<\/span>.Substring<span class=\"o\">(<\/span>0, <span class=\"nv\">$filename<\/span>.LastIndexOf<span class=\"o\">(<\/span><span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">))<\/span> <span class=\"o\">}<\/span>    <\/div><div class=\"line\" id=\"LC118\"><br \/><\/div><div class=\"line\" id=\"LC119\"><span class=\"c\"># 14.<\/span><\/div><div class=\"line\" id=\"LC120\"><span class=\"nv\">$configregex<\/span> <span class=\"o\">=<\/span> <span class=\"s1\">'\\&quot;([\\w\\.\\d]+\\s*,\\s*[\\w\\.\\d]+)[,\\w\\s\\d\\.=]+\\&quot;'<\/span><\/div><div class=\"line\" id=\"LC121\"><br \/><\/div><div class=\"line\" id=\"LC122\"><span class=\"nv\">$testconfigpath<\/span> <span class=\"o\">=<\/span> <span class=\"nv\">$hgtest<\/span> + <span class=\"s2\">&quot;\\Microsoft.ApplicationServer.Http\\Unit\\ConfigFiles&quot;<\/span><\/div><div class=\"line\" id=\"LC123\"><span class=\"nv\">$testconfigfiles<\/span> <span class=\"o\">=<\/span> Get-ChildItem <span class=\"nv\">$testconfigpath<\/span> -Recurse | where<span class=\"o\">{<\/span><span class=\"nv\">$_<\/span>.Name -like <span class=\"s2\">&quot;*.config&quot;<\/span><span class=\"o\">}<\/span><\/div><div class=\"line\" id=\"LC124\">&nbsp;&nbsp;&nbsp;&nbsp;<\/div><div class=\"line\" id=\"LC125\"><span class=\"nv\">$testconfigfiles<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC126\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{<\/span> <span class=\"nv\">$filename<\/span> <span class=\"o\">=<\/span> <span class=\"nv\">$_<\/span>.FullName; <span class=\"o\">(<\/span>Get-Content <span class=\"nv\">$filename<\/span><span class=\"o\">)<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC127\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{<\/span><span class=\"nv\">$_<\/span> -replace <span class=\"nv\">$configregex<\/span>, <span class=\"s1\">'&quot;$1&quot;'<\/span><span class=\"o\">}<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC128\">&nbsp;&nbsp;&nbsp;&nbsp;| Set-Content <span class=\"o\">(<\/span><span class=\"nv\">$filename<\/span> + <span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">)}<\/span><\/div><div class=\"line\" id=\"LC129\">&nbsp;&nbsp;&nbsp;&nbsp;<\/div><div class=\"line\" id=\"LC130\"><span class=\"nv\">$testconfigfiles<\/span> | Remove-Item -Force<\/div><div class=\"line\" id=\"LC131\"><br \/><\/div><div class=\"line\" id=\"LC132\">Get-ChildItem <span class=\"nv\">$testconfigpath<\/span> -Recurse -Include <span class=\"o\">(<\/span><span class=\"s1\">'*.config'<\/span> + <span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">)<\/span> | <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC133\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{<\/span> <span class=\"nv\">$filepath<\/span><span class=\"o\">=<\/span><span class=\"nv\">$_<\/span>.FullName; <span class=\"nv\">$filename<\/span><span class=\"o\">=<\/span><span class=\"nv\">$_<\/span>.Name; <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC134\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC135\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath<\/span> <span class=\"sb\">`<\/span><\/div><div class=\"line\" id=\"LC136\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename<\/span>.Substring<span class=\"o\">(<\/span>0, <span class=\"nv\">$filename<\/span>.LastIndexOf<span class=\"o\">(<\/span><span class=\"nv\">$tempfilesuffix<\/span><span class=\"o\">))<\/span> <span class=\"o\">}<\/span> <\/div><\/pre><\/div>\n            \n          <\/div>\n\n          <div class=\"gist-meta\">\n            <a href=\"https:\/\/gist.github.com\/raw\/1209919\/2f8c6ae8e8a416017d9fc130f44555b3b19a3b22\/gistfile1.sh\" style=\"float: right;\">view raw<\/a>\n            <a href=\"https:\/\/gist.github.com\/1209919#file_gistfile1.sh\" style=\"float: right; margin-right: 10px; color: #666;\">gistfile1.sh<\/a>\n            <a href=\"https:\/\/gist.github.com\/1209919\">This Gist<\/a> brought to you by <a href=\"http:\/\/github.com\">GitHub<\/a>.\n          <\/div>\n        <\/div>\n      \n    \n  \n<\/div>\n<\/noscript>\n<p>Additionally, a big part of the workflow is transforming project files to remove any dependencies on internal libraries and tools.&nbsp; For this workflow task, XSLT was the right fit \u2013 and that XSLT looks like this:<\/p>\n<noscript><div class=\"gist\" id=\"gist-1209930\">\n  \n  \n    \n      \n        \n        \n\n        <div class=\"gist-file\">\n          <div class=\"gist-data gist-syntax\">\n            \n            \n            \n              <div class=\"highlight\"><pre><div class=\"line\" id=\"LC1\"><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<\/span><\/div><div class=\"line\" id=\"LC2\"><span class=\"nt\">&lt;xsl:stylesheet<\/span> <span class=\"na\">version=<\/span><span class=\"s\">&quot;1.0&quot;<\/span><\/div><div class=\"line\" id=\"LC3\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"na\">xmlns:xsl=<\/span><span class=\"s\">&quot;http:\/\/www.w3.org\/1999\/XSL\/Transform&quot;<\/span><\/div><div class=\"line\" id=\"LC4\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"na\">xmlns:msxsl=<\/span><span class=\"s\">&quot;urn:schemas-microsoft-com:xslt&quot;<\/span> <span class=\"na\">exclude-result-prefixes=<\/span><span class=\"s\">&quot;msxsl b&quot;<\/span><\/div><div class=\"line\" id=\"LC5\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"na\">xmlns:b=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC6\"><br \/><\/div><div class=\"line\" id=\"LC7\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:output<\/span> <span class=\"na\">method=<\/span><span class=\"s\">&quot;xml&quot;<\/span> <span class=\"na\">indent=<\/span><span class=\"s\">&quot;yes&quot;<\/span> <span class=\"na\">encoding=<\/span><span class=\"s\">&quot;UTF-8&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC8\"><br \/><\/div><div class=\"line\" id=\"LC9\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;\/b:Project&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC10\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:copy&gt;<\/span><\/div><div class=\"line\" id=\"LC11\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;@*&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC12\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:PropertyGroup&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC13\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:ItemGroup&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC14\"><br \/><\/div><div class=\"line\" id=\"LC15\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"c\">&lt;!-- Add the import for common C# build targets --&gt;<\/span><\/div><div class=\"line\" id=\"LC16\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:element<\/span> <span class=\"na\">name=<\/span><span class=\"s\">&quot;Import&quot;<\/span> <span class=\"na\">namespace=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC17\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute<\/span> <span class=\"na\">name=<\/span><span class=\"s\">&quot;Project&quot;<\/span><span class=\"nt\">&gt;<\/span>$(MSBuildToolsPath)\\Microsoft.CSharp.targets<span class=\"nt\">&lt;\/xsl:attribute&gt;<\/span><\/div><div class=\"line\" id=\"LC18\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:element&gt;<\/span><\/div><div class=\"line\" id=\"LC19\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:copy&gt;<\/span><\/div><div class=\"line\" id=\"LC20\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC21\"><br \/><\/div><div class=\"line\" id=\"LC22\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:PropertyGroup[.\/b:ProjectGuid]&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC23\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;PropertyGroup<\/span> <span class=\"na\">xmlns=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC24\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;HgRootDirectory&gt;<\/span>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), '.hgignore'))<span class=\"nt\">&lt;\/HgRootDirectory&gt;<\/span><\/div><div class=\"line\" id=\"LC25\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Configuration<\/span> <span class=\"na\">Condition=<\/span><span class=\"s\">&quot; '$(Configuration)' == '' &quot;<\/span><span class=\"nt\">&gt;<\/span>Debug<span class=\"nt\">&lt;\/Configuration&gt;<\/span><\/div><div class=\"line\" id=\"LC26\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Platform<\/span> <span class=\"na\">Condition=<\/span><span class=\"s\">&quot; '$(Platform)' == '' &quot;<\/span><span class=\"nt\">&gt;<\/span>AnyCPU<span class=\"nt\">&lt;\/Platform&gt;<\/span><\/div><div class=\"line\" id=\"LC27\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProductVersion&gt;<\/span>8.0.30703<span class=\"nt\">&lt;\/ProductVersion&gt;<\/span><\/div><div class=\"line\" id=\"LC28\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;SchemaVersion&gt;<\/span>2.0<span class=\"nt\">&lt;\/SchemaVersion&gt;<\/span><\/div><div class=\"line\" id=\"LC29\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if<\/span> <span class=\"na\">test=<\/span><span class=\"s\">&quot;b:AllowUnsafeBlocks&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC30\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AllowUnsafeBlocks&gt;<\/span><\/div><div class=\"line\" id=\"LC31\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:AllowUnsafeBlocks&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC32\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/AllowUnsafeBlocks&gt;<\/span><\/div><div class=\"line\" id=\"LC33\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:if&gt;<\/span><\/div><div class=\"line\" id=\"LC34\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectGuid&gt;<\/span><\/div><div class=\"line\" id=\"LC35\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:ProjectGuid&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC36\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/ProjectGuid&gt;<\/span><\/div><div class=\"line\" id=\"LC37\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;OutputType&gt;<\/span><\/div><div class=\"line\" id=\"LC38\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:OutputType&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC39\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/OutputType&gt;<\/span><\/div><div class=\"line\" id=\"LC40\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AppDesignerFolder&gt;<\/span><\/div><div class=\"line\" id=\"LC41\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:AppDesignerFolder&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC42\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/AppDesignerFolder&gt;<\/span><\/div><div class=\"line\" id=\"LC43\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;RootNamespace&gt;<\/span><\/div><div class=\"line\" id=\"LC44\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:RootNamespace&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC45\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/RootNamespace&gt;<\/span><\/div><div class=\"line\" id=\"LC46\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AssemblyName&gt;<\/span><\/div><div class=\"line\" id=\"LC47\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:AssemblyName&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC48\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/AssemblyName&gt;<\/span><\/div><div class=\"line\" id=\"LC49\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if<\/span> <span class=\"na\">test=<\/span><span class=\"s\">&quot;b:ProjectTypeGuids&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC50\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectTypeGuids&gt;<\/span><\/div><div class=\"line\" id=\"LC51\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:ProjectTypeGuids&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC52\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/ProjectTypeGuids&gt;<\/span><\/div><div class=\"line\" id=\"LC53\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:if&gt;<\/span><\/div><div class=\"line\" id=\"LC54\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if<\/span> <span class=\"na\">test=<\/span><span class=\"s\">&quot;b:AssemblyClsCompliant&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC55\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AssemblyClsCompliant&gt;<\/span><\/div><div class=\"line\" id=\"LC56\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:AssemblyClsCompliant&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC57\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/AssemblyClsCompliant&gt;<\/span><\/div><div class=\"line\" id=\"LC58\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:if&gt;<\/span><\/div><div class=\"line\" id=\"LC59\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;TargetFrameworkVersion&gt;<\/span>v4.0<span class=\"nt\">&lt;\/TargetFrameworkVersion&gt;<\/span><\/div><div class=\"line\" id=\"LC60\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;FileAlignment&gt;<\/span>512<span class=\"nt\">&lt;\/FileAlignment&gt;<\/span><\/div><div class=\"line\" id=\"LC61\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/PropertyGroup&gt;<\/span><\/div><div class=\"line\" id=\"LC62\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;PropertyGroup<\/span> <span class=\"na\">Condition=<\/span><span class=\"s\">&quot; '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' &quot;<\/span> <span class=\"na\">xmlns=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC63\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DebugSymbols&gt;<\/span>true<span class=\"nt\">&lt;\/DebugSymbols&gt;<\/span><\/div><div class=\"line\" id=\"LC64\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DebugType&gt;<\/span>full<span class=\"nt\">&lt;\/DebugType&gt;<\/span><\/div><div class=\"line\" id=\"LC65\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Optimize&gt;<\/span>false<span class=\"nt\">&lt;\/Optimize&gt;<\/span><\/div><div class=\"line\" id=\"LC66\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;OutputPath&gt;<\/span>bin\\Debug\\<span class=\"nt\">&lt;\/OutputPath&gt;<\/span><\/div><div class=\"line\" id=\"LC67\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DefineConstants&gt;<\/span>DEBUG;TRACE;NET_4<span class=\"nt\">&lt;\/DefineConstants&gt;<\/span><\/div><div class=\"line\" id=\"LC68\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ErrorReport&gt;<\/span>prompt<span class=\"nt\">&lt;\/ErrorReport&gt;<\/span><\/div><div class=\"line\" id=\"LC69\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;WarningLevel&gt;<\/span>4<span class=\"nt\">&lt;\/WarningLevel&gt;<\/span><\/div><div class=\"line\" id=\"LC70\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/PropertyGroup&gt;<\/span><\/div><div class=\"line\" id=\"LC71\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;PropertyGroup<\/span> <span class=\"na\">Condition=<\/span><span class=\"s\">&quot; '$(Configuration)|$(Platform)' == 'Release|AnyCPU' &quot;<\/span> <span class=\"na\">xmlns=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC72\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DebugType&gt;<\/span>pdbonly<span class=\"nt\">&lt;\/DebugType&gt;<\/span><\/div><div class=\"line\" id=\"LC73\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Optimize&gt;<\/span>true<span class=\"nt\">&lt;\/Optimize&gt;<\/span><\/div><div class=\"line\" id=\"LC74\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;OutputPath&gt;<\/span>bin\\Release\\<span class=\"nt\">&lt;\/OutputPath&gt;<\/span><\/div><div class=\"line\" id=\"LC75\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DefineConstants&gt;<\/span>TRACE;NET_4<span class=\"nt\">&lt;\/DefineConstants&gt;<\/span><\/div><div class=\"line\" id=\"LC76\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ErrorReport&gt;<\/span>prompt<span class=\"nt\">&lt;\/ErrorReport&gt;<\/span><\/div><div class=\"line\" id=\"LC77\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;WarningLevel&gt;<\/span>4<span class=\"nt\">&lt;\/WarningLevel&gt;<\/span><\/div><div class=\"line\" id=\"LC78\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DocumentationFile&gt;<\/span>bin\\Release\\Microsoft.ApplicationServer.Http.XML<span class=\"nt\">&lt;\/DocumentationFile&gt;<\/span><\/div><div class=\"line\" id=\"LC79\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/PropertyGroup&gt;<\/span><\/div><div class=\"line\" id=\"LC80\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC81\"><br \/><\/div><div class=\"line\" id=\"LC82\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Assembly reference patterns--&gt;<\/span><\/div><div class=\"line\" id=\"LC83\">&nbsp;&nbsp;<\/div><div class=\"line\" id=\"LC84\">&nbsp;&nbsp;<span class=\"c\">&lt;!--GAC (assembly name) references--&gt;<\/span><\/div><div class=\"line\" id=\"LC85\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:Reference[not(contains(@Include, '\\'))]&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC86\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference<\/span> <span class=\"na\">xmlns=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC87\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute<\/span> <span class=\"na\">name=<\/span><span class=\"s\">&quot;Include&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC88\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;@Include&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC89\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:attribute&gt;<\/span><\/div><div class=\"line\" id=\"LC90\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if<\/span> <span class=\"na\">test=<\/span><span class=\"s\">&quot;b:HintPath&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC91\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;HintPath&gt;&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:HintPath&quot;<\/span><span class=\"nt\">\/&gt;&lt;\/HintPath&gt;<\/span><\/div><div class=\"line\" id=\"LC92\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:if&gt;<\/span><\/div><div class=\"line\" id=\"LC93\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/Reference&gt;<\/span><\/div><div class=\"line\" id=\"LC94\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC95\">&nbsp;&nbsp;<\/div><div class=\"line\" id=\"LC96\">&nbsp;&nbsp;<span class=\"c\">&lt;!--.NET 4.0 framework assemblies--&gt;<\/span><\/div><div class=\"line\" id=\"LC97\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:Reference[contains(@Include,'\\public\\ext\\sdk\\CLR\\netfx40rtm\\')]&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC98\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference<\/span> <span class=\"na\">xmlns=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC99\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute<\/span> <span class=\"na\">name=<\/span><span class=\"s\">&quot;Include&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC100\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;substring-after(@Include, '\\public\\ext\\sdk\\CLR\\netfx40rtm\\')&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC101\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:attribute&gt;<\/span><\/div><div class=\"line\" id=\"LC102\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/Reference&gt;<\/span><\/div><div class=\"line\" id=\"LC103\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC104\"><br \/><\/div><div class=\"line\" id=\"LC105\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Visual Studio 2010 SDK assemblies--&gt;<\/span><\/div><div class=\"line\" id=\"LC106\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:Reference[contains(@Include,'$(INETROOT)\\public\\ext\\VisualStudio\\VS10RTM\\PublicAssemblies\\')]&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC107\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference<\/span> <span class=\"na\">xmlns=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC108\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute<\/span> <span class=\"na\">name=<\/span><span class=\"s\">&quot;Include&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC109\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;substring-after(@Include, '$(INETROOT)\\public\\ext\\VisualStudio\\VS10RTM\\PublicAssemblies\\')&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC110\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:attribute&gt;<\/span><\/div><div class=\"line\" id=\"LC111\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/Reference&gt;<\/span><\/div><div class=\"line\" id=\"LC112\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC113\"><br \/><\/div><div class=\"line\" id=\"LC114\">&nbsp;&nbsp;<span class=\"c\">&lt;!--ODataLib --&gt;<\/span><\/div><div class=\"line\" id=\"LC115\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:Reference[contains(@Include, 'System.Data.OData.dll')]&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC116\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference<\/span> <span class=\"na\">Include=<\/span><span class=\"s\">&quot;$(HgRootDirectory)\\Lib\\Odata\\System.Data.OData.dll&quot;<\/span> <span class=\"na\">xmlns=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC117\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC118\"><br \/><\/div><div class=\"line\" id=\"LC119\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Unrecognized assembly reference--&gt;<\/span><\/div><div class=\"line\" id=\"LC120\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:Reference&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC121\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;<\/span>Reference to an unrecognized assembly: <span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;.\/@Include&quot;<\/span><span class=\"nt\">\/&gt;&lt;\/xsl:comment&gt;<\/span><\/div><div class=\"line\" id=\"LC122\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC123\"><br \/><\/div><div class=\"line\" id=\"LC124\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Project reference patterns--&gt;<\/span><\/div><div class=\"line\" id=\"LC125\">&nbsp;&nbsp;<\/div><div class=\"line\" id=\"LC126\">&nbsp;&nbsp;<span class=\"c\">&lt;!--ODataLib project reference--&gt;<\/span><\/div><div class=\"line\" id=\"LC127\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:ProjectReference[.\/b:Name='ODataLib']&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC128\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;<\/span>commenting out odatalib project reference<span class=\"nt\">&lt;\/xsl:comment&gt;<\/span><\/div><div class=\"line\" id=\"LC129\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC130\"><br \/><\/div><div class=\"line\" id=\"LC131\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Product code project references --&gt;<\/span><\/div><div class=\"line\" id=\"LC132\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:ProjectReference[contains(@Include, '\\source\\') or contains(@Include, '$(WCFSource)')]&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC133\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectReference<\/span> <span class=\"na\">xmlns=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC134\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute<\/span> <span class=\"na\">name=<\/span><span class=\"s\">&quot;Include&quot;<\/span><span class=\"nt\">&gt;<\/span>$(HgRootDirectory)\\WCFWebApi\\Http\\Src\\<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:Name&quot;<\/span><span class=\"nt\">\/&gt;<\/span>\\<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:Name&quot;<\/span><span class=\"nt\">\/&gt;<\/span>.csproj<span class=\"nt\">&lt;\/xsl:attribute&gt;<\/span><\/div><div class=\"line\" id=\"LC135\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Project&gt;<\/span><\/div><div class=\"line\" id=\"LC136\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:Project&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC137\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/Project&gt;<\/span><\/div><div class=\"line\" id=\"LC138\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Name&gt;<\/span><\/div><div class=\"line\" id=\"LC139\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:Name&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC140\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/Name&gt;<\/span><\/div><div class=\"line\" id=\"LC141\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/ProjectReference&gt;<\/span><\/div><div class=\"line\" id=\"LC142\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC143\">&nbsp;&nbsp;<\/div><div class=\"line\" id=\"LC144\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Testcommon project references --&gt;<\/span><\/div><div class=\"line\" id=\"LC145\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:ProjectReference[contains(@Include, '\\testcommon\\')]&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC146\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectReference<\/span> <span class=\"na\">xmlns=<\/span><span class=\"s\">&quot;http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC147\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute<\/span> <span class=\"na\">name=<\/span><span class=\"s\">&quot;Include&quot;<\/span><span class=\"nt\">&gt;<\/span>$(HgRootDirectory)\\WCFWebApi\\Http\\Test\\testcommon\\<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;substring-after(@Include, '\\testcommon\\')&quot;<\/span> <span class=\"nt\">\/&gt;&lt;\/xsl:attribute&gt;<\/span><\/div><div class=\"line\" id=\"LC148\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Project&gt;<\/span><\/div><div class=\"line\" id=\"LC149\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:Project&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC150\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/Project&gt;<\/span><\/div><div class=\"line\" id=\"LC151\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Name&gt;<\/span><\/div><div class=\"line\" id=\"LC152\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;b:Name&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC153\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/Name&gt;<\/span><\/div><div class=\"line\" id=\"LC154\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/ProjectReference&gt;<\/span><\/div><div class=\"line\" id=\"LC155\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC156\">&nbsp;&nbsp;<\/div><div class=\"line\" id=\"LC157\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Internal Moles project references - ignore --&gt;<\/span><\/div><div class=\"line\" id=\"LC158\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:ProjectReference[contains(.\/b:Name, '.Moles')]&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC159\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;<\/span>Reference to internal Moles project: <span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;@Include&quot;<\/span><span class=\"nt\">\/&gt;&lt;\/xsl:comment&gt;<\/span><\/div><div class=\"line\" id=\"LC160\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC161\"><br \/><\/div><div class=\"line\" id=\"LC162\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Moles assembly includes--&gt;<\/span><\/div><div class=\"line\" id=\"LC163\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;b:ItemGroup\/b:Moles&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC164\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;<\/span>Temporarily removing ItemGroup\/<span class=\"nt\">&lt;xsl:value-of<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;@Include&quot;<\/span><span class=\"nt\">\/&gt;<\/span> reference<span class=\"nt\">&lt;\/xsl:comment&gt;<\/span><\/div><div class=\"line\" id=\"LC165\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC166\"><br \/><\/div><div class=\"line\" id=\"LC167\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Identity xform--&gt;<\/span><\/div><div class=\"line\" id=\"LC168\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template<\/span> <span class=\"na\">match=<\/span><span class=\"s\">&quot;@* | node()&quot;<\/span><span class=\"nt\">&gt;<\/span><\/div><div class=\"line\" id=\"LC169\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:copy&gt;<\/span><\/div><div class=\"line\" id=\"LC170\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates<\/span> <span class=\"na\">select=<\/span><span class=\"s\">&quot;@* | node()&quot;<\/span><span class=\"nt\">\/&gt;<\/span><\/div><div class=\"line\" id=\"LC171\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:copy&gt;<\/span><\/div><div class=\"line\" id=\"LC172\">&nbsp;&nbsp;<span class=\"nt\">&lt;\/xsl:template&gt;<\/span><\/div><div class=\"line\" id=\"LC173\"><span class=\"nt\">&lt;\/xsl:stylesheet&gt;<\/span><\/div><\/pre><\/div>\n            \n          <\/div>\n\n          <div class=\"gist-meta\">\n            <a href=\"https:\/\/gist.github.com\/raw\/1209930\/e94df9b3279f606166a3d7b7375c9526d8ed9f37\/gistfile1.xml\" style=\"float: right;\">view raw<\/a>\n            <a href=\"https:\/\/gist.github.com\/1209930#file_gistfile1.xml\" style=\"float: right; margin-right: 10px; color: #666;\">gistfile1.xml<\/a>\n            <a href=\"https:\/\/gist.github.com\/1209930\">This Gist<\/a> brought to you by <a href=\"http:\/\/github.com\">GitHub<\/a>.\n          <\/div>\n        <\/div>\n      \n    \n  \n<\/div>\n<\/noscript>\n<p>I hope that this proves helpful if you ever find yourself in the position where you have to regularly keep code in sync between 2 different repositories (or even the same repositories with different folder structures).&nbsp; And like I said, I welcome feedback on how I can improve my PowerShell.<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/r8j_Lvbp0Uk\" width=\"1\" \/>", "datetime": "2011-09-11T18:23:34", "id": "http:\/\/codebetter.com\/howarddierking\/2011\/09\/11\/one-of-the-small-costs-of-transparency\/", "categories": [], "metadata": {"guid": "d73fbf88-5f1c-46ab-b18e-c6409e14742a", "likes": 0, "is_published": false}}], {}]"
09-15 23:25 SocketClient INFO     Received from service: "true"
09-15 23:25 SocketClient INFO     Returning(as str): 'true'
09-15 23:25 root         INFO     Handling CGI request.
09-15 23:25 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-15 23:25 SocketClient INFO     Sending to service: "["publish_content", [{"title": "A first glance at Visual Studio vNext (dev11)", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/hWyLXx0fryc\/", "author": "Patrick Smacchia", "summary": "In case you are not aware, a developer preview version of Visual Studio vNext has been released yesterday. I just played an hour with it and it seems that performances are finally here! The same way I skipped Vista to&#160;&#8230; <a href=\"http:\/\/codebetter.com\/patricksmacchia\/2011\/09\/15\/a-first-gla", "html": "<p>In case you are not aware, <a href=\"http:\/\/blogs.msdn.com\/b\/jasonz\/archive\/2011\/09\/14\/announcing-visual-studio-11-developer-preview.aspx\" target=\"_blank\">a <em>developer preview<\/em> version of Visual Studio vNext has been released yesterday<\/a>. I just played an hour with it and it seems that <strong>performances are finally here<\/strong>! The same way I skipped Vista to jump from XP to <em>Wnd7 that I love<\/em>, I am (as much as I can) skipping VS2010 and I&#8217;ll jump from VS2008 to <em>VS2012 that I&#8217;ll hopefully love<\/em>. A few random notes:<\/p>\n<p>The startup time is damn fast, on a pretty large 50K <em>lines of code<\/em> VS solution: 4 seconds, and I am ready to type!<\/p>\n<p>The solution explorer (derived from VS2010 power tools) just rocks.<\/p>\n<p>The Ctrl+I search\/replace in file rocks as well.<\/p>\n<p>The main button menu now just contains 7 buttons per default, and of course you can configure it by adding your preferred buttons.<\/p>\n<p>The find code duplicate is somewhat slow, 5 minutes on my 50K LoC, and didn&#8217;t give me any relevant result. But honestly the solution analyzed shouldn&#8217;t contain any duplicate and being slow is not so much an issue since it is not meant to be run at every build.<\/p>\n<p>The Ctrl+Alt+E exception dialog takes 2 seconds to open compared to 6 seconds with VS2010 and 4 seconds with VS 2008.<\/p>\n<p>The architecture explorer graph seems even slower than in VS 2010, and the\u00a0 embryo of dependency matrix seems to have been discarded. This is a good news for my business, <a href=\"http:\/\/www.ndepend.com\/Doc_VS_Arch.aspx\" target=\"_blank\">generating a graph with NDepend<\/a> is instantaneous in most situations, and it is a matter of dozens of seconds to minutes with VS 2010 and 2012.<\/p>\n<p>The product contains many minor bugs, which is normal at a pre-beta stage.<\/p>\n<p>The install process is still super slow (&gt; an hour on my fast SSD laptop). I wish VS features could be grain-partitioned (Wnd8 tools, TFS, SQL-tools, F# tools, Game dev tools, Web dev tools&#8230;). The minimal installation takes more than 8GB on hard-drive!<\/p>\n<p>I didn&#8217;t test all the Wnd8\/WPF\/ASP.NET\/WCF fancy new features, since I won&#8217;t develop with these until VS vNextNextNext is released! I believe I am like many real-world developers, developing an existing product that depends on a well defined set of <em>not so new<\/em> technologies, yet still passionated about what&#8217;s next. What really matters to developers in my situation, is to get bonus on what I am already using today (performance, solution explorer, quick search, code clone&#8230;) and VS 2012 seems to offer many of these bonus!<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/hWyLXx0fryc\" width=\"1\" \/>", "datetime": "2011-09-15T14:12:59", "id": "http:\/\/codebetter.com\/patricksmacchia\/?p=370", "categories": [], "metadata": {"guid": "2bda21ae-6134-4cc7-a08f-9d88d358dbb7", "likes": 0, "is_published": false}}], {}]"
09-25 15:12 root         INFO     Handling CGI request.
09-25 15:12 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:12 SocketClient INFO     Sending to service: "["downloadedcontent_count", [], {}]"
09-25 15:14 SocketClient INFO     Received from service: "979"
09-25 15:14 SocketClient INFO     Returning(as str): '979'
09-25 15:14 root         INFO     Handling CGI request.
09-25 15:14 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:14 SocketClient INFO     Sending to service: "["request_content_slice", [0, 15], {}]"
09-25 15:14 SocketClient INFO     Received from service: "[{"author": "johnvpetersen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/pL_ndeLUmxA/", "title": "It\u2019s that time of year again: CodeCamps!", "datetime": "2011-09-23T16:15:09", "html": "<p>I&#8217;ll be speaking at <a href=\"http://codecampnyc.eventbrite.com/\" target=\"_blank\">NYC CodeCamp</a>\u00a0with two new talks: <a href=\"http://www.codecampnyc.org/speakers-sessions/#PJ\" target=\"_blank\">Building your first jQuery Plugin and Rest &amp; ASP.NET MVC</a>. NYC Code Camp is on 10/1 @ Pace University.</p>\n<p>I&#8217;ll also be at <a href=\"http://codecamp.phillydotnet.org/2011-2/SitePages/Home.aspx\" target=\"_blank\">Philly Code Camp</a>\u00a0on 10/15.\u00a0 As of now, I&#8217;m going to be giving the Building your first jQuery Plugin talk as well as one dedicated to JavaScript Testing w/ QUnit.</p>\n<p>I&#8217;m going to record all sessions with Live Meeting. I will submit the content to Channel 9 and the Ineta Live site. In addition, the slide decks and code samples will be available here.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/pL_ndeLUmxA\" width=\"1\" />", "summary": "I&#8217;ll be speaking at NYC CodeCamp\u00a0with two new talks: Building your first jQuery Plugin and Rest &#38; ASP.NET MVC. NYC Code Camp is on 10/1 @ Pace University. I&#8217;ll also be at Philly Code Camp\u00a0on 10/15.\u00a0 As of now, I&#8217;m&#160;&#8230; <a href=\"http://codebetter.com/johnpetersen/2011/09", "id": "http://codebetter.com/johnpetersen/?p=75", "categories": [], "metadata": {"guid": "4bb8573b-0b01-4e45-9b80-6b5998ec0b47", "likes": 0, "is_published": false}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/09/maya2012-export-selected-with.html", "title": "Maya2012 Export Selected with DisplayLayers", "datetime": "2011-09-23T03:16:30.215000", "html": "This is just a warning for anybody who, like use uses Export Selected as an optimize method. Be warned, in 2012 if you select objects with display layers then exportSelected and then re-import, those display layers will be lost. Never had this before, 2011 was fine. This only showed up in 2012 and again, has broken another internal pipeline tool, another bug logged.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/1407054789026932542-4072787405157818955?l=markj3d.blogspot.com\" width=\"1\" /></div>", "summary": "This is just a warning for anybody who, like use uses Export Selected as an optimize method. Be warned, in 2012 if you select objects with display layers then exportSelected and then re-import, those display layers will be lost. Never had this before, 2011 was fine. This only showed up in 2012 and a", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-4072787405157818955", "categories": [], "metadata": {"guid": "96e7bc98-a5c7-4c2b-9f85-64312fdb8a09", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=774", "title": "The skinny on virtual static methods", "datetime": "2011-09-23T01:47:08", "html": "<p>Today at work, I saw the following pattern in python:</p>\n<pre>class Base(object):\n    @classmethod\n    def Spam(cls):\n        raise NotImplementedError()\nclass Derived(Base):\n    @classmethod\n    def Spam(cls):\n        return 'Eggs'</pre>\n<p>After thinking it over and looking at the alternatives, I didn&#8217;t have an objection. I asked for some verbose documentation explaining the decision and contract, as this is really not good OOP and, some (me) would say, polymorphism through convention- which in dynamically typed languages like python, is how polymorphism works. But it is unfamiliar and generally considered bad practice, especially in statically typed languages.</p>\n<p>Of course this sparked some disagreement, but fortunately, this is a topic I&#8217;ve read deeply into a number of times- first, when I was thinking about how to implement the pattern and realized the error of my ways. \u00a0Second, when I was working in another codebase that was a case study in antipatterns where this was used quite heavily. \u00a0I read into it yet again today so I could write this blog post and send it to the persons who disagreed with my judgement of the pattern in statically typed compiled languages. \u00a0So read on.</p>\n<p>Let me reiterate- I&#8217;m not opposed to this pattern per-se in python or other dynamically typed languages. \u00a0I think it is a sure sign of code smell, but there are legitimate reasons, especially if you&#8217;re working on, say, a Maya plugin and have some restricted design choices, and this can smell better than the alternative, which is a bunch of other shitty code to deal with it. \u00a0In fact, it <a href=\"http://docs.python.org/dev/library/abc.html?highlight=abstractmethod#abc.abstractstaticmethod\">@abc.abstractstaticmethod</a> was added to the abstract base class module in python 3.2, with Guido&#8217;s consent. \u00a0Which doesn&#8217;t mean it is right, and I&#8217;d still avoid it, but it&#8217;s not terrible.</p>\n<p>My problem is with the pattern in statically typed languages. \u00a0When you make a method abstract or virtual on an interface of class, you are saying, &#8216;you can pass around instances of me or derived from me and they will have a method named Foo.&#8217; \u00a0Instance methods are bound to the instance. \u00a0When you define a method as static, you are binding it to the class. \u00a0So there are two reasons this doesn&#8217;t work- one technical/semantic, the other conceptual.</p>\n<p>The technical/semantic cause is that <em>virtual</em>\u00a0and <em>static</em>\u00a0are opposite! \u00a0Virtual tells the compiler, &#8216;look up what method to call from the vtable of the object at runtime.&#8217; \u00a0Static tells it, &#8216;use this method at this address.&#8217; \u00a0Virtual can only be known at runtime, while static <em>must</em>\u00a0be known at compile time. \u00a0I mean, you <em>need</em>\u00a0a class to invoke the static method on! \u00a0The only way around this is through either dynamic typing, or some sort of reflection/introspection/codegen- in which case, you aren&#8217;t working with static typing, you&#8217;re emulating a dynamically typed environment in a statically typed one!</p>\n<p>So, clearly the concept of &#8216;virtual static&#8217; is impossible in static languages like C#, C++, and Java. \u00a0It doesn&#8217;t stop people from trying! \u00a0However, does the fact that the languages don&#8217;t support the feature make it a bad idea (the same way that just because python 3 supports it doesn&#8217;t necessarily make it a good idea)?</p>\n<p><strong>Yes, yes, a thousand times yes.</strong>\u00a0 Let me restate the above: in order for &#8216;static virtual&#8217; to be supported in a statically typed language, <em>you need to use its dynamic typing faculties</em>. \u00a0Look, I&#8217;m all for &#8216;multi-paradigm&#8217; languages (even though some artard on Reddit berated an article I wrote because that phrase doesn&#8217;t actually make sense), but we need to be <em>very careful</em>\u00a0when we start using patterns that go against the foundation of our languages.\u00a0 Like I said- I&#8217;m not fundamentally opposed to the pattern, I am just opposed to using it in statically typed languages.</p>\n<p>But that&#8217;s like saying, I prefer tomato juice to evolution. \u00a0I don&#8217;t even know what that means. \u00a0You cannot have virtual static methods in a statically typed language. \u00a0They are incompatible.</p>\n<p>So much for the technical (vtable)/semantic (dynamic) reason (were those 2 reasons, or one reason?). \u00a0What about the conceptual one?</p>\n<p>Well like I said earlier, virtual or abstract methods are part of a contract that says, I or a subclass will provide an implementation of this method. \u00a0Classes and interfaces define contracts, and at their core, nothing else (<a href=\"http://blogs.msdn.com/b/ericlippert/archive/2011/09/19/inheritance-and-representation.aspx\">especially not how they&#8217;re laid out in memory</a>!). \u00a0So if you&#8217;re passing around a type, and you&#8217;re saying, this type will have these methods- well, what does that look like? \u00a0I can hardly fathom what the class declaration would look like:</p>\n<pre>class Base {\n    public virtual static Base Spam() { return Base(); }\n    public virtual string Ham() { return \"Base Ham\"; }\n}\nclass Derived : staticimplements Base {\n    public override static Base Spam() { return Derived(); }\n}</pre>\n<p>Well, shit. We&#8217;re saying here that Derived&#8217;s <em>type</em>\u00a0implements the contract of Base&#8217;s <em>type</em>- well, Base has a &#8216;regular&#8217; instance contract, the Ham method. \u00a0What happens to this on Derived? \u00a0Is Ham part of Base&#8217;s contract? \u00a0It must be, because otherwise I have no idea what the Spam() method is going to return for Derived. \u00a0Alright, so if you &#8216;staticimplements&#8217; something, you get get all static and instance methods as part of your contract (and this is how python works, too).</p>\n<p>So how do we use this?</p>\n<pre>void Frob(Base obj) { ... }</pre>\n<p>Wait. Shit. This says we&#8217;re passing in an <em>instance</em> of Base, whereas we want to pass in the <em>Type</em> of an object that staticimplements Base. So:</p>\n<pre>void Frob(BaseType obj) { ... }</pre>\n<p>So now let&#8217;s jump back to our class definitions:</p>\n<pre>class BaseType : Type { public virtual static Base Spam() { return Base(); }\nclass Base : staticimplements BaseType { public virtual string Ham() { return \"Base Ham\"; } }\nclass Derived : staticimplements Base { public override static Base Spam() { return Derived(); } }</pre>\n<p>Now we&#8217;re getting somewhere. We can define types that inherit from the Type object (that is some class like .NET&#8217;s Type class), and we can staticimplements those (and if you staticimplements, that implies you also get all instance methods).</p>\n<p>Well shit, wait. If Base inherits from Type, then instances of Base will also get all instance methods from the Type object? Well ok, I can deal with that, we don&#8217;t have to use Type- what if Type inherits from RootType, and BaseType inherits from RootType, and RootType is just an empty definition so instances of objects that inherit from BaseType don&#8217;t have all of Type&#8217;s instance methods?</p>\n<pre>void Frob(BaseType baseType) {\n    Base obj = baseType.Spam();\n    //Well, how do we get an instance of BaseType from an instance of Base?  We can't.\n    //RootType rt = obj.GetType(); //What good is RootType here?\n    //BaseType bt = obj.GetBaseType(); //Wait, so we put a method on the instance that needs\n                                //to be\u00a0overridden on the subclass to return an instance of the actual type?</pre>\n<pre>}</pre>\n<p>I&#8217;m not going to go any further because I doubt anyone has even read this far. The question of virtual static functions in statically typed languages is pointless- much easier, then, to just throw up your hands and hack together whatever using reflection, dynamic, templating, or any other form of introspection. You can, for sure, come up with workarounds that are often quite specific and span hundreds of lines. I&#8217;ve read and gagged at a hundred of them. \u00a0But given that it is currently not just technically impossible, but conceptually brain-melting, why would you?</p>\n<p>The problem at its core is, I think, that people learn a golden hammer in one language (in this case, python, Delphi, etc.) and try to apply it to another (C#, Java, C++), as well as people coming up with a design and then figuring out how to shoehorn the idea into the language. \u00a0Well guess what- not every language can execute any arbitrary patterns or designs well. \u00a0Learning python made this patently clear. \u00a0The language is so concise, each line (and character!) so meaningful, it is <strong>patently clear</strong>\u00a0when I am doing something unpythonic- the meaningless lines of code, the extra characters, the redundant patterns in the code, the roundabout way to achieve something. \u00a0Static languages don&#8217;t have this concision, they don&#8217;t have the same economy, or flexibility. \u00a0There is too often a legitimate workaround or over-engineering, so when illegitimate workarounds are devised- well, who even considers it? \u00a0I certainly didn&#8217;t (hello,\u00a0<em><a href=\"http://blogs.msdn.com/b/ericlippert/archive/2011/02/03/curiouser-and-curiouser.aspx\">class Blah&lt;T&gt; where T : Blah&lt;T&gt;</a></em>!).</p>\n<p>So what are your choices here? \u00a0If you <em>really think</em>\u00a0that this is your <em>only option</em>, your design stinks. \u00a0Stinks in that it has a foul <em>code smell</em>. \u00a0You have a few options:</p>\n<ol>\n<li>Singletons, which is a pretty big copout because you&#8217;re really just creating a static class by another name (but to be clear, are still a potential solution),</li>\n<li>Just create a new instance and call an instance method. \u00a0Suck it up, it really isn&#8217;t a big deal, though you basically require generics and a new() constraint for it, or the conceptual opposite:</li>\n<li>Dependency injection. \u00a0My guess is, if you&#8217;ve made it this far (congrats and thanks!), and you disagree, you&#8217;re not familiar with the idea of Dependency Injection or Inversion of Control. \u00a0I&#8217;d encourage you to read up on it, and realize it isn&#8217;t nearly as complicated as you may think it is, but far too interesting to get into here.</li>\n</ol>\n<p>Good luck!</p>\n<hr />\n<font size=\"0\">I&#8217;d encourage you to do your own googling and reading about this problem.  It&#8217;s quite interesting and really highlights conceptual differences between languages, and understanding the problems or benefits to the approach will make you a better programmer and designer in your preferred language.</font></p>", "summary": "Today at work, I saw the following pattern in python: class Base(object): @classmethod def Spam(cls): raise NotImplementedError() class Derived(Base): @classmethod def Spam(cls): return 'Eggs' After thinking it over and looking at the alternatives, I didn&#8217;t have an objection. I asked for some ", "id": "http://www.robg3d.com/?p=774", "categories": [], "metadata": {"guid": "7206a27d-07be-4852-9566-ff3b8a9e6c98", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/21/im-on-twitter/", "title": "I\u2019m on Twitter", "datetime": "2011-09-21T06:25:54", "html": "<p>I finally gave in and created a Twitter account. I&#8217;m not entirely sure yet what to do with it but apparently &#8220;who you know is just as important as what you know&#8221; so it couldn&#8217;t hurt to take my first, wobbly steps in the world of social networking.<!-- PHP 5.x --></p>", "summary": "I finally gave in and created a Twitter account. I&#8217;m not entirely sure yet what to do with it but apparently &#8220;who you know is just as important as what you know&#8221; so it couldn&#8217;t hurt to take my first, wobbly steps in the world of social networking.", "id": "http://www.zspline.net/blog/?p=1555", "categories": [], "metadata": {"guid": "1e4db92c-0ad8-47a6-a4b1-e420dfa9cdd9", "likes": 0, "is_published": false}}, {"author": "anim8d (timborrelli@gmail.com)", "url": "http://strongmanimator.blogspot.com/2011/09/law-of-diminishing-returns-redux.html", "title": "Law Of Diminishing Returns: Redux", "datetime": "2011-09-20T22:11:00.675000", "html": "<span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"></span><br />This post is a revisiting of a previous post from this blog, and is also posted <a href=\"http://altdevblogaday.com/2011/09/21/the-law-of-diminishing-returns/\">here</a>.<br /><br />Every so often, the hot topic of crunch/overtime/extra hours comes (read: anytime a jackass like me writes a post about it or the mainstream media decides to interpret what a jackass like me writes as a scathing commentary on the state of the industry). Sometimes, though,<a href=\"https://twitter.com/#!/ID_AA_Carmack/status/115616182161252353\">&nbsp;high profile people</a>&nbsp;say something about overtime, and it incites a reaction, no matter what the intent.<br /><br />It\u2019s no surprise to anyone, in any industry, that overtime can creep into all facets of our lives. In the case of me being both a powerlifter and a video game developer, overtime has come in the form of overtraining and crunching, respectively.<br /><br /><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/bicycle-crunches.jpg\" style=\"margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-16727\" height=\"300\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/bicycle-crunches.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"300\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Not this kind of crunch, guys</td></tr></tbody></table><br />For powerlifters, overtraining generally involves training your body so hard that it effectively cannot recover- your basal body temperature drops, your central nervous system begins to shut down. For game developers, crunching is typically a point in a project that requires developers to work 60, 80, or even 100 hours a week to hit a deadline, pushing our mental capacity to a limit. In both cases, you become lethargic and your sleep suffers, furthering the lack of recovery. The belief for both overtraining and crunch is that that the extra time put in will result in higher quantity and quality of results.<br /><br />Our ability to cope with such overtime hinges heavily on the amount of time we have to recover from engaging in it.This recovery, whether or active (by, say, deep tissue massage or engaging in an unrelated interest) or passive (by relaxing on the couch or playing video games), can only work if those needing it are given the proper amount of time and resources to ALLOW it to work.<br /><br /><h3><span class=\"Apple-style-span\" style=\"font-size: large;\"><u>All The King's Horses</u></span></h3><div><span class=\"Apple-style-span\" style=\"font-size: large;\"><u><br /></u></span></div>Recently, I spent a large amount of time training for a national powerlifting competition. I trained for 5 months, competed in a local meet as a warm up, and then trained for another 2 months before the national meet. During the initial 5 months I worked very hard in the gym and took regular breaks from training so my body could recover, and I saw great gains in strength. At the local meet I set a personal best in the deadlift, and walked away happy.<br /><br />After the local &nbsp;meet, I took only a few days off, and then decided that I had recovered from the first meet and the stress it had put on my body. &nbsp;Since I had limited time before the national competition, I spent the next 2 months working even harder than I had before. Not only did I not take enough time off after the local meet, I eliminated any down time from my training, effectively giving my body no time to recover. After several weeks of this new training plan, I actually felt weaker. I started skipping workouts and making excuses to myself to not push it too hard. It got to the point where I didn't even want to compete in the national meet anymore. I was burnt out, stressed out, and flat out tired. Even still, I set a goal to break my personal record for total weight. In fact, I planned on pushing myself to move more weight than I had ever done, even during training.<br /><br /><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/babes-in-toyland-humpty.jpg\" style=\"margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-16783 \" height=\"300\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/babes-in-toyland-humpty.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"400\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">He probably overtrained something...</td></tr></tbody></table><br />So what happened? I failed. I didn\u2019t allow my body to recover from the incredible stress I was putting on it, and as a result when it mattered most I couldn\u2019t compete at my full potential. I didn\u2019t reach my goals, and the national meet was one of my worst in recent memory.<br /><br /><h3><span class=\"Apple-style-span\" style=\"font-size: large;\"><u>All The King's Men</u></span></h3><div><span class=\"Apple-style-span\" style=\"font-size: large;\"><u><br /></u></span></div>Game devs are probably wondering what this&nbsp;<a href=\"http://articles.elitefts.com/articles/iron-brothers/planet-fatness/\">meathead, lunkhead, Planet Fitness-reject's</a>&nbsp;story has to do with them. Well, to paraphrase Matthew McConaughey in \u201cA Time To Kill,\u201d just imagine if what I described above was the progression from a press demo to a final build (or, maybe the progression from shipping a game to working on the next one).<br /><br />Imagine that the whole team gets behind polishing the absolute hell out of the first hour of gameplay. We spend a good 6 months of time getting the first 3 missions right. The scripting, the code hooks, the character performances, everything. We show it to the press during the months leading up to launch, and all of our attention is focused on that one hour of gameplay shining like a star.<br /><div class=\"mceTemp\"><br /></div>After all of that, the realization sets in that we have 3 months to finish the game. We have to get ALL of that hype into the rest of the missions, the gameplay, the general feel of the game. Maybe this mission here doesn\u2019t have enough of what dude from Kotaku loved, and maybe those animations there don\u2019t live up to the expectations of our publisher. So we start spending extra time revamping, changing, cramming in content. Features creep in. Hours start piling up. Some of us are thinking \"I'm working extra hours because I believe in the project,\" so when we hit a wall at 10pm, we push through it.<br /><br /><br /><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/humpy-dance.jpg\" style=\"margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-16779 \" height=\"240\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/humpy-dance.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"320\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">We probably looked like MC Hammer on crack at times, too</td></tr></tbody></table><br />Suddenly it's Thursday, 2 weeks before submission, and we've already put 50 hours in this week. We start to check in bad data. We break the build. We snap at co-workers. We're no longer being smart or creative about making the game- instead we're going through zombie-like motions to just get it done. We just want to ship this thing and move on to the next project.<br /><br />And that passion we had? Starting to dwindle, if not gone already.<br /><br />Sound familiar?<br /><br /><h3><u><span class=\"Apple-style-span\" style=\"font-size: large;\">Putting It Back Together</span></u></h3><div><u><span class=\"Apple-style-span\" style=\"font-size: large;\"><br /></span></u></div>The thing is, though, that it doesn't have to be like this. There can be&nbsp;good overtime. For example, I've overtrained my deadlift and seen incredible gains by pushing myself on heavy days and taking a month away from the next heavy session. I've worked 50-60 hour weeks, with 5 (and rarely 6) days a week for no longer than 2 or 3 weeks to get a deliverable out the door, and have produced work that was higher quality and more rewarding, with no negative effect on my health or marriage.<br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/-V0kkJWzh9Nw/Tnlwio_ip6I/AAAAAAAAAI0/lHXthSvkcus/s1600/waterboy_2.jpg\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"186\" src=\"http://2.bp.blogspot.com/-V0kkJWzh9Nw/Tnlwio_ip6I/AAAAAAAAAI0/lHXthSvkcus/s320/waterboy_2.jpg\" width=\"320\" /></a></div><br /><br />What made the good overtime better than the bad?<br /><br />After the bad overtime, I was done. I thought I had recovered enough, so when I tried to (physically and mentally) get back into both activities, I couldn\u2019t. I was done, and wanted out. I considered quitting both powerlifting and game development after the last bad overtime experience with each.<br /><br /><br />In the case of the good overtime experiences, I was able to take the proper amount of time off that both my body and mind needed to recover not just AFTER the overtime, but DURING it. The work I put during these smaller pushes was of higher quality, more rewarding in the end, and most importantly, kept me engaged in I was doing and looking forward to getting back to it at full tilt as soon as I could.<br /><br />It can be argued that if we want to be successful, we have to push ourselves harder than the average in our fields. It doesn\u2019t, however, have to have a negative affect on the things we are passionate about. We\u2019ve all read the reports, seen the opinion pieces, heard about EA Spouses and Kaos\u2019 \u201cthousand yard stare.\u201d I\u2019ve read articles on how overtraining has blown out knees, biceps, backs, and worse. Everyone universally agrees that too much overtime is bad- Bad for your health, bad for relationships, bad for studio morale, bad bad bad.<br /><br /><h3><u><span class=\"Apple-style-span\" style=\"font-size: large;\">Smell The Roses</span></u></h3><div><u><span class=\"Apple-style-span\" style=\"font-size: large;\"><br /></span></u></div><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/ferris-bueller.jpg\" style=\"margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-16780\" height=\"250\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/ferris-bueller.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"250\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Don't let life pass you by</td></tr></tbody></table>Overtime exists and it\u2019s not going away. I\u2019m not suggesting that it does. I\u2019m not going to rant about crunch time ruining lives. I\u2019m not going to claim that my life has been horribly affected by working overtime or training too hard.<br /><br />I am, however, going to say this- we all need to manage it better.<br /><br />I don\u2019t mean that we need to plan better (we know), or avoid feature/exercise creep (we try), or never put in overtime (we will). I mean that we as individuals need to manage how we represent ourselves while working overtime. We need to be conscious of the fact that people who are interested in what we do (powerlifting, game development, insert-your-interest-here) are going to look at us as an example. They\u2019ll see us doing stupid things in the gym or working 100 hours a week, and see us wearing both of those things like honor badges. They\u2019ll see us tweeting about how we\u2019re \u201ccrunching to make the game better for you, the consumer!\u201d, or read our Facebook post about how we just totally killed a training session and can\u2019t walk right now- but hey, \"no pain no gain!\"<br /><br />Those people will enter our fields and expect that to be the norm, the right way to do things, and they will never question those methods until they too are burnt out. And that\u2019s a damn shame, because we can prevent it. We can teach these newcomers a different lesson- to not make the mistakes that we did. We need to encourage them to come into our industries and change them for the better.<br /><br />When all is said and done, people will only remember the 4-million-on-day-one sellers, and not the people who worked hard and sacrificed to get the game to that point. We\u2019ll only remember the monster numbers that a powerlifter put up at Worlds, but we\u2019ll never see the training that was put in to achieve that. So let\u2019s take back that part. Let\u2019s do it smarter. Let\u2019s follow the Law of Diminishing Returns.<br /><br /><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4248341596629159263-2209298601478773026?l=strongmanimator.blogspot.com\" width=\"1\" /></div>", "summary": "<span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"></span><br />This post is a revisiting of a previous post from this blog, and is also posted <a href=\"http://altdevblogaday.com/2011/09/21/the-law-of", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-2209298601478773026", "categories": [], "metadata": {"guid": "94feed28-ea48-44ce-98cd-ba0d6e5f9d24", "likes": 0, "is_published": false}}, {"author": "Brendan Tompkins", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/azJJmuHBbdE/", "title": "A VSLive Winner!  Next week, win a Windows 8 Slate!", "datetime": "2011-09-20T13:01:27", "html": "<p><a href=\"https://docs.google.com/spreadsheet/pub?hl=en_US&amp;hl=en_US&amp;key=0ApfMNDGiGLqodGh1amN6R3BUQ3VVWldhSEFfeGFVZUE&amp;single=true&amp;gid=14&amp;output=html\">Here&#8217;s the final standings for the week</a>. \u00a0Ngruman <a href=\"http://codebetter.com/2011/09/06/codebetter-com-wants-to-send-you-to-redmond/\">will be going to Redmond</a>, courtesy of VSLive and CodeBetter.Com. Congratulations!</p>\n<blockquote><p><em>As a big thanks to everyone who entered the giveaway, we have a special discount code for Visual Studio Live! to give you!\u00a0Just\u00a0register at\u00a0</em><a href=\"http://bit.ly/VSLiveRdmdReg\" target=\"_blank\"><em>http://bit.ly/VSLiveRdmdReg</em></a><em>\u00a0and enter\u00a0the code VSLRTUV for $300 off the Best Value Package or Conference Package.\u00a0</em></p></blockquote>\n<p>But wait, there&#8217;s more. \u00a0We&#8217;re having a blast playing CodeBetter Fantasy Football, and we&#8217;re just going to keep this train going. \u00a0Next week, we&#8217;re going to give away a Windows Slate (specs forthcoming) , fully loaded with the Windows 8 Developer Preview. \u00a0Thanks to ScottGu, and\u00a0Emilio Salvador Prieto for throwing in this fantastic prize&#8230;</p>\n<p>So, here&#8217;s how this is going to work. \u00a0 If you&#8217;ve already entered you&#8217;re in the running for next week, if not and you&#8217;d like to enter for next week&#8217;s Slate giveaway, simply comment/trackback/tweet this post.</p>\n<p>Good luck!</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/azJJmuHBbdE\" width=\"1\" />", "summary": "Here&#8217;s the final standings for the week. \u00a0Ngruman will be going to Redmond, courtesy of VSLive and CodeBetter.Com. Congratulations! As a big thanks to everyone who entered the giveaway, we have a special discount code for Visual Studio Live! to&#160;&#8230; <a href=\"http://codebetter.com/2011/", "id": "http://codebetter.com/?p=216", "categories": [], "metadata": {"guid": "0d4b677a-7378-4e5e-ae40-aa7d5ca9f06d", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/19/gavit-dev-diary-15-machines/", "title": "Gavit Dev Diary #15: Machines", "datetime": "2011-09-19T17:00:40", "html": "<p>Part of Gavit&#8217;s rapid prototyping toolset is the so called &#8220;Machine Controller&#8221; which allows the user to easily build controllable machinery without involving programmers.</p>\n<p>At a high level it looks like this:</p>\n<p style=\"text-align: center;\"><img alt=\"http://www.zspline.net/blog/wp-content/gallery/gavit/machines01.png\" class=\"aligncenter\" height=\"267\" src=\"http://www.zspline.net/blog/wp-content/gallery/gavit/machines01.png\" width=\"512\" /></p>\n<p>The machine controller processes the input and adjusts certain properties in actors placed on the map. The user just assembles the desired machine, sets up the controller and it&#8217;s ready to go. Machines can be saved as prefabs for later use or to act as templates to build upon.</p>\n<p>In this example the exhaust smoke particle system, the tilting of the dump bed and the torque of the front wheels are controlled in a truck.</p>\n<p>&nbsp;</p>\n<h6>Input handling</h6>\n<p>All incoming input data is handled in a unified fashion, regardless of the nature of the source device. The user always works with the same generalized interface, there are very few hardware specific parameters. The following rules always apply:</p>\n<ul>\n<li>Every input behaves in an analog fashion. Even buttons produce gradually changing values.</li>\n<li>Every input provides XYZ values. If the input device has less degrees of freedom than that then unused elements of the vector will stay at 0. (A mouse only changes X and Y while Hydra_Position uses all elements of the vector.)</li>\n<li>Every input can be used in &#8220;relative&#8221; or &#8220;absolute&#8221; mode. For example a mouse, an inherently\u00a0 relative positioning device can be used as a virtual joystick.</li>\n</ul>\n<p>&nbsp;</p>\n<h6>Input remapping</h6>\n<p>The next step is remapping the incoming values to ones which will be used to modify the target properties in actors.</p>\n<p>Let&#8217;s say that I want to control the trucks tipping dump bed by pitching the Hydra controller.</p>\n<p style=\"text-align: center;\"><img alt=\"http://www.zspline.net/blog/wp-content/gallery/gavit/machines02.png\" class=\"aligncenter\" height=\"257\" src=\"http://www.zspline.net/blog/wp-content/gallery/gavit/machines02.png\" width=\"512\" /></p>\n<p>I can only rotate the controller conveniently about 35 degrees backwards but I need a greater rotation on the dump bed, let&#8217;s say 80 degrees. By using input-output value pairs I can define how to interpret my movements:</p>\n<table align=\"center\" border=\"1\" frame=\"border\" style=\"border-color: #000000; border-width: 1px; border-style: solid;\">\n<tbody>\n<tr>\n<td align=\"\" dir=\"\" lang=\"\" scope=\"\" style=\"border-color: #000000; border-style: solid; border-width: 1px;\" valign=\"\"><strong>Input</strong></td>\n<td align=\"\" dir=\"\" lang=\"\" scope=\"\" style=\"border-color: #000000; border-style: solid; border-width: 1px;\" valign=\"\"><strong>Output</strong></td>\n</tr>\n<tr>\n<td align=\"\" dir=\"\" lang=\"\" scope=\"\" style=\"border-color: #000000; border-style: solid; border-width: 1px; text-align: right;\" valign=\"\">0</td>\n<td align=\"\" dir=\"\" lang=\"\" scope=\"\" style=\"border-color: #000000; border-style: solid; border-width: 1px; text-align: right;\" valign=\"\">0</td>\n</tr>\n<tr>\n<td align=\"\" dir=\"\" lang=\"\" scope=\"\" style=\"border-color: #000000; border-style: solid; border-width: 1px; text-align: right;\" valign=\"\">-35</td>\n<td align=\"\" dir=\"\" lang=\"\" scope=\"\" style=\"border-color: #000000; border-style: solid; border-width: 1px; text-align: right;\" valign=\"\">-80</td>\n</tr>\n</tbody>\n</table>\n<p>These two value pairs define the limits so any values in between can be computed easily.<br />\nWhile this is the base idea behind remapping it goes a bit deeper:</p>\n<ul>\n<li>It is possible to define more than two value pairs for non linear output profiles.</li>\n<li>Input components can be mix-and-matched to output components. For example the X axis of the mouse could control the Y rotation of an object.</li>\n<li>The output value can be used in different ways in relation to the target property:</li>\n</ul>\n<ul>\n<li><em>Direct</em>: Overwrite the property. (e.g., Set rotation of the box to 32 degrees.)</li>\n<li><em>Add</em>: Add the output value to the property. (e.g., Rotate the box 10 degrees more to the left.)</li>\n<li><em>Scale</em>: Multiply the original value by the output. (e.g., Increase brightness of a spotlight by 2.)</li>\n</ul>\n<p>&nbsp;</p>\n<h6>Machine components and machine parts</h6>\n<p>After the value remapping is done, the last step is linking the actual actors and their properties to the machine controller by defining <em>Machine Components</em> and <em>Machine parts</em>.</p>\n<p>A <em>Machine Part</em> is a property in a certain actor on the level. It can be many things: position of a mesh, size of a decal, spawn rate of a particle emitter, torque of a motor, etc.</p>\n<p>A <em>Machine Component</em> is one or more Machine Parts which are controlled by the same input. For example pushing forward the thumbstick increases the rotation rate of the truck&#8217;s front wheels while also adds to the spawn rate of the exhaust emitter for more smoke.</p>\n<p>&nbsp;</p>\n<p>So that&#8217;s how machines work in Gavit. In spite of the somewhat steep learning curve they provide a considerable amount of freedom to try out and refine new ideas.<!-- PHP 5.x --></p>", "summary": "Part of Gavit&#8217;s rapid prototyping toolset is the so called &#8220;Machine Controller&#8221; which allows the user to easily build controllable machinery without involving programmers. At a high level it looks like this: The machine controller processes the input and adjusts certain properties ", "id": "http://www.zspline.net/blog/?p=1536", "categories": [], "metadata": {"guid": "e2aab14c-5a8c-4aea-8c7b-f55ec6254885", "likes": 0, "is_published": false}}, {"author": "Patrick Smacchia", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/pLikBwfha70/", "title": "See the fantastic business opportunity!", "datetime": "2011-09-19T14:57:06", "html": "<p>In this post I just want to convey a simple, yet powerful, idea: Last week Microsoft announces that the Windows UI is about to get re-invented with WinRT. Instead of bashing MS about its policy concerning WPF and SL, <strong>be smart and see here a fantastic entrepreneurship opportunity</strong>. The future top WinRT applications\\tooling\\trainers\\consultants will be the ones that get developed today.</p>\n<p>You are not happy being employed? I wasn&#8217;t too back in 2001. I wanted action, enthusiasm, innovation, technical expertise and reward. At that time I was flagged C++ expert and I discovered .NET. I wrote the <a href=\"http://www.amazon.fr/Pratique-NET-C-Patrick-Smacchia/dp/2841772454\">reference book in French concerning C#/.NET</a>\u00a0 with O&#8217;Reilly France, released mid 2003. It allowed me to capitalize on skills and clients trust. I then developed a successful consultancy expertise/training activity. In parallel I wrote the second version of the book for <a href=\"http://www.amazon.fr/Pratique-NET-2-0-C/dp/2841773396\">C#2 late 2005</a>.\u00a0 Meantime I released a small OSS static analyzer in mid 2004, that became <a href=\"http://www.ndepend.com/ReleaseNotes.aspx\">NDepend pro, at early 2007</a> and that made me and my team living for almost 5 years now, and hopefully for many years to come.<br />\nAll this was possible because I capitalized on the .NET platform at early stage. I didn&#8217;t revolutionized the world but today, I absolutely love my job + awesome perspective for future versions + well enough money + no (stupid) boss + very few time and location constraints.</p>\n<p>Today the exact same situation occurs again. Microsoft bets all on WinRT as it used to bet much on .NET. It is a risky strategy but, like it or not, Microsoft generally wins. Do you remember C++ and Java guys making fun of .NET? Do Java have LINQ today? It doesn&#8217;t even have clean generics! Start a business based on WinRT and Windows 8 now and it will be mechanically pushed by the bulldozer marketing machine Microsoft is currently cranking up. On a pure technical side it can be tooling/training/book/consulting. But if you feel well acquainted with a particular business, it can be a B2B or B2C product that will be first delivered and first ranked on the upcoming MS store.</p>\n<p>Exciting isn&#8217;t it? Good luck my friend!</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/pLikBwfha70\" width=\"1\" />", "summary": "In this post I just want to convey a simple, yet powerful, idea: Last week Microsoft announces that the Windows UI is about to get re-invented with WinRT. Instead of bashing MS about its policy concerning WPF and SL, be&#160;&#8230; <a href=\"http://codebetter.com/patricksmacchia/2011/09/19/see-the-f", "id": "http://codebetter.com/patricksmacchia/?p=377", "categories": [], "metadata": {"guid": "e089e37b-5369-4b85-bcf7-1969eaa7539b", "likes": 0, "is_published": false}}, {"author": "ldunham (noreply@blogger.com)", "url": "http://ldunham.blogspot.com/2011/09/handy-script.html", "title": "handy script", "datetime": "2011-09-19T11:51:58.257000", "html": "just found this script whilst looking for a way to write maya's scriptEditor output to a file (scene kept crashing, couldn't make out errors etc)<br /><br />// turn writeHistory on and specify fileName<br /><br /><div style=\"text-indent: 0px;\"></div><div style=\"text-indent: 0px;\">scriptEditorInfo -wh 1 -historyFilename \"C:/Users/lee.dunham/Desktop/myScriptEditorLog.txt\";</div><div style=\"text-indent: 0px;\"><br /></div><div style=\"text-indent: 0px;\">//turn writeHistory off</div><div style=\"text-indent: 0px;\"> </div><div style=\"text-indent: 0px;\"></div><div style=\"text-indent: 0px;\">scriptEditorInfo -wh 0;</div><br /><div style=\"text-indent: 0px;\"><br /></div><div style=\"text-indent: 0px;\">its damn useful, cant believe i've never used this before! (as it writes history as its going)</div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/536028505499887975-4563672294551766398?l=ldunham.blogspot.com\" width=\"1\" /></div>", "summary": "just found this script whilst looking for a way to write maya's scriptEditor output to a file (scene kept crashing, couldn't make out errors etc)<br /><br />// turn writeHistory on and specify fileName<br /><br /><div style=\"text-indent: 0px;\"></div><div style=\"text-indent: 0px;\">scriptEditorInfo -w", "id": "tag:blogger.com,1999:blog-536028505499887975.post-4563672294551766398", "categories": [], "metadata": {"guid": "1a0a3cdc-3dcb-4453-b147-7e7204a36aa6", "likes": 0, "is_published": false}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/09/hotkey-alt-broken-in-2012.html", "title": "HotKey Alt<> broken in 2012", "datetime": "2011-09-19T05:24:34.859000", "html": "Just a quick post about the hotkey mapping in 2012. The main Alt keys which advance time in the UI's are now broken in the GrapthEditor, this has been driving some of our animator mad as you can imagine. The command thats now bound to it in 2012 is wrong (a fix in due from Autodesk but not sure if it'll get into the SP1 release). So the bug is that the commands bound to the NextFrame and PreviousFrame calls look if the current UI is a scriptedPanel and only advance the time if that panel is the CameraSequencer...Wrong! Here's the fix for the NextFrame, for Previous from just put -1 in the `cuurentTime -q` -1 block<pre class=\"python\" name=\"code\"><br />string $currentPanel = `getPanel -withFocus`; <br />if((`getPanel -to $currentPanel`== \"scriptedPanel\") && (`scriptedPanel -q -type $currentPanel`== \"sequenceEditorPanel\"))<br />{ <br />sequenceManager -ct ( `sequenceManager -q -ct ` + 1 ); <br />} <br />else { currentTime ( `currentTime -q` + 1 );}<br /><br /></pre>Maya's current command bound to the Alt> key<pre class=\"python\" name=\"code\"><br />string $currentPanel = `getPanel -withFocus`; <br />string $panelType = `getPanel -to $currentPanel`; <br />if ($panelType == \"scriptedPanel\") <br />{ <br />    string $scriptedPanelType = `scriptedPanel -q -type $currentPanel`; <br />    if ( $scriptedPanelType == \"sequenceEditorPanel\")<br />    { sequenceManager -ct ( `sequenceManager -q -ct ` + 1 ); }<br />}<br />else { currentTime ( `currentTime -q` + 1 ); }<br /></pre><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/1407054789026932542-2114340459979202734?l=markj3d.blogspot.com\" width=\"1\" /></div>", "summary": "Just a quick post about the hotkey mapping in 2012. The main Alt keys which advance time in the UI's are now broken in the GrapthEditor, this has been driving some of our animator mad as you can imagine. The command thats now bound to it in 2012 is wrong (a fix in due from Autodesk but not sure if i", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-2114340459979202734", "categories": [], "metadata": {"guid": "22fa23b7-51f4-4709-a0c1-a909bf340f74", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=769", "title": "Automation must be a last resort", "datetime": "2011-09-18T18:00:27", "html": "<p>A repost from altdevblogaday. \u00a0Original post here:\u00a0<a href=\"http://altdevblogaday.com/2011/09/10/automation-must-be-a-last-resort/\">http://altdevblogaday.com/2011/09/10/automation-must-be-a-last-resort/</a>\u00a0 As is usual, the title is more inflammatory than the contents, the contents muddle the issue, and things are far more clear after reading the comments.</p>\n<hr />\n<p>As tools programmers and tech artists, we are responsible for the efficiency of our designers and artists. \u00a0And most tools programmers and TA&#8217;s I&#8217;ve worked with take this very seriously, and are generally very clever, so very few things can stand in their way when they are determined to speed up a developer&#8217;s workflow. \u00a0Most commonly, such speedups are achieved by the automation of repetitive tasks.</p>\n<p>But we are also responsible for the quality of our codebase. \u00a0&#8221;Simplicity&#8221; of code and systems is commonly accepted as an ideal all coders should strive for.</p>\n<blockquote><p><em>Everything should be made as simple as possible, but not simpler.<br />\n</em></p></blockquote>\n<p>And here is my problem. \u00a0<strong>Automation increases complexity and reduces simplicity.</strong></p>\n<h4>An Example</h4>\n<p>Consider the following diagram, which could represent a single workflow with many steps. \u00a0Each Step represents some unique concept or block of code or logic that exists in a pipeline- for example, exporting the content, format conversion, writing a metadata file, assigning a material, and importing into game. \u00a0Right now, the user performs each one manually.</p>\n<p style=\"text-align: center;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_1.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-16191\" height=\"141\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_1.png\" width=\"665\" /></a></p>\n<p>Obviously we can do better- we can half the number of steps if we write some code to automatically, say, launch an exe to process the just-exported content, and we can automatically write the metadata file on import.</p>\n<p style=\"text-align: center;\">\u00a0<a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_2.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-16192\" height=\"127\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_2.png\" width=\"665\" /></a></p>\n<p>Once this is in the wild, we realize we can <em>automate the whole thing!</em>\u00a0 So on export, we do everything, and it even imports the content into game. \u00a0Great! \u00a0But of course we still need to support some manual intervention for things that don&#8217;t &#8216;fit in.&#8217;</p>\n<p style=\"text-align: center;\"><a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_4.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-16194\" height=\"144\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_4.png\" width=\"665\" /></a></p>\n<p>There&#8217;s a problem here, though. \u00a0A big one. \u00a0The code has essentially remained the same- so even though the user&#8217;s experience is simpler (which is always the goal!), the way we got there was to add more complexity into the codebase. \u00a0Because here&#8217;s the thing about automation: \u00a0<strong>Automation </strong><strong>relies on inference.</strong>\u00a0 And inferring things in code is notoriously difficult and brittle. \u00a0We have basically all the same code we had when we started (though I&#8217;m sure we fixed and introduced some new bugs), except we have now effectively doubled the connections between the components, and each connection is brittle. \u00a0How much of your automation relies on naming, folder structures, globals (environment variables and singletons are globals too), or any number of circumstances that are now built into your codebase? \u00a0Likewise, if you merely <em>added</em>\u00a0buttons to create automation, the additional complexity there is obvious. \u00a0All the old stuff is still in place, you&#8217;ve just created another UI and code path on top of it that is either using it or also accessing the same internals.</p>\n<h4>That is not what we should strive for.</h4>\n<p>This, instead, is what we should strive for:</p>\n<p style=\"text-align: center;\">\u00a0<a href=\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_5.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-16195\" height=\"138\" src=\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_5.png\" width=\"665\" /></a></p>\n<p>This isn&#8217;t always possible- but I&#8217;ve seen enough pipelines to know that it is <em>probably</em>\u00a0possible on <em>most</em>\u00a0pipelines at your studio, and <em>definitely</em>\u00a0possible on <em>some</em>. \u00a0It should always be our goal- that every time we want to &#8216;automate&#8217; what the user does, we instead say &#8220;how can I reduce the complexity of the code so nothing needs to worry about this.&#8221; \u00a0This is how you identify <span style=\"color: #800000;\"><strong>automation that increases complexity</strong></span> versus <span style=\"color: #339966;\"><strong>refactorings that reduce complexity</strong></span>: when your change simplifies the codebase (this is open to interpretation but I&#8217;d imagine you can judge this pretty easily), and &#8216;automates&#8217; previously manual parts of the pipeline, that is no longer automation- you have done an excellent refactoring that has reduced complexity and it is not automation (at least not actually- the users are free to call it what they want).</p>\n<p>It isn&#8217;t always possible. \u00a0More commonly it would be possible but not without a substantial refactoring somewhere (maybe not even your code). \u00a0Sometimes, it is just moving the complexity around rather than removing it.</p>\n<p>These things are fine! The important thing is that you are now <em>really thinking</em>\u00a0about your codebase. \u00a0The goal isn&#8217;t to reduce the complexity of your codebase in a day, it is to ensure you are only adding\u00a0<em>valuable</em>\u00a0complexity and that you have identified opportunities to <em>reduce</em>\u00a0complexity.</p>\n<h4>Identifying Trends</h4>\n<p>It&#8217;s not very difficult to identify when we are adding excess complexity when automating, or when we are simplifying.</p>\n<p>If you have simple configuration needs, such as choosing two options or files, see if you can infer that setup instead from what the user chooses to do (such as providing him two choices, rather than one configurable one).</p>\n<p>In contrast to that, prefer <em>upfront configuration</em>\u00a0to <em>inference </em>if\u00a0the configuration adds significant power and simplifies the code.</p>\n<p>If common use cases no longer fit into the scope of the tool&#8217;s effective workflow, <em>refactor the tool</em>. \u00a0Do not start adding &#8216;mini-UI&#8217;s that support these additional use cases, or you will end up with a complex and confusing mess.</p>\n<p>Always present the minimum possible set of options to the user that allows her to get her job done effectively.</p>\n<p>As a corollary, if the code behind your simpler UI becomes significantly more complex when simplifying the actual UI, it is likely your system can be streamlined overall. \u00a0The lower the ratio of UI options to code behind, the better.</p>\n<h4>Conclusions</h4>\n<p>All too often I see tools programmers and technical artists automating processes by building new layers of code on existing systems. \u00a0Coders should always look for ways of simplifying the overall system in code (or moving the complexity out and abstracting it into another system) as a way to achieve a streamlined workflow for the user, rather than building automated workflows and adding complexity and coupling to the existing code.</p>\n<p>I intentionally didn&#8217;t provide precise examples or anecdotes, but I will gladly provide personal examples and observations in the comments. \u00a0Thanks.</p>\n<blockquote><p><em>Any intelligent fool can make things bigger, more complex, and more violent. It takes a touch of genius &#8211; and a lot of courage &#8211; to move in the opposite direction.</em></p></blockquote>", "summary": "A repost from altdevblogaday. \u00a0Original post here:\u00a0http://altdevblogaday.com/2011/09/10/automation-must-be-a-last-resort/\u00a0 As is usual, the title is more inflammatory than the contents, the contents muddle the issue, and things are far more clear after reading the comments. As tools programmers and ", "id": "http://www.robg3d.com/?p=769", "categories": [], "metadata": {"guid": "39b8507b-0bf8-4480-aca7-70b3c37b15ae", "likes": 0, "is_published": false}}, {"author": "Brendan Tompkins", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/Y_Tb6qZ2kLA/", "title": "CodeBetter.Com Fantasy Football Teams Posted", "datetime": "2011-09-17T19:27:54", "html": "<p>Yesterday we <a href=\"http://codebetter.com/2011/09/16/codebetter-com-contest-fantasy-football/\">announced</a> how we&#8217;re giving away <a href=\"http://codebetter.com/2011/09/06/codebetter-com-wants-to-send-you-to-redmond/\">the trip to VSLive in Redmond</a>, and we&#8217;ve finalized the 196 teams that will be competing for the prize. \u00a0<a href=\"https://docs.google.com/spreadsheet/pub?hl=en_US&amp;hl=en_US&amp;key=0ApfMNDGiGLqodGh1amN6R3BUQ3VVWldhSEFfeGFVZUE&amp;single=true&amp;gid=7&amp;output=html\">To see who is on your team, take a look at this spreadsheet</a>,\u00a0which we&#8217;ll update on Monday and Tuesday as we have the player data from the games on Sunday and Monday night. \u00a0 \u00a0The final winner will be posted on Tuesday.</p>\n<p>Good luck to all who entered!</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/Y_Tb6qZ2kLA\" width=\"1\" />", "summary": "Yesterday we announced how we&#8217;re giving away the trip to VSLive in Redmond, and we&#8217;ve finalized the 196 teams that will be competing for the prize. \u00a0To see who is on your team, take a look at this spreadsheet,\u00a0which we&#8217;ll&#160;&#8230; <a href=\"http://codebetter.com/2011/09/17/codeb", "id": "http://codebetter.com/?p=213", "categories": [], "metadata": {"guid": "34a73948-aec2-4c59-a0b4-2e0dce2dd7a3", "likes": 0, "is_published": false}}, {"author": "Brendan Tompkins", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/EbD5tznk4sU/", "title": "CodeBetter.Com Contest Fantasy Football", "datetime": "2011-09-16T19:41:16", "html": "<p>When we sat down to decide how to pick a winner for the <a href=\"http://codebetter.com/2011/09/06/codebetter-com-wants-to-send-you-to-redmond/\">CodeBetter.Com wants to send you to Redmond!</a> contest, we realized we couldn&#8217;t just pick our\u00a0winner out of a hat &#8211; it&#8217;s way too boring, and human choice generally exhibits poor statistical properties and pattern\u00a0repetition. \u00a0What&#8217;s better, you might ask? \u00a0One word. <em>Fantasy Football</em>.</p>\n<blockquote><p>American football may not be your ball of yarn, so for the uninitiated: Fantasy football is about building and managing a virtual team of real-life NFL football players. These virtual teams score points based on the performance of real players in NFL games. For example, if New England Patriots quarterback, Tom Brady, is on your fantasy team, and he throws a touchdown in a real game, your fantasy team earns points; if he throws an interception, your team loses points.</p></blockquote>\n<h2 dir=\"ltr\">CodBetter.Com Fantasy Football</h2>\n<p dir=\"ltr\"><span class=\"Apple-style-span\" style=\"color: #444444; font-size: 16px; line-height: 24px;\">If you&#8217;ve entered\u00a0<a href=\"http://codebetter.com/2011/09/06/codebetter-com-wants-to-send-you-to-redmond/\">the contest</a> by 9AM EST tomorrow morning, you will be assigned a randomly generated fantasy football team. \u00a0That&#8217;s right, your very own team. \u00a0Each team has five players: one quarterback, one AFC running back, one NFC running back, one AFC wide receiver, and one NFC wide receiver. To create the pool of possible players, we used ESPN\u2019s <a href=\"http://games.espn.go.com/ffl/tools/projections\">projected fantasy stats for Week 2</a>\u00a0and grabbed the projected top scoring quarterback, running back, and wide receiver from each NFL team. These players were used to populate our player spreadsheets, one sheet for each of the five positions on a fantasy team. Finally, we randomly generated five numbers for each contest entry. Each number corresponds to a row in the one of the player spreadsheets, and the player in that row is on your team. </span>Unlike traditional fantasy football, players are not unique to a CodeBetter.Com fantasy team, but no two teams have the same five players&#8230;\u00a0Got all that?</p>\n<h2 dir=\"ltr\">Scoring</h2>\n<p>Your team score is the combined score of your five players. The team with the highest score wins. If there is a tie for highest score, the earliest entry will win. We will <a href=\"http://games.espn.go.com/ffl/leaders?&amp;scoringPeriodId=2&amp;seasonId=2011\">pull player scores from ESPN</a>\u00a0- they use <a href=\"http://sports.espn.go.com/fantasy/football/ffl/story?page=fflrulesstandardscoring\">the ESPN Standard Scoring System</a></p>\n<blockquote>\n<div><strong>Offense</strong><br />\nQuarterbacks (QB), Running Backs (RB), Wide Receivers (WR), Tight Ends (TE)<br />\n6 pts per rushing or receiving TD<br />\n6 pts for player returning kick/punt for TD<br />\n6 pts for player returning or recovering a fumble for TD<br />\n4 pts per passing TD<br />\n2 pts per rushing or receiving 2 pt conversion \u00a0(note: teams do not receive points\u00a0for yardage gained during the conversion)<br />\n2 pts per passing 2 pt conversion<br />\n1 pt \u00a0per 10 yards rushing or receiving<br />\n1 pt \u00a0per 25 yards passing</div>\n<div><strong>Bonus Points</strong><br />\n2 pts per rushing or receiving TD of 40 yards or more<br />\n2 pts per passing TD of 40 yards or more<br />\n(note: the player must score a touchdown to score the points)</div>\n<div><strong>Penalty Points</strong><br />\n-2 pts per intercepted pass<br />\n-2 pts per fumble lost</div>\n</blockquote>\n<div>\n<p>&nbsp;</p>\n<p>\u201cSeems quite involved,&#8221; you protest. \u201cI thought I didn\u2019t have to do much to enter this contest.\u201d Don&#8217;t worry, gentle reader, it\u00a0<em>is</em>\u00a0involved, but not for you. \u00a0Sit back, relax and enjoy the weekend. \u00a0We&#8217;re going to do all the work,\u00a0sort out the team players over the next 24 hours, and post them on CodeBetter.Com by Sunday morning at 9AM EST. \u00a0Remember: The team with the highest score <strong>this week</strong> wins! \u00a0You can watch this weekend\u2019s games, or follow online, and root for your fantasy team players. \u00a0We&#8217;ll post the winner by 5PM EST on Tuesday, September 20th.</p>\n</div>\n<div>\n<p>Honorary\u00a0CodeBetterer <a href=\"https://plus.google.com/112476111369212748300/posts\">Ben Schoenfeld</a> (@oilytheotter) helped us figure all this out, and is the brains behind this scheme. \u00a0Hit him up on twitter if you have any questions or concerns, but he only takes\u00a0complaints\u00a0by mail written on $10 bills.</p>\n<p>Good luck, and let us know @codebetter how your team&#8217;s doing!</p>\n</div>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/EbD5tznk4sU\" width=\"1\" />", "summary": "When we sat down to decide how to pick a winner for the CodeBetter.Com wants to send you to Redmond! contest, we realized we couldn&#8217;t just pick our\u00a0winner out of a hat &#8211; it&#8217;s way too boring, and human choice&#160;&#8230; <a href=\"http://codebetter.com/2011/09/16/codebetter-com-cont", "id": "http://codebetter.com/?p=207", "categories": [], "metadata": {"guid": "c1230d52-cc84-420a-892e-564bc82d24f9", "likes": 0, "is_published": false}}, {"author": "Artur Le\u00e3o", "url": "http://dimensao3.com/al/?p=561", "title": "iDev\u2026again", "datetime": "2011-09-16T16:35:56", "html": "<div class=\"alignleft\"><p><a href=\"http://dimensao3.com/al/?p=561\"><em>Click here to view the embedded video.</em></a></p></div>\n<p>Totally forgot to post this video here&#8230; well, just to show off work in progress <img alt=\":D\" class=\"wp-smiley\" src=\"http://dimensao3.com/wptest/wp-includes/images/smilies/icon_biggrin.gif\" /> </p>", "summary": "Totally forgot to post this video here&#8230; well, just to show off work in progress", "id": "http://dimensao3.com/al/?p=561", "categories": [], "metadata": {"guid": "a485baed-896d-4746-a691-040de4fc2d1b", "likes": 0, "is_published": false}}, {"author": "johnvpetersen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/GMJPFY39XbY/", "title": "Windows Build/Windows 8: My Impressions \u2013 Change is a good thing", "datetime": "2011-09-16T15:27:03", "html": "<p>I was reading all of the tweets about the DevExpress party with SmashMouth and was wishing I was there. In fact, I was really sad that I could not be out there as the venue appeard not to require a separate energy source! That&#8217;s a big credit to Microsoft of the way they have kept the rest of us informed. The video streams were superb. That&#8217;s a big deal when one is trying to quickly grok what&#8217;s being presented.</p>\n<p>By the way, you can find links to everything on the official <a href=\"http://www.buildwindows.com\" target=\"_blank\">Build Windows site</a>.</p>\n<p>I have to admit that I am somewhat amused by all of the &#8220;WPF is dead, Silverlight is dead&#8221; banter that is burning up the Twitter and Blog o Sphere. I&#8217;ve been writing software for over 20 years and the one constant has always been and will continue to be change. As some of you know, I&#8217;m an former Fox developer. As early as 1993, MS was talking about the &#8220;Unified Language Strategy&#8221;. Roger Heinen gave that talk and it got more than a few\u00a0of us\u00a0at the Orlando FoxPro Devcon thinking. Fast forward to 1997 and the ISV/Book Author summit at MS (the pre-cursor to the MVP Summit) &#8211; that unified language strategy was beginning to take more and more form. By 2000,\u00a0it was clear what was happening and by 2001,\u00a0we had .NET 1.0 betas in our hands. I still have an un-opened CD pack with that beta software. Hmm&#8230; wonder if it will run on Windows 8????</p>\n<p>Up to those days at the beginning of the last decade, the bell was tolling for Fox, VB 6, etc. My best friend Rod Paddock and I had many a conversation about it and we took a rather cavalier attitude of &#8220;So What.&#8221; To others, Rome was burning down. To us, we saw it as nothing more than more of the same&#8230;that is to say &#8211; more change..more evolution. By then, we were far away from the days of Windows for Workgroups and having to still satisfy the need to support 16 bit OS&#8217;s via the Win32s. We had already come a long way and that what we were seeing was just an extension of the evolutionary process that is front and center in the profession we have chosen.</p>\n<p>In the famous words of Hyman Roth in Godfather 2 (Played by Lee Steinberg, the father of method acting): &#8220;This is the business we&#8217;ve chosen&#8230; I didn&#8217;t ask who gave the order.&#8221;</p>\n<p>In other words,\u00a0 change is ever present, we&#8217;ve seen it and for all the buzz that is there today about Windows 8. the WinRT, etc &#8211; that too will eventually be on the wrong side of the evolutionary chasm.</p>\n<p>Look&#8230;most of us are borderline or full blown ADD anyway&#8230; Change is our thing&#8230;it&#8217;s one of the thing I really like about this business. That is to say, change that helps, not hinders. Change for change sake does not itself yield a value proposition. And that is the myth, that for all the change, you cannot seize on first, basic principles that will last forever.</p>\n<p>Back to the conversations Rod Paddock and I have had over the years, I&#8217;ve lost count of how many times we&#8217;ve said that adherence to basic principles will allow us to weather any storm. In today&#8217;s context, in the web, it&#8217;s about adherence to open standards: html, js, open source, etc. It&#8217;s about understanding how the web works, not just one vendor&#8217;s abstraction over the web.</p>\n<p>I tweeted a few days ago that developers who embraced js, html, css are being rewarded with Windows 8. Those that have embraced ASP.NET MVC and Rails (to name two) have been rewarded, are being rewarded and will continue to be rewarded. Now, those of us that have embraced js, we are going to be able to leverage that skill set in a different way that targets the Windows Platform. If you are a WPF/SL developer, I truly believe that things, in the long run, will be easier for you.</p>\n<p>That is not to say that WPF/SilverLight Developers are out in the cold. Let&#8217;s review: just as ASP != Web Forms, \u00a0WPF != XAML. WPF is but one implementation of\u00a0XAML &#8211; and the underpinnings of XAML are being changed. That does not mean that WPF is &#8220;dead&#8221;. You can choose to look at it that way. I&#8217;d rather\u00a0view it as XAML\u00a0is progressing along an evoltutionary path. Developers need to focus more and the forest and less on the trees, more on what we do to deliver value and less on the particular tools we use.</p>\n<p>I for one am glad to see that the context shift is going way on the Windows platform as to\u00a0the differences between desktop and mobile/tablet devices. I can&#8217;t tell you how many times I got frustrated when I tried to do something in SilverLight, only to find that \u00a0while WPF supported it, SilverLight did not, at least not without some hack. Anybody who has tried to implement MVVM\u00a0equally on WPF and SilverLight knows what I&#8217;m talking about!</p>\n<p>If you have embraced XAML, there is something for you in Windows 8. If you have embraced js/css/html/jquery etc &#8211; there is something for you in Windows \u00a08.\u00a0 The deal is this, if you are going to tie what you do to the specific implementation of a specific version of a closed source/vendor controlled product (which Windows is) &#8211; you are not allowed to bitch about it. There, I said it. It&#8217;s like the folks that complain about how a given piece of OSS works. Submit a patch if you don&#8217;t like it. If you don&#8217;t submit a patch, you don&#8217;t get to bitch. When you hitch your horse\u00a0up to a particular post, you shouldn&#8217;t bitch because that vendor is looking to evolve its product. And quite frankly, there really isn&#8217;t anything to bitch about. Windows 8 looks pretty cool to me and it appears that\u00a0MS\u00a0is embracing more and more of what is open.</p>\n<p>In my opinion, Windows\u00a08\u00a0is itself a web client that can\u00a0directly interface\u00a0with js and that interface can be optimized with Windows specific extensions. \u00a0We can concentrate more on writing apps and less on the mechanical differences that introduces friction when we have to consider making data available on mobile devices like Windows Phones, iPhones, Android, etc.</p>\n<p>In my opinion, Windows Development is getting easier!</p>\n<p>A few other specific tidbits: glad to see the Win32API go away. I wonder if IE 6 will ever totally go away!!</p>\n<p>Big kudos to the VS team for giving the ability to open a VS 2010 project in VS2011 &#8211; WITHOUT CONVERSION!!</p>\n<p>Bootable from a thumb drive! Awesome. The smaller footprint! Awesome.</p>\n<p>And yes&#8230;Metro Style Apps. Ok..let&#8217;s not get too exited.. we can write those today with the appropriate css. That said, the primary UI to Windows looks a lot simpler.</p>\n<p>Hey, is it all unicorns and rainbows? Of course not. The graphic&#8217;s password? Marginally useful IMO. I can see somebody strategically positioning a smart phone video camera to capture how somebody logs onto their machine! At least with a passcode hack, you have to go to the trouble to install some software. Then, there is the adoption period for businesses. I fear that will be a lengthy one. So with that, some of the exuberance needs to tempered as it will be quite some time before we see Windows 8 in the mainstram of business development. Let&#8217;s remember &#8211; IE 6 is still out there as there is still lots of XP and Vista too!!</p>\n<p>And while I can write mobile device software with html/css &#8211; if the client is all about\u00a0Windows, why wouldn&#8217;t I want an easier experience that targets the platform?\u00a0IN that regard, it&#8217;s clear that Windows 8 will make it easier</p>\n<p>Tools come and tools go. It&#8217;s like a MLB manager, they get hired knowing that at some point, they will get fired (very few retire on their own terms). With all the cool stuff that is coming down the pike in VS 2011, Windows 8, MVC 4, I can&#8217;t help but thing what is in store with Windows, VS, and MVC .vNext!</p>\n<p>There&#8217;s never been a better time to be a software developer! It&#8217;s actually fun &#8211; and I remember the times when it was not so fun!!</p>\n<p>Finally, if you are a technologist who does not like change, perhaps you should contemplate a career change to digging holes. That process has remained largely unchanged for 100&#8242;s, if not 1000&#8242;s of years!!</p>\n<p>&lt; JVP &gt;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/GMJPFY39XbY\" width=\"1\" />", "summary": "I was reading all of the tweets about the DevExpress party with SmashMouth and was wishing I was there. In fact, I was really sad that I could not be out there as the venue appeard not to require a&#160;&#8230; <a href=\"http://codebetter.com/johnpetersen/2011/09/16/windows-buildwindows-8-my-impressi", "id": "http://codebetter.com/johnpetersen/?p=70", "categories": [], "metadata": {"guid": "bb2bd36c-479f-4da0-a9c0-6c19a536901d", "likes": 0, "is_published": false}}]"
09-25 15:14 SocketClient INFO     Returning(as str): '[{"author": "johnvpetersen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/pL_ndeLUmxA/", "title": "It\\u2019s that time of year again: CodeCamps!", "datetime": "2011-09-23T16:15:09", "html": "<p>I&#8217;ll be speaking at <a href=\\"http://codecampnyc.eventbrite.com/\\" target=\\"_blank\\">NYC CodeCamp</a>\\u00a0with two new talks: <a href=\\"http://www.codecampnyc.org/speakers-sessions/#PJ\\" target=\\"_blank\\">Building your first jQuery Plugin and Rest &amp; ASP.NET MVC</a>. NYC Code Camp is on 10/1 @ Pace University.</p>\\n<p>I&#8217;ll also be at <a href=\\"http://codecamp.phillydotnet.org/2011-2/SitePages/Home.aspx\\" target=\\"_blank\\">Philly Code Camp</a>\\u00a0on 10/15.\\u00a0 As of now, I&#8217;m going to be giving the Building your first jQuery Plugin talk as well as one dedicated to JavaScript Testing w/ QUnit.</p>\\n<p>I&#8217;m going to record all sessions with Live Meeting. I will submit the content to Channel 9 and the Ineta Live site. In addition, the slide decks and code samples will be available here.</p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/pL_ndeLUmxA\\" width=\\"1\\" />", "summary": "I&#8217;ll be speaking at NYC CodeCamp\\u00a0with two new talks: Building your first jQuery Plugin and Rest &#38; ASP.NET MVC. NYC Code Camp is on 10/1 @ Pace University. I&#8217;ll also be at Philly Code Camp\\u00a0on 10/15.\\u00a0 As of now, I&#8217;m&#160;&#8230; <a href=\\"http://codebetter.com/johnpetersen/2011/09", "id": "http://codebetter.com/johnpetersen/?p=75", "categories": [], "metadata": {"guid": "4bb8573b-0b01-4e45-9b80-6b5998ec0b47", "likes": 0, "is_published": false}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/09/maya2012-export-selected-with.html", "title": "Maya2012 Export Selected with DisplayLayers", "datetime": "2011-09-23T03:16:30.215000", "html": "This is just a warning for anybody who, like use uses Export Selected as an optimize method. Be warned, in 2012 if you select objects with display layers then exportSelected and then re-import, those display layers will be lost. Never had this before, 2011 was fine. This only showed up in 2012 and again, has broken another internal pipeline tool, another bug logged.<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/1407054789026932542-4072787405157818955?l=markj3d.blogspot.com\\" width=\\"1\\" /></div>", "summary": "This is just a warning for anybody who, like use uses Export Selected as an optimize method. Be warned, in 2012 if you select objects with display layers then exportSelected and then re-import, those display layers will be lost. Never had this before, 2011 was fine. This only showed up in 2012 and a", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-4072787405157818955", "categories": [], "metadata": {"guid": "96e7bc98-a5c7-4c2b-9f85-64312fdb8a09", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=774", "title": "The skinny on virtual static methods", "datetime": "2011-09-23T01:47:08", "html": "<p>Today at work, I saw the following pattern in python:</p>\\n<pre>class Base(object):\\n    @classmethod\\n    def Spam(cls):\\n        raise NotImplementedError()\\nclass Derived(Base):\\n    @classmethod\\n    def Spam(cls):\\n        return \'Eggs\'</pre>\\n<p>After thinking it over and looking at the alternatives, I didn&#8217;t have an objection. I asked for some verbose documentation explaining the decision and contract, as this is really not good OOP and, some (me) would say, polymorphism through convention- which in dynamically typed languages like python, is how polymorphism works. But it is unfamiliar and generally considered bad practice, especially in statically typed languages.</p>\\n<p>Of course this sparked some disagreement, but fortunately, this is a topic I&#8217;ve read deeply into a number of times- first, when I was thinking about how to implement the pattern and realized the error of my ways. \\u00a0Second, when I was working in another codebase that was a case study in antipatterns where this was used quite heavily. \\u00a0I read into it yet again today so I could write this blog post and send it to the persons who disagreed with my judgement of the pattern in statically typed compiled languages. \\u00a0So read on.</p>\\n<p>Let me reiterate- I&#8217;m not opposed to this pattern per-se in python or other dynamically typed languages. \\u00a0I think it is a sure sign of code smell, but there are legitimate reasons, especially if you&#8217;re working on, say, a Maya plugin and have some restricted design choices, and this can smell better than the alternative, which is a bunch of other shitty code to deal with it. \\u00a0In fact, it <a href=\\"http://docs.python.org/dev/library/abc.html?highlight=abstractmethod#abc.abstractstaticmethod\\">@abc.abstractstaticmethod</a> was added to the abstract base class module in python 3.2, with Guido&#8217;s consent. \\u00a0Which doesn&#8217;t mean it is right, and I&#8217;d still avoid it, but it&#8217;s not terrible.</p>\\n<p>My problem is with the pattern in statically typed languages. \\u00a0When you make a method abstract or virtual on an interface of class, you are saying, &#8216;you can pass around instances of me or derived from me and they will have a method named Foo.&#8217; \\u00a0Instance methods are bound to the instance. \\u00a0When you define a method as static, you are binding it to the class. \\u00a0So there are two reasons this doesn&#8217;t work- one technical/semantic, the other conceptual.</p>\\n<p>The technical/semantic cause is that <em>virtual</em>\\u00a0and <em>static</em>\\u00a0are opposite! \\u00a0Virtual tells the compiler, &#8216;look up what method to call from the vtable of the object at runtime.&#8217; \\u00a0Static tells it, &#8216;use this method at this address.&#8217; \\u00a0Virtual can only be known at runtime, while static <em>must</em>\\u00a0be known at compile time. \\u00a0I mean, you <em>need</em>\\u00a0a class to invoke the static method on! \\u00a0The only way around this is through either dynamic typing, or some sort of reflection/introspection/codegen- in which case, you aren&#8217;t working with static typing, you&#8217;re emulating a dynamically typed environment in a statically typed one!</p>\\n<p>So, clearly the concept of &#8216;virtual static&#8217; is impossible in static languages like C#, C++, and Java. \\u00a0It doesn&#8217;t stop people from trying! \\u00a0However, does the fact that the languages don&#8217;t support the feature make it a bad idea (the same way that just because python 3 supports it doesn&#8217;t necessarily make it a good idea)?</p>\\n<p><strong>Yes, yes, a thousand times yes.</strong>\\u00a0 Let me restate the above: in order for &#8216;static virtual&#8217; to be supported in a statically typed language, <em>you need to use its dynamic typing faculties</em>. \\u00a0Look, I&#8217;m all for &#8216;multi-paradigm&#8217; languages (even though some artard on Reddit berated an article I wrote because that phrase doesn&#8217;t actually make sense), but we need to be <em>very careful</em>\\u00a0when we start using patterns that go against the foundation of our languages.\\u00a0 Like I said- I&#8217;m not fundamentally opposed to the pattern, I am just opposed to using it in statically typed languages.</p>\\n<p>But that&#8217;s like saying, I prefer tomato juice to evolution. \\u00a0I don&#8217;t even know what that means. \\u00a0You cannot have virtual static methods in a statically typed language. \\u00a0They are incompatible.</p>\\n<p>So much for the technical (vtable)/semantic (dynamic) reason (were those 2 reasons, or one reason?). \\u00a0What about the conceptual one?</p>\\n<p>Well like I said earlier, virtual or abstract methods are part of a contract that says, I or a subclass will provide an implementation of this method. \\u00a0Classes and interfaces define contracts, and at their core, nothing else (<a href=\\"http://blogs.msdn.com/b/ericlippert/archive/2011/09/19/inheritance-and-representation.aspx\\">especially not how they&#8217;re laid out in memory</a>!). \\u00a0So if you&#8217;re passing around a type, and you&#8217;re saying, this type will have these methods- well, what does that look like? \\u00a0I can hardly fathom what the class declaration would look like:</p>\\n<pre>class Base {\\n    public virtual static Base Spam() { return Base(); }\\n    public virtual string Ham() { return \\"Base Ham\\"; }\\n}\\nclass Derived : staticimplements Base {\\n    public override static Base Spam() { return Derived(); }\\n}</pre>\\n<p>Well, shit. We&#8217;re saying here that Derived&#8217;s <em>type</em>\\u00a0implements the contract of Base&#8217;s <em>type</em>- well, Base has a &#8216;regular&#8217; instance contract, the Ham method. \\u00a0What happens to this on Derived? \\u00a0Is Ham part of Base&#8217;s contract? \\u00a0It must be, because otherwise I have no idea what the Spam() method is going to return for Derived. \\u00a0Alright, so if you &#8216;staticimplements&#8217; something, you get get all static and instance methods as part of your contract (and this is how python works, too).</p>\\n<p>So how do we use this?</p>\\n<pre>void Frob(Base obj) { ... }</pre>\\n<p>Wait. Shit. This says we&#8217;re passing in an <em>instance</em> of Base, whereas we want to pass in the <em>Type</em> of an object that staticimplements Base. So:</p>\\n<pre>void Frob(BaseType obj) { ... }</pre>\\n<p>So now let&#8217;s jump back to our class definitions:</p>\\n<pre>class BaseType : Type { public virtual static Base Spam() { return Base(); }\\nclass Base : staticimplements BaseType { public virtual string Ham() { return \\"Base Ham\\"; } }\\nclass Derived : staticimplements Base { public override static Base Spam() { return Derived(); } }</pre>\\n<p>Now we&#8217;re getting somewhere. We can define types that inherit from the Type object (that is some class like .NET&#8217;s Type class), and we can staticimplements those (and if you staticimplements, that implies you also get all instance methods).</p>\\n<p>Well shit, wait. If Base inherits from Type, then instances of Base will also get all instance methods from the Type object? Well ok, I can deal with that, we don&#8217;t have to use Type- what if Type inherits from RootType, and BaseType inherits from RootType, and RootType is just an empty definition so instances of objects that inherit from BaseType don&#8217;t have all of Type&#8217;s instance methods?</p>\\n<pre>void Frob(BaseType baseType) {\\n    Base obj = baseType.Spam();\\n    //Well, how do we get an instance of BaseType from an instance of Base?  We can\'t.\\n    //RootType rt = obj.GetType(); //What good is RootType here?\\n    //BaseType bt = obj.GetBaseType(); //Wait, so we put a method on the instance that needs\\n                                //to be\\u00a0overridden on the subclass to return an instance of the actual type?</pre>\\n<pre>}</pre>\\n<p>I&#8217;m not going to go any further because I doubt anyone has even read this far. The question of virtual static functions in statically typed languages is pointless- much easier, then, to just throw up your hands and hack together whatever using reflection, dynamic, templating, or any other form of introspection. You can, for sure, come up with workarounds that are often quite specific and span hundreds of lines. I&#8217;ve read and gagged at a hundred of them. \\u00a0But given that it is currently not just technically impossible, but conceptually brain-melting, why would you?</p>\\n<p>The problem at its core is, I think, that people learn a golden hammer in one language (in this case, python, Delphi, etc.) and try to apply it to another (C#, Java, C++), as well as people coming up with a design and then figuring out how to shoehorn the idea into the language. \\u00a0Well guess what- not every language can execute any arbitrary patterns or designs well. \\u00a0Learning python made this patently clear. \\u00a0The language is so concise, each line (and character!) so meaningful, it is <strong>patently clear</strong>\\u00a0when I am doing something unpythonic- the meaningless lines of code, the extra characters, the redundant patterns in the code, the roundabout way to achieve something. \\u00a0Static languages don&#8217;t have this concision, they don&#8217;t have the same economy, or flexibility. \\u00a0There is too often a legitimate workaround or over-engineering, so when illegitimate workarounds are devised- well, who even considers it? \\u00a0I certainly didn&#8217;t (hello,\\u00a0<em><a href=\\"http://blogs.msdn.com/b/ericlippert/archive/2011/02/03/curiouser-and-curiouser.aspx\\">class Blah&lt;T&gt; where T : Blah&lt;T&gt;</a></em>!).</p>\\n<p>So what are your choices here? \\u00a0If you <em>really think</em>\\u00a0that this is your <em>only option</em>, your design stinks. \\u00a0Stinks in that it has a foul <em>code smell</em>. \\u00a0You have a few options:</p>\\n<ol>\\n<li>Singletons, which is a pretty big copout because you&#8217;re really just creating a static class by another name (but to be clear, are still a potential solution),</li>\\n<li>Just create a new instance and call an instance method. \\u00a0Suck it up, it really isn&#8217;t a big deal, though you basically require generics and a new() constraint for it, or the conceptual opposite:</li>\\n<li>Dependency injection. \\u00a0My guess is, if you&#8217;ve made it this far (congrats and thanks!), and you disagree, you&#8217;re not familiar with the idea of Dependency Injection or Inversion of Control. \\u00a0I&#8217;d encourage you to read up on it, and realize it isn&#8217;t nearly as complicated as you may think it is, but far too interesting to get into here.</li>\\n</ol>\\n<p>Good luck!</p>\\n<hr />\\n<font size=\\"0\\">I&#8217;d encourage you to do your own googling and reading about this problem.  It&#8217;s quite interesting and really highlights conceptual differences between languages, and understanding the problems or benefits to the approach will make you a better programmer and designer in your preferred language.</font></p>", "summary": "Today at work, I saw the following pattern in python: class Base(object): @classmethod def Spam(cls): raise NotImplementedError() class Derived(Base): @classmethod def Spam(cls): return \'Eggs\' After thinking it over and looking at the alternatives, I didn&#8217;t have an objection. I asked for some ", "id": "http://www.robg3d.com/?p=774", "categories": [], "metadata": {"guid": "7206a27d-07be-4852-9566-ff3b8a9e6c98", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/21/im-on-twitter/", "title": "I\\u2019m on Twitter", "datetime": "2011-09-21T06:25:54", "html": "<p>I finally gave in and created a Twitter account. I&#8217;m not entirely sure yet what to do with it but apparently &#8220;who you know is just as important as what you know&#8221; so it couldn&#8217;t hurt to take my first, wobbly steps in the world of social networking.<!-- PHP 5.x --></p>", "summary": "I finally gave in and created a Twitter account. I&#8217;m not entirely sure yet what to do with it but apparently &#8220;who you know is just as important as what you know&#8221; so it couldn&#8217;t hurt to take my first, wobbly steps in the world of social networking.", "id": "http://www.zspline.net/blog/?p=1555", "categories": [], "metadata": {"guid": "1e4db92c-0ad8-47a6-a4b1-e420dfa9cdd9", "likes": 0, "is_published": false}}, {"author": "anim8d (timborrelli@gmail.com)", "url": "http://strongmanimator.blogspot.com/2011/09/law-of-diminishing-returns-redux.html", "title": "Law Of Diminishing Returns: Redux", "datetime": "2011-09-20T22:11:00.675000", "html": "<span class=\\"Apple-style-span\\" style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"></span><br />This post is a revisiting of a previous post from this blog, and is also posted <a href=\\"http://altdevblogaday.com/2011/09/21/the-law-of-diminishing-returns/\\">here</a>.<br /><br />Every so often, the hot topic of crunch/overtime/extra hours comes (read: anytime a jackass like me writes a post about it or the mainstream media decides to interpret what a jackass like me writes as a scathing commentary on the state of the industry). Sometimes, though,<a href=\\"https://twitter.com/#!/ID_AA_Carmack/status/115616182161252353\\">&nbsp;high profile people</a>&nbsp;say something about overtime, and it incites a reaction, no matter what the intent.<br /><br />It\\u2019s no surprise to anyone, in any industry, that overtime can creep into all facets of our lives. In the case of me being both a powerlifter and a video game developer, overtime has come in the form of overtraining and crunching, respectively.<br /><br /><table align=\\"center\\" cellpadding=\\"0\\" cellspacing=\\"0\\" class=\\"tr-caption-container\\" style=\\"margin-left: auto; margin-right: auto; text-align: center;\\"><tbody><tr><td style=\\"text-align: center;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/bicycle-crunches.jpg\\" style=\\"margin-left: auto; margin-right: auto;\\"><img alt=\\"\\" class=\\"size-full wp-image-16727\\" height=\\"300\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/bicycle-crunches.jpg\\" style=\\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\\" width=\\"300\\" /></a></td></tr><tr><td class=\\"tr-caption\\" style=\\"text-align: center;\\">Not this kind of crunch, guys</td></tr></tbody></table><br />For powerlifters, overtraining generally involves training your body so hard that it effectively cannot recover- your basal body temperature drops, your central nervous system begins to shut down. For game developers, crunching is typically a point in a project that requires developers to work 60, 80, or even 100 hours a week to hit a deadline, pushing our mental capacity to a limit. In both cases, you become lethargic and your sleep suffers, furthering the lack of recovery. The belief for both overtraining and crunch is that that the extra time put in will result in higher quantity and quality of results.<br /><br />Our ability to cope with such overtime hinges heavily on the amount of time we have to recover from engaging in it.This recovery, whether or active (by, say, deep tissue massage or engaging in an unrelated interest) or passive (by relaxing on the couch or playing video games), can only work if those needing it are given the proper amount of time and resources to ALLOW it to work.<br /><br /><h3><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\"><u>All The King\'s Horses</u></span></h3><div><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\"><u><br /></u></span></div>Recently, I spent a large amount of time training for a national powerlifting competition. I trained for 5 months, competed in a local meet as a warm up, and then trained for another 2 months before the national meet. During the initial 5 months I worked very hard in the gym and took regular breaks from training so my body could recover, and I saw great gains in strength. At the local meet I set a personal best in the deadlift, and walked away happy.<br /><br />After the local &nbsp;meet, I took only a few days off, and then decided that I had recovered from the first meet and the stress it had put on my body. &nbsp;Since I had limited time before the national competition, I spent the next 2 months working even harder than I had before. Not only did I not take enough time off after the local meet, I eliminated any down time from my training, effectively giving my body no time to recover. After several weeks of this new training plan, I actually felt weaker. I started skipping workouts and making excuses to myself to not push it too hard. It got to the point where I didn\'t even want to compete in the national meet anymore. I was burnt out, stressed out, and flat out tired. Even still, I set a goal to break my personal record for total weight. In fact, I planned on pushing myself to move more weight than I had ever done, even during training.<br /><br /><table align=\\"center\\" cellpadding=\\"0\\" cellspacing=\\"0\\" class=\\"tr-caption-container\\" style=\\"margin-left: auto; margin-right: auto; text-align: center;\\"><tbody><tr><td style=\\"text-align: center;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/babes-in-toyland-humpty.jpg\\" style=\\"margin-left: auto; margin-right: auto;\\"><img alt=\\"\\" class=\\"size-full wp-image-16783 \\" height=\\"300\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/babes-in-toyland-humpty.jpg\\" style=\\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\\" width=\\"400\\" /></a></td></tr><tr><td class=\\"tr-caption\\" style=\\"text-align: center;\\">He probably overtrained something...</td></tr></tbody></table><br />So what happened? I failed. I didn\\u2019t allow my body to recover from the incredible stress I was putting on it, and as a result when it mattered most I couldn\\u2019t compete at my full potential. I didn\\u2019t reach my goals, and the national meet was one of my worst in recent memory.<br /><br /><h3><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\"><u>All The King\'s Men</u></span></h3><div><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\"><u><br /></u></span></div>Game devs are probably wondering what this&nbsp;<a href=\\"http://articles.elitefts.com/articles/iron-brothers/planet-fatness/\\">meathead, lunkhead, Planet Fitness-reject\'s</a>&nbsp;story has to do with them. Well, to paraphrase Matthew McConaughey in \\u201cA Time To Kill,\\u201d just imagine if what I described above was the progression from a press demo to a final build (or, maybe the progression from shipping a game to working on the next one).<br /><br />Imagine that the whole team gets behind polishing the absolute hell out of the first hour of gameplay. We spend a good 6 months of time getting the first 3 missions right. The scripting, the code hooks, the character performances, everything. We show it to the press during the months leading up to launch, and all of our attention is focused on that one hour of gameplay shining like a star.<br /><div class=\\"mceTemp\\"><br /></div>After all of that, the realization sets in that we have 3 months to finish the game. We have to get ALL of that hype into the rest of the missions, the gameplay, the general feel of the game. Maybe this mission here doesn\\u2019t have enough of what dude from Kotaku loved, and maybe those animations there don\\u2019t live up to the expectations of our publisher. So we start spending extra time revamping, changing, cramming in content. Features creep in. Hours start piling up. Some of us are thinking \\"I\'m working extra hours because I believe in the project,\\" so when we hit a wall at 10pm, we push through it.<br /><br /><br /><table align=\\"center\\" cellpadding=\\"0\\" cellspacing=\\"0\\" class=\\"tr-caption-container\\" style=\\"margin-left: auto; margin-right: auto; text-align: center;\\"><tbody><tr><td style=\\"text-align: center;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/humpy-dance.jpg\\" style=\\"margin-left: auto; margin-right: auto;\\"><img alt=\\"\\" class=\\"size-full wp-image-16779 \\" height=\\"240\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/humpy-dance.jpg\\" style=\\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\\" width=\\"320\\" /></a></td></tr><tr><td class=\\"tr-caption\\" style=\\"text-align: center;\\">We probably looked like MC Hammer on crack at times, too</td></tr></tbody></table><br />Suddenly it\'s Thursday, 2 weeks before submission, and we\'ve already put 50 hours in this week. We start to check in bad data. We break the build. We snap at co-workers. We\'re no longer being smart or creative about making the game- instead we\'re going through zombie-like motions to just get it done. We just want to ship this thing and move on to the next project.<br /><br />And that passion we had? Starting to dwindle, if not gone already.<br /><br />Sound familiar?<br /><br /><h3><u><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\">Putting It Back Together</span></u></h3><div><u><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\"><br /></span></u></div>The thing is, though, that it doesn\'t have to be like this. There can be&nbsp;good overtime. For example, I\'ve overtrained my deadlift and seen incredible gains by pushing myself on heavy days and taking a month away from the next heavy session. I\'ve worked 50-60 hour weeks, with 5 (and rarely 6) days a week for no longer than 2 or 3 weeks to get a deliverable out the door, and have produced work that was higher quality and more rewarding, with no negative effect on my health or marriage.<br /><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><a href=\\"http://2.bp.blogspot.com/-V0kkJWzh9Nw/Tnlwio_ip6I/AAAAAAAAAI0/lHXthSvkcus/s1600/waterboy_2.jpg\\" style=\\"margin-left: 1em; margin-right: 1em;\\"><img border=\\"0\\" height=\\"186\\" src=\\"http://2.bp.blogspot.com/-V0kkJWzh9Nw/Tnlwio_ip6I/AAAAAAAAAI0/lHXthSvkcus/s320/waterboy_2.jpg\\" width=\\"320\\" /></a></div><br /><br />What made the good overtime better than the bad?<br /><br />After the bad overtime, I was done. I thought I had recovered enough, so when I tried to (physically and mentally) get back into both activities, I couldn\\u2019t. I was done, and wanted out. I considered quitting both powerlifting and game development after the last bad overtime experience with each.<br /><br /><br />In the case of the good overtime experiences, I was able to take the proper amount of time off that both my body and mind needed to recover not just AFTER the overtime, but DURING it. The work I put during these smaller pushes was of higher quality, more rewarding in the end, and most importantly, kept me engaged in I was doing and looking forward to getting back to it at full tilt as soon as I could.<br /><br />It can be argued that if we want to be successful, we have to push ourselves harder than the average in our fields. It doesn\\u2019t, however, have to have a negative affect on the things we are passionate about. We\\u2019ve all read the reports, seen the opinion pieces, heard about EA Spouses and Kaos\\u2019 \\u201cthousand yard stare.\\u201d I\\u2019ve read articles on how overtraining has blown out knees, biceps, backs, and worse. Everyone universally agrees that too much overtime is bad- Bad for your health, bad for relationships, bad for studio morale, bad bad bad.<br /><br /><h3><u><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\">Smell The Roses</span></u></h3><div><u><span class=\\"Apple-style-span\\" style=\\"font-size: large;\\"><br /></span></u></div><table align=\\"center\\" cellpadding=\\"0\\" cellspacing=\\"0\\" class=\\"tr-caption-container\\" style=\\"margin-left: auto; margin-right: auto; text-align: center;\\"><tbody><tr><td style=\\"text-align: center;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/ferris-bueller.jpg\\" style=\\"margin-left: auto; margin-right: auto;\\"><img alt=\\"\\" class=\\"size-full wp-image-16780\\" height=\\"250\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/ferris-bueller.jpg\\" style=\\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\\" width=\\"250\\" /></a></td></tr><tr><td class=\\"tr-caption\\" style=\\"text-align: center;\\">Don\'t let life pass you by</td></tr></tbody></table>Overtime exists and it\\u2019s not going away. I\\u2019m not suggesting that it does. I\\u2019m not going to rant about crunch time ruining lives. I\\u2019m not going to claim that my life has been horribly affected by working overtime or training too hard.<br /><br />I am, however, going to say this- we all need to manage it better.<br /><br />I don\\u2019t mean that we need to plan better (we know), or avoid feature/exercise creep (we try), or never put in overtime (we will). I mean that we as individuals need to manage how we represent ourselves while working overtime. We need to be conscious of the fact that people who are interested in what we do (powerlifting, game development, insert-your-interest-here) are going to look at us as an example. They\\u2019ll see us doing stupid things in the gym or working 100 hours a week, and see us wearing both of those things like honor badges. They\\u2019ll see us tweeting about how we\\u2019re \\u201ccrunching to make the game better for you, the consumer!\\u201d, or read our Facebook post about how we just totally killed a training session and can\\u2019t walk right now- but hey, \\"no pain no gain!\\"<br /><br />Those people will enter our fields and expect that to be the norm, the right way to do things, and they will never question those methods until they too are burnt out. And that\\u2019s a damn shame, because we can prevent it. We can teach these newcomers a different lesson- to not make the mistakes that we did. We need to encourage them to come into our industries and change them for the better.<br /><br />When all is said and done, people will only remember the 4-million-on-day-one sellers, and not the people who worked hard and sacrificed to get the game to that point. We\\u2019ll only remember the monster numbers that a powerlifter put up at Worlds, but we\\u2019ll never see the training that was put in to achieve that. So let\\u2019s take back that part. Let\\u2019s do it smarter. Let\\u2019s follow the Law of Diminishing Returns.<br /><br /><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/4248341596629159263-2209298601478773026?l=strongmanimator.blogspot.com\\" width=\\"1\\" /></div>", "summary": "<span class=\\"Apple-style-span\\" style=\\"font-family: Georgia, \'Times New Roman\', \'Bitstream Charter\', Times, serif; font-size: 13px; line-height: 19px;\\"></span><br />This post is a revisiting of a previous post from this blog, and is also posted <a href=\\"http://altdevblogaday.com/2011/09/21/the-law-of", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-2209298601478773026", "categories": [], "metadata": {"guid": "94feed28-ea48-44ce-98cd-ba0d6e5f9d24", "likes": 0, "is_published": false}}, {"author": "Brendan Tompkins", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/azJJmuHBbdE/", "title": "A VSLive Winner!  Next week, win a Windows 8 Slate!", "datetime": "2011-09-20T13:01:27", "html": "<p><a href=\\"https://docs.google.com/spreadsheet/pub?hl=en_US&amp;hl=en_US&amp;key=0ApfMNDGiGLqodGh1amN6R3BUQ3VVWldhSEFfeGFVZUE&amp;single=true&amp;gid=14&amp;output=html\\">Here&#8217;s the final standings for the week</a>. \\u00a0Ngruman <a href=\\"http://codebetter.com/2011/09/06/codebetter-com-wants-to-send-you-to-redmond/\\">will be going to Redmond</a>, courtesy of VSLive and CodeBetter.Com. Congratulations!</p>\\n<blockquote><p><em>As a big thanks to everyone who entered the giveaway, we have a special discount code for Visual Studio Live! to give you!\\u00a0Just\\u00a0register at\\u00a0</em><a href=\\"http://bit.ly/VSLiveRdmdReg\\" target=\\"_blank\\"><em>http://bit.ly/VSLiveRdmdReg</em></a><em>\\u00a0and enter\\u00a0the code VSLRTUV for $300 off the Best Value Package or Conference Package.\\u00a0</em></p></blockquote>\\n<p>But wait, there&#8217;s more. \\u00a0We&#8217;re having a blast playing CodeBetter Fantasy Football, and we&#8217;re just going to keep this train going. \\u00a0Next week, we&#8217;re going to give away a Windows Slate (specs forthcoming) , fully loaded with the Windows 8 Developer Preview. \\u00a0Thanks to ScottGu, and\\u00a0Emilio Salvador Prieto for throwing in this fantastic prize&#8230;</p>\\n<p>So, here&#8217;s how this is going to work. \\u00a0 If you&#8217;ve already entered you&#8217;re in the running for next week, if not and you&#8217;d like to enter for next week&#8217;s Slate giveaway, simply comment/trackback/tweet this post.</p>\\n<p>Good luck!</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/azJJmuHBbdE\\" width=\\"1\\" />", "summary": "Here&#8217;s the final standings for the week. \\u00a0Ngruman will be going to Redmond, courtesy of VSLive and CodeBetter.Com. Congratulations! As a big thanks to everyone who entered the giveaway, we have a special discount code for Visual Studio Live! to&#160;&#8230; <a href=\\"http://codebetter.com/2011/", "id": "http://codebetter.com/?p=216", "categories": [], "metadata": {"guid": "0d4b677a-7378-4e5e-ae40-aa7d5ca9f06d", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/19/gavit-dev-diary-15-machines/", "title": "Gavit Dev Diary #15: Machines", "datetime": "2011-09-19T17:00:40", "html": "<p>Part of Gavit&#8217;s rapid prototyping toolset is the so called &#8220;Machine Controller&#8221; which allows the user to easily build controllable machinery without involving programmers.</p>\\n<p>At a high level it looks like this:</p>\\n<p style=\\"text-align: center;\\"><img alt=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/machines01.png\\" class=\\"aligncenter\\" height=\\"267\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/machines01.png\\" width=\\"512\\" /></p>\\n<p>The machine controller processes the input and adjusts certain properties in actors placed on the map. The user just assembles the desired machine, sets up the controller and it&#8217;s ready to go. Machines can be saved as prefabs for later use or to act as templates to build upon.</p>\\n<p>In this example the exhaust smoke particle system, the tilting of the dump bed and the torque of the front wheels are controlled in a truck.</p>\\n<p>&nbsp;</p>\\n<h6>Input handling</h6>\\n<p>All incoming input data is handled in a unified fashion, regardless of the nature of the source device. The user always works with the same generalized interface, there are very few hardware specific parameters. The following rules always apply:</p>\\n<ul>\\n<li>Every input behaves in an analog fashion. Even buttons produce gradually changing values.</li>\\n<li>Every input provides XYZ values. If the input device has less degrees of freedom than that then unused elements of the vector will stay at 0. (A mouse only changes X and Y while Hydra_Position uses all elements of the vector.)</li>\\n<li>Every input can be used in &#8220;relative&#8221; or &#8220;absolute&#8221; mode. For example a mouse, an inherently\\u00a0 relative positioning device can be used as a virtual joystick.</li>\\n</ul>\\n<p>&nbsp;</p>\\n<h6>Input remapping</h6>\\n<p>The next step is remapping the incoming values to ones which will be used to modify the target properties in actors.</p>\\n<p>Let&#8217;s say that I want to control the trucks tipping dump bed by pitching the Hydra controller.</p>\\n<p style=\\"text-align: center;\\"><img alt=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/machines02.png\\" class=\\"aligncenter\\" height=\\"257\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/gavit/machines02.png\\" width=\\"512\\" /></p>\\n<p>I can only rotate the controller conveniently about 35 degrees backwards but I need a greater rotation on the dump bed, let&#8217;s say 80 degrees. By using input-output value pairs I can define how to interpret my movements:</p>\\n<table align=\\"center\\" border=\\"1\\" frame=\\"border\\" style=\\"border-color: #000000; border-width: 1px; border-style: solid;\\">\\n<tbody>\\n<tr>\\n<td align=\\"\\" dir=\\"\\" lang=\\"\\" scope=\\"\\" style=\\"border-color: #000000; border-style: solid; border-width: 1px;\\" valign=\\"\\"><strong>Input</strong></td>\\n<td align=\\"\\" dir=\\"\\" lang=\\"\\" scope=\\"\\" style=\\"border-color: #000000; border-style: solid; border-width: 1px;\\" valign=\\"\\"><strong>Output</strong></td>\\n</tr>\\n<tr>\\n<td align=\\"\\" dir=\\"\\" lang=\\"\\" scope=\\"\\" style=\\"border-color: #000000; border-style: solid; border-width: 1px; text-align: right;\\" valign=\\"\\">0</td>\\n<td align=\\"\\" dir=\\"\\" lang=\\"\\" scope=\\"\\" style=\\"border-color: #000000; border-style: solid; border-width: 1px; text-align: right;\\" valign=\\"\\">0</td>\\n</tr>\\n<tr>\\n<td align=\\"\\" dir=\\"\\" lang=\\"\\" scope=\\"\\" style=\\"border-color: #000000; border-style: solid; border-width: 1px; text-align: right;\\" valign=\\"\\">-35</td>\\n<td align=\\"\\" dir=\\"\\" lang=\\"\\" scope=\\"\\" style=\\"border-color: #000000; border-style: solid; border-width: 1px; text-align: right;\\" valign=\\"\\">-80</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>These two value pairs define the limits so any values in between can be computed easily.<br />\\nWhile this is the base idea behind remapping it goes a bit deeper:</p>\\n<ul>\\n<li>It is possible to define more than two value pairs for non linear output profiles.</li>\\n<li>Input components can be mix-and-matched to output components. For example the X axis of the mouse could control the Y rotation of an object.</li>\\n<li>The output value can be used in different ways in relation to the target property:</li>\\n</ul>\\n<ul>\\n<li><em>Direct</em>: Overwrite the property. (e.g., Set rotation of the box to 32 degrees.)</li>\\n<li><em>Add</em>: Add the output value to the property. (e.g., Rotate the box 10 degrees more to the left.)</li>\\n<li><em>Scale</em>: Multiply the original value by the output. (e.g., Increase brightness of a spotlight by 2.)</li>\\n</ul>\\n<p>&nbsp;</p>\\n<h6>Machine components and machine parts</h6>\\n<p>After the value remapping is done, the last step is linking the actual actors and their properties to the machine controller by defining <em>Machine Components</em> and <em>Machine parts</em>.</p>\\n<p>A <em>Machine Part</em> is a property in a certain actor on the level. It can be many things: position of a mesh, size of a decal, spawn rate of a particle emitter, torque of a motor, etc.</p>\\n<p>A <em>Machine Component</em> is one or more Machine Parts which are controlled by the same input. For example pushing forward the thumbstick increases the rotation rate of the truck&#8217;s front wheels while also adds to the spawn rate of the exhaust emitter for more smoke.</p>\\n<p>&nbsp;</p>\\n<p>So that&#8217;s how machines work in Gavit. In spite of the somewhat steep learning curve they provide a considerable amount of freedom to try out and refine new ideas.<!-- PHP 5.x --></p>", "summary": "Part of Gavit&#8217;s rapid prototyping toolset is the so called &#8220;Machine Controller&#8221; which allows the user to easily build controllable machinery without involving programmers. At a high level it looks like this: The machine controller processes the input and adjusts certain properties ", "id": "http://www.zspline.net/blog/?p=1536", "categories": [], "metadata": {"guid": "e2aab14c-5a8c-4aea-8c7b-f55ec6254885", "likes": 0, "is_published": false}}, {"author": "Patrick Smacchia", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/pLikBwfha70/", "title": "See the fantastic business opportunity!", "datetime": "2011-09-19T14:57:06", "html": "<p>In this post I just want to convey a simple, yet powerful, idea: Last week Microsoft announces that the Windows UI is about to get re-invented with WinRT. Instead of bashing MS about its policy concerning WPF and SL, <strong>be smart and see here a fantastic entrepreneurship opportunity</strong>. The future top WinRT applications\\\\tooling\\\\trainers\\\\consultants will be the ones that get developed today.</p>\\n<p>You are not happy being employed? I wasn&#8217;t too back in 2001. I wanted action, enthusiasm, innovation, technical expertise and reward. At that time I was flagged C++ expert and I discovered .NET. I wrote the <a href=\\"http://www.amazon.fr/Pratique-NET-C-Patrick-Smacchia/dp/2841772454\\">reference book in French concerning C#/.NET</a>\\u00a0 with O&#8217;Reilly France, released mid 2003. It allowed me to capitalize on skills and clients trust. I then developed a successful consultancy expertise/training activity. In parallel I wrote the second version of the book for <a href=\\"http://www.amazon.fr/Pratique-NET-2-0-C/dp/2841773396\\">C#2 late 2005</a>.\\u00a0 Meantime I released a small OSS static analyzer in mid 2004, that became <a href=\\"http://www.ndepend.com/ReleaseNotes.aspx\\">NDepend pro, at early 2007</a> and that made me and my team living for almost 5 years now, and hopefully for many years to come.<br />\\nAll this was possible because I capitalized on the .NET platform at early stage. I didn&#8217;t revolutionized the world but today, I absolutely love my job + awesome perspective for future versions + well enough money + no (stupid) boss + very few time and location constraints.</p>\\n<p>Today the exact same situation occurs again. Microsoft bets all on WinRT as it used to bet much on .NET. It is a risky strategy but, like it or not, Microsoft generally wins. Do you remember C++ and Java guys making fun of .NET? Do Java have LINQ today? It doesn&#8217;t even have clean generics! Start a business based on WinRT and Windows 8 now and it will be mechanically pushed by the bulldozer marketing machine Microsoft is currently cranking up. On a pure technical side it can be tooling/training/book/consulting. But if you feel well acquainted with a particular business, it can be a B2B or B2C product that will be first delivered and first ranked on the upcoming MS store.</p>\\n<p>Exciting isn&#8217;t it? Good luck my friend!</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/pLikBwfha70\\" width=\\"1\\" />", "summary": "In this post I just want to convey a simple, yet powerful, idea: Last week Microsoft announces that the Windows UI is about to get re-invented with WinRT. Instead of bashing MS about its policy concerning WPF and SL, be&#160;&#8230; <a href=\\"http://codebetter.com/patricksmacchia/2011/09/19/see-the-f", "id": "http://codebetter.com/patricksmacchia/?p=377", "categories": [], "metadata": {"guid": "e089e37b-5369-4b85-bcf7-1969eaa7539b", "likes": 0, "is_published": false}}, {"author": "ldunham (noreply@blogger.com)", "url": "http://ldunham.blogspot.com/2011/09/handy-script.html", "title": "handy script", "datetime": "2011-09-19T11:51:58.257000", "html": "just found this script whilst looking for a way to write maya\'s scriptEditor output to a file (scene kept crashing, couldn\'t make out errors etc)<br /><br />// turn writeHistory on and specify fileName<br /><br /><div style=\\"text-indent: 0px;\\"></div><div style=\\"text-indent: 0px;\\">scriptEditorInfo -wh 1 -historyFilename \\"C:/Users/lee.dunham/Desktop/myScriptEditorLog.txt\\";</div><div style=\\"text-indent: 0px;\\"><br /></div><div style=\\"text-indent: 0px;\\">//turn writeHistory off</div><div style=\\"text-indent: 0px;\\"> </div><div style=\\"text-indent: 0px;\\"></div><div style=\\"text-indent: 0px;\\">scriptEditorInfo -wh 0;</div><br /><div style=\\"text-indent: 0px;\\"><br /></div><div style=\\"text-indent: 0px;\\">its damn useful, cant believe i\'ve never used this before! (as it writes history as its going)</div><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/536028505499887975-4563672294551766398?l=ldunham.blogspot.com\\" width=\\"1\\" /></div>", "summary": "just found this script whilst looking for a way to write maya\'s scriptEditor output to a file (scene kept crashing, couldn\'t make out errors etc)<br /><br />// turn writeHistory on and specify fileName<br /><br /><div style=\\"text-indent: 0px;\\"></div><div style=\\"text-indent: 0px;\\">scriptEditorInfo -w", "id": "tag:blogger.com,1999:blog-536028505499887975.post-4563672294551766398", "categories": [], "metadata": {"guid": "1a0a3cdc-3dcb-4453-b147-7e7204a36aa6", "likes": 0, "is_published": false}}, {"author": "Mark Jackson (markj3d@gmail.com)", "url": "http://markj3d.blogspot.com/2011/09/hotkey-alt-broken-in-2012.html", "title": "HotKey Alt<> broken in 2012", "datetime": "2011-09-19T05:24:34.859000", "html": "Just a quick post about the hotkey mapping in 2012. The main Alt keys which advance time in the UI\'s are now broken in the GrapthEditor, this has been driving some of our animator mad as you can imagine. The command thats now bound to it in 2012 is wrong (a fix in due from Autodesk but not sure if it\'ll get into the SP1 release). So the bug is that the commands bound to the NextFrame and PreviousFrame calls look if the current UI is a scriptedPanel and only advance the time if that panel is the CameraSequencer...Wrong! Here\'s the fix for the NextFrame, for Previous from just put -1 in the `cuurentTime -q` -1 block<pre class=\\"python\\" name=\\"code\\"><br />string $currentPanel = `getPanel -withFocus`; <br />if((`getPanel -to $currentPanel`== \\"scriptedPanel\\") && (`scriptedPanel -q -type $currentPanel`== \\"sequenceEditorPanel\\"))<br />{ <br />sequenceManager -ct ( `sequenceManager -q -ct ` + 1 ); <br />} <br />else { currentTime ( `currentTime -q` + 1 );}<br /><br /></pre>Maya\'s current command bound to the Alt> key<pre class=\\"python\\" name=\\"code\\"><br />string $currentPanel = `getPanel -withFocus`; <br />string $panelType = `getPanel -to $currentPanel`; <br />if ($panelType == \\"scriptedPanel\\") <br />{ <br />    string $scriptedPanelType = `scriptedPanel -q -type $currentPanel`; <br />    if ( $scriptedPanelType == \\"sequenceEditorPanel\\")<br />    { sequenceManager -ct ( `sequenceManager -q -ct ` + 1 ); }<br />}<br />else { currentTime ( `currentTime -q` + 1 ); }<br /></pre><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/1407054789026932542-2114340459979202734?l=markj3d.blogspot.com\\" width=\\"1\\" /></div>", "summary": "Just a quick post about the hotkey mapping in 2012. The main Alt keys which advance time in the UI\'s are now broken in the GrapthEditor, this has been driving some of our animator mad as you can imagine. The command thats now bound to it in 2012 is wrong (a fix in due from Autodesk but not sure if i", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-2114340459979202734", "categories": [], "metadata": {"guid": "22fa23b7-51f4-4709-a0c1-a909bf340f74", "likes": 0, "is_published": false}}, {"author": "Rob Galanakis", "url": "http://www.robg3d.com/?p=769", "title": "Automation must be a last resort", "datetime": "2011-09-18T18:00:27", "html": "<p>A repost from altdevblogaday. \\u00a0Original post here:\\u00a0<a href=\\"http://altdevblogaday.com/2011/09/10/automation-must-be-a-last-resort/\\">http://altdevblogaday.com/2011/09/10/automation-must-be-a-last-resort/</a>\\u00a0 As is usual, the title is more inflammatory than the contents, the contents muddle the issue, and things are far more clear after reading the comments.</p>\\n<hr />\\n<p>As tools programmers and tech artists, we are responsible for the efficiency of our designers and artists. \\u00a0And most tools programmers and TA&#8217;s I&#8217;ve worked with take this very seriously, and are generally very clever, so very few things can stand in their way when they are determined to speed up a developer&#8217;s workflow. \\u00a0Most commonly, such speedups are achieved by the automation of repetitive tasks.</p>\\n<p>But we are also responsible for the quality of our codebase. \\u00a0&#8221;Simplicity&#8221; of code and systems is commonly accepted as an ideal all coders should strive for.</p>\\n<blockquote><p><em>Everything should be made as simple as possible, but not simpler.<br />\\n</em></p></blockquote>\\n<p>And here is my problem. \\u00a0<strong>Automation increases complexity and reduces simplicity.</strong></p>\\n<h4>An Example</h4>\\n<p>Consider the following diagram, which could represent a single workflow with many steps. \\u00a0Each Step represents some unique concept or block of code or logic that exists in a pipeline- for example, exporting the content, format conversion, writing a metadata file, assigning a material, and importing into game. \\u00a0Right now, the user performs each one manually.</p>\\n<p style=\\"text-align: center;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_1.png\\"><img alt=\\"\\" class=\\"aligncenter size-full wp-image-16191\\" height=\\"141\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_1.png\\" width=\\"665\\" /></a></p>\\n<p>Obviously we can do better- we can half the number of steps if we write some code to automatically, say, launch an exe to process the just-exported content, and we can automatically write the metadata file on import.</p>\\n<p style=\\"text-align: center;\\">\\u00a0<a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_2.png\\"><img alt=\\"\\" class=\\"aligncenter size-full wp-image-16192\\" height=\\"127\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_2.png\\" width=\\"665\\" /></a></p>\\n<p>Once this is in the wild, we realize we can <em>automate the whole thing!</em>\\u00a0 So on export, we do everything, and it even imports the content into game. \\u00a0Great! \\u00a0But of course we still need to support some manual intervention for things that don&#8217;t &#8216;fit in.&#8217;</p>\\n<p style=\\"text-align: center;\\"><a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_4.png\\"><img alt=\\"\\" class=\\"aligncenter size-full wp-image-16194\\" height=\\"144\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_4.png\\" width=\\"665\\" /></a></p>\\n<p>There&#8217;s a problem here, though. \\u00a0A big one. \\u00a0The code has essentially remained the same- so even though the user&#8217;s experience is simpler (which is always the goal!), the way we got there was to add more complexity into the codebase. \\u00a0Because here&#8217;s the thing about automation: \\u00a0<strong>Automation </strong><strong>relies on inference.</strong>\\u00a0 And inferring things in code is notoriously difficult and brittle. \\u00a0We have basically all the same code we had when we started (though I&#8217;m sure we fixed and introduced some new bugs), except we have now effectively doubled the connections between the components, and each connection is brittle. \\u00a0How much of your automation relies on naming, folder structures, globals (environment variables and singletons are globals too), or any number of circumstances that are now built into your codebase? \\u00a0Likewise, if you merely <em>added</em>\\u00a0buttons to create automation, the additional complexity there is obvious. \\u00a0All the old stuff is still in place, you&#8217;ve just created another UI and code path on top of it that is either using it or also accessing the same internals.</p>\\n<h4>That is not what we should strive for.</h4>\\n<p>This, instead, is what we should strive for:</p>\\n<p style=\\"text-align: center;\\">\\u00a0<a href=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_5.png\\"><img alt=\\"\\" class=\\"aligncenter size-full wp-image-16195\\" height=\\"138\\" src=\\"http://altdevblogaday.com/wp-content/uploads/2011/09/automation_5.png\\" width=\\"665\\" /></a></p>\\n<p>This isn&#8217;t always possible- but I&#8217;ve seen enough pipelines to know that it is <em>probably</em>\\u00a0possible on <em>most</em>\\u00a0pipelines at your studio, and <em>definitely</em>\\u00a0possible on <em>some</em>. \\u00a0It should always be our goal- that every time we want to &#8216;automate&#8217; what the user does, we instead say &#8220;how can I reduce the complexity of the code so nothing needs to worry about this.&#8221; \\u00a0This is how you identify <span style=\\"color: #800000;\\"><strong>automation that increases complexity</strong></span> versus <span style=\\"color: #339966;\\"><strong>refactorings that reduce complexity</strong></span>: when your change simplifies the codebase (this is open to interpretation but I&#8217;d imagine you can judge this pretty easily), and &#8216;automates&#8217; previously manual parts of the pipeline, that is no longer automation- you have done an excellent refactoring that has reduced complexity and it is not automation (at least not actually- the users are free to call it what they want).</p>\\n<p>It isn&#8217;t always possible. \\u00a0More commonly it would be possible but not without a substantial refactoring somewhere (maybe not even your code). \\u00a0Sometimes, it is just moving the complexity around rather than removing it.</p>\\n<p>These things are fine! The important thing is that you are now <em>really thinking</em>\\u00a0about your codebase. \\u00a0The goal isn&#8217;t to reduce the complexity of your codebase in a day, it is to ensure you are only adding\\u00a0<em>valuable</em>\\u00a0complexity and that you have identified opportunities to <em>reduce</em>\\u00a0complexity.</p>\\n<h4>Identifying Trends</h4>\\n<p>It&#8217;s not very difficult to identify when we are adding excess complexity when automating, or when we are simplifying.</p>\\n<p>If you have simple configuration needs, such as choosing two options or files, see if you can infer that setup instead from what the user chooses to do (such as providing him two choices, rather than one configurable one).</p>\\n<p>In contrast to that, prefer <em>upfront configuration</em>\\u00a0to <em>inference </em>if\\u00a0the configuration adds significant power and simplifies the code.</p>\\n<p>If common use cases no longer fit into the scope of the tool&#8217;s effective workflow, <em>refactor the tool</em>. \\u00a0Do not start adding &#8216;mini-UI&#8217;s that support these additional use cases, or you will end up with a complex and confusing mess.</p>\\n<p>Always present the minimum possible set of options to the user that allows her to get her job done effectively.</p>\\n<p>As a corollary, if the code behind your simpler UI becomes significantly more complex when simplifying the actual UI, it is likely your system can be streamlined overall. \\u00a0The lower the ratio of UI options to code behind, the better.</p>\\n<h4>Conclusions</h4>\\n<p>All too often I see tools programmers and technical artists automating processes by building new layers of code on existing systems. \\u00a0Coders should always look for ways of simplifying the overall system in code (or moving the complexity out and abstracting it into another system) as a way to achieve a streamlined workflow for the user, rather than building automated workflows and adding complexity and coupling to the existing code.</p>\\n<p>I intentionally didn&#8217;t provide precise examples or anecdotes, but I will gladly provide personal examples and observations in the comments. \\u00a0Thanks.</p>\\n<blockquote><p><em>Any intelligent fool can make things bigger, more complex, and more violent. It takes a touch of genius &#8211; and a lot of courage &#8211; to move in the opposite direction.</em></p></blockquote>", "summary": "A repost from altdevblogaday. \\u00a0Original post here:\\u00a0http://altdevblogaday.com/2011/09/10/automation-must-be-a-last-resort/\\u00a0 As is usual, the title is more inflammatory than the contents, the contents muddle the issue, and things are far more clear after reading the comments. As tools programmers and ", "id": "http://www.robg3d.com/?p=769", "categories": [], "metadata": {"guid": "39b8507b-0bf8-4480-aca7-70b3c37b15ae", "likes": 0, "is_published": false}}, {"author": "Brendan Tompkins", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/Y_Tb6qZ2kLA/", "title": "CodeBetter.Com Fantasy Football Teams Posted", "datetime": "2011-09-17T19:27:54", "html": "<p>Yesterday we <a href=\\"http://codebetter.com/2011/09/16/codebetter-com-contest-fantasy-football/\\">announced</a> how we&#8217;re giving away <a href=\\"http://codebetter.com/2011/09/06/codebetter-com-wants-to-send-you-to-redmond/\\">the trip to VSLive in Redmond</a>, and we&#8217;ve finalized the 196 teams that will be competing for the prize. \\u00a0<a href=\\"https://docs.google.com/spreadsheet/pub?hl=en_US&amp;hl=en_US&amp;key=0ApfMNDGiGLqodGh1amN6R3BUQ3VVWldhSEFfeGFVZUE&amp;single=true&amp;gid=7&amp;output=html\\">To see who is on your team, take a look at this spreadsheet</a>,\\u00a0which we&#8217;ll update on Monday and Tuesday as we have the player data from the games on Sunday and Monday night. \\u00a0 \\u00a0The final winner will be posted on Tuesday.</p>\\n<p>Good luck to all who entered!</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/Y_Tb6qZ2kLA\\" width=\\"1\\" />", "summary": "Yesterday we announced how we&#8217;re giving away the trip to VSLive in Redmond, and we&#8217;ve finalized the 196 teams that will be competing for the prize. \\u00a0To see who is on your team, take a look at this spreadsheet,\\u00a0which we&#8217;ll&#160;&#8230; <a href=\\"http://codebetter.com/2011/09/17/codeb", "id": "http://codebetter.com/?p=213", "categories": [], "metadata": {"guid": "34a73948-aec2-4c59-a0b4-2e0dce2dd7a3", "likes": 0, "is_published": false}}, {"author": "Brendan Tompkins", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/EbD5tznk4sU/", "title": "CodeBetter.Com Contest Fantasy Football", "datetime": "2011-09-16T19:41:16", "html": "<p>When we sat down to decide how to pick a winner for the <a href=\\"http://codebetter.com/2011/09/06/codebetter-com-wants-to-send-you-to-redmond/\\">CodeBetter.Com wants to send you to Redmond!</a> contest, we realized we couldn&#8217;t just pick our\\u00a0winner out of a hat &#8211; it&#8217;s way too boring, and human choice generally exhibits poor statistical properties and pattern\\u00a0repetition. \\u00a0What&#8217;s better, you might ask? \\u00a0One word. <em>Fantasy Football</em>.</p>\\n<blockquote><p>American football may not be your ball of yarn, so for the uninitiated: Fantasy football is about building and managing a virtual team of real-life NFL football players. These virtual teams score points based on the performance of real players in NFL games. For example, if New England Patriots quarterback, Tom Brady, is on your fantasy team, and he throws a touchdown in a real game, your fantasy team earns points; if he throws an interception, your team loses points.</p></blockquote>\\n<h2 dir=\\"ltr\\">CodBetter.Com Fantasy Football</h2>\\n<p dir=\\"ltr\\"><span class=\\"Apple-style-span\\" style=\\"color: #444444; font-size: 16px; line-height: 24px;\\">If you&#8217;ve entered\\u00a0<a href=\\"http://codebetter.com/2011/09/06/codebetter-com-wants-to-send-you-to-redmond/\\">the contest</a> by 9AM EST tomorrow morning, you will be assigned a randomly generated fantasy football team. \\u00a0That&#8217;s right, your very own team. \\u00a0Each team has five players: one quarterback, one AFC running back, one NFC running back, one AFC wide receiver, and one NFC wide receiver. To create the pool of possible players, we used ESPN\\u2019s <a href=\\"http://games.espn.go.com/ffl/tools/projections\\">projected fantasy stats for Week 2</a>\\u00a0and grabbed the projected top scoring quarterback, running back, and wide receiver from each NFL team. These players were used to populate our player spreadsheets, one sheet for each of the five positions on a fantasy team. Finally, we randomly generated five numbers for each contest entry. Each number corresponds to a row in the one of the player spreadsheets, and the player in that row is on your team. </span>Unlike traditional fantasy football, players are not unique to a CodeBetter.Com fantasy team, but no two teams have the same five players&#8230;\\u00a0Got all that?</p>\\n<h2 dir=\\"ltr\\">Scoring</h2>\\n<p>Your team score is the combined score of your five players. The team with the highest score wins. If there is a tie for highest score, the earliest entry will win. We will <a href=\\"http://games.espn.go.com/ffl/leaders?&amp;scoringPeriodId=2&amp;seasonId=2011\\">pull player scores from ESPN</a>\\u00a0- they use <a href=\\"http://sports.espn.go.com/fantasy/football/ffl/story?page=fflrulesstandardscoring\\">the ESPN Standard Scoring System</a></p>\\n<blockquote>\\n<div><strong>Offense</strong><br />\\nQuarterbacks (QB), Running Backs (RB), Wide Receivers (WR), Tight Ends (TE)<br />\\n6 pts per rushing or receiving TD<br />\\n6 pts for player returning kick/punt for TD<br />\\n6 pts for player returning or recovering a fumble for TD<br />\\n4 pts per passing TD<br />\\n2 pts per rushing or receiving 2 pt conversion \\u00a0(note: teams do not receive points\\u00a0for yardage gained during the conversion)<br />\\n2 pts per passing 2 pt conversion<br />\\n1 pt \\u00a0per 10 yards rushing or receiving<br />\\n1 pt \\u00a0per 25 yards passing</div>\\n<div><strong>Bonus Points</strong><br />\\n2 pts per rushing or receiving TD of 40 yards or more<br />\\n2 pts per passing TD of 40 yards or more<br />\\n(note: the player must score a touchdown to score the points)</div>\\n<div><strong>Penalty Points</strong><br />\\n-2 pts per intercepted pass<br />\\n-2 pts per fumble lost</div>\\n</blockquote>\\n<div>\\n<p>&nbsp;</p>\\n<p>\\u201cSeems quite involved,&#8221; you protest. \\u201cI thought I didn\\u2019t have to do much to enter this contest.\\u201d Don&#8217;t worry, gentle reader, it\\u00a0<em>is</em>\\u00a0involved, but not for you. \\u00a0Sit back, relax and enjoy the weekend. \\u00a0We&#8217;re going to do all the work,\\u00a0sort out the team players over the next 24 hours, and post them on CodeBetter.Com by Sunday morning at 9AM EST. \\u00a0Remember: The team with the highest score <strong>this week</strong> wins! \\u00a0You can watch this weekend\\u2019s games, or follow online, and root for your fantasy team players. \\u00a0We&#8217;ll post the winner by 5PM EST on Tuesday, September 20th.</p>\\n</div>\\n<div>\\n<p>Honorary\\u00a0CodeBetterer <a href=\\"https://plus.google.com/112476111369212748300/posts\\">Ben Schoenfeld</a> (@oilytheotter) helped us figure all this out, and is the brains behind this scheme. \\u00a0Hit him up on twitter if you have any questions or concerns, but he only takes\\u00a0complaints\\u00a0by mail written on $10 bills.</p>\\n<p>Good luck, and let us know @codebetter how your team&#8217;s doing!</p>\\n</div>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/EbD5tznk4sU\\" width=\\"1\\" />", "summary": "When we sat down to decide how to pick a winner for the CodeBetter.Com wants to send you to Redmond! contest, we realized we couldn&#8217;t just pick our\\u00a0winner out of a hat &#8211; it&#8217;s way too boring, and human choice&#160;&#8230; <a href=\\"http://codebetter.com/2011/09/16/codebetter-com-cont", "id": "http://codebetter.com/?p=207", "categories": [], "metadata": {"guid": "c1230d52-cc84-420a-892e-564bc82d24f9", "likes": 0, "is_published": false}}, {"author": "Artur Le\\u00e3o", "url": "http://dimensao3.com/al/?p=561", "title": "iDev\\u2026again", "datetime": "2011-09-16T16:35:56", "html": "<div class=\\"alignleft\\"><p><a href=\\"http://dimensao3.com/al/?p=561\\"><em>Click here to view the embedded video.</em></a></p></div>\\n<p>Totally forgot to post this video here&#8230; well, just to show off work in progress <img alt=\\":D\\" class=\\"wp-smiley\\" src=\\"http://dimensao3.com/wptest/wp-includes/images/smilies/icon_biggrin.gif\\" /> </p>", "summary": "Totally forgot to post this video here&#8230; well, just to show off work in progress", "id": "http://dimensao3.com/al/?p=561", "categories": [], "metadata": {"guid": "a485baed-896d-4746-a691-040de4fc2d1b", "likes": 0, "is_published": false}}, {"author": "johnvpetersen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/GMJPFY39XbY/", "title": "Windows Build/Windows 8: My Impressions \\u2013 Change is a good thing", "datetime": "2011-09-16T15:27:03", "html": "<p>I was reading all of the tweets about the DevExpress party with SmashMouth and was wishing I was there. In fact, I was really sad that I could not be out there as the venue appeard not to require a separate energy source! That&#8217;s a big credit to Microsoft of the way they have kept the rest of us informed. The video streams were superb. That&#8217;s a big deal when one is trying to quickly grok what&#8217;s being presented.</p>\\n<p>By the way, you can find links to everything on the official <a href=\\"http://www.buildwindows.com\\" target=\\"_blank\\">Build Windows site</a>.</p>\\n<p>I have to admit that I am somewhat amused by all of the &#8220;WPF is dead, Silverlight is dead&#8221; banter that is burning up the Twitter and Blog o Sphere. I&#8217;ve been writing software for over 20 years and the one constant has always been and will continue to be change. As some of you know, I&#8217;m an former Fox developer. As early as 1993, MS was talking about the &#8220;Unified Language Strategy&#8221;. Roger Heinen gave that talk and it got more than a few\\u00a0of us\\u00a0at the Orlando FoxPro Devcon thinking. Fast forward to 1997 and the ISV/Book Author summit at MS (the pre-cursor to the MVP Summit) &#8211; that unified language strategy was beginning to take more and more form. By 2000,\\u00a0it was clear what was happening and by 2001,\\u00a0we had .NET 1.0 betas in our hands. I still have an un-opened CD pack with that beta software. Hmm&#8230; wonder if it will run on Windows 8????</p>\\n<p>Up to those days at the beginning of the last decade, the bell was tolling for Fox, VB 6, etc. My best friend Rod Paddock and I had many a conversation about it and we took a rather cavalier attitude of &#8220;So What.&#8221; To others, Rome was burning down. To us, we saw it as nothing more than more of the same&#8230;that is to say &#8211; more change..more evolution. By then, we were far away from the days of Windows for Workgroups and having to still satisfy the need to support 16 bit OS&#8217;s via the Win32s. We had already come a long way and that what we were seeing was just an extension of the evolutionary process that is front and center in the profession we have chosen.</p>\\n<p>In the famous words of Hyman Roth in Godfather 2 (Played by Lee Steinberg, the father of method acting): &#8220;This is the business we&#8217;ve chosen&#8230; I didn&#8217;t ask who gave the order.&#8221;</p>\\n<p>In other words,\\u00a0 change is ever present, we&#8217;ve seen it and for all the buzz that is there today about Windows 8. the WinRT, etc &#8211; that too will eventually be on the wrong side of the evolutionary chasm.</p>\\n<p>Look&#8230;most of us are borderline or full blown ADD anyway&#8230; Change is our thing&#8230;it&#8217;s one of the thing I really like about this business. That is to say, change that helps, not hinders. Change for change sake does not itself yield a value proposition. And that is the myth, that for all the change, you cannot seize on first, basic principles that will last forever.</p>\\n<p>Back to the conversations Rod Paddock and I have had over the years, I&#8217;ve lost count of how many times we&#8217;ve said that adherence to basic principles will allow us to weather any storm. In today&#8217;s context, in the web, it&#8217;s about adherence to open standards: html, js, open source, etc. It&#8217;s about understanding how the web works, not just one vendor&#8217;s abstraction over the web.</p>\\n<p>I tweeted a few days ago that developers who embraced js, html, css are being rewarded with Windows 8. Those that have embraced ASP.NET MVC and Rails (to name two) have been rewarded, are being rewarded and will continue to be rewarded. Now, those of us that have embraced js, we are going to be able to leverage that skill set in a different way that targets the Windows Platform. If you are a WPF/SL developer, I truly believe that things, in the long run, will be easier for you.</p>\\n<p>That is not to say that WPF/SilverLight Developers are out in the cold. Let&#8217;s review: just as ASP != Web Forms, \\u00a0WPF != XAML. WPF is but one implementation of\\u00a0XAML &#8211; and the underpinnings of XAML are being changed. That does not mean that WPF is &#8220;dead&#8221;. You can choose to look at it that way. I&#8217;d rather\\u00a0view it as XAML\\u00a0is progressing along an evoltutionary path. Developers need to focus more and the forest and less on the trees, more on what we do to deliver value and less on the particular tools we use.</p>\\n<p>I for one am glad to see that the context shift is going way on the Windows platform as to\\u00a0the differences between desktop and mobile/tablet devices. I can&#8217;t tell you how many times I got frustrated when I tried to do something in SilverLight, only to find that \\u00a0while WPF supported it, SilverLight did not, at least not without some hack. Anybody who has tried to implement MVVM\\u00a0equally on WPF and SilverLight knows what I&#8217;m talking about!</p>\\n<p>If you have embraced XAML, there is something for you in Windows 8. If you have embraced js/css/html/jquery etc &#8211; there is something for you in Windows \\u00a08.\\u00a0 The deal is this, if you are going to tie what you do to the specific implementation of a specific version of a closed source/vendor controlled product (which Windows is) &#8211; you are not allowed to bitch about it. There, I said it. It&#8217;s like the folks that complain about how a given piece of OSS works. Submit a patch if you don&#8217;t like it. If you don&#8217;t submit a patch, you don&#8217;t get to bitch. When you hitch your horse\\u00a0up to a particular post, you shouldn&#8217;t bitch because that vendor is looking to evolve its product. And quite frankly, there really isn&#8217;t anything to bitch about. Windows 8 looks pretty cool to me and it appears that\\u00a0MS\\u00a0is embracing more and more of what is open.</p>\\n<p>In my opinion, Windows\\u00a08\\u00a0is itself a web client that can\\u00a0directly interface\\u00a0with js and that interface can be optimized with Windows specific extensions. \\u00a0We can concentrate more on writing apps and less on the mechanical differences that introduces friction when we have to consider making data available on mobile devices like Windows Phones, iPhones, Android, etc.</p>\\n<p>In my opinion, Windows Development is getting easier!</p>\\n<p>A few other specific tidbits: glad to see the Win32API go away. I wonder if IE 6 will ever totally go away!!</p>\\n<p>Big kudos to the VS team for giving the ability to open a VS 2010 project in VS2011 &#8211; WITHOUT CONVERSION!!</p>\\n<p>Bootable from a thumb drive! Awesome. The smaller footprint! Awesome.</p>\\n<p>And yes&#8230;Metro Style Apps. Ok..let&#8217;s not get too exited.. we can write those today with the appropriate css. That said, the primary UI to Windows looks a lot simpler.</p>\\n<p>Hey, is it all unicorns and rainbows? Of course not. The graphic&#8217;s password? Marginally useful IMO. I can see somebody strategically positioning a smart phone video camera to capture how somebody logs onto their machine! At least with a passcode hack, you have to go to the trouble to install some software. Then, there is the adoption period for businesses. I fear that will be a lengthy one. So with that, some of the exuberance needs to tempered as it will be quite some time before we see Windows 8 in the mainstram of business development. Let&#8217;s remember &#8211; IE 6 is still out there as there is still lots of XP and Vista too!!</p>\\n<p>And while I can write mobile device software with html/css &#8211; if the client is all about\\u00a0Windows, why wouldn&#8217;t I want an easier experience that targets the platform?\\u00a0IN that regard, it&#8217;s clear that Windows 8 will make it easier</p>\\n<p>Tools come and tools go. It&#8217;s like a MLB manager, they get hired knowing that at some point, they will get fired (very few retire on their own terms). With all the cool stuff that is coming down the pike in VS 2011, Windows 8, MVC 4, I can&#8217;t help but thing what is in store with Windows, VS, and MVC .vNext!</p>\\n<p>There&#8217;s never been a better time to be a software developer! It&#8217;s actually fun &#8211; and I remember the times when it was not so fun!!</p>\\n<p>Finally, if you are a technologist who does not like change, perhaps you should contemplate a career change to digging holes. That process has remained largely unchanged for 100&#8242;s, if not 1000&#8242;s of years!!</p>\\n<p>&lt; JVP &gt;</p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/GMJPFY39XbY\\" width=\\"1\\" />", "summary": "I was reading all of the tweets about the DevExpress party with SmashMouth and was wishing I was there. In fact, I was really sad that I could not be out there as the venue appeard not to require a&#160;&#8230; <a href=\\"http://codebetter.com/johnpetersen/2011/09/16/windows-buildwindows-8-my-impressi", "id": "http://codebetter.com/johnpetersen/?p=70", "categories": [], "metadata": {"guid": "bb2bd36c-479f-4da0-a9c0-6c19a536901d", "likes": 0, "is_published": false}}]'
09-25 15:16 root         INFO     Handling CGI request.
09-25 15:16 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:16 SocketClient INFO     Sending to service: "["request_content_slice", [15, 15], {}]"
09-25 15:16 SocketClient INFO     Received from service: "[{"author": "johnvpetersen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/RTZI-UVm0y0/", "title": "Thanks to CodeBetter for having me aboard!!", "datetime": "2011-09-15T16:46:20", "html": "<p>I have moved my blog from Los Techies and am looking forward to participating in the CodeBetter Community! I&#8217;ve long been a follower of CodeBetter and have cited many posts here in my never ending quest to be a better software developer. Recently, I joined Scott Hanselman, Jon Galloway and Peter Mourfield as part of the core team that maintains the NerdDinner Project. As part of those efforts, we were graciously invited by Hadi Hariri to host the project on CodeBetter&#8217;s TeamCity CI server.</p>\n<p>I&#8217;ve very much enjoyed my time at Los Techies and am glad to count many of the bloggers there as good\u00a0friends. I&#8217;m grateful for being considered an honorary member of the group I affectionately call the &#8220;Austin Tech Mafia&#8221;!</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/RTZI-UVm0y0\" width=\"1\" />", "summary": "I have moved my blog from Los Techies and am looking forward to participating in the CodeBetter Community! I&#8217;ve long been a follower of CodeBetter and have cited many posts here in my never ending quest to be a better&#160;&#8230; <a href=\"http://codebetter.com/johnpetersen/2011/09/15/thanks-t", "id": "http://codebetter.com/johnpetersen/?p=64", "categories": [], "metadata": {"guid": "ecd8a378-ab96-47bb-ba00-0e5b78e1529b", "likes": 0, "is_published": false}}, {"author": "Patrick Smacchia", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/hWyLXx0fryc/", "title": "A first glance at Visual Studio vNext (dev11)", "datetime": "2011-09-15T14:12:59", "html": "<p>In case you are not aware, <a href=\"http://blogs.msdn.com/b/jasonz/archive/2011/09/14/announcing-visual-studio-11-developer-preview.aspx\" target=\"_blank\">a <em>developer preview</em> version of Visual Studio vNext has been released yesterday</a>. I just played an hour with it and it seems that <strong>performances are finally here</strong>! The same way I skipped Vista to jump from XP to <em>Wnd7 that I love</em>, I am (as much as I can) skipping VS2010 and I&#8217;ll jump from VS2008 to <em>VS2012 that I&#8217;ll hopefully love</em>. A few random notes:</p>\n<p>The startup time is damn fast, on a pretty large 50K <em>lines of code</em> VS solution: 4 seconds, and I am ready to type!</p>\n<p>The solution explorer (derived from VS2010 power tools) just rocks.</p>\n<p>The Ctrl+I search/replace in file rocks as well.</p>\n<p>The main button menu now just contains 7 buttons per default, and of course you can configure it by adding your preferred buttons.</p>\n<p>The find code duplicate is somewhat slow, 5 minutes on my 50K LoC, and didn&#8217;t give me any relevant result. But honestly the solution analyzed shouldn&#8217;t contain any duplicate and being slow is not so much an issue since it is not meant to be run at every build.</p>\n<p>The Ctrl+Alt+E exception dialog takes 2 seconds to open compared to 6 seconds with VS2010 and 4 seconds with VS 2008.</p>\n<p>The architecture explorer graph seems even slower than in VS 2010, and the\u00a0 embryo of dependency matrix seems to have been discarded. This is a good news for my business, <a href=\"http://www.ndepend.com/Doc_VS_Arch.aspx\" target=\"_blank\">generating a graph with NDepend</a> is instantaneous in most situations, and it is a matter of dozens of seconds to minutes with VS 2010 and 2012.</p>\n<p>The product contains many minor bugs, which is normal at a pre-beta stage.</p>\n<p>The install process is still super slow (&gt; an hour on my fast SSD laptop). I wish VS features could be grain-partitioned (Wnd8 tools, TFS, SQL-tools, F# tools, Game dev tools, Web dev tools&#8230;). The minimal installation takes more than 8GB on hard-drive!</p>\n<p>I didn&#8217;t test all the Wnd8/WPF/ASP.NET/WCF fancy new features, since I won&#8217;t develop with these until VS vNextNextNext is released! I believe I am like many real-world developers, developing an existing product that depends on a well defined set of <em>not so new</em> technologies, yet still passionated about what&#8217;s next. What really matters to developers in my situation, is to get bonus on what I am already using today (performance, solution explorer, quick search, code clone&#8230;) and VS 2012 seems to offer many of these bonus!</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/hWyLXx0fryc\" width=\"1\" />", "summary": "In case you are not aware, a developer preview version of Visual Studio vNext has been released yesterday. I just played an hour with it and it seems that performances are finally here! The same way I skipped Vista to&#160;&#8230; <a href=\"http://codebetter.com/patricksmacchia/2011/09/15/a-first-gla", "id": "http://codebetter.com/patricksmacchia/?p=370", "categories": [], "metadata": {"guid": "2bda21ae-6134-4cc7-a08f-9d88d358dbb7", "likes": 0, "is_published": false}}, {"author": "Howard Dierking", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/ISFFbcTq8Vw/", "title": "Web API Preview 5 Is Now Available", "datetime": "2011-09-15T00:41:09", "html": "<p>Today, <a href=\"http://codebetter.com/glennblock/\">Glenn</a> is announcing at the <a href=\"http://www.buildwindows.com/\">BUILD conference</a> that <a href=\"http://wcf.codeplex.com/releases/view/73399\">Web API preview 5</a> is available both on <a href=\"http://wcf.codeplex.com/\">CodePlex</a> and <a href=\"http://nuget.org/\">Nuget</a>.&nbsp; If you\u2019ve been following the project for while, you\u2019ll note that we went through a dry spell there for a while regarding updates.&nbsp; This was due primarily to the level of manual effort involved in updating our bits.&nbsp; Fortunately, we <a href=\"http://codebetter.com/howarddierking/2011/09/11/one-of-the-small-costs-of-transparency/\">recently automated away all of that manual effort</a> and are excited to get you new bits (and excited about getting bits to you much more frequently going forward). Here is a high level list of what you can expect to see in preview 5 as well as some notable changes.</p>\n<h2>New Features/Enhancements</h2>\n<ul>\n<li>OData Formatter\n<li>Dependency refactoring from host common code\n<li>Support for Batch with mime/mixed content where every part has a Get request\n<li>Web API code-based configuration (simplifications)\n<li>Web-based test client for WCF Web API\n<li>Http File upload\n<li>Refactored formatters\n<li>Better IoC support\n<li>Additional samples for specific features such as file upload\n<li>Content negotiation now supports qualifiers\n<li>ActionOfStreamContent \u2013 Enables accessing the raw content stream </li>\n</ul>\n<h2>New Prototype Features (on WebAPI-Prototype branch)</h2>\n<ul>\n<li>WebApiConfiguration includes conventions for WebGet/WebInvoke\n<li>WebApiRoute provides better side by side integration with MVC routes\n<li>MapServiceRoute extension method simplified registration and usage of WebApiConfiguration\n<li>SetDefaultHttpConfiguration / GetDefaultHttpConfiguration extension methods enable the getting and setting of a global configuration object that will be used by default by MapServiceRoute unless a specific one is provided\n<li>MediaTypeFormatterCollectionExtensions.AddRange enables a more compact way to add formatters\n<li>FormUrlEncodingMediaTypeFormatter\n<li>Task&lt;T&gt; for Web API operations and sample </li>\n</ul>\n<h2>Breaking Changes</h2>\n<ul>\n<li>DelegatingChannel renamed to DelegatingHandler\n<li>HttpChannel renamed to HttpMessageHandler\n<li>FormUrlEncodingMediaTypeFormatter and JsonValueMediaTypeFormatter were moved from the default branch to the WebAPI-Prototype branch as they are not currently part of the core product source\n<li>DelegatingHandler no longer require passing in a channel in the constructor making it more friendly to inversion of control (IoC) containers\n<li>New constructor overload on HttpMessageHandlerFactory overload which accepts a Func&lt;IEnumerable&lt;DelegatingHandler&gt;&gt; to allow user code or IoC containers to construct handlers.\n<li>IQueryable previously supported case-insensitive matches on operators. In the current drop we only will match on lowercase operators i.e. \u201c$top\u201d but not \u201c$Top\u201d. According to the spec this is correct behavior however we could relax it in the future. </li>\n</ul>\n<h2>Nuget</h2>\n<p>Like I mentioned above, preview 5 is also being released on Nuget today. Here\u2019s the breakdown of the Nuget packages that will be available:\n<ul>\n<li><strong>HttpClient</strong> \u2013 like it sounds, this gives you the HttpClient object model, which can be used by both the server and the client for a symmetric Http programming experience.\n<li><strong>JsonValue</strong> \u2013 Contains JsonValue api for typeless / dynamic access to Json.\n<li><strong>WebApi</strong> \u2013 The server-side object model for Web API\n<li><strong>WebApi.All</strong> \u2013 preserved for backwards compatibility; basically just pulls in everything.\n<li><strong>WebApi.Core</strong> \u2013 preserved for backwards compatibility; pulls in WebApi.0.5.0\n<li><strong>WebApi.Enhancements</strong> \u2013 gives you the Web API core product code plus the enhancements library (from the prototype branch)\n<li><strong>WebApi.OData</strong> \u2013 enables returning OData from a Web API. </li>\n</ul>\n<p>In addition to the core Nuget packages, we\u2019re also pushing up a set of symbol packages so that you can more easily debug through Web API source code.</p>\n<ul>\n<li>HttpClient.0.5.0.symbols.nupkg\n<li>JsonValue.0.5.0.symbols.nupkg\n<li>WebApi.0.5.0.symbols.nupkg\n<li>WebApi.Enhancements.0.5.0.symbols.nupkg\n<li>WebApi.OData.0.5.0.symbols.nupkg </li>\n</ul>\n<h2>Updated Content</h2>\n<p>In addition to updating the source code and binaries, we\u2019ve pushed up a more current set of <a href=\"http://wcf.codeplex.com/documentation\">getting started material</a>, including both information on getting started with the core product bits and information on getting started using the Http enhancements library on the prototype branch.&nbsp; There\u2019s even <a href=\"http://vimeo.com/28139763\">this video</a> on how to take advantage of our built-in test client.</p>\n<h2>Navigating Our CodePlex Repository \u2013 the WebAPI-Prototype branch</h2>\n<p>One thing that we wanted to improve with this push was a more clear view of what was product code and what was prototype or proof-of-concept code.&nbsp; Therefore, we created a &#8216;WebAPI-Prototype&#8217; branch and pulled all non-product code (which translates into all code that is not checked into our internal source control) out of the default branch and into the prototype branch.&nbsp; </p>\n<p><a href=\"http://codebetter.com/howarddierking/files/2011/09/clip_image001.jpg\"><img alt=\"clip_image001\" border=\"0\" height=\"197\" src=\"http://codebetter.com/howarddierking/files/2011/09/clip_image001_thumb.jpg\" style=\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\" width=\"240\" /></a></p>\n<p>This structure provides 2 main benefits: </p>\n<ul>\n<li>As mentioned above, better transparency between supported product bits and proof-of-concept bits\n<li>By having the default branch be a reflection of our internal repository, we can update it much more frequently because we won&#8217;t have to account for any changes that would have happened outside of our internal repo.\n<p>One thing to note about the introduction of this branch is that samples currently live in the prototype branch \u2013 so if you want to use the samples as a way to get started building with Web API, you\u2019ll want to update to the prototype branch.&nbsp; That said, there are samples that exist in the &#8216;Tests/*/Scenarios&#8217; folders.&nbsp; For example, the Mime multipart sample can be found at <a href=\"http://wcf.codeplex.com/SourceControl/changeset/view/1e77229b0064#WCFWebApi%2fHttp%2fTest%2fMicrosoft.Net.Http.Formatting%2fScenarios%2fMimeMultipart%2fProgram.cs\">&#8216;Test\\Microsoft.Net.Http.Formatting\\Scenarios\\MimeMultipart&#8217;</a>.</p>\n</li>\n</ul>\n<p>As you can see, we\u2019ve added a lot of new goodness with preview 5 and are excited to have you test-drive the bits and let us know what you think.&nbsp; And again, now that we\u2019ve automated the process of getting our code pushed to CodePlex, expect to see updates coming regularly.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/ISFFbcTq8Vw\" width=\"1\" />", "summary": "Today, Glenn is announcing at the BUILD conference that Web API preview 5 is available both on CodePlex and Nuget.&#160; If you\u2019ve been following the project for while, you\u2019ll note that we went through a dry spell there for a&#160;&#8230; <a href=\"http://codebetter.com/howarddierking/2011/09/15/web-", "id": "http://codebetter.com/howarddierking/?p=146", "categories": [], "metadata": {"guid": "1178f0ef-3b8f-48d5-a407-c3bd62c293ff", "likes": 0, "is_published": false}}, {"author": "Sebastien Lambla", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/4MapDEElQYs/", "title": "Extending configuration in OpenRasta 2.1", "datetime": "2011-09-14T17:17:11", "html": "<p><em>[Updated to clarify what the configuration meta-model actually is.]</em></p>\n<p>The latest OpenRasta 2.1 code contains some changes that make extending the fluent API easier, and provide a supported way for you to write those extensions in a way that won\u2019t break with OpenRasta 3.0.</p>\n<h2>OpenRasta configuration meta-model</h2>\n<p>The one thing everyone knows about OpenRasta is it\u2019s resource-oriented fluent configuration API. What few people know is how it works behind the scene.</p>\n<p>Whenever you configure a resource, the fluent API creates a ResourceModel instance and stores it. Once all the configurations are done, a set of objects process those registrations to initialize OpenRasta itself, such as registering types in the container, mapping URIs or creating a list of codecs.</p>\n<p>Each of the configuration elements of OpenRasta is represented by one configuration object, and the set of all those configuration bits is what we call the configuration meta-model, and is stored in the IMetaModelRepository service.</p>\n<p>The astute reader will have noticed that in practice this means that the use of the fluent API is optional, and indeed the astute reader would be absolutely right.</p>\n<p>One of the things that was not easily doable in 2.0 was extending that meta-model by extending the existing fluent configuration API. Why would we want to do this? Let\u2019s take an example that will expose the whole stack of extension points in OpenRasta and add support for authentication at the configuration level.</p>\n<h2>Understanding the new extension points</h2>\n<p>A typical 2.x era configuration for a resource contains multiple chained methods, one per thing you want to configure for a resource.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">using</span><span style=\"color: #e0e0e0;\"> (</span><span style=\"color: #c2a0fa;\">OpenRastaConfiguration</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Manual</span><span style=\"color: #e0e0e0;\">)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #c2a0fa;\">ResourceSpace</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Has</span><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bdb76b;\">// IHas</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">ResourcesOfType</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">UserDocument</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\">()\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bdb76b;\">// IResource</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">AtUri</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #fa8072;\">&quot;/public/{filename}&quot;</span><span style=\"color: #e0e0e0;\">)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bdb76b;\">// IUri</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">HandledBy</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">UserDocumentHandler</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\">()\u00a0\u00a0\u00a0</span><span style=\"color: #bdb76b;\">// IHandler</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">AsXmlDataContract</span><span style=\"color: #e0e0e0;\">();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bdb76b;\">// ICodec</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></div>\n</p></div>\n</p></div>\n<p>The interfaces that you see on the right are new to 2.1 and are where the magic happens.</p>\n<p>Let\u2019s say we want to require authentication for any UserDocument resource. The recommended way to do this is to attach an extension method in your namespace and attach it to IResource.</p>\n<p>To prevent intellisense from showing a lot of rubbish on those interfaces, to gain access to the extensibility points of the configuration API you need to cast the instance you get to IXxxTarget. In our example, let\u2019s create a RequiresAuthentication method and add some metadata to that resource registration.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">static</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">class</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #c2a0fa;\">AuthenticationConfiguration</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">static</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #5391ee;\">T</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffc488;\">RequiresAuthentication</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #5391ee;\">T</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #00bfff;\">this</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #5391ee;\">T</span><span style=\"color: #e0e0e0;\"> root) </span><span style=\"color: #00bfff;\">where</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #5391ee;\">T</span><span style=\"color: #e0e0e0;\">:</span><span style=\"color: #71ffff;\">IResourceDefinition</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">var</span><span style=\"color: #e0e0e0;\"> target </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> root </span><span style=\"color: #00bfff;\">as</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #71ffff;\">IResourceTarget</span><span style=\"color: #e0e0e0;\">;</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0target</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Resource</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Properties</span><span style=\"color: #e0e0e0;\">[</span><span style=\"color: #fa8072;\">&quot;caffeineit.demos.fluentauth.enabled&quot;</span><span style=\"color: #e0e0e0;\">] </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">true</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">return</span><span style=\"color: #e0e0e0;\"> root;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0}</span></div>\n</p></div>\n</p></div>\n<p>The IResourceTarget interface contains about everything you need to add anything you want to the configuration model: the meta-model repository, the current resource registration and its list of URIs, Handlers and Codecs.</p>\n<p>Here we\u2019ve added some additional data to enable authentication that we need to process from somewhere else.</p>\n<h2>Platform-wide operation interceptors</h2>\n<p>The second extension point we\u2019ll use is the support for operation interceptors, which are small components that can interact and make decisions before your handler code gets called.</p>\n<p>You may have seen them being used in OpenRasta on a per-method basis, usually together with an attribute that creates them, such as [RequiresAuthentication] or [RequiresRole]</p>\n<p>Whenver a URI is matched by OpenRasta, it is associated with a <strong>resource key</strong>. This is the cornerstone of the OpenRasta model, as with a resource key we can find all handlers, URIs, codecs and anything else associated with the resource we have. We\u2019re going to be using this to get the information we\u2019ve added in our configuration.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">class</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00d2d2;\">FluentAuthenticationInterceptor</span><span style=\"color: #e0e0e0;\"> : </span><span style=\"color: #71ffff;\">IOperationInterceptor</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #71ffff;\">IMetaModelRepository</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #bfbfff;\">_configuration</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #71ffff;\">ICommunicationContext</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #bfbfff;\">_env</span><span style=\"color: #e0e0e0;\">;</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00d2d2;\">FluentAuthenticationInterceptor</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #71ffff;\">IMetaModelRepository</span><span style=\"color: #e0e0e0;\"> configuration, </span><span style=\"color: #71ffff;\">ICommunicationContext</span><span style=\"color: #e0e0e0;\"> env)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bfbfff;\">_configuration</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> configuration;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bfbfff;\">_env</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> env;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">bool</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffb7db;\">BeforeExecute</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #71ffff;\">IOperation</span><span style=\"color: #e0e0e0;\"> operation)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">var</span><span style=\"color: #e0e0e0;\"> currentResource </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #bfbfff;\">_env</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">PipelineData</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">ResourceKey</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">var</span><span style=\"color: #e0e0e0;\"> registration </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #bfbfff;\">_configuration</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">ResourceRegistrations</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">FirstOrDefault</span><span style=\"color: #e0e0e0;\">(x </span><span style=\"color: #a6a0e0;\">=&gt;</span><span style=\"color: #e0e0e0;\"> x</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">ResourceKey</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">==</span><span style=\"color: #e0e0e0;\"> currentResource);</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">object</span><span style=\"color: #e0e0e0;\"> authEnabled;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">if</span><span style=\"color: #e0e0e0;\"> (registration </span><span style=\"color: #a6a0e0;\">!=</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">null</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">&amp;&amp;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0registration</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Properties</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">TryGetValue</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #fa8072;\">&quot;caffeineit.demos.fluentauth.enabled&quot;</span><span style=\"color: #e0e0e0;\">, </span><span style=\"color: #00bfff;\">out</span><span style=\"color: #e0e0e0;\"> authEnabled) </span><span style=\"color: #a6a0e0;\">&amp;&amp;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(</span><span style=\"color: #00bfff;\">bool</span><span style=\"color: #e0e0e0;\">)authEnabled)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">if</span><span style=\"color: #e0e0e0;\"> (</span><span style=\"color: #bfbfff;\">_env</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">User</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Identity</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">IsAuthenticated</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">==</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">false</span><span style=\"color: #e0e0e0;\">)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #bfbfff;\">_env</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">OperationResult</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">new</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00d2d2;\">OperationResult</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #00d2d2;\">Unauthorized</span><span style=\"color: #e0e0e0;\">();</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">return</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">false</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">return</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">true</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffff80;\">Func</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #71ffff;\">IEnumerable</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">OutputMember</span><span style=\"color: #a6a0e0;\">&gt;&gt;</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffb7db;\">RewriteOperation</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #ffff80;\">Func</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #71ffff;\">IEnumerable</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">OutputMember</span><span style=\"color: #a6a0e0;\">&gt;&gt;</span><span style=\"color: #e0e0e0;\"> operationBuilder)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">return</span><span style=\"color: #e0e0e0;\"> operationBuilder;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">bool</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffb7db;\">AfterExecute</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #71ffff;\">IOperation</span><span style=\"color: #e0e0e0;\"> operation, </span><span style=\"color: #71ffff;\">IEnumerable</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">OutputMember</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\"> outputMembers)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">return</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">true</span><span style=\"color: #e0e0e0;\">;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0}</span></div>\n</p></div>\n</p></div>\n<p>A few things are happening here. Of course we use <strong>dependency injection</strong> to take a dependency on the meta-model repository, where our configuration is stored, and on the ICommunicationContext, which gives us the principal of the current user, and which we need to know if someone has authenticated. On a side-note, that property is populated based on your hosting environment, so if you run on asp.net and have Forms authentication enabled, that will flow automatically with no work on your part.</p>\n<p>We do the work in BeforeExecute so we can stop execution before any other code runs, be it other interceptors or our handler. Finally, if a user is not authenticated, we override the OperationResult for the current connection and return <strong>false</strong>, which instructs OpenRasta to stop processing anything and start writing the response back to the client.</p>\n<h2>Hooking up the interceptor</h2>\n<p>The last bit we have to do is to give the interceptor to OpenRasta, and like everything else, it is handled by the IoC container. We can register custom dependencies in a unified fashion using the fluent configuration API.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #c2a0fa;\">ResourceSpace</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Uses</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">CustomDependency</span><span style=\"color: #a6a0e0;\">&lt;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #71ffff;\">IOperationInterceptor</span><span style=\"color: #e0e0e0;\">, </span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00d2d2;\">FluentAuthenticationInterceptor</span><span style=\"color: #a6a0e0;\">&gt;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(</span><span style=\"color: #8080c0;\">DependencyLifetime</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #8080c0;\">Transient</span><span style=\"color: #e0e0e0;\">);</span></div>\n</p></div>\n</p></div>\n<p>&nbsp;</p>\n<h2>Cleaning up and ready for packaging</h2>\n<p>Finally, like most plugins in OpenRasta, you should do all your configuration work as an extension on IUses, so we wrap the work that was done in the last bit into a nice extension method.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #00bfff;\">public</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">static</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00bfff;\">void</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #ffc488;\">FluentAuthentication</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #00bfff;\">this</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #71ffff;\">IUses</span><span style=\"color: #e0e0e0;\"> uses)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">var</span><span style=\"color: #e0e0e0;\"> target </span><span style=\"color: #a6a0e0;\">=</span><span style=\"color: #e0e0e0;\"> (</span><span style=\"color: #71ffff;\">IFluentTarget</span><span style=\"color: #e0e0e0;\">)uses;</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0target</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Repository</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">CustomRegistrations</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">Add</span><span style=\"color: #e0e0e0;\">(</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">new</span><span style=\"color: #e0e0e0;\"> </span><span style=\"color: #00d2d2;\">DependencyRegistrationModel</span><span style=\"color: #e0e0e0;\">(</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">typeof</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #71ffff;\">IOperationInterceptor</span><span style=\"color: #e0e0e0;\">),</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">typeof</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #00d2d2;\">FluentAuthenticationInterceptor</span><span style=\"color: #e0e0e0;\">),</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #8080c0;\">DependencyLifetime</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #8080c0;\">Transient</span><span style=\"color: #e0e0e0;\">)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0);</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></div>\n</p></div>\n</p></div>\n<p>&nbsp;</p>\n<p>And now our configuration looks nice and understandable.</p>\n<div class=\"wlWriterEditableSmartContent\" style=\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\">\n<div style=\"border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;\">\n<div style=\"background-color: #333333; overflow: auto; padding: 2px 5px;\"><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #00bfff;\">using</span><span style=\"color: #e0e0e0;\"> (</span><span style=\"color: #c2a0fa;\">OpenRastaConfiguration</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Manual</span><span style=\"color: #e0e0e0;\">)</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #c2a0fa;\">ResourceSpace</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Uses</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">FluentAuthentication</span><span style=\"color: #e0e0e0;\">();</span></p>\n<p> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #c2a0fa;\">ResourceSpace</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #bfbfff;\">Has</span><span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">ResourcesOfType</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">UserDocument</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\">() </span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">RequiresAuthentication</span><span style=\"color: #e0e0e0;\">()</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">AtUri</span><span style=\"color: #e0e0e0;\">(</span><span style=\"color: #fa8072;\">&quot;/public/{filename}&quot;</span><span style=\"color: #e0e0e0;\">)\u00a0\u00a0\u00a0\u00a0\u00a0</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffb7db;\">HandledBy</span><span style=\"color: #a6a0e0;\">&lt;</span><span style=\"color: #00d2d2;\">UserDocumentHandler</span><span style=\"color: #a6a0e0;\">&gt;</span><span style=\"color: #e0e0e0;\">()</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><span style=\"color: #a6a0e0;\">.</span><span style=\"color: #ffc488;\">AsXmlDataContract</span><span style=\"color: #e0e0e0;\">();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</span><br /> <span style=\"color: #e0e0e0;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}</span></div>\n</p></div>\n</p></div>\n<h2>Conclusion</h2>\n<p>The same extension points are available for URIs, for handlers, codecs, media type definitions and any other configuration model that exists. If you hang off those interfaces, your extensions will still work for the new compact configuration API and the convention-based configuration API that will be part of OpenRasta 3.0.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/4MapDEElQYs\" width=\"1\" />", "summary": "[Updated to clarify what the configuration meta-model actually is.] The latest OpenRasta 2.1 code contains some changes that make extending the fluent API easier, and provide a supported way for you to write those extensions in a way that won\u2019t&#160;&#8230; <a href=\"http://codebetter.com/sebastienla", "id": "http://codebetter.com/sebastienlambla/2011/09/14/extending-configuration-in-openrasta-2-1/", "categories": [], "metadata": {"guid": "34e6a688-3518-43f9-957b-eae600e75e4b", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://rubenhenares.404fs.com/get-into-electronics/", "title": "Get into Electronics", "datetime": "2011-09-14T11:06:57", "html": "<p>Creating applications is challenging and fun. But what about creating your own hardware to interact with them?<br />\nIf you want to get into electronics, but it sounds like rocket science to you. <a href=\"http://www.sparklelabs.com/\">Sparkle Labs</a> has released its <a href=\"http://sparklelabs.com/index_store.php#Discover%20Electronics\">Discover Electronics Kit</a> version 2.<br />\nThe <a href=\"http://learn.sparklelabs.com/\">Sparkle Labs Education</a> site has a bunch of interesting information and great video tutorials that will help you understand the basics, current, resistors, capacitors, etc.</p>", "summary": "Creating applications is challenging and fun. But what about creating your own hardware to interact with them? If you want to get into electronics, but it sounds like rocket science to you. Sparkle Labs has released its Discover Electronics Kit version 2. The Sparkle Labs Education site has a bunch ", "id": "http://rubenhenares.404fs.com/?p=244", "categories": [], "metadata": {"guid": "ed19590a-71e5-4fe0-83f9-ea3f41ddd30c", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/14/possible-downtime/", "title": "Possible downtime", "datetime": "2011-09-14T09:00:23", "html": "<div class=\"note tools\">I&#8217;m about to change hosts so some downtime in the next 72 hours is expected.</p>\n<p>I&#8217;m also cleaning up my domains and folder structure so certain links might be broken but I&#8217;ll fix them soon.</p></div>\n<p><!-- PHP 5.x --></p>", "summary": "I&#8217;m about to change hosts so some downtime in the next 72 hours is expected.\nI&#8217;m also cleaning up my domains and folder structure so certain links might be broken but I&#8217;ll fix them soon.\n PHP 5.x ", "id": "http://www.zspline.net/blog/?p=1521", "categories": [], "metadata": {"guid": "bbbd90fb-0322-4835-b4d6-f874f24b1968", "likes": 0, "is_published": false}}, {"author": "JayG (noreply@blogger.com)", "url": "http://feedproxy.google.com/~r/ScriptSwell/~3/ixPXczKpc8Q/webinar-with-zbrush-guru-ryan-kingslien.html", "title": "Webinar with ZBrush Guru Ryan Kingslien", "datetime": "2011-09-13T19:01:36.678000", "html": "<div dir=\"ltr\" style=\"text-align: left;\">\nRecently <a href=\"http://image-metrics.com/\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\"http://zbrushworkshops.com/\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry's most sought after artists and it was a pleasure to hear his take on how to tackle learning facial anatomy. &nbsp;He has even recently started a new class on his <a href=\"http://zbrushworkshops.com/\">website</a> based on the content of the webinar. &nbsp;Check out the video below.\n\n<br />\n<br />\n<a href=\"http://vimeo.com/28949284\">Sculpting The Face - Anatomy &amp; Form</a><br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://vimeo.com/28949284\"><span id=\"goog_1004908762\"></span><span id=\"goog_1004908763\"></span><img border=\"0\" height=\"298\" src=\"http://3.bp.blogspot.com/-VZbhgmM9wKw/TnAIChhqyfI/AAAAAAAAAfY/kvyVy_wGroU/s400/ryan_webinar.jpg\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nYou can find videos of some of the other <a href=\"http://vimeo.com/user6082681/videos\">webinars</a> we've done at Image Metrics in the right-hand side column.</div>\n</div>\n<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/9194959783867453392-8985862413181732524?l=www.scriptswell.net\" width=\"1\" /></div>\n<p><a href=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/da\"><img border=\"0\" ismap=\"true\" src=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/di\" /></a><br />\n<a href=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/da\"><img border=\"0\" ismap=\"true\" src=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/di\" /></a></p><img height=\"1\" src=\"http://feeds.feedburner.com/~r/ScriptSwell/~4/ixPXczKpc8Q\" width=\"1\" />", "summary": "<div dir=\"ltr\" style=\"text-align: left;\">\nRecently <a href=\"http://image-metrics.com/\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\"http://zbrushworkshops.com/\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry's most sought after artists and", "id": "tag:blogger.com,1999:blog-9194959783867453392.post-8985862413181732524", "categories": [], "metadata": {"guid": "6ebec914-724a-4a68-bf74-df6845814b09", "likes": 0, "is_published": false}}, {"author": "JayG (noreply@blogger.com)", "url": "http://feedproxy.google.com/~r/ScriptSwell/~3/ixPXczKpc8Q/webinar-with-zbrush-guru-ryan-kingslien.html", "title": "Webinar with ZBrush Guru Ryan Kingslien", "datetime": "2011-09-13T19:01:36.678000", "html": "<div dir=\"ltr\" style=\"text-align: left;\">\nRecently <a href=\"http://image-metrics.com/\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\"http://zbrushworkshops.com/\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry's most sought after artists and it was a pleasure to hear his take on how to tackle learning facial anatomy. &nbsp;He has even recently started a new class on his <a href=\"http://zbrushworkshops.com/\">website</a> based on the content of the webinar. &nbsp;Check out the video below.\n\n<br />\n<br />\n<a href=\"http://vimeo.com/28949284\">Sculpting The Face - Anatomy &amp; Form</a><br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://vimeo.com/28949284\"><span id=\"goog_1004908762\"></span><span id=\"goog_1004908763\"></span><img border=\"0\" height=\"298\" src=\"http://3.bp.blogspot.com/-VZbhgmM9wKw/TnAIChhqyfI/AAAAAAAAAfY/kvyVy_wGroU/s400/ryan_webinar.jpg\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nYou can find videos of some of the other <a href=\"http://vimeo.com/user6082681/videos\">webinars</a> we've done at Image Metrics in the right-hand side column.</div>\n</div>\n<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/9194959783867453392-8985862413181732524?l=www.scriptswell.net\" width=\"1\" /></div>\n<p><a href=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/da\"><img border=\"0\" ismap=\"true\" src=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/di\" /></a><br />\n<a href=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/da\"><img border=\"0\" ismap=\"true\" src=\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/di\" /></a></p><img height=\"1\" src=\"http://feeds.feedburner.com/~r/ScriptSwell/~4/ixPXczKpc8Q\" width=\"1\" />", "summary": "<div dir=\"ltr\" style=\"text-align: left;\">\nRecently <a href=\"http://image-metrics.com/\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\"http://zbrushworkshops.com/\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry's most sought after artists and", "id": "tag:blogger.com,1999:blog-9194959783867453392.post-8985862413181732524", "categories": [], "metadata": {"guid": "34764f57-b4bc-41b1-9079-7477ed6f2302", "likes": 0, "is_published": false}}, {"author": "Dave Ferner", "url": "http://www.supermono-studios.com/2011/09/forever-drive-official-trailer/", "title": "FOREVER DRIVE!!!!!! Official trailer", "datetime": "2011-09-13T13:06:18", "html": "<p><a href=\"http://www.youtube.com/watch?v=iYCMGa5x5oA\"><img height=\"298\" src=\"http://supermono-studios.com/wp-content/uploads/2011/09/youtube.jpg\" width=\"480\" /></a></p>\n<p>Hey, check it out! Official trailer for our very-soon-to-be-released arcade driving future game! Lots of never-seen-before footage. Well, we&#8217;ve seen it before, cos we made it, but you haven&#8217;t. So watch it.</p>", "summary": "Hey, check it out! Official trailer for our very-soon-to-be-released arcade driving future game! Lots of never-seen-before footage. Well, we&#8217;ve seen it before, cos we made it, but you haven&#8217;t. So watch it.", "id": "http://www.supermono-studios.com/?p=1019", "categories": [], "metadata": {"guid": "04ca7002-b0cf-434b-9bc5-6fe35aa7de7e", "likes": 0, "is_published": false}}, {"author": "Sebastien Lambla", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/OGdGTuJ80l4/", "title": "Trying out OpenWrap 2.0", "datetime": "2011-09-12T21:11:56", "html": "<p><font color=\"#ff0000\"><em>[Update 3: github is not pushing the changes to openwrap.org properly, I\u2019ve updated the link to the shell in the post to point to the correct file.]</em></font></p>\n<p><font color=\"#ff0000\"><em>[Update 2: The problems with side-by-side of 2.0 and 1.0 seem to be mostly resolved. Do not install 2.0 in your system repository just yet, keep it in a test project, and please update OpenWrap to the newly released 1.0.1 version which solves some of those issues.]</em></font></p>\n<p><font color=\"#ff0000\"><em>[Update: I\u2019ve temporarily removed the 2.0 packages from the beta server due to unforeseen 1.0.0 / 2.0 side-by-side execution due to a bug in 1.0.0. Expect a new set of packages soon.]</em></font></p>\n<p>We\u2019ve come a long way since the initial work started on OpenWrap 1.1 that turned into 2.0.</p>\n<p>We now have ReSharper 6 support and a whole lot of new features, and we\u2019re 50 open issues from being feature complete. Still, it\u2019s time to announce a few things.</p>\n<p>First, the shell has been updated to 2.0, and bring back the possibility of deleting your /wraps folder when something goes bad to force an update, as well as fix a bunch of bugs that existed in the 1.1 release. Go <a href=\"http://github.com/OpenWrap/openwrap.github.com/raw/master/o.exe\">download it now</a>.</p>\n<p>The second thing is that test packages of OpenWrap 2.0 are available for testing, but not on the main repository. If you have OpenWrap 1.0 installed, you can upgrade a specific project to OpenWrap 2.0 by adding the beta repository.</p>\n<pre>C:\\src&gt; o add-remote beta http://wraps.openwrap.org/beta/\n# OpenWrap Shell 2.0.0.8\n# Copyright \u00a9 naughtyProd Limited 2009-2011\n# Using C:\\Users\\sebastien.lambla\\AppData\\Local\\openwrap\\wraps\\_cache\\openwrap-2.0.0.81133579\\bin-net35\\OpenWrap.dll (2.0.0.0)\nRemote repository 'beta' added.\n\n<font color=\"#444444\" face=\"Georgia\" size=\"3\">Then you can update your project to the new test version.</font></pre>\n<pre><font color=\"#444444\" face=\"Georgia\" size=\"3\"></font>&nbsp;</pre>\n<pre>C:\\src\\myProject&gt; o update-wrap openwrap -project\n</pre>\n<p>&nbsp;</p>\n<p>If you want to install 2.0 in your system repository, and at this stage it is not recommended as those are early previews that do not guarantee that side-by-side execution will work, then any 1.0 project may fail with <strong>noun not found</strong> errors. If this is your case:</p>\n<ul>\n<li>Change your wrap descriptor to force 1.0, so \u201cdepends: openwrap content\u201d should be changed to \u201cdepends: openwrap = 1.0 content\u201d\n<li>Force an update to 1.0.1 by doing \u201co update-wrap openwrap \u2013proj \u2013usesystem\u201d\n<li>If this fails, let us know how, then simply reset your system repository to a known state using the \u2013shellpanic flag before executing your update-wrap command. </li>\n</ul>\n<p>In the next couple of weeks there will be very long blog posts about all the new features we have in there for you, but if you\u2019ve been dying to test out the alpha releases, now you know how.</p>\n<p>As usual, contributors are welcome, bug reports should be filled on <a href=\"http://github.com/openrasta/openwrap/\">http://github.com/openrasta/openwrap/</a>. If you\u2019ve not involved yourself in real open source, by the people, for the people, in the open and in all honesty, now is the time.</p>\n<p>OpenWrap is the longest running and most open package manager on .net, come and have a look.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/OGdGTuJ80l4\" width=\"1\" />", "summary": "[Update 3: github is not pushing the changes to openwrap.org properly, I\u2019ve updated the link to the shell in the post to point to the correct file.] [Update 2: The problems with side-by-side of 2.0 and 1.0 seem to be&#160;&#8230; <a href=\"http://codebetter.com/sebastienlambla/2011/09/12/trying-out-o", "id": "http://codebetter.com/sebastienlambla/2011/09/12/trying-out-openwrap-2-0-2/", "categories": [], "metadata": {"guid": "44db5f56-4096-4ac4-b12d-4a2a5acbb3c9", "likes": 0, "is_published": false}}, {"author": "Howard Dierking", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/r8j_Lvbp0Uk/", "title": "One of the small costs of transparency", "datetime": "2011-09-11T18:23:34", "html": "<p>If you\u2019ve been following wcf.codeplex.com, you\u2019ll notice that we\u2019ve had a flurry of activity over the last couple of weeks, culminating in the release of Web API preview 5.&nbsp; If you\u2019ve been following our Codeplex repository for a while, you\u2019ll also note that this flurry of activity was preceded by months of inactivity.&nbsp; This wasn\u2019t because we were just sitting around talking waiting for the code to update itself.&nbsp; We had been wanting to update the repo for a while.&nbsp; The problem was that the process to update the code was very hard and very manual (meaning it was also very error prone).&nbsp; This is largely due to the fact that our source code is completely self-contained in its repository.&nbsp; Usually, you would think of self-containment as a good thing.&nbsp; However, in the scenario where you want to be able to share your code with others (like on Codeplex, for example), this property becomes a major problem.&nbsp; This is because code in our repository takes 0 dependencies on anything outside of our repository \u2013 including things like .NET Framework assemblies.&nbsp; Additionally, our build files contain all sorts of includes to custom tools, custom build targets/properties, etc.&nbsp; As a result, getting code out of our repository and then updating it so that it will actually build is a non-trivial task \u2013 until now.</p>\n<p>I went through this manual process once and quickly decided that I would never do that again.&nbsp; I already had an interest in PowerShell, so decided to kill multiple birds with one stone and automate the process using PowerShell.&nbsp; Additionally, because one of the major steps in the automation workflow is transforming the project files to remove internal assembly and tool references, I called into some XSLT from my PowerShell script.</p>\n<p>At a high level, the workflow looks as follows:</p>\n<ol>\n<li>Sync our product code from our internal repository</li>\n<li>Build our product code (this will generate needed files that rely on internal build tools)</li>\n<li>Create a new clone of the Codeplex repository</li>\n<li>In the Codeplex clone, delete everything in the source and test folders (this will better help to identify delete files in the hg repo when committing)</li>\n<li>Copy all source and test files from our internal repo to our hg clone</li>\n<li>Run XSLT over all *.csproj files in the hg repository to remove all internal references</li>\n<li>Run RegEx over all AssemblyInfo.cs files to remove delay signed info from InternalsVisibleTo attributes</li>\n<li>Run RegEx to clean up some assembly strong name references in some test config files</li>\n<li>Open the solution in Visual Studio and make sure that all projects build and that all tests run</li>\n</ol>\n<p>As you can see, there are a few things going on here \u2013 even with the automation \u2013 so imagine what the manual process looked like.&nbsp; </p>\n<p>Like I mentioned earlier, this automation project gave me an excuse to do something that I had been wanting to do anyway \u2013 learn PowerShell.&nbsp; As such, I want to show you the PowerShell script in part because you may currently (or one day) be facing a similar challenge, and in (larger) part because I want your feedback on how I can improve the PowerShell (like I said, I was learning).</p>\n<p>Anyways, here\u2019s the PowerShell:</p>\n<noscript><div class=\"gist\" id=\"gist-1209919\">\n  \n  \n    \n      \n        \n        \n\n        <div class=\"gist-file\">\n          <div class=\"gist-data gist-syntax\">\n            \n            \n            \n              <div class=\"highlight\"><pre><div class=\"line\" id=\"LC1\">Import-Module Pscx</div><div class=\"line\" id=\"LC2\"><br /></div><div class=\"line\" id=\"LC3\"><span class=\"c\"># the variables you'll likely need to change on your local machine</span></div><div class=\"line\" id=\"LC4\"><span class=\"nv\">$afroot</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;D:\\AppFabric&quot;</span></div><div class=\"line\" id=\"LC5\"><span class=\"nv\">$hgroot</span> <span class=\"o\">=</span> <span class=\"s1\">'D:\\Programming Projects'</span></div><div class=\"line\" id=\"LC6\"><span class=\"c\"># $hgremote = &quot;https://hg01.codeplex.com/wcf&quot;</span></div><div class=\"line\" id=\"LC7\"><span class=\"nv\">$hgremote</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;D:\\Programming Projects\\wcf-codeplex-baseline_RC2&quot;</span></div><div class=\"line\" id=\"LC8\"><br /></div><div class=\"line\" id=\"LC9\"><span class=\"c\"># derived paths</span></div><div class=\"line\" id=\"LC10\"><span class=\"nv\">$afwcfsource</span> <span class=\"o\">=</span> <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;\\private\\source\\WCF&quot;</span></div><div class=\"line\" id=\"LC11\"><span class=\"nv\">$afcommonsource</span> <span class=\"o\">=</span> <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;\\private\\source\\Common\\Microsoft.Server.Common&quot;</span></div><div class=\"line\" id=\"LC12\"><span class=\"nv\">$afwcftestsource</span> <span class=\"o\">=</span> <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;\\private\\CIT\\WCF&quot;</span></div><div class=\"line\" id=\"LC13\"><span class=\"nv\">$afcommontest</span> <span class=\"o\">=</span> <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;\\private\\testcommon&quot;</span></div><div class=\"line\" id=\"LC14\"><br /></div><div class=\"line\" id=\"LC15\"><span class=\"nv\">$clonename</span> <span class=\"o\">=</span> Get-Date -f yyyyMMdd-hhmmss</div><div class=\"line\" id=\"LC16\"><span class=\"nv\">$hgclonepath</span> <span class=\"o\">=</span> <span class=\"nv\">$hgroot</span> + <span class=\"s2\">&quot;\\wcf-codeplex-baseline_&quot;</span> + <span class=\"nv\">$clonename</span></div><div class=\"line\" id=\"LC17\"><span class=\"nv\">$hgsrc</span> <span class=\"o\">=</span> <span class=\"nv\">$hgclonepath</span> + <span class=\"s2\">&quot;\\WCFWebApi\\Http\\Src&quot;</span></div><div class=\"line\" id=\"LC18\"><span class=\"nv\">$hgtest</span> <span class=\"o\">=</span> <span class=\"nv\">$hgclonepath</span> + <span class=\"s2\">&quot;\\WCFWebApi\\Http\\Test&quot;</span></div><div class=\"line\" id=\"LC19\"><span class=\"nv\">$enlistmentcmdargs</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/C set inetroot=&quot;</span> + <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;&amp;set corextbranch=appserver&amp;&quot;</span> + <span class=\"nv\">$afroot</span> + <span class=\"s2\">&quot;\\tools\\path1st\\myenv.cmd&quot;</span></div><div class=\"line\" id=\"LC20\"><span class=\"nv\">$enlistmentcmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;C:\\Windows\\SysWOW64\\cmd.exe&quot;</span></div><div class=\"line\" id=\"LC21\"><span class=\"nv\">$bcca</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;msbuildcmd /c /a amd64&quot;</span></div><div class=\"line\" id=\"LC22\"><br /></div><div class=\"line\" id=\"LC23\"><span class=\"nv\">$currentpath</span> <span class=\"o\">=</span> Get-Location</div><div class=\"line\" id=\"LC24\"><br /></div><div class=\"line\" id=\"LC25\"><span class=\"c\"># 1. </span></div><div class=\"line\" id=\"LC26\">Start-Process <span class=\"nv\">$enlistmentcmd</span> -ArgumentList <span class=\"o\">(</span><span class=\"nv\">$enlistmentcmdargs</span> + <span class=\"s2\">&quot;&amp;sd sync&quot;</span><span class=\"o\">)</span> -Wait</div><div class=\"line\" id=\"LC27\"><br /></div><div class=\"line\" id=\"LC28\"><span class=\"c\"># 2.</span></div><div class=\"line\" id=\"LC29\">Start-Process <span class=\"nv\">$enlistmentcmd</span> -ArgumentList <span class=\"o\">(</span><span class=\"nv\">$enlistmentcmdargs</span> + <span class=\"s2\">&quot;&amp;cd private/source/wcf&amp;&quot;</span> + <span class=\"nv\">$bcca</span><span class=\"o\">)</span> -Wait</div><div class=\"line\" id=\"LC30\"><br /></div><div class=\"line\" id=\"LC31\"><span class=\"c\"># 3.</span></div><div class=\"line\" id=\"LC32\">Start-Process <span class=\"nv\">$enlistmentcmd</span> -ArgumentList <span class=\"o\">(</span><span class=\"nv\">$enlistmentcmdargs</span> + <span class=\"s2\">&quot;&amp;cd private/source/common/microsoft.server.common&amp;&quot;</span> + <span class=\"nv\">$bcca</span><span class=\"o\">)</span> -Wait</div><div class=\"line\" id=\"LC33\"><br /></div><div class=\"line\" id=\"LC34\"><span class=\"c\"># 4.</span></div><div class=\"line\" id=\"LC35\">Start-Process <span class=\"nv\">$enlistmentcmd</span> -ArgumentList <span class=\"o\">(</span><span class=\"nv\">$enlistmentcmdargs</span> + <span class=\"s2\">&quot;&amp;cd private/cit/wcf&amp;&quot;</span> + <span class=\"nv\">$bcca</span><span class=\"o\">)</span> -Wait</div><div class=\"line\" id=\"LC36\"><br /></div><div class=\"line\" id=\"LC37\"><span class=\"c\"># 5.</span></div><div class=\"line\" id=\"LC38\">Start-Process <span class=\"nv\">$enlistmentcmd</span> -ArgumentList <span class=\"o\">(</span><span class=\"nv\">$enlistmentcmdargs</span> + <span class=\"s2\">&quot;&amp;cd private/testcommon&amp;&quot;</span> + <span class=\"nv\">$bcca</span><span class=\"o\">)</span> -Wait</div><div class=\"line\" id=\"LC39\"><br /></div><div class=\"line\" id=\"LC40\">Set-Location <span class=\"nv\">$currentpath</span></div><div class=\"line\" id=\"LC41\"><br /></div><div class=\"line\" id=\"LC42\"><span class=\"c\">#6. (assuming the build is clean) todo: add error handling here</span></div><div class=\"line\" id=\"LC43\"><br /></div><div class=\"line\" id=\"LC44\"><span class=\"c\"># 7.</span></div><div class=\"line\" id=\"LC45\">hg clone <span class=\"nv\">$hgremote</span> <span class=\"nv\">$hgclonepath</span></div><div class=\"line\" id=\"LC46\"><br /></div><div class=\"line\" id=\"LC47\"><span class=\"c\"># 8.</span></div><div class=\"line\" id=\"LC48\">Get-ChildItem <span class=\"nv\">$hgsrc</span> | Remove-Item -Recurse</div><div class=\"line\" id=\"LC49\"><br /></div><div class=\"line\" id=\"LC50\"><span class=\"c\"># 9.</span></div><div class=\"line\" id=\"LC51\">Get-ChildItem <span class=\"nv\">$afwcfsource</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC52\">&nbsp;&nbsp;&nbsp;&nbsp;| where<span class=\"o\">{</span><span class=\"nv\">$_</span>.Name -notlike <span class=\"s2\">&quot;Tools*&quot;</span> -and <span class=\"nv\">$_</span>.Name -notlike <span class=\"s2\">&quot;*Resharper*&quot;</span><span class=\"o\">}</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC53\">&nbsp;&nbsp;&nbsp;&nbsp;| Copy-Item -Destination <span class=\"nv\">$hgsrc</span> -Recurse</div><div class=\"line\" id=\"LC54\"><br /></div><div class=\"line\" id=\"LC55\">Copy-Item -Path <span class=\"nv\">$afcommonsource</span> -Destination <span class=\"nv\">$hgsrc</span> -Recurse</div><div class=\"line\" id=\"LC56\"><br /></div><div class=\"line\" id=\"LC57\"><span class=\"c\"># 10.</span></div><div class=\"line\" id=\"LC58\">Get-ChildItem <span class=\"nv\">$hgtest</span> | Remove-Item -Recurse -Force</div><div class=\"line\" id=\"LC59\"><br /></div><div class=\"line\" id=\"LC60\"><span class=\"c\"># 11.</span></div><div class=\"line\" id=\"LC61\">Get-ChildItem <span class=\"nv\">$afwcftestsource</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC62\">&nbsp;&nbsp;&nbsp;&nbsp;| where<span class=\"o\">{</span><span class=\"nv\">$_</span>.Name -notlike <span class=\"s2\">&quot;Tools*&quot;</span> -and <span class=\"nv\">$_</span>.Name -notlike <span class=\"s2\">&quot;*Resharper*&quot;</span><span class=\"o\">}</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC63\">&nbsp;&nbsp;&nbsp;&nbsp;| Copy-Item -Destination <span class=\"nv\">$hgtest</span> -Recurse</div><div class=\"line\" id=\"LC64\"><br /></div><div class=\"line\" id=\"LC65\">Copy-Item -Path <span class=\"o\">(</span><span class=\"nv\">$afcommontest</span> + <span class=\"s2\">&quot;\\Common&quot;</span><span class=\"o\">)</span> -Destination <span class=\"o\">(</span><span class=\"nv\">$hgtest</span> + <span class=\"s2\">&quot;\\testcommon\\Common&quot;</span><span class=\"o\">)</span> -Recurse</div><div class=\"line\" id=\"LC66\">Copy-Item -Path <span class=\"o\">(</span><span class=\"nv\">$afcommontest</span> + <span class=\"s2\">&quot;\\WCF&quot;</span><span class=\"o\">)</span> -Destination <span class=\"o\">(</span><span class=\"nv\">$hgtest</span> + <span class=\"s2\">&quot;\\testcommon\\WCF&quot;</span><span class=\"o\">)</span> -Recurse</div><div class=\"line\" id=\"LC67\"><br /></div><div class=\"line\" id=\"LC68\"><span class=\"c\"># 12.</span></div><div class=\"line\" id=\"LC69\"><span class=\"c\"># may be able to do this without the temp file hop (http://stackoverflow.com/questions/750449/converting-xml-from-utf-16-to-utf-8-using-powershell)</span></div><div class=\"line\" id=\"LC70\"><span class=\"c\"># -&gt; nope, tried and it still fails with an insufficient access error</span></div><div class=\"line\" id=\"LC71\"><span class=\"nv\">$tempfilesuffix</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;_TEMP&quot;</span></div><div class=\"line\" id=\"LC72\"><br /></div><div class=\"line\" id=\"LC73\"><span class=\"nv\">$projectfiles</span> <span class=\"o\">=</span> Get-ChildItem <span class=\"nv\">$hgsrc</span> -Recurse -Include *.csproj</div><div class=\"line\" id=\"LC74\"><span class=\"nv\">$projectfiles</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC75\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span> <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$_</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC76\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Convert-Xml -XsltPath .<span class=\"se\">\\E</span>nlistedCITProj2CodePlexCITProj.xslt <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC77\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Out-File <span class=\"o\">(</span><span class=\"nv\">$filename</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> <span class=\"o\">}</span></div><div class=\"line\" id=\"LC78\"><br /></div><div class=\"line\" id=\"LC79\"><span class=\"nv\">$projectfiles</span> | Remove-Item -Force</div><div class=\"line\" id=\"LC80\"><br /></div><div class=\"line\" id=\"LC81\">Get-ChildItem <span class=\"nv\">$hgsrc</span> -Recurse -Include <span class=\"o\">(</span><span class=\"s1\">'*.csproj'</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> | <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC82\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{</span> <span class=\"nv\">$filepath</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.Name; <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC83\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC84\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC85\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename</span>.Substring<span class=\"o\">(</span>0, <span class=\"nv\">$filename</span>.LastIndexOf<span class=\"o\">(</span><span class=\"nv\">$tempfilesuffix</span><span class=\"o\">))</span> <span class=\"o\">}</span></div><div class=\"line\" id=\"LC86\"><br /></div><div class=\"line\" id=\"LC87\"><span class=\"nv\">$testprojectfiles</span> <span class=\"o\">=</span> Get-ChildItem <span class=\"nv\">$hgtest</span> -Recurse -Include *.csproj</div><div class=\"line\" id=\"LC88\"><span class=\"nv\">$testprojectfiles</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC89\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span> <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$_</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC90\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Convert-Xml -XsltPath .<span class=\"se\">\\E</span>nlistedCITProj2CodePlexCITProj.xslt <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC91\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Out-File <span class=\"o\">(</span><span class=\"nv\">$filename</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> <span class=\"o\">}</span></div><div class=\"line\" id=\"LC92\"><br /></div><div class=\"line\" id=\"LC93\"><span class=\"nv\">$testprojectfiles</span> | Remove-Item -Force</div><div class=\"line\" id=\"LC94\"><br /></div><div class=\"line\" id=\"LC95\">Get-ChildItem <span class=\"nv\">$hgtest</span> -Recurse -Include <span class=\"o\">(</span><span class=\"s1\">'*.csproj'</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> | <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC96\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{</span> <span class=\"nv\">$filepath</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.Name; <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC97\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC98\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC99\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename</span>.Substring<span class=\"o\">(</span>0, <span class=\"nv\">$filename</span>.LastIndexOf<span class=\"o\">(</span><span class=\"nv\">$tempfilesuffix</span><span class=\"o\">))</span> <span class=\"o\">}</span>        </div><div class=\"line\" id=\"LC100\"><br /></div><div class=\"line\" id=\"LC101\"><span class=\"c\"># 13.</span></div><div class=\"line\" id=\"LC102\"><span class=\"nv\">$regex</span> <span class=\"o\">=</span> <span class=\"s1\">'(\\[assembly:\\s?InternalsVisibleTo\\(\\&quot;[\\w\\d\\.]+)\\s?,\\s?.+'</span></div><div class=\"line\" id=\"LC103\"><br /></div><div class=\"line\" id=\"LC104\"><span class=\"nv\">$assemblyInfoFiles</span> <span class=\"o\">=</span> Get-ChildItem <span class=\"nv\">$hgsrc</span> -Recurse | where<span class=\"o\">{</span><span class=\"nv\">$_</span>.Name -eq <span class=\"s2\">&quot;AssemblyInfo.cs&quot;</span><span class=\"o\">}</span></div><div class=\"line\" id=\"LC105\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\"line\" id=\"LC106\"><span class=\"nv\">$assemblyInfoFiles</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC107\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span> <span class=\"nv\">$filename</span> <span class=\"o\">=</span> <span class=\"nv\">$_</span>.FullName; <span class=\"o\">(</span>Get-Content <span class=\"nv\">$filename</span><span class=\"o\">)</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC108\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span><span class=\"nv\">$_</span> -replace <span class=\"nv\">$regex</span>, <span class=\"s1\">'$1&quot;)]'</span><span class=\"o\">}</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC109\">&nbsp;&nbsp;&nbsp;&nbsp;| Set-Content <span class=\"o\">(</span><span class=\"nv\">$filename</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)}</span></div><div class=\"line\" id=\"LC110\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\"line\" id=\"LC111\"><span class=\"nv\">$assemblyInfoFiles</span> | Remove-Item -Force</div><div class=\"line\" id=\"LC112\"><br /></div><div class=\"line\" id=\"LC113\">Get-ChildItem <span class=\"nv\">$hgsrc</span> -Recurse -Include <span class=\"o\">(</span><span class=\"s1\">'AssemblyInfo.cs'</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> | <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC114\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{</span> <span class=\"nv\">$filepath</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.Name; <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC115\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC116\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC117\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename</span>.Substring<span class=\"o\">(</span>0, <span class=\"nv\">$filename</span>.LastIndexOf<span class=\"o\">(</span><span class=\"nv\">$tempfilesuffix</span><span class=\"o\">))</span> <span class=\"o\">}</span>    </div><div class=\"line\" id=\"LC118\"><br /></div><div class=\"line\" id=\"LC119\"><span class=\"c\"># 14.</span></div><div class=\"line\" id=\"LC120\"><span class=\"nv\">$configregex</span> <span class=\"o\">=</span> <span class=\"s1\">'\\&quot;([\\w\\.\\d]+\\s*,\\s*[\\w\\.\\d]+)[,\\w\\s\\d\\.=]+\\&quot;'</span></div><div class=\"line\" id=\"LC121\"><br /></div><div class=\"line\" id=\"LC122\"><span class=\"nv\">$testconfigpath</span> <span class=\"o\">=</span> <span class=\"nv\">$hgtest</span> + <span class=\"s2\">&quot;\\Microsoft.ApplicationServer.Http\\Unit\\ConfigFiles&quot;</span></div><div class=\"line\" id=\"LC123\"><span class=\"nv\">$testconfigfiles</span> <span class=\"o\">=</span> Get-ChildItem <span class=\"nv\">$testconfigpath</span> -Recurse | where<span class=\"o\">{</span><span class=\"nv\">$_</span>.Name -like <span class=\"s2\">&quot;*.config&quot;</span><span class=\"o\">}</span></div><div class=\"line\" id=\"LC124\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\"line\" id=\"LC125\"><span class=\"nv\">$testconfigfiles</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC126\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span> <span class=\"nv\">$filename</span> <span class=\"o\">=</span> <span class=\"nv\">$_</span>.FullName; <span class=\"o\">(</span>Get-Content <span class=\"nv\">$filename</span><span class=\"o\">)</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC127\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\"o\">{</span><span class=\"nv\">$_</span> -replace <span class=\"nv\">$configregex</span>, <span class=\"s1\">'&quot;$1&quot;'</span><span class=\"o\">}</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC128\">&nbsp;&nbsp;&nbsp;&nbsp;| Set-Content <span class=\"o\">(</span><span class=\"nv\">$filename</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)}</span></div><div class=\"line\" id=\"LC129\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\"line\" id=\"LC130\"><span class=\"nv\">$testconfigfiles</span> | Remove-Item -Force</div><div class=\"line\" id=\"LC131\"><br /></div><div class=\"line\" id=\"LC132\">Get-ChildItem <span class=\"nv\">$testconfigpath</span> -Recurse -Include <span class=\"o\">(</span><span class=\"s1\">'*.config'</span> + <span class=\"nv\">$tempfilesuffix</span><span class=\"o\">)</span> | <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC133\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\"o\">{</span> <span class=\"nv\">$filepath</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.FullName; <span class=\"nv\">$filename</span><span class=\"o\">=</span><span class=\"nv\">$_</span>.Name; <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC134\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC135\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\"nv\">$filepath</span> <span class=\"sb\">`</span></div><div class=\"line\" id=\"LC136\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\"nv\">$filename</span>.Substring<span class=\"o\">(</span>0, <span class=\"nv\">$filename</span>.LastIndexOf<span class=\"o\">(</span><span class=\"nv\">$tempfilesuffix</span><span class=\"o\">))</span> <span class=\"o\">}</span> </div></pre></div>\n            \n          </div>\n\n          <div class=\"gist-meta\">\n            <a href=\"https://gist.github.com/raw/1209919/2f8c6ae8e8a416017d9fc130f44555b3b19a3b22/gistfile1.sh\" style=\"float: right;\">view raw</a>\n            <a href=\"https://gist.github.com/1209919#file_gistfile1.sh\" style=\"float: right; margin-right: 10px; color: #666;\">gistfile1.sh</a>\n            <a href=\"https://gist.github.com/1209919\">This Gist</a> brought to you by <a href=\"http://github.com\">GitHub</a>.\n          </div>\n        </div>\n      \n    \n  \n</div>\n</noscript>\n<p>Additionally, a big part of the workflow is transforming project files to remove any dependencies on internal libraries and tools.&nbsp; For this workflow task, XSLT was the right fit \u2013 and that XSLT looks like this:</p>\n<noscript><div class=\"gist\" id=\"gist-1209930\">\n  \n  \n    \n      \n        \n        \n\n        <div class=\"gist-file\">\n          <div class=\"gist-data gist-syntax\">\n            \n            \n            \n              <div class=\"highlight\"><pre><div class=\"line\" id=\"LC1\"><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></div><div class=\"line\" id=\"LC2\"><span class=\"nt\">&lt;xsl:stylesheet</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.0&quot;</span></div><div class=\"line\" id=\"LC3\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"na\">xmlns:xsl=</span><span class=\"s\">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span></div><div class=\"line\" id=\"LC4\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"na\">xmlns:msxsl=</span><span class=\"s\">&quot;urn:schemas-microsoft-com:xslt&quot;</span> <span class=\"na\">exclude-result-prefixes=</span><span class=\"s\">&quot;msxsl b&quot;</span></div><div class=\"line\" id=\"LC5\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"na\">xmlns:b=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC6\"><br /></div><div class=\"line\" id=\"LC7\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:output</span> <span class=\"na\">method=</span><span class=\"s\">&quot;xml&quot;</span> <span class=\"na\">indent=</span><span class=\"s\">&quot;yes&quot;</span> <span class=\"na\">encoding=</span><span class=\"s\">&quot;UTF-8&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC8\"><br /></div><div class=\"line\" id=\"LC9\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;/b:Project&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC10\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:copy&gt;</span></div><div class=\"line\" id=\"LC11\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates</span> <span class=\"na\">select=</span><span class=\"s\">&quot;@*&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC12\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:PropertyGroup&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC13\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:ItemGroup&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC14\"><br /></div><div class=\"line\" id=\"LC15\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"c\">&lt;!-- Add the import for common C# build targets --&gt;</span></div><div class=\"line\" id=\"LC16\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Import&quot;</span> <span class=\"na\">namespace=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC17\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Project&quot;</span><span class=\"nt\">&gt;</span>$(MSBuildToolsPath)\\Microsoft.CSharp.targets<span class=\"nt\">&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC18\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:element&gt;</span></div><div class=\"line\" id=\"LC19\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:copy&gt;</span></div><div class=\"line\" id=\"LC20\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC21\"><br /></div><div class=\"line\" id=\"LC22\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:PropertyGroup[./b:ProjectGuid]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC23\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;PropertyGroup</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC24\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;HgRootDirectory&gt;</span>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), '.hgignore'))<span class=\"nt\">&lt;/HgRootDirectory&gt;</span></div><div class=\"line\" id=\"LC25\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Configuration</span> <span class=\"na\">Condition=</span><span class=\"s\">&quot; '$(Configuration)' == '' &quot;</span><span class=\"nt\">&gt;</span>Debug<span class=\"nt\">&lt;/Configuration&gt;</span></div><div class=\"line\" id=\"LC26\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Platform</span> <span class=\"na\">Condition=</span><span class=\"s\">&quot; '$(Platform)' == '' &quot;</span><span class=\"nt\">&gt;</span>AnyCPU<span class=\"nt\">&lt;/Platform&gt;</span></div><div class=\"line\" id=\"LC27\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProductVersion&gt;</span>8.0.30703<span class=\"nt\">&lt;/ProductVersion&gt;</span></div><div class=\"line\" id=\"LC28\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;SchemaVersion&gt;</span>2.0<span class=\"nt\">&lt;/SchemaVersion&gt;</span></div><div class=\"line\" id=\"LC29\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if</span> <span class=\"na\">test=</span><span class=\"s\">&quot;b:AllowUnsafeBlocks&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC30\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AllowUnsafeBlocks&gt;</span></div><div class=\"line\" id=\"LC31\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:AllowUnsafeBlocks&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC32\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/AllowUnsafeBlocks&gt;</span></div><div class=\"line\" id=\"LC33\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:if&gt;</span></div><div class=\"line\" id=\"LC34\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectGuid&gt;</span></div><div class=\"line\" id=\"LC35\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:ProjectGuid&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC36\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/ProjectGuid&gt;</span></div><div class=\"line\" id=\"LC37\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;OutputType&gt;</span></div><div class=\"line\" id=\"LC38\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:OutputType&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC39\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/OutputType&gt;</span></div><div class=\"line\" id=\"LC40\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AppDesignerFolder&gt;</span></div><div class=\"line\" id=\"LC41\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:AppDesignerFolder&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC42\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/AppDesignerFolder&gt;</span></div><div class=\"line\" id=\"LC43\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;RootNamespace&gt;</span></div><div class=\"line\" id=\"LC44\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:RootNamespace&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC45\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/RootNamespace&gt;</span></div><div class=\"line\" id=\"LC46\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AssemblyName&gt;</span></div><div class=\"line\" id=\"LC47\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:AssemblyName&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC48\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/AssemblyName&gt;</span></div><div class=\"line\" id=\"LC49\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if</span> <span class=\"na\">test=</span><span class=\"s\">&quot;b:ProjectTypeGuids&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC50\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectTypeGuids&gt;</span></div><div class=\"line\" id=\"LC51\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:ProjectTypeGuids&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC52\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/ProjectTypeGuids&gt;</span></div><div class=\"line\" id=\"LC53\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:if&gt;</span></div><div class=\"line\" id=\"LC54\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if</span> <span class=\"na\">test=</span><span class=\"s\">&quot;b:AssemblyClsCompliant&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC55\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;AssemblyClsCompliant&gt;</span></div><div class=\"line\" id=\"LC56\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:AssemblyClsCompliant&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC57\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/AssemblyClsCompliant&gt;</span></div><div class=\"line\" id=\"LC58\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:if&gt;</span></div><div class=\"line\" id=\"LC59\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;TargetFrameworkVersion&gt;</span>v4.0<span class=\"nt\">&lt;/TargetFrameworkVersion&gt;</span></div><div class=\"line\" id=\"LC60\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;FileAlignment&gt;</span>512<span class=\"nt\">&lt;/FileAlignment&gt;</span></div><div class=\"line\" id=\"LC61\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/PropertyGroup&gt;</span></div><div class=\"line\" id=\"LC62\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;PropertyGroup</span> <span class=\"na\">Condition=</span><span class=\"s\">&quot; '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' &quot;</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC63\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DebugSymbols&gt;</span>true<span class=\"nt\">&lt;/DebugSymbols&gt;</span></div><div class=\"line\" id=\"LC64\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DebugType&gt;</span>full<span class=\"nt\">&lt;/DebugType&gt;</span></div><div class=\"line\" id=\"LC65\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Optimize&gt;</span>false<span class=\"nt\">&lt;/Optimize&gt;</span></div><div class=\"line\" id=\"LC66\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;OutputPath&gt;</span>bin\\Debug\\<span class=\"nt\">&lt;/OutputPath&gt;</span></div><div class=\"line\" id=\"LC67\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DefineConstants&gt;</span>DEBUG;TRACE;NET_4<span class=\"nt\">&lt;/DefineConstants&gt;</span></div><div class=\"line\" id=\"LC68\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ErrorReport&gt;</span>prompt<span class=\"nt\">&lt;/ErrorReport&gt;</span></div><div class=\"line\" id=\"LC69\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;WarningLevel&gt;</span>4<span class=\"nt\">&lt;/WarningLevel&gt;</span></div><div class=\"line\" id=\"LC70\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/PropertyGroup&gt;</span></div><div class=\"line\" id=\"LC71\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;PropertyGroup</span> <span class=\"na\">Condition=</span><span class=\"s\">&quot; '$(Configuration)|$(Platform)' == 'Release|AnyCPU' &quot;</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC72\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DebugType&gt;</span>pdbonly<span class=\"nt\">&lt;/DebugType&gt;</span></div><div class=\"line\" id=\"LC73\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Optimize&gt;</span>true<span class=\"nt\">&lt;/Optimize&gt;</span></div><div class=\"line\" id=\"LC74\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;OutputPath&gt;</span>bin\\Release\\<span class=\"nt\">&lt;/OutputPath&gt;</span></div><div class=\"line\" id=\"LC75\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DefineConstants&gt;</span>TRACE;NET_4<span class=\"nt\">&lt;/DefineConstants&gt;</span></div><div class=\"line\" id=\"LC76\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ErrorReport&gt;</span>prompt<span class=\"nt\">&lt;/ErrorReport&gt;</span></div><div class=\"line\" id=\"LC77\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;WarningLevel&gt;</span>4<span class=\"nt\">&lt;/WarningLevel&gt;</span></div><div class=\"line\" id=\"LC78\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;DocumentationFile&gt;</span>bin\\Release\\Microsoft.ApplicationServer.Http.XML<span class=\"nt\">&lt;/DocumentationFile&gt;</span></div><div class=\"line\" id=\"LC79\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/PropertyGroup&gt;</span></div><div class=\"line\" id=\"LC80\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC81\"><br /></div><div class=\"line\" id=\"LC82\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Assembly reference patterns--&gt;</span></div><div class=\"line\" id=\"LC83\">&nbsp;&nbsp;</div><div class=\"line\" id=\"LC84\">&nbsp;&nbsp;<span class=\"c\">&lt;!--GAC (assembly name) references--&gt;</span></div><div class=\"line\" id=\"LC85\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:Reference[not(contains(@Include, '\\'))]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC86\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC87\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Include&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC88\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;@Include&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC89\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC90\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:if</span> <span class=\"na\">test=</span><span class=\"s\">&quot;b:HintPath&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC91\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;HintPath&gt;&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:HintPath&quot;</span><span class=\"nt\">/&gt;&lt;/HintPath&gt;</span></div><div class=\"line\" id=\"LC92\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:if&gt;</span></div><div class=\"line\" id=\"LC93\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Reference&gt;</span></div><div class=\"line\" id=\"LC94\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC95\">&nbsp;&nbsp;</div><div class=\"line\" id=\"LC96\">&nbsp;&nbsp;<span class=\"c\">&lt;!--.NET 4.0 framework assemblies--&gt;</span></div><div class=\"line\" id=\"LC97\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:Reference[contains(@Include,'\\public\\ext\\sdk\\CLR\\netfx40rtm\\')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC98\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC99\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Include&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC100\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;substring-after(@Include, '\\public\\ext\\sdk\\CLR\\netfx40rtm\\')&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC101\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC102\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Reference&gt;</span></div><div class=\"line\" id=\"LC103\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC104\"><br /></div><div class=\"line\" id=\"LC105\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Visual Studio 2010 SDK assemblies--&gt;</span></div><div class=\"line\" id=\"LC106\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:Reference[contains(@Include,'$(INETROOT)\\public\\ext\\VisualStudio\\VS10RTM\\PublicAssemblies\\')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC107\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC108\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Include&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC109\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;substring-after(@Include, '$(INETROOT)\\public\\ext\\VisualStudio\\VS10RTM\\PublicAssemblies\\')&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC110\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC111\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Reference&gt;</span></div><div class=\"line\" id=\"LC112\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC113\"><br /></div><div class=\"line\" id=\"LC114\">&nbsp;&nbsp;<span class=\"c\">&lt;!--ODataLib --&gt;</span></div><div class=\"line\" id=\"LC115\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:Reference[contains(@Include, 'System.Data.OData.dll')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC116\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Reference</span> <span class=\"na\">Include=</span><span class=\"s\">&quot;$(HgRootDirectory)\\Lib\\Odata\\System.Data.OData.dll&quot;</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC117\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC118\"><br /></div><div class=\"line\" id=\"LC119\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Unrecognized assembly reference--&gt;</span></div><div class=\"line\" id=\"LC120\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:Reference&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC121\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;</span>Reference to an unrecognized assembly: <span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;./@Include&quot;</span><span class=\"nt\">/&gt;&lt;/xsl:comment&gt;</span></div><div class=\"line\" id=\"LC122\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC123\"><br /></div><div class=\"line\" id=\"LC124\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Project reference patterns--&gt;</span></div><div class=\"line\" id=\"LC125\">&nbsp;&nbsp;</div><div class=\"line\" id=\"LC126\">&nbsp;&nbsp;<span class=\"c\">&lt;!--ODataLib project reference--&gt;</span></div><div class=\"line\" id=\"LC127\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:ProjectReference[./b:Name='ODataLib']&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC128\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;</span>commenting out odatalib project reference<span class=\"nt\">&lt;/xsl:comment&gt;</span></div><div class=\"line\" id=\"LC129\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC130\"><br /></div><div class=\"line\" id=\"LC131\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Product code project references --&gt;</span></div><div class=\"line\" id=\"LC132\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:ProjectReference[contains(@Include, '\\source\\') or contains(@Include, '$(WCFSource)')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC133\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectReference</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC134\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Include&quot;</span><span class=\"nt\">&gt;</span>$(HgRootDirectory)\\WCFWebApi\\Http\\Src\\<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Name&quot;</span><span class=\"nt\">/&gt;</span>\\<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Name&quot;</span><span class=\"nt\">/&gt;</span>.csproj<span class=\"nt\">&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC135\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Project&gt;</span></div><div class=\"line\" id=\"LC136\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Project&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC137\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Project&gt;</span></div><div class=\"line\" id=\"LC138\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Name&gt;</span></div><div class=\"line\" id=\"LC139\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Name&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC140\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Name&gt;</span></div><div class=\"line\" id=\"LC141\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/ProjectReference&gt;</span></div><div class=\"line\" id=\"LC142\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC143\">&nbsp;&nbsp;</div><div class=\"line\" id=\"LC144\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Testcommon project references --&gt;</span></div><div class=\"line\" id=\"LC145\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:ProjectReference[contains(@Include, '\\testcommon\\')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC146\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;ProjectReference</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC147\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Include&quot;</span><span class=\"nt\">&gt;</span>$(HgRootDirectory)\\WCFWebApi\\Http\\Test\\testcommon\\<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;substring-after(@Include, '\\testcommon\\')&quot;</span> <span class=\"nt\">/&gt;&lt;/xsl:attribute&gt;</span></div><div class=\"line\" id=\"LC148\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Project&gt;</span></div><div class=\"line\" id=\"LC149\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Project&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC150\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Project&gt;</span></div><div class=\"line\" id=\"LC151\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;Name&gt;</span></div><div class=\"line\" id=\"LC152\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;b:Name&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC153\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/Name&gt;</span></div><div class=\"line\" id=\"LC154\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/ProjectReference&gt;</span></div><div class=\"line\" id=\"LC155\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC156\">&nbsp;&nbsp;</div><div class=\"line\" id=\"LC157\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Internal Moles project references - ignore --&gt;</span></div><div class=\"line\" id=\"LC158\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:ProjectReference[contains(./b:Name, '.Moles')]&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC159\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;</span>Reference to internal Moles project: <span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;@Include&quot;</span><span class=\"nt\">/&gt;&lt;/xsl:comment&gt;</span></div><div class=\"line\" id=\"LC160\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC161\"><br /></div><div class=\"line\" id=\"LC162\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Moles assembly includes--&gt;</span></div><div class=\"line\" id=\"LC163\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;b:ItemGroup/b:Moles&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC164\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:comment&gt;</span>Temporarily removing ItemGroup/<span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">&quot;@Include&quot;</span><span class=\"nt\">/&gt;</span> reference<span class=\"nt\">&lt;/xsl:comment&gt;</span></div><div class=\"line\" id=\"LC165\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC166\"><br /></div><div class=\"line\" id=\"LC167\">&nbsp;&nbsp;<span class=\"c\">&lt;!--Identity xform--&gt;</span></div><div class=\"line\" id=\"LC168\">&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">&quot;@* | node()&quot;</span><span class=\"nt\">&gt;</span></div><div class=\"line\" id=\"LC169\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:copy&gt;</span></div><div class=\"line\" id=\"LC170\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;xsl:apply-templates</span> <span class=\"na\">select=</span><span class=\"s\">&quot;@* | node()&quot;</span><span class=\"nt\">/&gt;</span></div><div class=\"line\" id=\"LC171\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:copy&gt;</span></div><div class=\"line\" id=\"LC172\">&nbsp;&nbsp;<span class=\"nt\">&lt;/xsl:template&gt;</span></div><div class=\"line\" id=\"LC173\"><span class=\"nt\">&lt;/xsl:stylesheet&gt;</span></div></pre></div>\n            \n          </div>\n\n          <div class=\"gist-meta\">\n            <a href=\"https://gist.github.com/raw/1209930/e94df9b3279f606166a3d7b7375c9526d8ed9f37/gistfile1.xml\" style=\"float: right;\">view raw</a>\n            <a href=\"https://gist.github.com/1209930#file_gistfile1.xml\" style=\"float: right; margin-right: 10px; color: #666;\">gistfile1.xml</a>\n            <a href=\"https://gist.github.com/1209930\">This Gist</a> brought to you by <a href=\"http://github.com\">GitHub</a>.\n          </div>\n        </div>\n      \n    \n  \n</div>\n</noscript>\n<p>I hope that this proves helpful if you ever find yourself in the position where you have to regularly keep code in sync between 2 different repositories (or even the same repositories with different folder structures).&nbsp; And like I said, I welcome feedback on how I can improve my PowerShell.</p>\n<img height=\"1\" src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/r8j_Lvbp0Uk\" width=\"1\" />", "summary": "If you\u2019ve been following wcf.codeplex.com, you\u2019ll notice that we\u2019ve had a flurry of activity over the last couple of weeks, culminating in the release of Web API preview 5.&#160; If you\u2019ve been following our Codeplex repository for a while, you\u2019ll&#160;&#8230; <a href=\"http://codebetter.com/howarddi", "id": "http://codebetter.com/howarddierking/2011/09/11/one-of-the-small-costs-of-transparency/", "categories": ["Howard Dierking"], "metadata": {"guid": "d73fbf88-5f1c-46ab-b18e-c6409e14742a", "likes": 0, "is_published": true}}, {"author": "Scott Wilson (noreply@blogger.com)", "url": "http://pixelmaniacuk.blogspot.com/2011/09/september-update.html", "title": "September Update", "datetime": "2011-09-11T18:23:26.453000", "html": "Hey guys! Again, it's been a long time since&nbsp;I've done a blog update!<br /><br />So what's new?<br /><br />I've continued to work heavily with Spiral Game Studios and been making a massive impact on their game \"Orion: Prelude\" and have been offered a studio job. Here is some recent progress of the game!<br /><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">Note that Spiral Games have recently been at GamesCom and PAX! Was very busy times for our CEO..</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">I have now moved back to England to finish my university masters degree so hopefully that goes smooth along with my work with Spiral.. My main masters project will be based on creating a customisable character creation system for UE3 and I will post updates later in the year on that!</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">Game creator \"Dan Da Rocha has asked me to create the outro cut scene for the up-comming puzzle game Q.U.B.E, so I also look forward to that =)</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">That's it really! I also have two new blogs, one on the spiral game studios forums and one on the game dev forum! Links are below..</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><a href=\"http://spiralforums.com/viewtopic.php?f=3&amp;t=1876\">http://spiralforums.com/viewtopic.php?f=3&amp;t=1876</a></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><a href=\"http://www.games-dev.com/forum/topic/2498-scotts-tech-blog/page__fromsearch__1\">http://www.games-dev.com/forum/topic/2498-scotts-tech-blog/page__fromsearch__1</a></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https://blogger.googleusercontent.com/tracker/4062822994372279709-8640331304899460507?l=pixelmaniacuk.blogspot.com\" width=\"1\" /></div>", "summary": "Hey guys! Again, it's been a long time since&nbsp;I've done a blog update!<br /><br />So what's new?<br /><br />I've continued to work heavily with Spiral Game Studios and been making a massive impact on their game \"Orion: Prelude\" and have been offered a studio job. Here is some recent progress of ", "id": "tag:blogger.com,1999:blog-4062822994372279709.post-8640331304899460507", "categories": [], "metadata": {"guid": "a6845ad6-4f93-4bed-aca1-f1b1cdb5e60b", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/11/seamless-tiling-filter/", "title": "Seamless tiling filter", "datetime": "2011-09-11T16:19:32", "html": "<p>I made a filter for Filter Forge which makes an image seamlessly tiling.</p>\n<table align=\"center\" border=\"0\">\n<tbody>\n<tr>\n<td>\n<div class=\"wp-caption aligncenter\" style=\"width: 170px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04a.jpg\" rel=\"prettyphoto[1515]\" title=\"example04a.jpg\"><img alt=\"\" class=\"thumb  \" height=\"160\" id=\"thumb755\" src=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04a.jpg?22742010\" width=\"160\" /></a>\n<p class=\"wp-caption-text\">Original</p>\n</div>\n</td>\n<td>\n<div class=\"wp-caption aligncenter\" style=\"width: 170px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04b.jpg\" rel=\"prettyphoto[1515]\" title=\"example04b.jpg\"><img alt=\"\" class=\"thumb \" height=\"160\" id=\"thumb756\" src=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04b.jpg\" width=\"160\" /></a>\n<p class=\"wp-caption-text\">Seams</p>\n</div>\n</td>\n<td>\n<div class=\"wp-caption aligncenter\" style=\"width: 170px;\"><a href=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04c.jpg\" rel=\"prettyphoto[1515]\" title=\"example04c.jpg\"><img alt=\"\" class=\"thumb \" height=\"160\" id=\"thumb757\" src=\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04c.jpg\" width=\"160\" /></a>\n<p class=\"wp-caption-text\">Fixed seams</p>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>It can be downloaded from <a href=\"http://www.filterforge.com/filters/9908.html\" target=\"_blank\">here</a> while the discussion thread is <a href=\"http://www.filterforge.com/forum/read.php?FID=11&amp;TID=8785&amp;MID=95230#message95230\" target=\"_blank\">here</a>. The explanation of the filter parameters can be found in the <a href=\"http://www.zspline.net/blog/the-seamless-tiling-filter/\">Seamless tiling filter reference</a> article.<!-- PHP 5.x --></p>", "summary": "I made a filter for Filter Forge which makes an image seamlessly tiling. It can be downloaded from here while the discussion thread is here. The explanation of the filter parameters can be found in the Seamless tiling filter reference article.", "id": "http://www.zspline.net/blog/?p=1515", "categories": [], "metadata": {"guid": "f64394f4-67d7-4d42-a0ec-53c2bd621dcf", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/10071612426", "title": "\"When a man walks into a room, he brings his whole life with him. He has a million reasons for being...\"", "datetime": "2011-09-11T01:55:21", "html": "\u201cWhen a man walks into a room, he brings his whole life with him. He has a million reasons for being anywhere, just ask him. If you listen, he\u2019ll tell you how he got there. How he forgot where he was going, and that he woke up. If you listen, he\u2019ll tell you about the time he thought he was an angel or dreamt of being perfect. And then he\u2019ll smile with wisdom, content that he realized the world isn\u2019t perfect. We\u2019re flawed, because we want so much more. We\u2019re ruined, because we get these things, and wish for what we had.\u201d<br /><br /> - <em>Don Draper Season 4 Episode 8</em>", "summary": "\u201cWhen a man walks into a room, he brings his whole life with him. He has a million reasons for being anywhere, just ask him. If you listen, he\u2019ll tell you how he got there. How he forgot where he was going, and that he woke up. If you listen, he\u2019ll tell you about the time he thought he was an angel ", "id": "http://shawnkirsch.tumblr.com/post/10071612426", "categories": [], "metadata": {"guid": "29318c31-8d7f-4bf6-be31-1b6a8568b1fb", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/09/08/coast-to-coast-blue-sky-here-i-come/", "title": "Coast to Coast!  Blue Sky here I come!", "datetime": "2011-09-08T18:27:29", "html": "<div class=\"wp-caption aligncenter\" id=\"attachment_2890\" style=\"width: 310px;\"><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup.jpg\" rel=\"lightbox[2889]\"><img alt=\"Scrat Continental Crackup\" class=\"size-medium wp-image-2890 \" height=\"127\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup-300x127.jpg\" title=\"scrat_cont_crackup\" width=\"300\" /></a><p class=\"wp-caption-text\">How I've felt for so long about working in VFX/Anim industry.</p></div>\n<div class=\"wp-caption aligncenter\" id=\"attachment_2891\" style=\"width: 310px;\"><a href=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift.jpg\" rel=\"lightbox[2889]\"><img alt=\"Ice Age: Continental Drift\" class=\"size-medium wp-image-2891 \" height=\"127\" src=\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift-300x127.jpg\" title=\"ice_age_continental_drift\" width=\"300\" /></a><p class=\"wp-caption-text\">My first project</p></div>\n<p>Done! \u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \u00a0It&#8217;s everything I could ask for in an employer and more.</p>\n<p>Don&#8217;t think that it&#8217;s going to stop me from being active on my blog though, quite the opposite! \u00a0Well, maybe the first month or two starting now there will be a pause, but after that it will increase. \u00a0I&#8217;m super excited to learn and share knowledge with people and stay really connected and dedicated to innovating personal and industry wide workflows, tech, and of course animation. \u00a0Technical animation and tech art to be specific is what I&#8217;ll be working on in the coming months, same as usual.</p>\n<p>Thanks to everyone that&#8217;s been involved in the process of landing this, you know who you are! \u00a0I don&#8217;t think they know yet what a valuable asset they just\u00a0acquired but soon they will find out just how serious I am about the work I do and how inspired I can be!</p>\n<div class=\"evernoteSiteMemory\"><a class=\"evernoteSiteMemoryLink\" href=\"\"><img class=\"evernoteSiteMemoryButton\" src=\"http://static.evernote.com/article-clipper-remember.png\" />\n\t\t\t\t</a>\t\t\t\t<div class=\"evernoteSiteMemoryClear\">&nbsp;</div>\n</div>", "summary": "Done! \u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \u00a0It&#8217;s everything I could ask for in an employer and more. Don&#8217;t think that it", "id": "http://www.jonasavrin.com/?p=2889", "categories": ["Jonas Avrin"], "metadata": {"guid": "af6033e3-25e1-4153-9754-83f7548bd986", "likes": 0, "is_published": true}}]"
09-25 15:16 SocketClient INFO     Returning(as str): '[{"author": "johnvpetersen", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/RTZI-UVm0y0/", "title": "Thanks to CodeBetter for having me aboard!!", "datetime": "2011-09-15T16:46:20", "html": "<p>I have moved my blog from Los Techies and am looking forward to participating in the CodeBetter Community! I&#8217;ve long been a follower of CodeBetter and have cited many posts here in my never ending quest to be a better software developer. Recently, I joined Scott Hanselman, Jon Galloway and Peter Mourfield as part of the core team that maintains the NerdDinner Project. As part of those efforts, we were graciously invited by Hadi Hariri to host the project on CodeBetter&#8217;s TeamCity CI server.</p>\\n<p>I&#8217;ve very much enjoyed my time at Los Techies and am glad to count many of the bloggers there as good\\u00a0friends. I&#8217;m grateful for being considered an honorary member of the group I affectionately call the &#8220;Austin Tech Mafia&#8221;!</p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/RTZI-UVm0y0\\" width=\\"1\\" />", "summary": "I have moved my blog from Los Techies and am looking forward to participating in the CodeBetter Community! I&#8217;ve long been a follower of CodeBetter and have cited many posts here in my never ending quest to be a better&#160;&#8230; <a href=\\"http://codebetter.com/johnpetersen/2011/09/15/thanks-t", "id": "http://codebetter.com/johnpetersen/?p=64", "categories": [], "metadata": {"guid": "ecd8a378-ab96-47bb-ba00-0e5b78e1529b", "likes": 0, "is_published": false}}, {"author": "Patrick Smacchia", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/hWyLXx0fryc/", "title": "A first glance at Visual Studio vNext (dev11)", "datetime": "2011-09-15T14:12:59", "html": "<p>In case you are not aware, <a href=\\"http://blogs.msdn.com/b/jasonz/archive/2011/09/14/announcing-visual-studio-11-developer-preview.aspx\\" target=\\"_blank\\">a <em>developer preview</em> version of Visual Studio vNext has been released yesterday</a>. I just played an hour with it and it seems that <strong>performances are finally here</strong>! The same way I skipped Vista to jump from XP to <em>Wnd7 that I love</em>, I am (as much as I can) skipping VS2010 and I&#8217;ll jump from VS2008 to <em>VS2012 that I&#8217;ll hopefully love</em>. A few random notes:</p>\\n<p>The startup time is damn fast, on a pretty large 50K <em>lines of code</em> VS solution: 4 seconds, and I am ready to type!</p>\\n<p>The solution explorer (derived from VS2010 power tools) just rocks.</p>\\n<p>The Ctrl+I search/replace in file rocks as well.</p>\\n<p>The main button menu now just contains 7 buttons per default, and of course you can configure it by adding your preferred buttons.</p>\\n<p>The find code duplicate is somewhat slow, 5 minutes on my 50K LoC, and didn&#8217;t give me any relevant result. But honestly the solution analyzed shouldn&#8217;t contain any duplicate and being slow is not so much an issue since it is not meant to be run at every build.</p>\\n<p>The Ctrl+Alt+E exception dialog takes 2 seconds to open compared to 6 seconds with VS2010 and 4 seconds with VS 2008.</p>\\n<p>The architecture explorer graph seems even slower than in VS 2010, and the\\u00a0 embryo of dependency matrix seems to have been discarded. This is a good news for my business, <a href=\\"http://www.ndepend.com/Doc_VS_Arch.aspx\\" target=\\"_blank\\">generating a graph with NDepend</a> is instantaneous in most situations, and it is a matter of dozens of seconds to minutes with VS 2010 and 2012.</p>\\n<p>The product contains many minor bugs, which is normal at a pre-beta stage.</p>\\n<p>The install process is still super slow (&gt; an hour on my fast SSD laptop). I wish VS features could be grain-partitioned (Wnd8 tools, TFS, SQL-tools, F# tools, Game dev tools, Web dev tools&#8230;). The minimal installation takes more than 8GB on hard-drive!</p>\\n<p>I didn&#8217;t test all the Wnd8/WPF/ASP.NET/WCF fancy new features, since I won&#8217;t develop with these until VS vNextNextNext is released! I believe I am like many real-world developers, developing an existing product that depends on a well defined set of <em>not so new</em> technologies, yet still passionated about what&#8217;s next. What really matters to developers in my situation, is to get bonus on what I am already using today (performance, solution explorer, quick search, code clone&#8230;) and VS 2012 seems to offer many of these bonus!</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/hWyLXx0fryc\\" width=\\"1\\" />", "summary": "In case you are not aware, a developer preview version of Visual Studio vNext has been released yesterday. I just played an hour with it and it seems that performances are finally here! The same way I skipped Vista to&#160;&#8230; <a href=\\"http://codebetter.com/patricksmacchia/2011/09/15/a-first-gla", "id": "http://codebetter.com/patricksmacchia/?p=370", "categories": [], "metadata": {"guid": "2bda21ae-6134-4cc7-a08f-9d88d358dbb7", "likes": 0, "is_published": false}}, {"author": "Howard Dierking", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/ISFFbcTq8Vw/", "title": "Web API Preview 5 Is Now Available", "datetime": "2011-09-15T00:41:09", "html": "<p>Today, <a href=\\"http://codebetter.com/glennblock/\\">Glenn</a> is announcing at the <a href=\\"http://www.buildwindows.com/\\">BUILD conference</a> that <a href=\\"http://wcf.codeplex.com/releases/view/73399\\">Web API preview 5</a> is available both on <a href=\\"http://wcf.codeplex.com/\\">CodePlex</a> and <a href=\\"http://nuget.org/\\">Nuget</a>.&nbsp; If you\\u2019ve been following the project for while, you\\u2019ll note that we went through a dry spell there for a while regarding updates.&nbsp; This was due primarily to the level of manual effort involved in updating our bits.&nbsp; Fortunately, we <a href=\\"http://codebetter.com/howarddierking/2011/09/11/one-of-the-small-costs-of-transparency/\\">recently automated away all of that manual effort</a> and are excited to get you new bits (and excited about getting bits to you much more frequently going forward). Here is a high level list of what you can expect to see in preview 5 as well as some notable changes.</p>\\n<h2>New Features/Enhancements</h2>\\n<ul>\\n<li>OData Formatter\\n<li>Dependency refactoring from host common code\\n<li>Support for Batch with mime/mixed content where every part has a Get request\\n<li>Web API code-based configuration (simplifications)\\n<li>Web-based test client for WCF Web API\\n<li>Http File upload\\n<li>Refactored formatters\\n<li>Better IoC support\\n<li>Additional samples for specific features such as file upload\\n<li>Content negotiation now supports qualifiers\\n<li>ActionOfStreamContent \\u2013 Enables accessing the raw content stream </li>\\n</ul>\\n<h2>New Prototype Features (on WebAPI-Prototype branch)</h2>\\n<ul>\\n<li>WebApiConfiguration includes conventions for WebGet/WebInvoke\\n<li>WebApiRoute provides better side by side integration with MVC routes\\n<li>MapServiceRoute extension method simplified registration and usage of WebApiConfiguration\\n<li>SetDefaultHttpConfiguration / GetDefaultHttpConfiguration extension methods enable the getting and setting of a global configuration object that will be used by default by MapServiceRoute unless a specific one is provided\\n<li>MediaTypeFormatterCollectionExtensions.AddRange enables a more compact way to add formatters\\n<li>FormUrlEncodingMediaTypeFormatter\\n<li>Task&lt;T&gt; for Web API operations and sample </li>\\n</ul>\\n<h2>Breaking Changes</h2>\\n<ul>\\n<li>DelegatingChannel renamed to DelegatingHandler\\n<li>HttpChannel renamed to HttpMessageHandler\\n<li>FormUrlEncodingMediaTypeFormatter and JsonValueMediaTypeFormatter were moved from the default branch to the WebAPI-Prototype branch as they are not currently part of the core product source\\n<li>DelegatingHandler no longer require passing in a channel in the constructor making it more friendly to inversion of control (IoC) containers\\n<li>New constructor overload on HttpMessageHandlerFactory overload which accepts a Func&lt;IEnumerable&lt;DelegatingHandler&gt;&gt; to allow user code or IoC containers to construct handlers.\\n<li>IQueryable previously supported case-insensitive matches on operators. In the current drop we only will match on lowercase operators i.e. \\u201c$top\\u201d but not \\u201c$Top\\u201d. According to the spec this is correct behavior however we could relax it in the future. </li>\\n</ul>\\n<h2>Nuget</h2>\\n<p>Like I mentioned above, preview 5 is also being released on Nuget today. Here\\u2019s the breakdown of the Nuget packages that will be available:\\n<ul>\\n<li><strong>HttpClient</strong> \\u2013 like it sounds, this gives you the HttpClient object model, which can be used by both the server and the client for a symmetric Http programming experience.\\n<li><strong>JsonValue</strong> \\u2013 Contains JsonValue api for typeless / dynamic access to Json.\\n<li><strong>WebApi</strong> \\u2013 The server-side object model for Web API\\n<li><strong>WebApi.All</strong> \\u2013 preserved for backwards compatibility; basically just pulls in everything.\\n<li><strong>WebApi.Core</strong> \\u2013 preserved for backwards compatibility; pulls in WebApi.0.5.0\\n<li><strong>WebApi.Enhancements</strong> \\u2013 gives you the Web API core product code plus the enhancements library (from the prototype branch)\\n<li><strong>WebApi.OData</strong> \\u2013 enables returning OData from a Web API. </li>\\n</ul>\\n<p>In addition to the core Nuget packages, we\\u2019re also pushing up a set of symbol packages so that you can more easily debug through Web API source code.</p>\\n<ul>\\n<li>HttpClient.0.5.0.symbols.nupkg\\n<li>JsonValue.0.5.0.symbols.nupkg\\n<li>WebApi.0.5.0.symbols.nupkg\\n<li>WebApi.Enhancements.0.5.0.symbols.nupkg\\n<li>WebApi.OData.0.5.0.symbols.nupkg </li>\\n</ul>\\n<h2>Updated Content</h2>\\n<p>In addition to updating the source code and binaries, we\\u2019ve pushed up a more current set of <a href=\\"http://wcf.codeplex.com/documentation\\">getting started material</a>, including both information on getting started with the core product bits and information on getting started using the Http enhancements library on the prototype branch.&nbsp; There\\u2019s even <a href=\\"http://vimeo.com/28139763\\">this video</a> on how to take advantage of our built-in test client.</p>\\n<h2>Navigating Our CodePlex Repository \\u2013 the WebAPI-Prototype branch</h2>\\n<p>One thing that we wanted to improve with this push was a more clear view of what was product code and what was prototype or proof-of-concept code.&nbsp; Therefore, we created a &#8216;WebAPI-Prototype&#8217; branch and pulled all non-product code (which translates into all code that is not checked into our internal source control) out of the default branch and into the prototype branch.&nbsp; </p>\\n<p><a href=\\"http://codebetter.com/howarddierking/files/2011/09/clip_image001.jpg\\"><img alt=\\"clip_image001\\" border=\\"0\\" height=\\"197\\" src=\\"http://codebetter.com/howarddierking/files/2011/09/clip_image001_thumb.jpg\\" style=\\"border-right-width: 0px; padding-left: 0px; padding-right: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px;\\" width=\\"240\\" /></a></p>\\n<p>This structure provides 2 main benefits: </p>\\n<ul>\\n<li>As mentioned above, better transparency between supported product bits and proof-of-concept bits\\n<li>By having the default branch be a reflection of our internal repository, we can update it much more frequently because we won&#8217;t have to account for any changes that would have happened outside of our internal repo.\\n<p>One thing to note about the introduction of this branch is that samples currently live in the prototype branch \\u2013 so if you want to use the samples as a way to get started building with Web API, you\\u2019ll want to update to the prototype branch.&nbsp; That said, there are samples that exist in the &#8216;Tests/*/Scenarios&#8217; folders.&nbsp; For example, the Mime multipart sample can be found at <a href=\\"http://wcf.codeplex.com/SourceControl/changeset/view/1e77229b0064#WCFWebApi%2fHttp%2fTest%2fMicrosoft.Net.Http.Formatting%2fScenarios%2fMimeMultipart%2fProgram.cs\\">&#8216;Test\\\\Microsoft.Net.Http.Formatting\\\\Scenarios\\\\MimeMultipart&#8217;</a>.</p>\\n</li>\\n</ul>\\n<p>As you can see, we\\u2019ve added a lot of new goodness with preview 5 and are excited to have you test-drive the bits and let us know what you think.&nbsp; And again, now that we\\u2019ve automated the process of getting our code pushed to CodePlex, expect to see updates coming regularly.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/ISFFbcTq8Vw\\" width=\\"1\\" />", "summary": "Today, Glenn is announcing at the BUILD conference that Web API preview 5 is available both on CodePlex and Nuget.&#160; If you\\u2019ve been following the project for while, you\\u2019ll note that we went through a dry spell there for a&#160;&#8230; <a href=\\"http://codebetter.com/howarddierking/2011/09/15/web-", "id": "http://codebetter.com/howarddierking/?p=146", "categories": [], "metadata": {"guid": "1178f0ef-3b8f-48d5-a407-c3bd62c293ff", "likes": 0, "is_published": false}}, {"author": "Sebastien Lambla", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/4MapDEElQYs/", "title": "Extending configuration in OpenRasta 2.1", "datetime": "2011-09-14T17:17:11", "html": "<p><em>[Updated to clarify what the configuration meta-model actually is.]</em></p>\\n<p>The latest OpenRasta 2.1 code contains some changes that make extending the fluent API easier, and provide a supported way for you to write those extensions in a way that won\\u2019t break with OpenRasta 3.0.</p>\\n<h2>OpenRasta configuration meta-model</h2>\\n<p>The one thing everyone knows about OpenRasta is it\\u2019s resource-oriented fluent configuration API. What few people know is how it works behind the scene.</p>\\n<p>Whenever you configure a resource, the fluent API creates a ResourceModel instance and stores it. Once all the configurations are done, a set of objects process those registrations to initialize OpenRasta itself, such as registering types in the container, mapping URIs or creating a list of codecs.</p>\\n<p>Each of the configuration elements of OpenRasta is represented by one configuration object, and the set of all those configuration bits is what we call the configuration meta-model, and is stored in the IMetaModelRepository service.</p>\\n<p>The astute reader will have noticed that in practice this means that the use of the fluent API is optional, and indeed the astute reader would be absolutely right.</p>\\n<p>One of the things that was not easily doable in 2.0 was extending that meta-model by extending the existing fluent configuration API. Why would we want to do this? Let\\u2019s take an example that will expose the whole stack of extension points in OpenRasta and add support for authentication at the configuration level.</p>\\n<h2>Understanding the new extension points</h2>\\n<p>A typical 2.x era configuration for a resource contains multiple chained methods, one per thing you want to configure for a resource.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">using</span><span style=\\"color: #e0e0e0;\\"> (</span><span style=\\"color: #c2a0fa;\\">OpenRastaConfiguration</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Manual</span><span style=\\"color: #e0e0e0;\\">)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #c2a0fa;\\">ResourceSpace</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Has</span><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bdb76b;\\">// IHas</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">ResourcesOfType</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">UserDocument</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\">()\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bdb76b;\\">// IResource</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">AtUri</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #fa8072;\\">&quot;/public/{filename}&quot;</span><span style=\\"color: #e0e0e0;\\">)\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bdb76b;\\">// IUri</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">HandledBy</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">UserDocumentHandler</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\">()\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bdb76b;\\">// IHandler</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">AsXmlDataContract</span><span style=\\"color: #e0e0e0;\\">();\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bdb76b;\\">// ICodec</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></div>\\n</p></div>\\n</p></div>\\n<p>The interfaces that you see on the right are new to 2.1 and are where the magic happens.</p>\\n<p>Let\\u2019s say we want to require authentication for any UserDocument resource. The recommended way to do this is to attach an extension method in your namespace and attach it to IResource.</p>\\n<p>To prevent intellisense from showing a lot of rubbish on those interfaces, to gain access to the extensibility points of the configuration API you need to cast the instance you get to IXxxTarget. In our example, let\\u2019s create a RequiresAuthentication method and add some metadata to that resource registration.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">static</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">class</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #c2a0fa;\\">AuthenticationConfiguration</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">static</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #5391ee;\\">T</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffc488;\\">RequiresAuthentication</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #5391ee;\\">T</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #00bfff;\\">this</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #5391ee;\\">T</span><span style=\\"color: #e0e0e0;\\"> root) </span><span style=\\"color: #00bfff;\\">where</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #5391ee;\\">T</span><span style=\\"color: #e0e0e0;\\">:</span><span style=\\"color: #71ffff;\\">IResourceDefinition</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">var</span><span style=\\"color: #e0e0e0;\\"> target </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> root </span><span style=\\"color: #00bfff;\\">as</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #71ffff;\\">IResourceTarget</span><span style=\\"color: #e0e0e0;\\">;</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0target</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Resource</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Properties</span><span style=\\"color: #e0e0e0;\\">[</span><span style=\\"color: #fa8072;\\">&quot;caffeineit.demos.fluentauth.enabled&quot;</span><span style=\\"color: #e0e0e0;\\">] </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">true</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">return</span><span style=\\"color: #e0e0e0;\\"> root;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0}</span></div>\\n</p></div>\\n</p></div>\\n<p>The IResourceTarget interface contains about everything you need to add anything you want to the configuration model: the meta-model repository, the current resource registration and its list of URIs, Handlers and Codecs.</p>\\n<p>Here we\\u2019ve added some additional data to enable authentication that we need to process from somewhere else.</p>\\n<h2>Platform-wide operation interceptors</h2>\\n<p>The second extension point we\\u2019ll use is the support for operation interceptors, which are small components that can interact and make decisions before your handler code gets called.</p>\\n<p>You may have seen them being used in OpenRasta on a per-method basis, usually together with an attribute that creates them, such as [RequiresAuthentication] or [RequiresRole]</p>\\n<p>Whenver a URI is matched by OpenRasta, it is associated with a <strong>resource key</strong>. This is the cornerstone of the OpenRasta model, as with a resource key we can find all handlers, URIs, codecs and anything else associated with the resource we have. We\\u2019re going to be using this to get the information we\\u2019ve added in our configuration.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">class</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00d2d2;\\">FluentAuthenticationInterceptor</span><span style=\\"color: #e0e0e0;\\"> : </span><span style=\\"color: #71ffff;\\">IOperationInterceptor</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #71ffff;\\">IMetaModelRepository</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #bfbfff;\\">_configuration</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #71ffff;\\">ICommunicationContext</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #bfbfff;\\">_env</span><span style=\\"color: #e0e0e0;\\">;</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00d2d2;\\">FluentAuthenticationInterceptor</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #71ffff;\\">IMetaModelRepository</span><span style=\\"color: #e0e0e0;\\"> configuration, </span><span style=\\"color: #71ffff;\\">ICommunicationContext</span><span style=\\"color: #e0e0e0;\\"> env)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bfbfff;\\">_configuration</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> configuration;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bfbfff;\\">_env</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> env;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">bool</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffb7db;\\">BeforeExecute</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #71ffff;\\">IOperation</span><span style=\\"color: #e0e0e0;\\"> operation)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">var</span><span style=\\"color: #e0e0e0;\\"> currentResource </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #bfbfff;\\">_env</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">PipelineData</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">ResourceKey</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">var</span><span style=\\"color: #e0e0e0;\\"> registration </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #bfbfff;\\">_configuration</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">ResourceRegistrations</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">FirstOrDefault</span><span style=\\"color: #e0e0e0;\\">(x </span><span style=\\"color: #a6a0e0;\\">=&gt;</span><span style=\\"color: #e0e0e0;\\"> x</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">ResourceKey</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">==</span><span style=\\"color: #e0e0e0;\\"> currentResource);</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">object</span><span style=\\"color: #e0e0e0;\\"> authEnabled;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">if</span><span style=\\"color: #e0e0e0;\\"> (registration </span><span style=\\"color: #a6a0e0;\\">!=</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">null</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">&amp;&amp;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0registration</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Properties</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">TryGetValue</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #fa8072;\\">&quot;caffeineit.demos.fluentauth.enabled&quot;</span><span style=\\"color: #e0e0e0;\\">, </span><span style=\\"color: #00bfff;\\">out</span><span style=\\"color: #e0e0e0;\\"> authEnabled) </span><span style=\\"color: #a6a0e0;\\">&amp;&amp;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0(</span><span style=\\"color: #00bfff;\\">bool</span><span style=\\"color: #e0e0e0;\\">)authEnabled)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">if</span><span style=\\"color: #e0e0e0;\\"> (</span><span style=\\"color: #bfbfff;\\">_env</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">User</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Identity</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">IsAuthenticated</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">==</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">false</span><span style=\\"color: #e0e0e0;\\">)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #bfbfff;\\">_env</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">OperationResult</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">new</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00d2d2;\\">OperationResult</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #00d2d2;\\">Unauthorized</span><span style=\\"color: #e0e0e0;\\">();</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">return</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">false</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">return</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">true</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffff80;\\">Func</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #71ffff;\\">IEnumerable</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">OutputMember</span><span style=\\"color: #a6a0e0;\\">&gt;&gt;</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffb7db;\\">RewriteOperation</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #ffff80;\\">Func</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #71ffff;\\">IEnumerable</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">OutputMember</span><span style=\\"color: #a6a0e0;\\">&gt;&gt;</span><span style=\\"color: #e0e0e0;\\"> operationBuilder)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">return</span><span style=\\"color: #e0e0e0;\\"> operationBuilder;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">bool</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffb7db;\\">AfterExecute</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #71ffff;\\">IOperation</span><span style=\\"color: #e0e0e0;\\"> operation, </span><span style=\\"color: #71ffff;\\">IEnumerable</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">OutputMember</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\"> outputMembers)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">return</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">true</span><span style=\\"color: #e0e0e0;\\">;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0}</span></div>\\n</p></div>\\n</p></div>\\n<p>A few things are happening here. Of course we use <strong>dependency injection</strong> to take a dependency on the meta-model repository, where our configuration is stored, and on the ICommunicationContext, which gives us the principal of the current user, and which we need to know if someone has authenticated. On a side-note, that property is populated based on your hosting environment, so if you run on asp.net and have Forms authentication enabled, that will flow automatically with no work on your part.</p>\\n<p>We do the work in BeforeExecute so we can stop execution before any other code runs, be it other interceptors or our handler. Finally, if a user is not authenticated, we override the OperationResult for the current connection and return <strong>false</strong>, which instructs OpenRasta to stop processing anything and start writing the response back to the client.</p>\\n<h2>Hooking up the interceptor</h2>\\n<p>The last bit we have to do is to give the interceptor to OpenRasta, and like everything else, it is handled by the IoC container. We can register custom dependencies in a unified fashion using the fluent configuration API.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #c2a0fa;\\">ResourceSpace</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Uses</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">CustomDependency</span><span style=\\"color: #a6a0e0;\\">&lt;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #71ffff;\\">IOperationInterceptor</span><span style=\\"color: #e0e0e0;\\">, </span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00d2d2;\\">FluentAuthenticationInterceptor</span><span style=\\"color: #a6a0e0;\\">&gt;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0(</span><span style=\\"color: #8080c0;\\">DependencyLifetime</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #8080c0;\\">Transient</span><span style=\\"color: #e0e0e0;\\">);</span></div>\\n</p></div>\\n</p></div>\\n<p>&nbsp;</p>\\n<h2>Cleaning up and ready for packaging</h2>\\n<p>Finally, like most plugins in OpenRasta, you should do all your configuration work as an extension on IUses, so we wrap the work that was done in the last bit into a nice extension method.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #00bfff;\\">public</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">static</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00bfff;\\">void</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #ffc488;\\">FluentAuthentication</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #00bfff;\\">this</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #71ffff;\\">IUses</span><span style=\\"color: #e0e0e0;\\"> uses)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">var</span><span style=\\"color: #e0e0e0;\\"> target </span><span style=\\"color: #a6a0e0;\\">=</span><span style=\\"color: #e0e0e0;\\"> (</span><span style=\\"color: #71ffff;\\">IFluentTarget</span><span style=\\"color: #e0e0e0;\\">)uses;</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0target</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Repository</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">CustomRegistrations</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">Add</span><span style=\\"color: #e0e0e0;\\">(</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">new</span><span style=\\"color: #e0e0e0;\\"> </span><span style=\\"color: #00d2d2;\\">DependencyRegistrationModel</span><span style=\\"color: #e0e0e0;\\">(</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">typeof</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #71ffff;\\">IOperationInterceptor</span><span style=\\"color: #e0e0e0;\\">),</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">typeof</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #00d2d2;\\">FluentAuthenticationInterceptor</span><span style=\\"color: #e0e0e0;\\">),</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #8080c0;\\">DependencyLifetime</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #8080c0;\\">Transient</span><span style=\\"color: #e0e0e0;\\">)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0);</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></div>\\n</p></div>\\n</p></div>\\n<p>&nbsp;</p>\\n<p>And now our configuration looks nice and understandable.</p>\\n<div class=\\"wlWriterEditableSmartContent\\" style=\\"padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; float: none; padding-top: 0px;\\">\\n<div style=\\"border: #000080 1px solid; color: #000; font-family: \'Courier New\', Courier, Monospace; font-size: 10pt;\\">\\n<div style=\\"background-color: #333333; overflow: auto; padding: 2px 5px;\\"><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #00bfff;\\">using</span><span style=\\"color: #e0e0e0;\\"> (</span><span style=\\"color: #c2a0fa;\\">OpenRastaConfiguration</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Manual</span><span style=\\"color: #e0e0e0;\\">)</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0{</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #c2a0fa;\\">ResourceSpace</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Uses</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">FluentAuthentication</span><span style=\\"color: #e0e0e0;\\">();</span></p>\\n<p> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #c2a0fa;\\">ResourceSpace</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #bfbfff;\\">Has</span><span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">ResourcesOfType</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">UserDocument</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\">() </span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">RequiresAuthentication</span><span style=\\"color: #e0e0e0;\\">()</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">AtUri</span><span style=\\"color: #e0e0e0;\\">(</span><span style=\\"color: #fa8072;\\">&quot;/public/{filename}&quot;</span><span style=\\"color: #e0e0e0;\\">)\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffb7db;\\">HandledBy</span><span style=\\"color: #a6a0e0;\\">&lt;</span><span style=\\"color: #00d2d2;\\">UserDocumentHandler</span><span style=\\"color: #a6a0e0;\\">&gt;</span><span style=\\"color: #e0e0e0;\\">()</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><span style=\\"color: #a6a0e0;\\">.</span><span style=\\"color: #ffc488;\\">AsXmlDataContract</span><span style=\\"color: #e0e0e0;\\">();\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0</span><br /> <span style=\\"color: #e0e0e0;\\">\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0}</span></div>\\n</p></div>\\n</p></div>\\n<h2>Conclusion</h2>\\n<p>The same extension points are available for URIs, for handlers, codecs, media type definitions and any other configuration model that exists. If you hang off those interfaces, your extensions will still work for the new compact configuration API and the convention-based configuration API that will be part of OpenRasta 3.0.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/4MapDEElQYs\\" width=\\"1\\" />", "summary": "[Updated to clarify what the configuration meta-model actually is.] The latest OpenRasta 2.1 code contains some changes that make extending the fluent API easier, and provide a supported way for you to write those extensions in a way that won\\u2019t&#160;&#8230; <a href=\\"http://codebetter.com/sebastienla", "id": "http://codebetter.com/sebastienlambla/2011/09/14/extending-configuration-in-openrasta-2-1/", "categories": [], "metadata": {"guid": "34e6a688-3518-43f9-957b-eae600e75e4b", "likes": 0, "is_published": false}}, {"author": "admin", "url": "http://rubenhenares.404fs.com/get-into-electronics/", "title": "Get into Electronics", "datetime": "2011-09-14T11:06:57", "html": "<p>Creating applications is challenging and fun. But what about creating your own hardware to interact with them?<br />\\nIf you want to get into electronics, but it sounds like rocket science to you. <a href=\\"http://www.sparklelabs.com/\\">Sparkle Labs</a> has released its <a href=\\"http://sparklelabs.com/index_store.php#Discover%20Electronics\\">Discover Electronics Kit</a> version 2.<br />\\nThe <a href=\\"http://learn.sparklelabs.com/\\">Sparkle Labs Education</a> site has a bunch of interesting information and great video tutorials that will help you understand the basics, current, resistors, capacitors, etc.</p>", "summary": "Creating applications is challenging and fun. But what about creating your own hardware to interact with them? If you want to get into electronics, but it sounds like rocket science to you. Sparkle Labs has released its Discover Electronics Kit version 2. The Sparkle Labs Education site has a bunch ", "id": "http://rubenhenares.404fs.com/?p=244", "categories": [], "metadata": {"guid": "ed19590a-71e5-4fe0-83f9-ea3f41ddd30c", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/14/possible-downtime/", "title": "Possible downtime", "datetime": "2011-09-14T09:00:23", "html": "<div class=\\"note tools\\">I&#8217;m about to change hosts so some downtime in the next 72 hours is expected.</p>\\n<p>I&#8217;m also cleaning up my domains and folder structure so certain links might be broken but I&#8217;ll fix them soon.</p></div>\\n<p><!-- PHP 5.x --></p>", "summary": "I&#8217;m about to change hosts so some downtime in the next 72 hours is expected.\\nI&#8217;m also cleaning up my domains and folder structure so certain links might be broken but I&#8217;ll fix them soon.\\n PHP 5.x ", "id": "http://www.zspline.net/blog/?p=1521", "categories": [], "metadata": {"guid": "bbbd90fb-0322-4835-b4d6-f874f24b1968", "likes": 0, "is_published": false}}, {"author": "JayG (noreply@blogger.com)", "url": "http://feedproxy.google.com/~r/ScriptSwell/~3/ixPXczKpc8Q/webinar-with-zbrush-guru-ryan-kingslien.html", "title": "Webinar with ZBrush Guru Ryan Kingslien", "datetime": "2011-09-13T19:01:36.678000", "html": "<div dir=\\"ltr\\" style=\\"text-align: left;\\">\\nRecently <a href=\\"http://image-metrics.com/\\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\\"http://zbrushworkshops.com/\\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry\'s most sought after artists and it was a pleasure to hear his take on how to tackle learning facial anatomy. &nbsp;He has even recently started a new class on his <a href=\\"http://zbrushworkshops.com/\\">website</a> based on the content of the webinar. &nbsp;Check out the video below.\\n\\n<br />\\n<br />\\n<a href=\\"http://vimeo.com/28949284\\">Sculpting The Face - Anatomy &amp; Form</a><br />\\n<br />\\n<div class=\\"separator\\" style=\\"clear: both; text-align: center;\\">\\n<a href=\\"http://vimeo.com/28949284\\"><span id=\\"goog_1004908762\\"></span><span id=\\"goog_1004908763\\"></span><img border=\\"0\\" height=\\"298\\" src=\\"http://3.bp.blogspot.com/-VZbhgmM9wKw/TnAIChhqyfI/AAAAAAAAAfY/kvyVy_wGroU/s400/ryan_webinar.jpg\\" width=\\"400\\" /></a></div>\\n<div class=\\"separator\\" style=\\"clear: both; text-align: center;\\">\\n<br /></div>\\n<div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">\\nYou can find videos of some of the other <a href=\\"http://vimeo.com/user6082681/videos\\">webinars</a> we\'ve done at Image Metrics in the right-hand side column.</div>\\n</div>\\n<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/9194959783867453392-8985862413181732524?l=www.scriptswell.net\\" width=\\"1\\" /></div>\\n<p><a href=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/da\\"><img border=\\"0\\" ismap=\\"true\\" src=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/di\\" /></a><br />\\n<a href=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/da\\"><img border=\\"0\\" ismap=\\"true\\" src=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/di\\" /></a></p><img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/ScriptSwell/~4/ixPXczKpc8Q\\" width=\\"1\\" />", "summary": "<div dir=\\"ltr\\" style=\\"text-align: left;\\">\\nRecently <a href=\\"http://image-metrics.com/\\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\\"http://zbrushworkshops.com/\\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry\'s most sought after artists and", "id": "tag:blogger.com,1999:blog-9194959783867453392.post-8985862413181732524", "categories": [], "metadata": {"guid": "6ebec914-724a-4a68-bf74-df6845814b09", "likes": 0, "is_published": false}}, {"author": "JayG (noreply@blogger.com)", "url": "http://feedproxy.google.com/~r/ScriptSwell/~3/ixPXczKpc8Q/webinar-with-zbrush-guru-ryan-kingslien.html", "title": "Webinar with ZBrush Guru Ryan Kingslien", "datetime": "2011-09-13T19:01:36.678000", "html": "<div dir=\\"ltr\\" style=\\"text-align: left;\\">\\nRecently <a href=\\"http://image-metrics.com/\\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\\"http://zbrushworkshops.com/\\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry\'s most sought after artists and it was a pleasure to hear his take on how to tackle learning facial anatomy. &nbsp;He has even recently started a new class on his <a href=\\"http://zbrushworkshops.com/\\">website</a> based on the content of the webinar. &nbsp;Check out the video below.\\n\\n<br />\\n<br />\\n<a href=\\"http://vimeo.com/28949284\\">Sculpting The Face - Anatomy &amp; Form</a><br />\\n<br />\\n<div class=\\"separator\\" style=\\"clear: both; text-align: center;\\">\\n<a href=\\"http://vimeo.com/28949284\\"><span id=\\"goog_1004908762\\"></span><span id=\\"goog_1004908763\\"></span><img border=\\"0\\" height=\\"298\\" src=\\"http://3.bp.blogspot.com/-VZbhgmM9wKw/TnAIChhqyfI/AAAAAAAAAfY/kvyVy_wGroU/s400/ryan_webinar.jpg\\" width=\\"400\\" /></a></div>\\n<div class=\\"separator\\" style=\\"clear: both; text-align: center;\\">\\n<br /></div>\\n<div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">\\nYou can find videos of some of the other <a href=\\"http://vimeo.com/user6082681/videos\\">webinars</a> we\'ve done at Image Metrics in the right-hand side column.</div>\\n</div>\\n<div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/9194959783867453392-8985862413181732524?l=www.scriptswell.net\\" width=\\"1\\" /></div>\\n<p><a href=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/da\\"><img border=\\"0\\" ismap=\\"true\\" src=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/0/di\\" /></a><br />\\n<a href=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/da\\"><img border=\\"0\\" ismap=\\"true\\" src=\\"http://feedads.g.doubleclick.net/~a/l-uEb8QYbSSHFxo6_lswOf4R_MI/1/di\\" /></a></p><img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/ScriptSwell/~4/ixPXczKpc8Q\\" width=\\"1\\" />", "summary": "<div dir=\\"ltr\\" style=\\"text-align: left;\\">\\nRecently <a href=\\"http://image-metrics.com/\\">Image Metrics</a> hosted a facial sculpting and anatomy webinar with <a href=\\"http://zbrushworkshops.com/\\">ZBrush Workshops</a> founder, Ryan Kingslien.  Ryan is one of the industry\'s most sought after artists and", "id": "tag:blogger.com,1999:blog-9194959783867453392.post-8985862413181732524", "categories": [], "metadata": {"guid": "34764f57-b4bc-41b1-9079-7477ed6f2302", "likes": 0, "is_published": false}}, {"author": "Dave Ferner", "url": "http://www.supermono-studios.com/2011/09/forever-drive-official-trailer/", "title": "FOREVER DRIVE!!!!!! Official trailer", "datetime": "2011-09-13T13:06:18", "html": "<p><a href=\\"http://www.youtube.com/watch?v=iYCMGa5x5oA\\"><img height=\\"298\\" src=\\"http://supermono-studios.com/wp-content/uploads/2011/09/youtube.jpg\\" width=\\"480\\" /></a></p>\\n<p>Hey, check it out! Official trailer for our very-soon-to-be-released arcade driving future game! Lots of never-seen-before footage. Well, we&#8217;ve seen it before, cos we made it, but you haven&#8217;t. So watch it.</p>", "summary": "Hey, check it out! Official trailer for our very-soon-to-be-released arcade driving future game! Lots of never-seen-before footage. Well, we&#8217;ve seen it before, cos we made it, but you haven&#8217;t. So watch it.", "id": "http://www.supermono-studios.com/?p=1019", "categories": [], "metadata": {"guid": "04ca7002-b0cf-434b-9bc5-6fe35aa7de7e", "likes": 0, "is_published": false}}, {"author": "Sebastien Lambla", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/OGdGTuJ80l4/", "title": "Trying out OpenWrap 2.0", "datetime": "2011-09-12T21:11:56", "html": "<p><font color=\\"#ff0000\\"><em>[Update 3: github is not pushing the changes to openwrap.org properly, I\\u2019ve updated the link to the shell in the post to point to the correct file.]</em></font></p>\\n<p><font color=\\"#ff0000\\"><em>[Update 2: The problems with side-by-side of 2.0 and 1.0 seem to be mostly resolved. Do not install 2.0 in your system repository just yet, keep it in a test project, and please update OpenWrap to the newly released 1.0.1 version which solves some of those issues.]</em></font></p>\\n<p><font color=\\"#ff0000\\"><em>[Update: I\\u2019ve temporarily removed the 2.0 packages from the beta server due to unforeseen 1.0.0 / 2.0 side-by-side execution due to a bug in 1.0.0. Expect a new set of packages soon.]</em></font></p>\\n<p>We\\u2019ve come a long way since the initial work started on OpenWrap 1.1 that turned into 2.0.</p>\\n<p>We now have ReSharper 6 support and a whole lot of new features, and we\\u2019re 50 open issues from being feature complete. Still, it\\u2019s time to announce a few things.</p>\\n<p>First, the shell has been updated to 2.0, and bring back the possibility of deleting your /wraps folder when something goes bad to force an update, as well as fix a bunch of bugs that existed in the 1.1 release. Go <a href=\\"http://github.com/OpenWrap/openwrap.github.com/raw/master/o.exe\\">download it now</a>.</p>\\n<p>The second thing is that test packages of OpenWrap 2.0 are available for testing, but not on the main repository. If you have OpenWrap 1.0 installed, you can upgrade a specific project to OpenWrap 2.0 by adding the beta repository.</p>\\n<pre>C:\\\\src&gt; o add-remote beta http://wraps.openwrap.org/beta/\\n# OpenWrap Shell 2.0.0.8\\n# Copyright \\u00a9 naughtyProd Limited 2009-2011\\n# Using C:\\\\Users\\\\sebastien.lambla\\\\AppData\\\\Local\\\\openwrap\\\\wraps\\\\_cache\\\\openwrap-2.0.0.81133579\\\\bin-net35\\\\OpenWrap.dll (2.0.0.0)\\nRemote repository \'beta\' added.\\n\\n<font color=\\"#444444\\" face=\\"Georgia\\" size=\\"3\\">Then you can update your project to the new test version.</font></pre>\\n<pre><font color=\\"#444444\\" face=\\"Georgia\\" size=\\"3\\"></font>&nbsp;</pre>\\n<pre>C:\\\\src\\\\myProject&gt; o update-wrap openwrap -project\\n</pre>\\n<p>&nbsp;</p>\\n<p>If you want to install 2.0 in your system repository, and at this stage it is not recommended as those are early previews that do not guarantee that side-by-side execution will work, then any 1.0 project may fail with <strong>noun not found</strong> errors. If this is your case:</p>\\n<ul>\\n<li>Change your wrap descriptor to force 1.0, so \\u201cdepends: openwrap content\\u201d should be changed to \\u201cdepends: openwrap = 1.0 content\\u201d\\n<li>Force an update to 1.0.1 by doing \\u201co update-wrap openwrap \\u2013proj \\u2013usesystem\\u201d\\n<li>If this fails, let us know how, then simply reset your system repository to a known state using the \\u2013shellpanic flag before executing your update-wrap command. </li>\\n</ul>\\n<p>In the next couple of weeks there will be very long blog posts about all the new features we have in there for you, but if you\\u2019ve been dying to test out the alpha releases, now you know how.</p>\\n<p>As usual, contributors are welcome, bug reports should be filled on <a href=\\"http://github.com/openrasta/openwrap/\\">http://github.com/openrasta/openwrap/</a>. If you\\u2019ve not involved yourself in real open source, by the people, for the people, in the open and in all honesty, now is the time.</p>\\n<p>OpenWrap is the longest running and most open package manager on .net, come and have a look.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/OGdGTuJ80l4\\" width=\\"1\\" />", "summary": "[Update 3: github is not pushing the changes to openwrap.org properly, I\\u2019ve updated the link to the shell in the post to point to the correct file.] [Update 2: The problems with side-by-side of 2.0 and 1.0 seem to be&#160;&#8230; <a href=\\"http://codebetter.com/sebastienlambla/2011/09/12/trying-out-o", "id": "http://codebetter.com/sebastienlambla/2011/09/12/trying-out-openwrap-2-0-2/", "categories": [], "metadata": {"guid": "44db5f56-4096-4ac4-b12d-4a2a5acbb3c9", "likes": 0, "is_published": false}}, {"author": "Howard Dierking", "url": "http://feedproxy.google.com/~r/CodeBetter/~3/r8j_Lvbp0Uk/", "title": "One of the small costs of transparency", "datetime": "2011-09-11T18:23:34", "html": "<p>If you\\u2019ve been following wcf.codeplex.com, you\\u2019ll notice that we\\u2019ve had a flurry of activity over the last couple of weeks, culminating in the release of Web API preview 5.&nbsp; If you\\u2019ve been following our Codeplex repository for a while, you\\u2019ll also note that this flurry of activity was preceded by months of inactivity.&nbsp; This wasn\\u2019t because we were just sitting around talking waiting for the code to update itself.&nbsp; We had been wanting to update the repo for a while.&nbsp; The problem was that the process to update the code was very hard and very manual (meaning it was also very error prone).&nbsp; This is largely due to the fact that our source code is completely self-contained in its repository.&nbsp; Usually, you would think of self-containment as a good thing.&nbsp; However, in the scenario where you want to be able to share your code with others (like on Codeplex, for example), this property becomes a major problem.&nbsp; This is because code in our repository takes 0 dependencies on anything outside of our repository \\u2013 including things like .NET Framework assemblies.&nbsp; Additionally, our build files contain all sorts of includes to custom tools, custom build targets/properties, etc.&nbsp; As a result, getting code out of our repository and then updating it so that it will actually build is a non-trivial task \\u2013 until now.</p>\\n<p>I went through this manual process once and quickly decided that I would never do that again.&nbsp; I already had an interest in PowerShell, so decided to kill multiple birds with one stone and automate the process using PowerShell.&nbsp; Additionally, because one of the major steps in the automation workflow is transforming the project files to remove internal assembly and tool references, I called into some XSLT from my PowerShell script.</p>\\n<p>At a high level, the workflow looks as follows:</p>\\n<ol>\\n<li>Sync our product code from our internal repository</li>\\n<li>Build our product code (this will generate needed files that rely on internal build tools)</li>\\n<li>Create a new clone of the Codeplex repository</li>\\n<li>In the Codeplex clone, delete everything in the source and test folders (this will better help to identify delete files in the hg repo when committing)</li>\\n<li>Copy all source and test files from our internal repo to our hg clone</li>\\n<li>Run XSLT over all *.csproj files in the hg repository to remove all internal references</li>\\n<li>Run RegEx over all AssemblyInfo.cs files to remove delay signed info from InternalsVisibleTo attributes</li>\\n<li>Run RegEx to clean up some assembly strong name references in some test config files</li>\\n<li>Open the solution in Visual Studio and make sure that all projects build and that all tests run</li>\\n</ol>\\n<p>As you can see, there are a few things going on here \\u2013 even with the automation \\u2013 so imagine what the manual process looked like.&nbsp; </p>\\n<p>Like I mentioned earlier, this automation project gave me an excuse to do something that I had been wanting to do anyway \\u2013 learn PowerShell.&nbsp; As such, I want to show you the PowerShell script in part because you may currently (or one day) be facing a similar challenge, and in (larger) part because I want your feedback on how I can improve the PowerShell (like I said, I was learning).</p>\\n<p>Anyways, here\\u2019s the PowerShell:</p>\\n<noscript><div class=\\"gist\\" id=\\"gist-1209919\\">\\n  \\n  \\n    \\n      \\n        \\n        \\n\\n        <div class=\\"gist-file\\">\\n          <div class=\\"gist-data gist-syntax\\">\\n            \\n            \\n            \\n              <div class=\\"highlight\\"><pre><div class=\\"line\\" id=\\"LC1\\">Import-Module Pscx</div><div class=\\"line\\" id=\\"LC2\\"><br /></div><div class=\\"line\\" id=\\"LC3\\"><span class=\\"c\\"># the variables you\'ll likely need to change on your local machine</span></div><div class=\\"line\\" id=\\"LC4\\"><span class=\\"nv\\">$afroot</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;D:\\\\AppFabric&quot;</span></div><div class=\\"line\\" id=\\"LC5\\"><span class=\\"nv\\">$hgroot</span> <span class=\\"o\\">=</span> <span class=\\"s1\\">\'D:\\\\Programming Projects\'</span></div><div class=\\"line\\" id=\\"LC6\\"><span class=\\"c\\"># $hgremote = &quot;https://hg01.codeplex.com/wcf&quot;</span></div><div class=\\"line\\" id=\\"LC7\\"><span class=\\"nv\\">$hgremote</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;D:\\\\Programming Projects\\\\wcf-codeplex-baseline_RC2&quot;</span></div><div class=\\"line\\" id=\\"LC8\\"><br /></div><div class=\\"line\\" id=\\"LC9\\"><span class=\\"c\\"># derived paths</span></div><div class=\\"line\\" id=\\"LC10\\"><span class=\\"nv\\">$afwcfsource</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;\\\\private\\\\source\\\\WCF&quot;</span></div><div class=\\"line\\" id=\\"LC11\\"><span class=\\"nv\\">$afcommonsource</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;\\\\private\\\\source\\\\Common\\\\Microsoft.Server.Common&quot;</span></div><div class=\\"line\\" id=\\"LC12\\"><span class=\\"nv\\">$afwcftestsource</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;\\\\private\\\\CIT\\\\WCF&quot;</span></div><div class=\\"line\\" id=\\"LC13\\"><span class=\\"nv\\">$afcommontest</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;\\\\private\\\\testcommon&quot;</span></div><div class=\\"line\\" id=\\"LC14\\"><br /></div><div class=\\"line\\" id=\\"LC15\\"><span class=\\"nv\\">$clonename</span> <span class=\\"o\\">=</span> Get-Date -f yyyyMMdd-hhmmss</div><div class=\\"line\\" id=\\"LC16\\"><span class=\\"nv\\">$hgclonepath</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$hgroot</span> + <span class=\\"s2\\">&quot;\\\\wcf-codeplex-baseline_&quot;</span> + <span class=\\"nv\\">$clonename</span></div><div class=\\"line\\" id=\\"LC17\\"><span class=\\"nv\\">$hgsrc</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$hgclonepath</span> + <span class=\\"s2\\">&quot;\\\\WCFWebApi\\\\Http\\\\Src&quot;</span></div><div class=\\"line\\" id=\\"LC18\\"><span class=\\"nv\\">$hgtest</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$hgclonepath</span> + <span class=\\"s2\\">&quot;\\\\WCFWebApi\\\\Http\\\\Test&quot;</span></div><div class=\\"line\\" id=\\"LC19\\"><span class=\\"nv\\">$enlistmentcmdargs</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;/C set inetroot=&quot;</span> + <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;&amp;set corextbranch=appserver&amp;&quot;</span> + <span class=\\"nv\\">$afroot</span> + <span class=\\"s2\\">&quot;\\\\tools\\\\path1st\\\\myenv.cmd&quot;</span></div><div class=\\"line\\" id=\\"LC20\\"><span class=\\"nv\\">$enlistmentcmd</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;C:\\\\Windows\\\\SysWOW64\\\\cmd.exe&quot;</span></div><div class=\\"line\\" id=\\"LC21\\"><span class=\\"nv\\">$bcca</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;msbuildcmd /c /a amd64&quot;</span></div><div class=\\"line\\" id=\\"LC22\\"><br /></div><div class=\\"line\\" id=\\"LC23\\"><span class=\\"nv\\">$currentpath</span> <span class=\\"o\\">=</span> Get-Location</div><div class=\\"line\\" id=\\"LC24\\"><br /></div><div class=\\"line\\" id=\\"LC25\\"><span class=\\"c\\"># 1. </span></div><div class=\\"line\\" id=\\"LC26\\">Start-Process <span class=\\"nv\\">$enlistmentcmd</span> -ArgumentList <span class=\\"o\\">(</span><span class=\\"nv\\">$enlistmentcmdargs</span> + <span class=\\"s2\\">&quot;&amp;sd sync&quot;</span><span class=\\"o\\">)</span> -Wait</div><div class=\\"line\\" id=\\"LC27\\"><br /></div><div class=\\"line\\" id=\\"LC28\\"><span class=\\"c\\"># 2.</span></div><div class=\\"line\\" id=\\"LC29\\">Start-Process <span class=\\"nv\\">$enlistmentcmd</span> -ArgumentList <span class=\\"o\\">(</span><span class=\\"nv\\">$enlistmentcmdargs</span> + <span class=\\"s2\\">&quot;&amp;cd private/source/wcf&amp;&quot;</span> + <span class=\\"nv\\">$bcca</span><span class=\\"o\\">)</span> -Wait</div><div class=\\"line\\" id=\\"LC30\\"><br /></div><div class=\\"line\\" id=\\"LC31\\"><span class=\\"c\\"># 3.</span></div><div class=\\"line\\" id=\\"LC32\\">Start-Process <span class=\\"nv\\">$enlistmentcmd</span> -ArgumentList <span class=\\"o\\">(</span><span class=\\"nv\\">$enlistmentcmdargs</span> + <span class=\\"s2\\">&quot;&amp;cd private/source/common/microsoft.server.common&amp;&quot;</span> + <span class=\\"nv\\">$bcca</span><span class=\\"o\\">)</span> -Wait</div><div class=\\"line\\" id=\\"LC33\\"><br /></div><div class=\\"line\\" id=\\"LC34\\"><span class=\\"c\\"># 4.</span></div><div class=\\"line\\" id=\\"LC35\\">Start-Process <span class=\\"nv\\">$enlistmentcmd</span> -ArgumentList <span class=\\"o\\">(</span><span class=\\"nv\\">$enlistmentcmdargs</span> + <span class=\\"s2\\">&quot;&amp;cd private/cit/wcf&amp;&quot;</span> + <span class=\\"nv\\">$bcca</span><span class=\\"o\\">)</span> -Wait</div><div class=\\"line\\" id=\\"LC36\\"><br /></div><div class=\\"line\\" id=\\"LC37\\"><span class=\\"c\\"># 5.</span></div><div class=\\"line\\" id=\\"LC38\\">Start-Process <span class=\\"nv\\">$enlistmentcmd</span> -ArgumentList <span class=\\"o\\">(</span><span class=\\"nv\\">$enlistmentcmdargs</span> + <span class=\\"s2\\">&quot;&amp;cd private/testcommon&amp;&quot;</span> + <span class=\\"nv\\">$bcca</span><span class=\\"o\\">)</span> -Wait</div><div class=\\"line\\" id=\\"LC39\\"><br /></div><div class=\\"line\\" id=\\"LC40\\">Set-Location <span class=\\"nv\\">$currentpath</span></div><div class=\\"line\\" id=\\"LC41\\"><br /></div><div class=\\"line\\" id=\\"LC42\\"><span class=\\"c\\">#6. (assuming the build is clean) todo: add error handling here</span></div><div class=\\"line\\" id=\\"LC43\\"><br /></div><div class=\\"line\\" id=\\"LC44\\"><span class=\\"c\\"># 7.</span></div><div class=\\"line\\" id=\\"LC45\\">hg clone <span class=\\"nv\\">$hgremote</span> <span class=\\"nv\\">$hgclonepath</span></div><div class=\\"line\\" id=\\"LC46\\"><br /></div><div class=\\"line\\" id=\\"LC47\\"><span class=\\"c\\"># 8.</span></div><div class=\\"line\\" id=\\"LC48\\">Get-ChildItem <span class=\\"nv\\">$hgsrc</span> | Remove-Item -Recurse</div><div class=\\"line\\" id=\\"LC49\\"><br /></div><div class=\\"line\\" id=\\"LC50\\"><span class=\\"c\\"># 9.</span></div><div class=\\"line\\" id=\\"LC51\\">Get-ChildItem <span class=\\"nv\\">$afwcfsource</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC52\\">&nbsp;&nbsp;&nbsp;&nbsp;| where<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span>.Name -notlike <span class=\\"s2\\">&quot;Tools*&quot;</span> -and <span class=\\"nv\\">$_</span>.Name -notlike <span class=\\"s2\\">&quot;*Resharper*&quot;</span><span class=\\"o\\">}</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC53\\">&nbsp;&nbsp;&nbsp;&nbsp;| Copy-Item -Destination <span class=\\"nv\\">$hgsrc</span> -Recurse</div><div class=\\"line\\" id=\\"LC54\\"><br /></div><div class=\\"line\\" id=\\"LC55\\">Copy-Item -Path <span class=\\"nv\\">$afcommonsource</span> -Destination <span class=\\"nv\\">$hgsrc</span> -Recurse</div><div class=\\"line\\" id=\\"LC56\\"><br /></div><div class=\\"line\\" id=\\"LC57\\"><span class=\\"c\\"># 10.</span></div><div class=\\"line\\" id=\\"LC58\\">Get-ChildItem <span class=\\"nv\\">$hgtest</span> | Remove-Item -Recurse -Force</div><div class=\\"line\\" id=\\"LC59\\"><br /></div><div class=\\"line\\" id=\\"LC60\\"><span class=\\"c\\"># 11.</span></div><div class=\\"line\\" id=\\"LC61\\">Get-ChildItem <span class=\\"nv\\">$afwcftestsource</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC62\\">&nbsp;&nbsp;&nbsp;&nbsp;| where<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span>.Name -notlike <span class=\\"s2\\">&quot;Tools*&quot;</span> -and <span class=\\"nv\\">$_</span>.Name -notlike <span class=\\"s2\\">&quot;*Resharper*&quot;</span><span class=\\"o\\">}</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC63\\">&nbsp;&nbsp;&nbsp;&nbsp;| Copy-Item -Destination <span class=\\"nv\\">$hgtest</span> -Recurse</div><div class=\\"line\\" id=\\"LC64\\"><br /></div><div class=\\"line\\" id=\\"LC65\\">Copy-Item -Path <span class=\\"o\\">(</span><span class=\\"nv\\">$afcommontest</span> + <span class=\\"s2\\">&quot;\\\\Common&quot;</span><span class=\\"o\\">)</span> -Destination <span class=\\"o\\">(</span><span class=\\"nv\\">$hgtest</span> + <span class=\\"s2\\">&quot;\\\\testcommon\\\\Common&quot;</span><span class=\\"o\\">)</span> -Recurse</div><div class=\\"line\\" id=\\"LC66\\">Copy-Item -Path <span class=\\"o\\">(</span><span class=\\"nv\\">$afcommontest</span> + <span class=\\"s2\\">&quot;\\\\WCF&quot;</span><span class=\\"o\\">)</span> -Destination <span class=\\"o\\">(</span><span class=\\"nv\\">$hgtest</span> + <span class=\\"s2\\">&quot;\\\\testcommon\\\\WCF&quot;</span><span class=\\"o\\">)</span> -Recurse</div><div class=\\"line\\" id=\\"LC67\\"><br /></div><div class=\\"line\\" id=\\"LC68\\"><span class=\\"c\\"># 12.</span></div><div class=\\"line\\" id=\\"LC69\\"><span class=\\"c\\"># may be able to do this without the temp file hop (http://stackoverflow.com/questions/750449/converting-xml-from-utf-16-to-utf-8-using-powershell)</span></div><div class=\\"line\\" id=\\"LC70\\"><span class=\\"c\\"># -&gt; nope, tried and it still fails with an insufficient access error</span></div><div class=\\"line\\" id=\\"LC71\\"><span class=\\"nv\\">$tempfilesuffix</span> <span class=\\"o\\">=</span> <span class=\\"s2\\">&quot;_TEMP&quot;</span></div><div class=\\"line\\" id=\\"LC72\\"><br /></div><div class=\\"line\\" id=\\"LC73\\"><span class=\\"nv\\">$projectfiles</span> <span class=\\"o\\">=</span> Get-ChildItem <span class=\\"nv\\">$hgsrc</span> -Recurse -Include *.csproj</div><div class=\\"line\\" id=\\"LC74\\"><span class=\\"nv\\">$projectfiles</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC75\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span> <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$_</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC76\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Convert-Xml -XsltPath .<span class=\\"se\\">\\\\E</span>nlistedCITProj2CodePlexCITProj.xslt <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC77\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Out-File <span class=\\"o\\">(</span><span class=\\"nv\\">$filename</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> <span class=\\"o\\">}</span></div><div class=\\"line\\" id=\\"LC78\\"><br /></div><div class=\\"line\\" id=\\"LC79\\"><span class=\\"nv\\">$projectfiles</span> | Remove-Item -Force</div><div class=\\"line\\" id=\\"LC80\\"><br /></div><div class=\\"line\\" id=\\"LC81\\">Get-ChildItem <span class=\\"nv\\">$hgsrc</span> -Recurse -Include <span class=\\"o\\">(</span><span class=\\"s1\\">\'*.csproj\'</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> | <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC82\\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\\"o\\">{</span> <span class=\\"nv\\">$filepath</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.Name; <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC83\\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC84\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\\"nv\\">$filepath</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC85\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\\"nv\\">$filename</span>.Substring<span class=\\"o\\">(</span>0, <span class=\\"nv\\">$filename</span>.LastIndexOf<span class=\\"o\\">(</span><span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">))</span> <span class=\\"o\\">}</span></div><div class=\\"line\\" id=\\"LC86\\"><br /></div><div class=\\"line\\" id=\\"LC87\\"><span class=\\"nv\\">$testprojectfiles</span> <span class=\\"o\\">=</span> Get-ChildItem <span class=\\"nv\\">$hgtest</span> -Recurse -Include *.csproj</div><div class=\\"line\\" id=\\"LC88\\"><span class=\\"nv\\">$testprojectfiles</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC89\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span> <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$_</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC90\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Convert-Xml -XsltPath .<span class=\\"se\\">\\\\E</span>nlistedCITProj2CodePlexCITProj.xslt <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC91\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Out-File <span class=\\"o\\">(</span><span class=\\"nv\\">$filename</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> <span class=\\"o\\">}</span></div><div class=\\"line\\" id=\\"LC92\\"><br /></div><div class=\\"line\\" id=\\"LC93\\"><span class=\\"nv\\">$testprojectfiles</span> | Remove-Item -Force</div><div class=\\"line\\" id=\\"LC94\\"><br /></div><div class=\\"line\\" id=\\"LC95\\">Get-ChildItem <span class=\\"nv\\">$hgtest</span> -Recurse -Include <span class=\\"o\\">(</span><span class=\\"s1\\">\'*.csproj\'</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> | <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC96\\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\\"o\\">{</span> <span class=\\"nv\\">$filepath</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.Name; <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC97\\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC98\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\\"nv\\">$filepath</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC99\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\\"nv\\">$filename</span>.Substring<span class=\\"o\\">(</span>0, <span class=\\"nv\\">$filename</span>.LastIndexOf<span class=\\"o\\">(</span><span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">))</span> <span class=\\"o\\">}</span>        </div><div class=\\"line\\" id=\\"LC100\\"><br /></div><div class=\\"line\\" id=\\"LC101\\"><span class=\\"c\\"># 13.</span></div><div class=\\"line\\" id=\\"LC102\\"><span class=\\"nv\\">$regex</span> <span class=\\"o\\">=</span> <span class=\\"s1\\">\'(\\\\[assembly:\\\\s?InternalsVisibleTo\\\\(\\\\&quot;[\\\\w\\\\d\\\\.]+)\\\\s?,\\\\s?.+\'</span></div><div class=\\"line\\" id=\\"LC103\\"><br /></div><div class=\\"line\\" id=\\"LC104\\"><span class=\\"nv\\">$assemblyInfoFiles</span> <span class=\\"o\\">=</span> Get-ChildItem <span class=\\"nv\\">$hgsrc</span> -Recurse | where<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span>.Name -eq <span class=\\"s2\\">&quot;AssemblyInfo.cs&quot;</span><span class=\\"o\\">}</span></div><div class=\\"line\\" id=\\"LC105\\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC106\\"><span class=\\"nv\\">$assemblyInfoFiles</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC107\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span> <span class=\\"nv\\">$filename</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$_</span>.FullName; <span class=\\"o\\">(</span>Get-Content <span class=\\"nv\\">$filename</span><span class=\\"o\\">)</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC108\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span> -replace <span class=\\"nv\\">$regex</span>, <span class=\\"s1\\">\'$1&quot;)]\'</span><span class=\\"o\\">}</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC109\\">&nbsp;&nbsp;&nbsp;&nbsp;| Set-Content <span class=\\"o\\">(</span><span class=\\"nv\\">$filename</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)}</span></div><div class=\\"line\\" id=\\"LC110\\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC111\\"><span class=\\"nv\\">$assemblyInfoFiles</span> | Remove-Item -Force</div><div class=\\"line\\" id=\\"LC112\\"><br /></div><div class=\\"line\\" id=\\"LC113\\">Get-ChildItem <span class=\\"nv\\">$hgsrc</span> -Recurse -Include <span class=\\"o\\">(</span><span class=\\"s1\\">\'AssemblyInfo.cs\'</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> | <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC114\\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\\"o\\">{</span> <span class=\\"nv\\">$filepath</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.Name; <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC115\\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC116\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\\"nv\\">$filepath</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC117\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\\"nv\\">$filename</span>.Substring<span class=\\"o\\">(</span>0, <span class=\\"nv\\">$filename</span>.LastIndexOf<span class=\\"o\\">(</span><span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">))</span> <span class=\\"o\\">}</span>    </div><div class=\\"line\\" id=\\"LC118\\"><br /></div><div class=\\"line\\" id=\\"LC119\\"><span class=\\"c\\"># 14.</span></div><div class=\\"line\\" id=\\"LC120\\"><span class=\\"nv\\">$configregex</span> <span class=\\"o\\">=</span> <span class=\\"s1\\">\'\\\\&quot;([\\\\w\\\\.\\\\d]+\\\\s*,\\\\s*[\\\\w\\\\.\\\\d]+)[,\\\\w\\\\s\\\\d\\\\.=]+\\\\&quot;\'</span></div><div class=\\"line\\" id=\\"LC121\\"><br /></div><div class=\\"line\\" id=\\"LC122\\"><span class=\\"nv\\">$testconfigpath</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$hgtest</span> + <span class=\\"s2\\">&quot;\\\\Microsoft.ApplicationServer.Http\\\\Unit\\\\ConfigFiles&quot;</span></div><div class=\\"line\\" id=\\"LC123\\"><span class=\\"nv\\">$testconfigfiles</span> <span class=\\"o\\">=</span> Get-ChildItem <span class=\\"nv\\">$testconfigpath</span> -Recurse | where<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span>.Name -like <span class=\\"s2\\">&quot;*.config&quot;</span><span class=\\"o\\">}</span></div><div class=\\"line\\" id=\\"LC124\\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC125\\"><span class=\\"nv\\">$testconfigfiles</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC126\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span> <span class=\\"nv\\">$filename</span> <span class=\\"o\\">=</span> <span class=\\"nv\\">$_</span>.FullName; <span class=\\"o\\">(</span>Get-Content <span class=\\"nv\\">$filename</span><span class=\\"o\\">)</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC127\\">&nbsp;&nbsp;&nbsp;&nbsp;| %<span class=\\"o\\">{</span><span class=\\"nv\\">$_</span> -replace <span class=\\"nv\\">$configregex</span>, <span class=\\"s1\\">\'&quot;$1&quot;\'</span><span class=\\"o\\">}</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC128\\">&nbsp;&nbsp;&nbsp;&nbsp;| Set-Content <span class=\\"o\\">(</span><span class=\\"nv\\">$filename</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)}</span></div><div class=\\"line\\" id=\\"LC129\\">&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC130\\"><span class=\\"nv\\">$testconfigfiles</span> | Remove-Item -Force</div><div class=\\"line\\" id=\\"LC131\\"><br /></div><div class=\\"line\\" id=\\"LC132\\">Get-ChildItem <span class=\\"nv\\">$testconfigpath</span> -Recurse -Include <span class=\\"o\\">(</span><span class=\\"s1\\">\'*.config\'</span> + <span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">)</span> | <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC133\\">&nbsp;&nbsp;&nbsp;&nbsp;%<span class=\\"o\\">{</span> <span class=\\"nv\\">$filepath</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.FullName; <span class=\\"nv\\">$filename</span><span class=\\"o\\">=</span><span class=\\"nv\\">$_</span>.Name; <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC134\\">&nbsp;&nbsp;&nbsp;&nbsp;Rename-Item <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC135\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-Path <span class=\\"nv\\">$filepath</span> <span class=\\"sb\\">`</span></div><div class=\\"line\\" id=\\"LC136\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-NewName <span class=\\"nv\\">$filename</span>.Substring<span class=\\"o\\">(</span>0, <span class=\\"nv\\">$filename</span>.LastIndexOf<span class=\\"o\\">(</span><span class=\\"nv\\">$tempfilesuffix</span><span class=\\"o\\">))</span> <span class=\\"o\\">}</span> </div></pre></div>\\n            \\n          </div>\\n\\n          <div class=\\"gist-meta\\">\\n            <a href=\\"https://gist.github.com/raw/1209919/2f8c6ae8e8a416017d9fc130f44555b3b19a3b22/gistfile1.sh\\" style=\\"float: right;\\">view raw</a>\\n            <a href=\\"https://gist.github.com/1209919#file_gistfile1.sh\\" style=\\"float: right; margin-right: 10px; color: #666;\\">gistfile1.sh</a>\\n            <a href=\\"https://gist.github.com/1209919\\">This Gist</a> brought to you by <a href=\\"http://github.com\\">GitHub</a>.\\n          </div>\\n        </div>\\n      \\n    \\n  \\n</div>\\n</noscript>\\n<p>Additionally, a big part of the workflow is transforming project files to remove any dependencies on internal libraries and tools.&nbsp; For this workflow task, XSLT was the right fit \\u2013 and that XSLT looks like this:</p>\\n<noscript><div class=\\"gist\\" id=\\"gist-1209930\\">\\n  \\n  \\n    \\n      \\n        \\n        \\n\\n        <div class=\\"gist-file\\">\\n          <div class=\\"gist-data gist-syntax\\">\\n            \\n            \\n            \\n              <div class=\\"highlight\\"><pre><div class=\\"line\\" id=\\"LC1\\"><span class=\\"cp\\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></div><div class=\\"line\\" id=\\"LC2\\"><span class=\\"nt\\">&lt;xsl:stylesheet</span> <span class=\\"na\\">version=</span><span class=\\"s\\">&quot;1.0&quot;</span></div><div class=\\"line\\" id=\\"LC3\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"na\\">xmlns:xsl=</span><span class=\\"s\\">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span></div><div class=\\"line\\" id=\\"LC4\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"na\\">xmlns:msxsl=</span><span class=\\"s\\">&quot;urn:schemas-microsoft-com:xslt&quot;</span> <span class=\\"na\\">exclude-result-prefixes=</span><span class=\\"s\\">&quot;msxsl b&quot;</span></div><div class=\\"line\\" id=\\"LC5\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"na\\">xmlns:b=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC6\\"><br /></div><div class=\\"line\\" id=\\"LC7\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:output</span> <span class=\\"na\\">method=</span><span class=\\"s\\">&quot;xml&quot;</span> <span class=\\"na\\">indent=</span><span class=\\"s\\">&quot;yes&quot;</span> <span class=\\"na\\">encoding=</span><span class=\\"s\\">&quot;UTF-8&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC8\\"><br /></div><div class=\\"line\\" id=\\"LC9\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;/b:Project&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC10\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:copy&gt;</span></div><div class=\\"line\\" id=\\"LC11\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:apply-templates</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;@*&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC12\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:apply-templates</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:PropertyGroup&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC13\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:apply-templates</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:ItemGroup&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC14\\"><br /></div><div class=\\"line\\" id=\\"LC15\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"c\\">&lt;!-- Add the import for common C# build targets --&gt;</span></div><div class=\\"line\\" id=\\"LC16\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:element</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Import&quot;</span> <span class=\\"na\\">namespace=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC17\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Project&quot;</span><span class=\\"nt\\">&gt;</span>$(MSBuildToolsPath)\\\\Microsoft.CSharp.targets<span class=\\"nt\\">&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC18\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:element&gt;</span></div><div class=\\"line\\" id=\\"LC19\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:copy&gt;</span></div><div class=\\"line\\" id=\\"LC20\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC21\\"><br /></div><div class=\\"line\\" id=\\"LC22\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:PropertyGroup[./b:ProjectGuid]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC23\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;PropertyGroup</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC24\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;HgRootDirectory&gt;</span>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), \'.hgignore\'))<span class=\\"nt\\">&lt;/HgRootDirectory&gt;</span></div><div class=\\"line\\" id=\\"LC25\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Configuration</span> <span class=\\"na\\">Condition=</span><span class=\\"s\\">&quot; \'$(Configuration)\' == \'\' &quot;</span><span class=\\"nt\\">&gt;</span>Debug<span class=\\"nt\\">&lt;/Configuration&gt;</span></div><div class=\\"line\\" id=\\"LC26\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Platform</span> <span class=\\"na\\">Condition=</span><span class=\\"s\\">&quot; \'$(Platform)\' == \'\' &quot;</span><span class=\\"nt\\">&gt;</span>AnyCPU<span class=\\"nt\\">&lt;/Platform&gt;</span></div><div class=\\"line\\" id=\\"LC27\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ProductVersion&gt;</span>8.0.30703<span class=\\"nt\\">&lt;/ProductVersion&gt;</span></div><div class=\\"line\\" id=\\"LC28\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;SchemaVersion&gt;</span>2.0<span class=\\"nt\\">&lt;/SchemaVersion&gt;</span></div><div class=\\"line\\" id=\\"LC29\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:if</span> <span class=\\"na\\">test=</span><span class=\\"s\\">&quot;b:AllowUnsafeBlocks&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC30\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;AllowUnsafeBlocks&gt;</span></div><div class=\\"line\\" id=\\"LC31\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:AllowUnsafeBlocks&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC32\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/AllowUnsafeBlocks&gt;</span></div><div class=\\"line\\" id=\\"LC33\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:if&gt;</span></div><div class=\\"line\\" id=\\"LC34\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ProjectGuid&gt;</span></div><div class=\\"line\\" id=\\"LC35\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:ProjectGuid&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC36\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/ProjectGuid&gt;</span></div><div class=\\"line\\" id=\\"LC37\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;OutputType&gt;</span></div><div class=\\"line\\" id=\\"LC38\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:OutputType&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC39\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/OutputType&gt;</span></div><div class=\\"line\\" id=\\"LC40\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;AppDesignerFolder&gt;</span></div><div class=\\"line\\" id=\\"LC41\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:AppDesignerFolder&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC42\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/AppDesignerFolder&gt;</span></div><div class=\\"line\\" id=\\"LC43\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;RootNamespace&gt;</span></div><div class=\\"line\\" id=\\"LC44\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:RootNamespace&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC45\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/RootNamespace&gt;</span></div><div class=\\"line\\" id=\\"LC46\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;AssemblyName&gt;</span></div><div class=\\"line\\" id=\\"LC47\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:AssemblyName&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC48\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/AssemblyName&gt;</span></div><div class=\\"line\\" id=\\"LC49\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:if</span> <span class=\\"na\\">test=</span><span class=\\"s\\">&quot;b:ProjectTypeGuids&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC50\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ProjectTypeGuids&gt;</span></div><div class=\\"line\\" id=\\"LC51\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:ProjectTypeGuids&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC52\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/ProjectTypeGuids&gt;</span></div><div class=\\"line\\" id=\\"LC53\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:if&gt;</span></div><div class=\\"line\\" id=\\"LC54\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:if</span> <span class=\\"na\\">test=</span><span class=\\"s\\">&quot;b:AssemblyClsCompliant&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC55\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;AssemblyClsCompliant&gt;</span></div><div class=\\"line\\" id=\\"LC56\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:AssemblyClsCompliant&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC57\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/AssemblyClsCompliant&gt;</span></div><div class=\\"line\\" id=\\"LC58\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:if&gt;</span></div><div class=\\"line\\" id=\\"LC59\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;TargetFrameworkVersion&gt;</span>v4.0<span class=\\"nt\\">&lt;/TargetFrameworkVersion&gt;</span></div><div class=\\"line\\" id=\\"LC60\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;FileAlignment&gt;</span>512<span class=\\"nt\\">&lt;/FileAlignment&gt;</span></div><div class=\\"line\\" id=\\"LC61\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/PropertyGroup&gt;</span></div><div class=\\"line\\" id=\\"LC62\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;PropertyGroup</span> <span class=\\"na\\">Condition=</span><span class=\\"s\\">&quot; \'$(Configuration)|$(Platform)\' == \'Debug|AnyCPU\' &quot;</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC63\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DebugSymbols&gt;</span>true<span class=\\"nt\\">&lt;/DebugSymbols&gt;</span></div><div class=\\"line\\" id=\\"LC64\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DebugType&gt;</span>full<span class=\\"nt\\">&lt;/DebugType&gt;</span></div><div class=\\"line\\" id=\\"LC65\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Optimize&gt;</span>false<span class=\\"nt\\">&lt;/Optimize&gt;</span></div><div class=\\"line\\" id=\\"LC66\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;OutputPath&gt;</span>bin\\\\Debug\\\\<span class=\\"nt\\">&lt;/OutputPath&gt;</span></div><div class=\\"line\\" id=\\"LC67\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DefineConstants&gt;</span>DEBUG;TRACE;NET_4<span class=\\"nt\\">&lt;/DefineConstants&gt;</span></div><div class=\\"line\\" id=\\"LC68\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ErrorReport&gt;</span>prompt<span class=\\"nt\\">&lt;/ErrorReport&gt;</span></div><div class=\\"line\\" id=\\"LC69\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;WarningLevel&gt;</span>4<span class=\\"nt\\">&lt;/WarningLevel&gt;</span></div><div class=\\"line\\" id=\\"LC70\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/PropertyGroup&gt;</span></div><div class=\\"line\\" id=\\"LC71\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;PropertyGroup</span> <span class=\\"na\\">Condition=</span><span class=\\"s\\">&quot; \'$(Configuration)|$(Platform)\' == \'Release|AnyCPU\' &quot;</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC72\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DebugType&gt;</span>pdbonly<span class=\\"nt\\">&lt;/DebugType&gt;</span></div><div class=\\"line\\" id=\\"LC73\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Optimize&gt;</span>true<span class=\\"nt\\">&lt;/Optimize&gt;</span></div><div class=\\"line\\" id=\\"LC74\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;OutputPath&gt;</span>bin\\\\Release\\\\<span class=\\"nt\\">&lt;/OutputPath&gt;</span></div><div class=\\"line\\" id=\\"LC75\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DefineConstants&gt;</span>TRACE;NET_4<span class=\\"nt\\">&lt;/DefineConstants&gt;</span></div><div class=\\"line\\" id=\\"LC76\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ErrorReport&gt;</span>prompt<span class=\\"nt\\">&lt;/ErrorReport&gt;</span></div><div class=\\"line\\" id=\\"LC77\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;WarningLevel&gt;</span>4<span class=\\"nt\\">&lt;/WarningLevel&gt;</span></div><div class=\\"line\\" id=\\"LC78\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;DocumentationFile&gt;</span>bin\\\\Release\\\\Microsoft.ApplicationServer.Http.XML<span class=\\"nt\\">&lt;/DocumentationFile&gt;</span></div><div class=\\"line\\" id=\\"LC79\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/PropertyGroup&gt;</span></div><div class=\\"line\\" id=\\"LC80\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC81\\"><br /></div><div class=\\"line\\" id=\\"LC82\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Assembly reference patterns--&gt;</span></div><div class=\\"line\\" id=\\"LC83\\">&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC84\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--GAC (assembly name) references--&gt;</span></div><div class=\\"line\\" id=\\"LC85\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:Reference[not(contains(@Include, \'\\\\\'))]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC86\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Reference</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC87\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Include&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC88\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;@Include&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC89\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC90\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:if</span> <span class=\\"na\\">test=</span><span class=\\"s\\">&quot;b:HintPath&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC91\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;HintPath&gt;&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:HintPath&quot;</span><span class=\\"nt\\">/&gt;&lt;/HintPath&gt;</span></div><div class=\\"line\\" id=\\"LC92\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:if&gt;</span></div><div class=\\"line\\" id=\\"LC93\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Reference&gt;</span></div><div class=\\"line\\" id=\\"LC94\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC95\\">&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC96\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--.NET 4.0 framework assemblies--&gt;</span></div><div class=\\"line\\" id=\\"LC97\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:Reference[contains(@Include,\'\\\\public\\\\ext\\\\sdk\\\\CLR\\\\netfx40rtm\\\\\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC98\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Reference</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC99\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Include&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC100\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;substring-after(@Include, \'\\\\public\\\\ext\\\\sdk\\\\CLR\\\\netfx40rtm\\\\\')&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC101\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC102\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Reference&gt;</span></div><div class=\\"line\\" id=\\"LC103\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC104\\"><br /></div><div class=\\"line\\" id=\\"LC105\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Visual Studio 2010 SDK assemblies--&gt;</span></div><div class=\\"line\\" id=\\"LC106\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:Reference[contains(@Include,\'$(INETROOT)\\\\public\\\\ext\\\\VisualStudio\\\\VS10RTM\\\\PublicAssemblies\\\\\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC107\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Reference</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC108\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Include&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC109\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;substring-after(@Include, \'$(INETROOT)\\\\public\\\\ext\\\\VisualStudio\\\\VS10RTM\\\\PublicAssemblies\\\\\')&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC110\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC111\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Reference&gt;</span></div><div class=\\"line\\" id=\\"LC112\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC113\\"><br /></div><div class=\\"line\\" id=\\"LC114\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--ODataLib --&gt;</span></div><div class=\\"line\\" id=\\"LC115\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:Reference[contains(@Include, \'System.Data.OData.dll\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC116\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Reference</span> <span class=\\"na\\">Include=</span><span class=\\"s\\">&quot;$(HgRootDirectory)\\\\Lib\\\\Odata\\\\System.Data.OData.dll&quot;</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC117\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC118\\"><br /></div><div class=\\"line\\" id=\\"LC119\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Unrecognized assembly reference--&gt;</span></div><div class=\\"line\\" id=\\"LC120\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:Reference&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC121\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:comment&gt;</span>Reference to an unrecognized assembly: <span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;./@Include&quot;</span><span class=\\"nt\\">/&gt;&lt;/xsl:comment&gt;</span></div><div class=\\"line\\" id=\\"LC122\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC123\\"><br /></div><div class=\\"line\\" id=\\"LC124\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Project reference patterns--&gt;</span></div><div class=\\"line\\" id=\\"LC125\\">&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC126\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--ODataLib project reference--&gt;</span></div><div class=\\"line\\" id=\\"LC127\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:ProjectReference[./b:Name=\'ODataLib\']&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC128\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:comment&gt;</span>commenting out odatalib project reference<span class=\\"nt\\">&lt;/xsl:comment&gt;</span></div><div class=\\"line\\" id=\\"LC129\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC130\\"><br /></div><div class=\\"line\\" id=\\"LC131\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Product code project references --&gt;</span></div><div class=\\"line\\" id=\\"LC132\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:ProjectReference[contains(@Include, \'\\\\source\\\\\') or contains(@Include, \'$(WCFSource)\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC133\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ProjectReference</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC134\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Include&quot;</span><span class=\\"nt\\">&gt;</span>$(HgRootDirectory)\\\\WCFWebApi\\\\Http\\\\Src\\\\<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Name&quot;</span><span class=\\"nt\\">/&gt;</span>\\\\<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Name&quot;</span><span class=\\"nt\\">/&gt;</span>.csproj<span class=\\"nt\\">&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC135\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Project&gt;</span></div><div class=\\"line\\" id=\\"LC136\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Project&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC137\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Project&gt;</span></div><div class=\\"line\\" id=\\"LC138\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Name&gt;</span></div><div class=\\"line\\" id=\\"LC139\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Name&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC140\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Name&gt;</span></div><div class=\\"line\\" id=\\"LC141\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/ProjectReference&gt;</span></div><div class=\\"line\\" id=\\"LC142\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC143\\">&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC144\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Testcommon project references --&gt;</span></div><div class=\\"line\\" id=\\"LC145\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:ProjectReference[contains(@Include, \'\\\\testcommon\\\\\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC146\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;ProjectReference</span> <span class=\\"na\\">xmlns=</span><span class=\\"s\\">&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC147\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:attribute</span> <span class=\\"na\\">name=</span><span class=\\"s\\">&quot;Include&quot;</span><span class=\\"nt\\">&gt;</span>$(HgRootDirectory)\\\\WCFWebApi\\\\Http\\\\Test\\\\testcommon\\\\<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;substring-after(@Include, \'\\\\testcommon\\\\\')&quot;</span> <span class=\\"nt\\">/&gt;&lt;/xsl:attribute&gt;</span></div><div class=\\"line\\" id=\\"LC148\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Project&gt;</span></div><div class=\\"line\\" id=\\"LC149\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Project&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC150\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Project&gt;</span></div><div class=\\"line\\" id=\\"LC151\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;Name&gt;</span></div><div class=\\"line\\" id=\\"LC152\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;b:Name&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC153\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/Name&gt;</span></div><div class=\\"line\\" id=\\"LC154\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/ProjectReference&gt;</span></div><div class=\\"line\\" id=\\"LC155\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC156\\">&nbsp;&nbsp;</div><div class=\\"line\\" id=\\"LC157\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Internal Moles project references - ignore --&gt;</span></div><div class=\\"line\\" id=\\"LC158\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:ProjectReference[contains(./b:Name, \'.Moles\')]&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC159\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:comment&gt;</span>Reference to internal Moles project: <span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;@Include&quot;</span><span class=\\"nt\\">/&gt;&lt;/xsl:comment&gt;</span></div><div class=\\"line\\" id=\\"LC160\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC161\\"><br /></div><div class=\\"line\\" id=\\"LC162\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Moles assembly includes--&gt;</span></div><div class=\\"line\\" id=\\"LC163\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;b:ItemGroup/b:Moles&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC164\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:comment&gt;</span>Temporarily removing ItemGroup/<span class=\\"nt\\">&lt;xsl:value-of</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;@Include&quot;</span><span class=\\"nt\\">/&gt;</span> reference<span class=\\"nt\\">&lt;/xsl:comment&gt;</span></div><div class=\\"line\\" id=\\"LC165\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC166\\"><br /></div><div class=\\"line\\" id=\\"LC167\\">&nbsp;&nbsp;<span class=\\"c\\">&lt;!--Identity xform--&gt;</span></div><div class=\\"line\\" id=\\"LC168\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:template</span> <span class=\\"na\\">match=</span><span class=\\"s\\">&quot;@* | node()&quot;</span><span class=\\"nt\\">&gt;</span></div><div class=\\"line\\" id=\\"LC169\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:copy&gt;</span></div><div class=\\"line\\" id=\\"LC170\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;xsl:apply-templates</span> <span class=\\"na\\">select=</span><span class=\\"s\\">&quot;@* | node()&quot;</span><span class=\\"nt\\">/&gt;</span></div><div class=\\"line\\" id=\\"LC171\\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:copy&gt;</span></div><div class=\\"line\\" id=\\"LC172\\">&nbsp;&nbsp;<span class=\\"nt\\">&lt;/xsl:template&gt;</span></div><div class=\\"line\\" id=\\"LC173\\"><span class=\\"nt\\">&lt;/xsl:stylesheet&gt;</span></div></pre></div>\\n            \\n          </div>\\n\\n          <div class=\\"gist-meta\\">\\n            <a href=\\"https://gist.github.com/raw/1209930/e94df9b3279f606166a3d7b7375c9526d8ed9f37/gistfile1.xml\\" style=\\"float: right;\\">view raw</a>\\n            <a href=\\"https://gist.github.com/1209930#file_gistfile1.xml\\" style=\\"float: right; margin-right: 10px; color: #666;\\">gistfile1.xml</a>\\n            <a href=\\"https://gist.github.com/1209930\\">This Gist</a> brought to you by <a href=\\"http://github.com\\">GitHub</a>.\\n          </div>\\n        </div>\\n      \\n    \\n  \\n</div>\\n</noscript>\\n<p>I hope that this proves helpful if you ever find yourself in the position where you have to regularly keep code in sync between 2 different repositories (or even the same repositories with different folder structures).&nbsp; And like I said, I welcome feedback on how I can improve my PowerShell.</p>\\n<img height=\\"1\\" src=\\"http://feeds.feedburner.com/~r/CodeBetter/~4/r8j_Lvbp0Uk\\" width=\\"1\\" />", "summary": "If you\\u2019ve been following wcf.codeplex.com, you\\u2019ll notice that we\\u2019ve had a flurry of activity over the last couple of weeks, culminating in the release of Web API preview 5.&#160; If you\\u2019ve been following our Codeplex repository for a while, you\\u2019ll&#160;&#8230; <a href=\\"http://codebetter.com/howarddi", "id": "http://codebetter.com/howarddierking/2011/09/11/one-of-the-small-costs-of-transparency/", "categories": ["Howard Dierking"], "metadata": {"guid": "d73fbf88-5f1c-46ab-b18e-c6409e14742a", "likes": 0, "is_published": true}}, {"author": "Scott Wilson (noreply@blogger.com)", "url": "http://pixelmaniacuk.blogspot.com/2011/09/september-update.html", "title": "September Update", "datetime": "2011-09-11T18:23:26.453000", "html": "Hey guys! Again, it\'s been a long time since&nbsp;I\'ve done a blog update!<br /><br />So what\'s new?<br /><br />I\'ve continued to work heavily with Spiral Game Studios and been making a massive impact on their game \\"Orion: Prelude\\" and have been offered a studio job. Here is some recent progress of the game!<br /><br /><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"></div><div class=\\"separator\\" style=\\"clear: both; text-align: center;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">Note that Spiral Games have recently been at GamesCom and PAX! Was very busy times for our CEO..</div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">I have now moved back to England to finish my university masters degree so hopefully that goes smooth along with my work with Spiral.. My main masters project will be based on creating a customisable character creation system for UE3 and I will post updates later in the year on that!</div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">Game creator \\"Dan Da Rocha has asked me to create the outro cut scene for the up-comming puzzle game Q.U.B.E, so I also look forward to that =)</div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\">That\'s it really! I also have two new blogs, one on the spiral game studios forums and one on the game dev forum! Links are below..</div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><a href=\\"http://spiralforums.com/viewtopic.php?f=3&amp;t=1876\\">http://spiralforums.com/viewtopic.php?f=3&amp;t=1876</a></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><a href=\\"http://www.games-dev.com/forum/topic/2498-scotts-tech-blog/page__fromsearch__1\\">http://www.games-dev.com/forum/topic/2498-scotts-tech-blog/page__fromsearch__1</a></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"separator\\" style=\\"clear: both; text-align: left;\\"><br /></div><div class=\\"blogger-post-footer\\"><img alt=\\"\\" height=\\"1\\" src=\\"https://blogger.googleusercontent.com/tracker/4062822994372279709-8640331304899460507?l=pixelmaniacuk.blogspot.com\\" width=\\"1\\" /></div>", "summary": "Hey guys! Again, it\'s been a long time since&nbsp;I\'ve done a blog update!<br /><br />So what\'s new?<br /><br />I\'ve continued to work heavily with Spiral Game Studios and been making a massive impact on their game \\"Orion: Prelude\\" and have been offered a studio job. Here is some recent progress of ", "id": "tag:blogger.com,1999:blog-4062822994372279709.post-8640331304899460507", "categories": [], "metadata": {"guid": "a6845ad6-4f93-4bed-aca1-f1b1cdb5e60b", "likes": 0, "is_published": false}}, {"author": "Zoltan", "url": "http://www.zspline.net/blog/2011/09/11/seamless-tiling-filter/", "title": "Seamless tiling filter", "datetime": "2011-09-11T16:19:32", "html": "<p>I made a filter for Filter Forge which makes an image seamlessly tiling.</p>\\n<table align=\\"center\\" border=\\"0\\">\\n<tbody>\\n<tr>\\n<td>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 170px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04a.jpg\\" rel=\\"prettyphoto[1515]\\" title=\\"example04a.jpg\\"><img alt=\\"\\" class=\\"thumb  \\" height=\\"160\\" id=\\"thumb755\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04a.jpg?22742010\\" width=\\"160\\" /></a>\\n<p class=\\"wp-caption-text\\">Original</p>\\n</div>\\n</td>\\n<td>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 170px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04b.jpg\\" rel=\\"prettyphoto[1515]\\" title=\\"example04b.jpg\\"><img alt=\\"\\" class=\\"thumb \\" height=\\"160\\" id=\\"thumb756\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04b.jpg\\" width=\\"160\\" /></a>\\n<p class=\\"wp-caption-text\\">Seams</p>\\n</div>\\n</td>\\n<td>\\n<div class=\\"wp-caption aligncenter\\" style=\\"width: 170px;\\"><a href=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/example04c.jpg\\" rel=\\"prettyphoto[1515]\\" title=\\"example04c.jpg\\"><img alt=\\"\\" class=\\"thumb \\" height=\\"160\\" id=\\"thumb757\\" src=\\"http://www.zspline.net/blog/wp-content/gallery/tutorial_theseamlesstilingfilter/thumbs/thumbs_example04c.jpg\\" width=\\"160\\" /></a>\\n<p class=\\"wp-caption-text\\">Fixed seams</p>\\n</div>\\n</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>It can be downloaded from <a href=\\"http://www.filterforge.com/filters/9908.html\\" target=\\"_blank\\">here</a> while the discussion thread is <a href=\\"http://www.filterforge.com/forum/read.php?FID=11&amp;TID=8785&amp;MID=95230#message95230\\" target=\\"_blank\\">here</a>. The explanation of the filter parameters can be found in the <a href=\\"http://www.zspline.net/blog/the-seamless-tiling-filter/\\">Seamless tiling filter reference</a> article.<!-- PHP 5.x --></p>", "summary": "I made a filter for Filter Forge which makes an image seamlessly tiling. It can be downloaded from here while the discussion thread is here. The explanation of the filter parameters can be found in the Seamless tiling filter reference article.", "id": "http://www.zspline.net/blog/?p=1515", "categories": [], "metadata": {"guid": "f64394f4-67d7-4d42-a0ec-53c2bd621dcf", "likes": 0, "is_published": false}}, {"author": "Unknown Author", "url": "http://shawnkirsch.tumblr.com/post/10071612426", "title": "\\"When a man walks into a room, he brings his whole life with him. He has a million reasons for being...\\"", "datetime": "2011-09-11T01:55:21", "html": "\\u201cWhen a man walks into a room, he brings his whole life with him. He has a million reasons for being anywhere, just ask him. If you listen, he\\u2019ll tell you how he got there. How he forgot where he was going, and that he woke up. If you listen, he\\u2019ll tell you about the time he thought he was an angel or dreamt of being perfect. And then he\\u2019ll smile with wisdom, content that he realized the world isn\\u2019t perfect. We\\u2019re flawed, because we want so much more. We\\u2019re ruined, because we get these things, and wish for what we had.\\u201d<br /><br /> - <em>Don Draper Season 4 Episode 8</em>", "summary": "\\u201cWhen a man walks into a room, he brings his whole life with him. He has a million reasons for being anywhere, just ask him. If you listen, he\\u2019ll tell you how he got there. How he forgot where he was going, and that he woke up. If you listen, he\\u2019ll tell you about the time he thought he was an angel ", "id": "http://shawnkirsch.tumblr.com/post/10071612426", "categories": [], "metadata": {"guid": "29318c31-8d7f-4bf6-be31-1b6a8568b1fb", "likes": 0, "is_published": false}}, {"author": "Jonas Avrin", "url": "http://www.jonasavrin.com/2011/09/08/coast-to-coast-blue-sky-here-i-come/", "title": "Coast to Coast!  Blue Sky here I come!", "datetime": "2011-09-08T18:27:29", "html": "<div class=\\"wp-caption aligncenter\\" id=\\"attachment_2890\\" style=\\"width: 310px;\\"><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup.jpg\\" rel=\\"lightbox[2889]\\"><img alt=\\"Scrat Continental Crackup\\" class=\\"size-medium wp-image-2890 \\" height=\\"127\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/scrat_cont_crackup-300x127.jpg\\" title=\\"scrat_cont_crackup\\" width=\\"300\\" /></a><p class=\\"wp-caption-text\\">How I\'ve felt for so long about working in VFX/Anim industry.</p></div>\\n<div class=\\"wp-caption aligncenter\\" id=\\"attachment_2891\\" style=\\"width: 310px;\\"><a href=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift.jpg\\" rel=\\"lightbox[2889]\\"><img alt=\\"Ice Age: Continental Drift\\" class=\\"size-medium wp-image-2891 \\" height=\\"127\\" src=\\"http://www.jonasavrin.com/wp-content/uploads/2011/09/ice_age_continental_drift-300x127.jpg\\" title=\\"ice_age_continental_drift\\" width=\\"300\\" /></a><p class=\\"wp-caption-text\\">My first project</p></div>\\n<p>Done! \\u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \\u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \\u00a0It&#8217;s everything I could ask for in an employer and more.</p>\\n<p>Don&#8217;t think that it&#8217;s going to stop me from being active on my blog though, quite the opposite! \\u00a0Well, maybe the first month or two starting now there will be a pause, but after that it will increase. \\u00a0I&#8217;m super excited to learn and share knowledge with people and stay really connected and dedicated to innovating personal and industry wide workflows, tech, and of course animation. \\u00a0Technical animation and tech art to be specific is what I&#8217;ll be working on in the coming months, same as usual.</p>\\n<p>Thanks to everyone that&#8217;s been involved in the process of landing this, you know who you are! \\u00a0I don&#8217;t think they know yet what a valuable asset they just\\u00a0acquired but soon they will find out just how serious I am about the work I do and how inspired I can be!</p>\\n<div class=\\"evernoteSiteMemory\\"><a class=\\"evernoteSiteMemoryLink\\" href=\\"\\"><img class=\\"evernoteSiteMemoryButton\\" src=\\"http://static.evernote.com/article-clipper-remember.png\\" />\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t<div class=\\"evernoteSiteMemoryClear\\">&nbsp;</div>\\n</div>", "summary": "Done! \\u00a0After a few weeks of back and forth and interviews I finally landed the job of my dreams, well, for the time being. \\u00a0Blue Sky has always been on the radar as a potential and it&#8217;s finally a reality. \\u00a0It&#8217;s everything I could ask for in an employer and more. Don&#8217;t think that it", "id": "http://www.jonasavrin.com/?p=2889", "categories": ["Jonas Avrin"], "metadata": {"guid": "af6033e3-25e1-4153-9754-83f7548bd986", "likes": 0, "is_published": true}}]'
09-25 15:16 root         INFO     Handling CGI request.
09-25 15:16 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:16 SocketClient INFO     Sending to service: "["publish_content", [{"title": "A first glance at Visual Studio vNext (dev11)", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/hWyLXx0fryc\/", "author": "Patrick Smacchia", "summary": "In case you are not aware, a developer preview version of Visual Studio vNext has been released yesterday. I just played an hour with it and it seems that performances are finally here! The same way I skipped Vista to&#160;&#8230; <a href=\"http:\/\/codebetter.com\/patricksmacchia\/2011\/09\/15\/a-first-gla", "html": "<p>In case you are not aware, <a href=\"http:\/\/blogs.msdn.com\/b\/jasonz\/archive\/2011\/09\/14\/announcing-visual-studio-11-developer-preview.aspx\" target=\"_blank\">a <em>developer preview<\/em> version of Visual Studio vNext has been released yesterday<\/a>. I just played an hour with it and it seems that <strong>performances are finally here<\/strong>! The same way I skipped Vista to jump from XP to <em>Wnd7 that I love<\/em>, I am (as much as I can) skipping VS2010 and I&#8217;ll jump from VS2008 to <em>VS2012 that I&#8217;ll hopefully love<\/em>. A few random notes:<\/p>\n<p>The startup time is damn fast, on a pretty large 50K <em>lines of code<\/em> VS solution: 4 seconds, and I am ready to type!<\/p>\n<p>The solution explorer (derived from VS2010 power tools) just rocks.<\/p>\n<p>The Ctrl+I search\/replace in file rocks as well.<\/p>\n<p>The main button menu now just contains 7 buttons per default, and of course you can configure it by adding your preferred buttons.<\/p>\n<p>The find code duplicate is somewhat slow, 5 minutes on my 50K LoC, and didn&#8217;t give me any relevant result. But honestly the solution analyzed shouldn&#8217;t contain any duplicate and being slow is not so much an issue since it is not meant to be run at every build.<\/p>\n<p>The Ctrl+Alt+E exception dialog takes 2 seconds to open compared to 6 seconds with VS2010 and 4 seconds with VS 2008.<\/p>\n<p>The architecture explorer graph seems even slower than in VS 2010, and the\u00a0 embryo of dependency matrix seems to have been discarded. This is a good news for my business, <a href=\"http:\/\/www.ndepend.com\/Doc_VS_Arch.aspx\" target=\"_blank\">generating a graph with NDepend<\/a> is instantaneous in most situations, and it is a matter of dozens of seconds to minutes with VS 2010 and 2012.<\/p>\n<p>The product contains many minor bugs, which is normal at a pre-beta stage.<\/p>\n<p>The install process is still super slow (&gt; an hour on my fast SSD laptop). I wish VS features could be grain-partitioned (Wnd8 tools, TFS, SQL-tools, F# tools, Game dev tools, Web dev tools&#8230;). The minimal installation takes more than 8GB on hard-drive!<\/p>\n<p>I didn&#8217;t test all the Wnd8\/WPF\/ASP.NET\/WCF fancy new features, since I won&#8217;t develop with these until VS vNextNextNext is released! I believe I am like many real-world developers, developing an existing product that depends on a well defined set of <em>not so new<\/em> technologies, yet still passionated about what&#8217;s next. What really matters to developers in my situation, is to get bonus on what I am already using today (performance, solution explorer, quick search, code clone&#8230;) and VS 2012 seems to offer many of these bonus!<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/hWyLXx0fryc\" width=\"1\" \/>", "datetime": "2011-09-15T14:12:59", "id": "http:\/\/codebetter.com\/patricksmacchia\/?p=370", "categories": [], "metadata": {"guid": "2bda21ae-6134-4cc7-a08f-9d88d358dbb7", "likes": 0, "is_published": false}}], {}]"
09-25 15:16 SocketClient INFO     Received from service: "true"
09-25 15:16 SocketClient INFO     Returning(as str): 'true'
09-25 15:16 root         INFO     Handling CGI request.
09-25 15:16 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:16 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Windows Build\/Windows 8: My Impressions \u2013 Change is a good thing", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/GMJPFY39XbY\/", "author": "johnvpetersen", "summary": "I was reading all of the tweets about the DevExpress party with SmashMouth and was wishing I was there. In fact, I was really sad that I could not be out there as the venue appeard not to require a&#160;&#8230; <a href=\"http:\/\/codebetter.com\/johnpetersen\/2011\/09\/16\/windows-buildwindows-8-my-impressi", "html": "<p>I was reading all of the tweets about the DevExpress party with SmashMouth and was wishing I was there. In fact, I was really sad that I could not be out there as the venue appeard not to require a separate energy source! That&#8217;s a big credit to Microsoft of the way they have kept the rest of us informed. The video streams were superb. That&#8217;s a big deal when one is trying to quickly grok what&#8217;s being presented.<\/p>\n<p>By the way, you can find links to everything on the official <a href=\"http:\/\/www.buildwindows.com\" target=\"_blank\">Build Windows site<\/a>.<\/p>\n<p>I have to admit that I am somewhat amused by all of the &#8220;WPF is dead, Silverlight is dead&#8221; banter that is burning up the Twitter and Blog o Sphere. I&#8217;ve been writing software for over 20 years and the one constant has always been and will continue to be change. As some of you know, I&#8217;m an former Fox developer. As early as 1993, MS was talking about the &#8220;Unified Language Strategy&#8221;. Roger Heinen gave that talk and it got more than a few\u00a0of us\u00a0at the Orlando FoxPro Devcon thinking. Fast forward to 1997 and the ISV\/Book Author summit at MS (the pre-cursor to the MVP Summit) &#8211; that unified language strategy was beginning to take more and more form. By 2000,\u00a0it was clear what was happening and by 2001,\u00a0we had .NET 1.0 betas in our hands. I still have an un-opened CD pack with that beta software. Hmm&#8230; wonder if it will run on Windows 8????<\/p>\n<p>Up to those days at the beginning of the last decade, the bell was tolling for Fox, VB 6, etc. My best friend Rod Paddock and I had many a conversation about it and we took a rather cavalier attitude of &#8220;So What.&#8221; To others, Rome was burning down. To us, we saw it as nothing more than more of the same&#8230;that is to say &#8211; more change..more evolution. By then, we were far away from the days of Windows for Workgroups and having to still satisfy the need to support 16 bit OS&#8217;s via the Win32s. We had already come a long way and that what we were seeing was just an extension of the evolutionary process that is front and center in the profession we have chosen.<\/p>\n<p>In the famous words of Hyman Roth in Godfather 2 (Played by Lee Steinberg, the father of method acting): &#8220;This is the business we&#8217;ve chosen&#8230; I didn&#8217;t ask who gave the order.&#8221;<\/p>\n<p>In other words,\u00a0 change is ever present, we&#8217;ve seen it and for all the buzz that is there today about Windows 8. the WinRT, etc &#8211; that too will eventually be on the wrong side of the evolutionary chasm.<\/p>\n<p>Look&#8230;most of us are borderline or full blown ADD anyway&#8230; Change is our thing&#8230;it&#8217;s one of the thing I really like about this business. That is to say, change that helps, not hinders. Change for change sake does not itself yield a value proposition. And that is the myth, that for all the change, you cannot seize on first, basic principles that will last forever.<\/p>\n<p>Back to the conversations Rod Paddock and I have had over the years, I&#8217;ve lost count of how many times we&#8217;ve said that adherence to basic principles will allow us to weather any storm. In today&#8217;s context, in the web, it&#8217;s about adherence to open standards: html, js, open source, etc. It&#8217;s about understanding how the web works, not just one vendor&#8217;s abstraction over the web.<\/p>\n<p>I tweeted a few days ago that developers who embraced js, html, css are being rewarded with Windows 8. Those that have embraced ASP.NET MVC and Rails (to name two) have been rewarded, are being rewarded and will continue to be rewarded. Now, those of us that have embraced js, we are going to be able to leverage that skill set in a different way that targets the Windows Platform. If you are a WPF\/SL developer, I truly believe that things, in the long run, will be easier for you.<\/p>\n<p>That is not to say that WPF\/SilverLight Developers are out in the cold. Let&#8217;s review: just as ASP != Web Forms, \u00a0WPF != XAML. WPF is but one implementation of\u00a0XAML &#8211; and the underpinnings of XAML are being changed. That does not mean that WPF is &#8220;dead&#8221;. You can choose to look at it that way. I&#8217;d rather\u00a0view it as XAML\u00a0is progressing along an evoltutionary path. Developers need to focus more and the forest and less on the trees, more on what we do to deliver value and less on the particular tools we use.<\/p>\n<p>I for one am glad to see that the context shift is going way on the Windows platform as to\u00a0the differences between desktop and mobile\/tablet devices. I can&#8217;t tell you how many times I got frustrated when I tried to do something in SilverLight, only to find that \u00a0while WPF supported it, SilverLight did not, at least not without some hack. Anybody who has tried to implement MVVM\u00a0equally on WPF and SilverLight knows what I&#8217;m talking about!<\/p>\n<p>If you have embraced XAML, there is something for you in Windows 8. If you have embraced js\/css\/html\/jquery etc &#8211; there is something for you in Windows \u00a08.\u00a0 The deal is this, if you are going to tie what you do to the specific implementation of a specific version of a closed source\/vendor controlled product (which Windows is) &#8211; you are not allowed to bitch about it. There, I said it. It&#8217;s like the folks that complain about how a given piece of OSS works. Submit a patch if you don&#8217;t like it. If you don&#8217;t submit a patch, you don&#8217;t get to bitch. When you hitch your horse\u00a0up to a particular post, you shouldn&#8217;t bitch because that vendor is looking to evolve its product. And quite frankly, there really isn&#8217;t anything to bitch about. Windows 8 looks pretty cool to me and it appears that\u00a0MS\u00a0is embracing more and more of what is open.<\/p>\n<p>In my opinion, Windows\u00a08\u00a0is itself a web client that can\u00a0directly interface\u00a0with js and that interface can be optimized with Windows specific extensions. \u00a0We can concentrate more on writing apps and less on the mechanical differences that introduces friction when we have to consider making data available on mobile devices like Windows Phones, iPhones, Android, etc.<\/p>\n<p>In my opinion, Windows Development is getting easier!<\/p>\n<p>A few other specific tidbits: glad to see the Win32API go away. I wonder if IE 6 will ever totally go away!!<\/p>\n<p>Big kudos to the VS team for giving the ability to open a VS 2010 project in VS2011 &#8211; WITHOUT CONVERSION!!<\/p>\n<p>Bootable from a thumb drive! Awesome. The smaller footprint! Awesome.<\/p>\n<p>And yes&#8230;Metro Style Apps. Ok..let&#8217;s not get too exited.. we can write those today with the appropriate css. That said, the primary UI to Windows looks a lot simpler.<\/p>\n<p>Hey, is it all unicorns and rainbows? Of course not. The graphic&#8217;s password? Marginally useful IMO. I can see somebody strategically positioning a smart phone video camera to capture how somebody logs onto their machine! At least with a passcode hack, you have to go to the trouble to install some software. Then, there is the adoption period for businesses. I fear that will be a lengthy one. So with that, some of the exuberance needs to tempered as it will be quite some time before we see Windows 8 in the mainstram of business development. Let&#8217;s remember &#8211; IE 6 is still out there as there is still lots of XP and Vista too!!<\/p>\n<p>And while I can write mobile device software with html\/css &#8211; if the client is all about\u00a0Windows, why wouldn&#8217;t I want an easier experience that targets the platform?\u00a0IN that regard, it&#8217;s clear that Windows 8 will make it easier<\/p>\n<p>Tools come and tools go. It&#8217;s like a MLB manager, they get hired knowing that at some point, they will get fired (very few retire on their own terms). With all the cool stuff that is coming down the pike in VS 2011, Windows 8, MVC 4, I can&#8217;t help but thing what is in store with Windows, VS, and MVC .vNext!<\/p>\n<p>There&#8217;s never been a better time to be a software developer! It&#8217;s actually fun &#8211; and I remember the times when it was not so fun!!<\/p>\n<p>Finally, if you are a technologist who does not like change, perhaps you should contemplate a career change to digging holes. That process has remained largely unchanged for 100&#8242;s, if not 1000&#8242;s of years!!<\/p>\n<p>&lt; JVP &gt;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/GMJPFY39XbY\" width=\"1\" \/>", "datetime": "2011-09-16T15:27:03", "id": "http:\/\/codebetter.com\/johnpetersen\/?p=70", "categories": [], "metadata": {"guid": "bb2bd36c-479f-4da0-a9c0-6c19a536901d", "likes": 0, "is_published": false}}], {}]"
09-25 15:16 SocketClient INFO     Received from service: "true"
09-25 15:16 SocketClient INFO     Returning(as str): 'true'
09-25 15:16 root         INFO     Handling CGI request.
09-25 15:16 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:16 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Automation must be a last resort", "url": "http:\/\/www.robg3d.com\/?p=769", "author": "Rob Galanakis", "summary": "A repost from altdevblogaday. \u00a0Original post here:\u00a0http:\/\/altdevblogaday.com\/2011\/09\/10\/automation-must-be-a-last-resort\/\u00a0 As is usual, the title is more inflammatory than the contents, the contents muddle the issue, and things are far more clear after reading the comments. As tools programmers and ", "html": "<p>A repost from altdevblogaday. \u00a0Original post here:\u00a0<a href=\"http:\/\/altdevblogaday.com\/2011\/09\/10\/automation-must-be-a-last-resort\/\">http:\/\/altdevblogaday.com\/2011\/09\/10\/automation-must-be-a-last-resort\/<\/a>\u00a0 As is usual, the title is more inflammatory than the contents, the contents muddle the issue, and things are far more clear after reading the comments.<\/p>\n<hr \/>\n<p>As tools programmers and tech artists, we are responsible for the efficiency of our designers and artists. \u00a0And most tools programmers and TA&#8217;s I&#8217;ve worked with take this very seriously, and are generally very clever, so very few things can stand in their way when they are determined to speed up a developer&#8217;s workflow. \u00a0Most commonly, such speedups are achieved by the automation of repetitive tasks.<\/p>\n<p>But we are also responsible for the quality of our codebase. \u00a0&#8221;Simplicity&#8221; of code and systems is commonly accepted as an ideal all coders should strive for.<\/p>\n<blockquote><p><em>Everything should be made as simple as possible, but not simpler.<br \/>\n<\/em><\/p><\/blockquote>\n<p>And here is my problem. \u00a0<strong>Automation increases complexity and reduces simplicity.<\/strong><\/p>\n<h4>An Example<\/h4>\n<p>Consider the following diagram, which could represent a single workflow with many steps. \u00a0Each Step represents some unique concept or block of code or logic that exists in a pipeline- for example, exporting the content, format conversion, writing a metadata file, assigning a material, and importing into game. \u00a0Right now, the user performs each one manually.<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/automation_1.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-16191\" height=\"141\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/automation_1.png\" width=\"665\" \/><\/a><\/p>\n<p>Obviously we can do better- we can half the number of steps if we write some code to automatically, say, launch an exe to process the just-exported content, and we can automatically write the metadata file on import.<\/p>\n<p style=\"text-align: center;\">\u00a0<a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/automation_2.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-16192\" height=\"127\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/automation_2.png\" width=\"665\" \/><\/a><\/p>\n<p>Once this is in the wild, we realize we can <em>automate the whole thing!<\/em>\u00a0 So on export, we do everything, and it even imports the content into game. \u00a0Great! \u00a0But of course we still need to support some manual intervention for things that don&#8217;t &#8216;fit in.&#8217;<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/automation_4.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-16194\" height=\"144\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/automation_4.png\" width=\"665\" \/><\/a><\/p>\n<p>There&#8217;s a problem here, though. \u00a0A big one. \u00a0The code has essentially remained the same- so even though the user&#8217;s experience is simpler (which is always the goal!), the way we got there was to add more complexity into the codebase. \u00a0Because here&#8217;s the thing about automation: \u00a0<strong>Automation <\/strong><strong>relies on inference.<\/strong>\u00a0 And inferring things in code is notoriously difficult and brittle. \u00a0We have basically all the same code we had when we started (though I&#8217;m sure we fixed and introduced some new bugs), except we have now effectively doubled the connections between the components, and each connection is brittle. \u00a0How much of your automation relies on naming, folder structures, globals (environment variables and singletons are globals too), or any number of circumstances that are now built into your codebase? \u00a0Likewise, if you merely <em>added<\/em>\u00a0buttons to create automation, the additional complexity there is obvious. \u00a0All the old stuff is still in place, you&#8217;ve just created another UI and code path on top of it that is either using it or also accessing the same internals.<\/p>\n<h4>That is not what we should strive for.<\/h4>\n<p>This, instead, is what we should strive for:<\/p>\n<p style=\"text-align: center;\">\u00a0<a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/automation_5.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-16195\" height=\"138\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/automation_5.png\" width=\"665\" \/><\/a><\/p>\n<p>This isn&#8217;t always possible- but I&#8217;ve seen enough pipelines to know that it is <em>probably<\/em>\u00a0possible on <em>most<\/em>\u00a0pipelines at your studio, and <em>definitely<\/em>\u00a0possible on <em>some<\/em>. \u00a0It should always be our goal- that every time we want to &#8216;automate&#8217; what the user does, we instead say &#8220;how can I reduce the complexity of the code so nothing needs to worry about this.&#8221; \u00a0This is how you identify <span style=\"color: #800000;\"><strong>automation that increases complexity<\/strong><\/span> versus <span style=\"color: #339966;\"><strong>refactorings that reduce complexity<\/strong><\/span>: when your change simplifies the codebase (this is open to interpretation but I&#8217;d imagine you can judge this pretty easily), and &#8216;automates&#8217; previously manual parts of the pipeline, that is no longer automation- you have done an excellent refactoring that has reduced complexity and it is not automation (at least not actually- the users are free to call it what they want).<\/p>\n<p>It isn&#8217;t always possible. \u00a0More commonly it would be possible but not without a substantial refactoring somewhere (maybe not even your code). \u00a0Sometimes, it is just moving the complexity around rather than removing it.<\/p>\n<p>These things are fine! The important thing is that you are now <em>really thinking<\/em>\u00a0about your codebase. \u00a0The goal isn&#8217;t to reduce the complexity of your codebase in a day, it is to ensure you are only adding\u00a0<em>valuable<\/em>\u00a0complexity and that you have identified opportunities to <em>reduce<\/em>\u00a0complexity.<\/p>\n<h4>Identifying Trends<\/h4>\n<p>It&#8217;s not very difficult to identify when we are adding excess complexity when automating, or when we are simplifying.<\/p>\n<p>If you have simple configuration needs, such as choosing two options or files, see if you can infer that setup instead from what the user chooses to do (such as providing him two choices, rather than one configurable one).<\/p>\n<p>In contrast to that, prefer <em>upfront configuration<\/em>\u00a0to <em>inference <\/em>if\u00a0the configuration adds significant power and simplifies the code.<\/p>\n<p>If common use cases no longer fit into the scope of the tool&#8217;s effective workflow, <em>refactor the tool<\/em>. \u00a0Do not start adding &#8216;mini-UI&#8217;s that support these additional use cases, or you will end up with a complex and confusing mess.<\/p>\n<p>Always present the minimum possible set of options to the user that allows her to get her job done effectively.<\/p>\n<p>As a corollary, if the code behind your simpler UI becomes significantly more complex when simplifying the actual UI, it is likely your system can be streamlined overall. \u00a0The lower the ratio of UI options to code behind, the better.<\/p>\n<h4>Conclusions<\/h4>\n<p>All too often I see tools programmers and technical artists automating processes by building new layers of code on existing systems. \u00a0Coders should always look for ways of simplifying the overall system in code (or moving the complexity out and abstracting it into another system) as a way to achieve a streamlined workflow for the user, rather than building automated workflows and adding complexity and coupling to the existing code.<\/p>\n<p>I intentionally didn&#8217;t provide precise examples or anecdotes, but I will gladly provide personal examples and observations in the comments. \u00a0Thanks.<\/p>\n<blockquote><p><em>Any intelligent fool can make things bigger, more complex, and more violent. It takes a touch of genius &#8211; and a lot of courage &#8211; to move in the opposite direction.<\/em><\/p><\/blockquote>", "datetime": "2011-09-18T18:00:27", "id": "http:\/\/www.robg3d.com\/?p=769", "categories": [], "metadata": {"guid": "39b8507b-0bf8-4480-aca7-70b3c37b15ae", "likes": 0, "is_published": false}}], {}]"
09-25 15:16 SocketClient INFO     Received from service: "true"
09-25 15:16 SocketClient INFO     Returning(as str): 'true'
09-25 15:16 root         INFO     Handling CGI request.
09-25 15:16 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:16 SocketClient INFO     Sending to service: "["publish_content", [{"title": "HotKey Alt<> broken in 2012", "url": "http:\/\/markj3d.blogspot.com\/2011\/09\/hotkey-alt-broken-in-2012.html", "author": "Mark Jackson (markj3d@gmail.com)", "summary": "Just a quick post about the hotkey mapping in 2012. The main Alt keys which advance time in the UI's are now broken in the GrapthEditor, this has been driving some of our animator mad as you can imagine. The command thats now bound to it in 2012 is wrong (a fix in due from Autodesk but not sure if i", "html": "Just a quick post about the hotkey mapping in 2012. The main Alt keys which advance time in the UI's are now broken in the GrapthEditor, this has been driving some of our animator mad as you can imagine. The command thats now bound to it in 2012 is wrong (a fix in due from Autodesk but not sure if it'll get into the SP1 release). So the bug is that the commands bound to the NextFrame and PreviousFrame calls look if the current UI is a scriptedPanel and only advance the time if that panel is the CameraSequencer...Wrong! Here's the fix for the NextFrame, for Previous from just put -1 in the `cuurentTime -q` -1 block<pre class=\"python\" name=\"code\"><br \/>string $currentPanel = `getPanel -withFocus`; <br \/>if((`getPanel -to $currentPanel`== \"scriptedPanel\") && (`scriptedPanel -q -type $currentPanel`== \"sequenceEditorPanel\"))<br \/>{ <br \/>sequenceManager -ct ( `sequenceManager -q -ct ` + 1 ); <br \/>} <br \/>else { currentTime ( `currentTime -q` + 1 );}<br \/><br \/><\/pre>Maya's current command bound to the Alt> key<pre class=\"python\" name=\"code\"><br \/>string $currentPanel = `getPanel -withFocus`; <br \/>string $panelType = `getPanel -to $currentPanel`; <br \/>if ($panelType == \"scriptedPanel\") <br \/>{ <br \/>    string $scriptedPanelType = `scriptedPanel -q -type $currentPanel`; <br \/>    if ( $scriptedPanelType == \"sequenceEditorPanel\")<br \/>    { sequenceManager -ct ( `sequenceManager -q -ct ` + 1 ); }<br \/>}<br \/>else { currentTime ( `currentTime -q` + 1 ); }<br \/><\/pre><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/1407054789026932542-2114340459979202734?l=markj3d.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-09-19T05:24:34.859000", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-2114340459979202734", "categories": [], "metadata": {"guid": "22fa23b7-51f4-4709-a0c1-a909bf340f74", "likes": 0, "is_published": false}}], {}]"
09-25 15:16 SocketClient INFO     Received from service: "true"
09-25 15:16 SocketClient INFO     Returning(as str): 'true'
09-25 15:17 root         INFO     Handling CGI request.
09-25 15:17 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:17 SocketClient INFO     Sending to service: "["publish_content", [{"title": "handy script", "url": "http:\/\/ldunham.blogspot.com\/2011\/09\/handy-script.html", "author": "ldunham (noreply@blogger.com)", "summary": "just found this script whilst looking for a way to write maya's scriptEditor output to a file (scene kept crashing, couldn't make out errors etc)<br \/><br \/>\/\/ turn writeHistory on and specify fileName<br \/><br \/><div style=\"text-indent: 0px;\"><\/div><div style=\"text-indent: 0px;\">scriptEditorInfo -w", "html": "just found this script whilst looking for a way to write maya's scriptEditor output to a file (scene kept crashing, couldn't make out errors etc)<br \/><br \/>\/\/ turn writeHistory on and specify fileName<br \/><br \/><div style=\"text-indent: 0px;\"><\/div><div style=\"text-indent: 0px;\">scriptEditorInfo -wh 1 -historyFilename \"C:\/Users\/lee.dunham\/Desktop\/myScriptEditorLog.txt\";<\/div><div style=\"text-indent: 0px;\"><br \/><\/div><div style=\"text-indent: 0px;\">\/\/turn writeHistory off<\/div><div style=\"text-indent: 0px;\"> <\/div><div style=\"text-indent: 0px;\"><\/div><div style=\"text-indent: 0px;\">scriptEditorInfo -wh 0;<\/div><br \/><div style=\"text-indent: 0px;\"><br \/><\/div><div style=\"text-indent: 0px;\">its damn useful, cant believe i've never used this before! (as it writes history as its going)<\/div><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/536028505499887975-4563672294551766398?l=ldunham.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-09-19T11:51:58.257000", "id": "tag:blogger.com,1999:blog-536028505499887975.post-4563672294551766398", "categories": [], "metadata": {"guid": "1a0a3cdc-3dcb-4453-b147-7e7204a36aa6", "likes": 0, "is_published": false}}], {}]"
09-25 15:17 SocketClient INFO     Received from service: "true"
09-25 15:17 SocketClient INFO     Returning(as str): 'true'
09-25 15:17 root         INFO     Handling CGI request.
09-25 15:17 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:17 SocketClient INFO     Sending to service: "["publish_content", [{"title": "See the fantastic business opportunity!", "url": "http:\/\/feedproxy.google.com\/~r\/CodeBetter\/~3\/pLikBwfha70\/", "author": "Patrick Smacchia", "summary": "In this post I just want to convey a simple, yet powerful, idea: Last week Microsoft announces that the Windows UI is about to get re-invented with WinRT. Instead of bashing MS about its policy concerning WPF and SL, be&#160;&#8230; <a href=\"http:\/\/codebetter.com\/patricksmacchia\/2011\/09\/19\/see-the-f", "html": "<p>In this post I just want to convey a simple, yet powerful, idea: Last week Microsoft announces that the Windows UI is about to get re-invented with WinRT. Instead of bashing MS about its policy concerning WPF and SL, <strong>be smart and see here a fantastic entrepreneurship opportunity<\/strong>. The future top WinRT applications\\tooling\\trainers\\consultants will be the ones that get developed today.<\/p>\n<p>You are not happy being employed? I wasn&#8217;t too back in 2001. I wanted action, enthusiasm, innovation, technical expertise and reward. At that time I was flagged C++ expert and I discovered .NET. I wrote the <a href=\"http:\/\/www.amazon.fr\/Pratique-NET-C-Patrick-Smacchia\/dp\/2841772454\">reference book in French concerning C#\/.NET<\/a>\u00a0 with O&#8217;Reilly France, released mid 2003. It allowed me to capitalize on skills and clients trust. I then developed a successful consultancy expertise\/training activity. In parallel I wrote the second version of the book for <a href=\"http:\/\/www.amazon.fr\/Pratique-NET-2-0-C\/dp\/2841773396\">C#2 late 2005<\/a>.\u00a0 Meantime I released a small OSS static analyzer in mid 2004, that became <a href=\"http:\/\/www.ndepend.com\/ReleaseNotes.aspx\">NDepend pro, at early 2007<\/a> and that made me and my team living for almost 5 years now, and hopefully for many years to come.<br \/>\nAll this was possible because I capitalized on the .NET platform at early stage. I didn&#8217;t revolutionized the world but today, I absolutely love my job + awesome perspective for future versions + well enough money + no (stupid) boss + very few time and location constraints.<\/p>\n<p>Today the exact same situation occurs again. Microsoft bets all on WinRT as it used to bet much on .NET. It is a risky strategy but, like it or not, Microsoft generally wins. Do you remember C++ and Java guys making fun of .NET? Do Java have LINQ today? It doesn&#8217;t even have clean generics! Start a business based on WinRT and Windows 8 now and it will be mechanically pushed by the bulldozer marketing machine Microsoft is currently cranking up. On a pure technical side it can be tooling\/training\/book\/consulting. But if you feel well acquainted with a particular business, it can be a B2B or B2C product that will be first delivered and first ranked on the upcoming MS store.<\/p>\n<p>Exciting isn&#8217;t it? Good luck my friend!<\/p>\n<img height=\"1\" src=\"http:\/\/feeds.feedburner.com\/~r\/CodeBetter\/~4\/pLikBwfha70\" width=\"1\" \/>", "datetime": "2011-09-19T14:57:06", "id": "http:\/\/codebetter.com\/patricksmacchia\/?p=377", "categories": [], "metadata": {"guid": "e089e37b-5369-4b85-bcf7-1969eaa7539b", "likes": 0, "is_published": false}}], {}]"
09-25 15:17 SocketClient INFO     Received from service: "true"
09-25 15:17 SocketClient INFO     Returning(as str): 'true'
09-25 15:17 root         INFO     Handling CGI request.
09-25 15:17 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:17 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Law Of Diminishing Returns: Redux", "url": "http:\/\/strongmanimator.blogspot.com\/2011\/09\/law-of-diminishing-returns-redux.html", "author": "anim8d (timborrelli@gmail.com)", "summary": "<span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><\/span><br \/>This post is a revisiting of a previous post from this blog, and is also posted <a href=\"http:\/\/altdevblogaday.com\/2011\/09\/21\/the-law-of", "html": "<span class=\"Apple-style-span\" style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;\"><\/span><br \/>This post is a revisiting of a previous post from this blog, and is also posted <a href=\"http:\/\/altdevblogaday.com\/2011\/09\/21\/the-law-of-diminishing-returns\/\">here<\/a>.<br \/><br \/>Every so often, the hot topic of crunch\/overtime\/extra hours comes (read: anytime a jackass like me writes a post about it or the mainstream media decides to interpret what a jackass like me writes as a scathing commentary on the state of the industry). Sometimes, though,<a href=\"https:\/\/twitter.com\/#!\/ID_AA_Carmack\/status\/115616182161252353\">&nbsp;high profile people<\/a>&nbsp;say something about overtime, and it incites a reaction, no matter what the intent.<br \/><br \/>It\u2019s no surprise to anyone, in any industry, that overtime can creep into all facets of our lives. In the case of me being both a powerlifter and a video game developer, overtime has come in the form of overtraining and crunching, respectively.<br \/><br \/><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/bicycle-crunches.jpg\" style=\"margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-16727\" height=\"300\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/bicycle-crunches.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"300\" \/><\/a><\/td><\/tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Not this kind of crunch, guys<\/td><\/tr><\/tbody><\/table><br \/>For powerlifters, overtraining generally involves training your body so hard that it effectively cannot recover- your basal body temperature drops, your central nervous system begins to shut down. For game developers, crunching is typically a point in a project that requires developers to work 60, 80, or even 100 hours a week to hit a deadline, pushing our mental capacity to a limit. In both cases, you become lethargic and your sleep suffers, furthering the lack of recovery. The belief for both overtraining and crunch is that that the extra time put in will result in higher quantity and quality of results.<br \/><br \/>Our ability to cope with such overtime hinges heavily on the amount of time we have to recover from engaging in it.This recovery, whether or active (by, say, deep tissue massage or engaging in an unrelated interest) or passive (by relaxing on the couch or playing video games), can only work if those needing it are given the proper amount of time and resources to ALLOW it to work.<br \/><br \/><h3><span class=\"Apple-style-span\" style=\"font-size: large;\"><u>All The King's Horses<\/u><\/span><\/h3><div><span class=\"Apple-style-span\" style=\"font-size: large;\"><u><br \/><\/u><\/span><\/div>Recently, I spent a large amount of time training for a national powerlifting competition. I trained for 5 months, competed in a local meet as a warm up, and then trained for another 2 months before the national meet. During the initial 5 months I worked very hard in the gym and took regular breaks from training so my body could recover, and I saw great gains in strength. At the local meet I set a personal best in the deadlift, and walked away happy.<br \/><br \/>After the local &nbsp;meet, I took only a few days off, and then decided that I had recovered from the first meet and the stress it had put on my body. &nbsp;Since I had limited time before the national competition, I spent the next 2 months working even harder than I had before. Not only did I not take enough time off after the local meet, I eliminated any down time from my training, effectively giving my body no time to recover. After several weeks of this new training plan, I actually felt weaker. I started skipping workouts and making excuses to myself to not push it too hard. It got to the point where I didn't even want to compete in the national meet anymore. I was burnt out, stressed out, and flat out tired. Even still, I set a goal to break my personal record for total weight. In fact, I planned on pushing myself to move more weight than I had ever done, even during training.<br \/><br \/><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/babes-in-toyland-humpty.jpg\" style=\"margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-16783 \" height=\"300\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/babes-in-toyland-humpty.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"400\" \/><\/a><\/td><\/tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">He probably overtrained something...<\/td><\/tr><\/tbody><\/table><br \/>So what happened? I failed. I didn\u2019t allow my body to recover from the incredible stress I was putting on it, and as a result when it mattered most I couldn\u2019t compete at my full potential. I didn\u2019t reach my goals, and the national meet was one of my worst in recent memory.<br \/><br \/><h3><span class=\"Apple-style-span\" style=\"font-size: large;\"><u>All The King's Men<\/u><\/span><\/h3><div><span class=\"Apple-style-span\" style=\"font-size: large;\"><u><br \/><\/u><\/span><\/div>Game devs are probably wondering what this&nbsp;<a href=\"http:\/\/articles.elitefts.com\/articles\/iron-brothers\/planet-fatness\/\">meathead, lunkhead, Planet Fitness-reject's<\/a>&nbsp;story has to do with them. Well, to paraphrase Matthew McConaughey in \u201cA Time To Kill,\u201d just imagine if what I described above was the progression from a press demo to a final build (or, maybe the progression from shipping a game to working on the next one).<br \/><br \/>Imagine that the whole team gets behind polishing the absolute hell out of the first hour of gameplay. We spend a good 6 months of time getting the first 3 missions right. The scripting, the code hooks, the character performances, everything. We show it to the press during the months leading up to launch, and all of our attention is focused on that one hour of gameplay shining like a star.<br \/><div class=\"mceTemp\"><br \/><\/div>After all of that, the realization sets in that we have 3 months to finish the game. We have to get ALL of that hype into the rest of the missions, the gameplay, the general feel of the game. Maybe this mission here doesn\u2019t have enough of what dude from Kotaku loved, and maybe those animations there don\u2019t live up to the expectations of our publisher. So we start spending extra time revamping, changing, cramming in content. Features creep in. Hours start piling up. Some of us are thinking \"I'm working extra hours because I believe in the project,\" so when we hit a wall at 10pm, we push through it.<br \/><br \/><br \/><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/humpy-dance.jpg\" style=\"margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-16779 \" height=\"240\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/humpy-dance.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"320\" \/><\/a><\/td><\/tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">We probably looked like MC Hammer on crack at times, too<\/td><\/tr><\/tbody><\/table><br \/>Suddenly it's Thursday, 2 weeks before submission, and we've already put 50 hours in this week. We start to check in bad data. We break the build. We snap at co-workers. We're no longer being smart or creative about making the game- instead we're going through zombie-like motions to just get it done. We just want to ship this thing and move on to the next project.<br \/><br \/>And that passion we had? Starting to dwindle, if not gone already.<br \/><br \/>Sound familiar?<br \/><br \/><h3><u><span class=\"Apple-style-span\" style=\"font-size: large;\">Putting It Back Together<\/span><\/u><\/h3><div><u><span class=\"Apple-style-span\" style=\"font-size: large;\"><br \/><\/span><\/u><\/div>The thing is, though, that it doesn't have to be like this. There can be&nbsp;good overtime. For example, I've overtrained my deadlift and seen incredible gains by pushing myself on heavy days and taking a month away from the next heavy session. I've worked 50-60 hour weeks, with 5 (and rarely 6) days a week for no longer than 2 or 3 weeks to get a deliverable out the door, and have produced work that was higher quality and more rewarding, with no negative effect on my health or marriage.<br \/><div class=\"separator\" style=\"clear: both; text-align: center;\"><br \/><\/div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http:\/\/2.bp.blogspot.com\/-V0kkJWzh9Nw\/Tnlwio_ip6I\/AAAAAAAAAI0\/lHXthSvkcus\/s1600\/waterboy_2.jpg\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"186\" src=\"http:\/\/2.bp.blogspot.com\/-V0kkJWzh9Nw\/Tnlwio_ip6I\/AAAAAAAAAI0\/lHXthSvkcus\/s320\/waterboy_2.jpg\" width=\"320\" \/><\/a><\/div><br \/><br \/>What made the good overtime better than the bad?<br \/><br \/>After the bad overtime, I was done. I thought I had recovered enough, so when I tried to (physically and mentally) get back into both activities, I couldn\u2019t. I was done, and wanted out. I considered quitting both powerlifting and game development after the last bad overtime experience with each.<br \/><br \/><br \/>In the case of the good overtime experiences, I was able to take the proper amount of time off that both my body and mind needed to recover not just AFTER the overtime, but DURING it. The work I put during these smaller pushes was of higher quality, more rewarding in the end, and most importantly, kept me engaged in I was doing and looking forward to getting back to it at full tilt as soon as I could.<br \/><br \/>It can be argued that if we want to be successful, we have to push ourselves harder than the average in our fields. It doesn\u2019t, however, have to have a negative affect on the things we are passionate about. We\u2019ve all read the reports, seen the opinion pieces, heard about EA Spouses and Kaos\u2019 \u201cthousand yard stare.\u201d I\u2019ve read articles on how overtraining has blown out knees, biceps, backs, and worse. Everyone universally agrees that too much overtime is bad- Bad for your health, bad for relationships, bad for studio morale, bad bad bad.<br \/><br \/><h3><u><span class=\"Apple-style-span\" style=\"font-size: large;\">Smell The Roses<\/span><\/u><\/h3><div><u><span class=\"Apple-style-span\" style=\"font-size: large;\"><br \/><\/span><\/u><\/div><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/ferris-bueller.jpg\" style=\"margin-left: auto; margin-right: auto;\"><img alt=\"\" class=\"size-full wp-image-16780\" height=\"250\" src=\"http:\/\/altdevblogaday.com\/wp-content\/uploads\/2011\/09\/ferris-bueller.jpg\" style=\"border-bottom-style: none; border-bottom-width: 0px; border-color: initial; border-color: initial; border-left-style: none; border-left-width: 0px; border-right-style: none; border-right-width: 0px; border-top-style: none; border-top-width: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;\" width=\"250\" \/><\/a><\/td><\/tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Don't let life pass you by<\/td><\/tr><\/tbody><\/table>Overtime exists and it\u2019s not going away. I\u2019m not suggesting that it does. I\u2019m not going to rant about crunch time ruining lives. I\u2019m not going to claim that my life has been horribly affected by working overtime or training too hard.<br \/><br \/>I am, however, going to say this- we all need to manage it better.<br \/><br \/>I don\u2019t mean that we need to plan better (we know), or avoid feature\/exercise creep (we try), or never put in overtime (we will). I mean that we as individuals need to manage how we represent ourselves while working overtime. We need to be conscious of the fact that people who are interested in what we do (powerlifting, game development, insert-your-interest-here) are going to look at us as an example. They\u2019ll see us doing stupid things in the gym or working 100 hours a week, and see us wearing both of those things like honor badges. They\u2019ll see us tweeting about how we\u2019re \u201ccrunching to make the game better for you, the consumer!\u201d, or read our Facebook post about how we just totally killed a training session and can\u2019t walk right now- but hey, \"no pain no gain!\"<br \/><br \/>Those people will enter our fields and expect that to be the norm, the right way to do things, and they will never question those methods until they too are burnt out. And that\u2019s a damn shame, because we can prevent it. We can teach these newcomers a different lesson- to not make the mistakes that we did. We need to encourage them to come into our industries and change them for the better.<br \/><br \/>When all is said and done, people will only remember the 4-million-on-day-one sellers, and not the people who worked hard and sacrificed to get the game to that point. We\u2019ll only remember the monster numbers that a powerlifter put up at Worlds, but we\u2019ll never see the training that was put in to achieve that. So let\u2019s take back that part. Let\u2019s do it smarter. Let\u2019s follow the Law of Diminishing Returns.<br \/><br \/><div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/4248341596629159263-2209298601478773026?l=strongmanimator.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-09-20T22:11:00.675000", "id": "tag:blogger.com,1999:blog-4248341596629159263.post-2209298601478773026", "categories": [], "metadata": {"guid": "94feed28-ea48-44ce-98cd-ba0d6e5f9d24", "likes": 0, "is_published": false}}], {}]"
09-25 15:17 SocketClient INFO     Received from service: "true"
09-25 15:17 SocketClient INFO     Returning(as str): 'true'
09-25 15:17 root         INFO     Handling CGI request.
09-25 15:17 SocketClient INFO     Establishing connection to "tcp://localhost:7878".
09-25 15:17 SocketClient INFO     Sending to service: "["publish_content", [{"title": "Maya2012 Export Selected with DisplayLayers", "url": "http:\/\/markj3d.blogspot.com\/2011\/09\/maya2012-export-selected-with.html", "author": "Mark Jackson (markj3d@gmail.com)", "summary": "This is just a warning for anybody who, like use uses Export Selected as an optimize method. Be warned, in 2012 if you select objects with display layers then exportSelected and then re-import, those display layers will be lost. Never had this before, 2011 was fine. This only showed up in 2012 and a", "html": "This is just a warning for anybody who, like use uses Export Selected as an optimize method. Be warned, in 2012 if you select objects with display layers then exportSelected and then re-import, those display layers will be lost. Never had this before, 2011 was fine. This only showed up in 2012 and again, has broken another internal pipeline tool, another bug logged.<div class=\"blogger-post-footer\"><img alt=\"\" height=\"1\" src=\"https:\/\/blogger.googleusercontent.com\/tracker\/1407054789026932542-4072787405157818955?l=markj3d.blogspot.com\" width=\"1\" \/><\/div>", "datetime": "2011-09-23T03:16:30.215000", "id": "tag:blogger.com,1999:blog-1407054789026932542.post-4072787405157818955", "categories": [], "metadata": {"guid": "96e7bc98-a5c7-4c2b-9f85-64312fdb8a09", "likes": 0, "is_published": false}}], {}]"
09-25 15:17 SocketClient INFO     Received from service: "true"
09-25 15:17 SocketClient INFO     Returning(as str): 'true'
